   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ttbasic.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._putch,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	_putch
  19              		.arch armv7-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	_putch:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "../USER/ttbasic.c"
   1:../USER/ttbasic.c **** /*
   2:../USER/ttbasic.c **** TOYOSHIKI TinyBASIC V1.0
   3:../USER/ttbasic.c **** Reference source
   4:../USER/ttbasic.c **** (C)2012 Tetsuya Suzuki, All rights reserved.
   5:../USER/ttbasic.c **** */
   6:../USER/ttbasic.c **** 
   7:../USER/ttbasic.c **** // Compiler requires description
   8:../USER/ttbasic.c **** //#include "stdafx.h"
   9:../USER/ttbasic.c **** //#include <conio.h>
  10:../USER/ttbasic.c **** #include <stdio.h>
  11:../USER/ttbasic.c **** #include <stdlib.h>
  12:../USER/ttbasic.c **** 
  13:../USER/ttbasic.c **** // TOYOSHIKI TinyBASIC symbols
  14:../USER/ttbasic.c **** // TO-DO Rewrite defined values to fit your machine as needed
  15:../USER/ttbasic.c **** #define SIZE_LINE 80 //Command line buffer length + NULL
  16:../USER/ttbasic.c **** #define SIZE_IBUF 80 //i-code conversion buffer size
  17:../USER/ttbasic.c **** #define SIZE_LIST 2048 //List buffer size
  18:../USER/ttbasic.c **** #define SIZE_ARRY 64 //Array area size
  19:../USER/ttbasic.c **** #define SIZE_GSTK 6 //GOSUB stack size(2/nest)
  20:../USER/ttbasic.c **** #define SIZE_LSTK 15 //FOR stack size(5/nest)
  21:../USER/ttbasic.c **** 
  22:../USER/ttbasic.c **** // Depending on device functions
  23:../USER/ttbasic.c **** // TO-DO Rewrite these functions to fit your machine
  24:../USER/ttbasic.c **** #define STR_EDITION "Tang-Nano-4K"
  25:../USER/ttbasic.c **** 
  26:../USER/ttbasic.c **** /*- MINGW ------------------------------------------------
  27:../USER/ttbasic.c **** void _putch(char c){ putchar(c); fflush(stdout);}
  28:../USER/ttbasic.c **** int _getch(){ return getchar();}
  29:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
  30:../USER/ttbasic.c **** #define KEY_ENTER 10
  31:../USER/ttbasic.c **** */
  32:../USER/ttbasic.c **** //- Tang-Nano-4K ------------------------------------------------
  33:../USER/ttbasic.c **** extern void putch_uart(char c);
  34:../USER/ttbasic.c **** extern int  getch_uart();
  35:../USER/ttbasic.c **** void _putch(char c){ putch_uart(c); fflush(stdout);}
  29              		.loc 1 35 20 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 35 22 view .LVU1
  34              		.loc 1 35 20 is_stmt 0 view .LVU2
  35 0000 08B5     		push	{r3, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              		.loc 1 35 22 view .LVU3
  40 0002 FFF7FEFF 		bl	putch_uart
  41              	.LVL1:
  42              		.loc 1 35 37 is_stmt 1 view .LVU4
  43              		.loc 1 35 44 is_stmt 0 view .LVU5
  44 0006 034B     		ldr	r3, .L4
  45 0008 1B68     		ldr	r3, [r3]
  46              		.loc 1 35 37 view .LVU6
  47 000a 9868     		ldr	r0, [r3, #8]
  48              		.loc 1 35 1 view .LVU7
  49 000c BDE80840 		pop	{r3, lr}
  50              		.cfi_restore 14
  51              		.cfi_restore 3
  52              		.cfi_def_cfa_offset 0
  53              		.loc 1 35 37 view .LVU8
  54 0010 FFF7FEBF 		b	fflush
  55              	.LVL2:
  56              	.L5:
  57              		.align	2
  58              	.L4:
  59 0014 00000000 		.word	_impure_ptr
  60              		.cfi_endproc
  61              	.LFE3:
  63              		.section	.text._getch,"ax",%progbits
  64              		.align	1
  65              		.p2align 2,,3
  66              		.global	_getch
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  72              	_getch:
  73              	.LFB4:
  36:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
  74              		.loc 1 36 13 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              		.loc 1 36 15 view .LVU10
  80              		.loc 1 36 22 is_stmt 0 view .LVU11
  81 0000 FFF7FEBF 		b	getch_uart
  82              	.LVL3:
  83              		.cfi_endproc
  84              	.LFE4:
  86              		.section	.text._kbhit,"ax",%progbits
  87              		.align	1
  88              		.p2align 2,,3
  89              		.global	_kbhit
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu softvfp
  95              	_kbhit:
  96              	.LFB5:
  37:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
  97              		.loc 1 37 13 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              		.loc 1 37 15 view .LVU13
 103              		.loc 1 37 1 is_stmt 0 view .LVU14
 104 0000 0020     		movs	r0, #0
 105 0002 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE5:
 109              		.section	.text.newline,"ax",%progbits
 110              		.align	1
 111              		.p2align 2,,3
 112              		.global	newline
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu softvfp
 118              	newline:
 119              	.LFB6:
  38:../USER/ttbasic.c **** #define KEY_ENTER 13
  39:../USER/ttbasic.c **** //
  40:../USER/ttbasic.c **** #define u16 unsigned short
  41:../USER/ttbasic.c **** void pset(u16 y, u16 x, u16 ptn);
  42:../USER/ttbasic.c **** void DLine(u16 x1, u16 y1, u16 x2, u16 y2, u16 ptn);
  43:../USER/ttbasic.c **** void DCircle(u16 x0,u16 y0,u16 r,u16 ptn);
  44:../USER/ttbasic.c **** void DPaint( u16 x, u16 y, u16 paintCol );
  45:../USER/ttbasic.c **** void gotoxy(u16 yp, u16 xp, u16 fc, u16 bc);
  46:../USER/ttbasic.c **** extern short aryex[512];
  47:../USER/ttbasic.c **** 
  48:../USER/ttbasic.c **** // Terminal control
  49:../USER/ttbasic.c **** #define c_putch(c) _putch(c)
  50:../USER/ttbasic.c **** #define c_getch() _getch()
  51:../USER/ttbasic.c **** #define c_kbhit() _kbhit()
  52:../USER/ttbasic.c **** 
  53:../USER/ttbasic.c **** void newline(void) {
 120              		.loc 1 53 20 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
  54:../USER/ttbasic.c **** 	c_putch(13); //CR
 124              		.loc 1 54 2 view .LVU16
 125              	.LVL4:
 126              	.LBB173:
 127              	.LBI173:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 128              		.loc 1 35 6 view .LVU17
 129              	.LBB174:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 130              		.loc 1 35 22 view .LVU18
 131              	.LBE174:
 132              	.LBE173:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 133              		.loc 1 53 20 is_stmt 0 view .LVU19
 134 0000 10B5     		push	{r4, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138              	.LBB176:
 139              	.LBB175:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 140              		.loc 1 35 44 view .LVU20
 141 0002 084C     		ldr	r4, .L10
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 142              		.loc 1 35 22 view .LVU21
 143 0004 0D20     		movs	r0, #13
 144 0006 FFF7FEFF 		bl	putch_uart
 145              	.LVL5:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 146              		.loc 1 35 37 is_stmt 1 view .LVU22
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 147              		.loc 1 35 44 is_stmt 0 view .LVU23
 148 000a 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 149              		.loc 1 35 37 view .LVU24
 150 000c 9868     		ldr	r0, [r3, #8]
 151 000e FFF7FEFF 		bl	fflush
 152              	.LVL6:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 153              		.loc 1 35 37 view .LVU25
 154              	.LBE175:
 155              	.LBE176:
  55:../USER/ttbasic.c **** 	c_putch(10); //LF
 156              		.loc 1 55 2 is_stmt 1 view .LVU26
 157              	.LBB177:
 158              	.LBI177:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 159              		.loc 1 35 6 view .LVU27
 160              	.LBB178:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 161              		.loc 1 35 22 view .LVU28
 162 0012 0A20     		movs	r0, #10
 163 0014 FFF7FEFF 		bl	putch_uart
 164              	.LVL7:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 165              		.loc 1 35 37 view .LVU29
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 166              		.loc 1 35 44 is_stmt 0 view .LVU30
 167 0018 2368     		ldr	r3, [r4]
 168              	.LBE178:
 169              	.LBE177:
  56:../USER/ttbasic.c **** }
 170              		.loc 1 56 1 view .LVU31
 171 001a BDE81040 		pop	{r4, lr}
 172              		.cfi_restore 14
 173              		.cfi_restore 4
 174              		.cfi_def_cfa_offset 0
 175              	.LBB180:
 176              	.LBB179:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 177              		.loc 1 35 37 view .LVU32
 178 001e 9868     		ldr	r0, [r3, #8]
 179 0020 FFF7FEBF 		b	fflush
 180              	.LVL8:
 181              	.L11:
 182              		.align	2
 183              	.L10:
 184 0024 00000000 		.word	_impure_ptr
 185              	.LBE179:
 186              	.LBE180:
 187              		.cfi_endproc
 188              	.LFE6:
 190              		.section	.text.getrnd,"ax",%progbits
 191              		.align	1
 192              		.p2align 2,,3
 193              		.global	getrnd
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	getrnd:
 200              	.LVL9:
 201              	.LFB7:
  57:../USER/ttbasic.c **** 
  58:../USER/ttbasic.c **** // Return random number
  59:../USER/ttbasic.c **** short getrnd(short value) {
 202              		.loc 1 59 27 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
  60:../USER/ttbasic.c **** 	return (rand() % value) + 1;
 206              		.loc 1 60 2 view .LVU34
  59:../USER/ttbasic.c **** 	return (rand() % value) + 1;
 207              		.loc 1 59 27 is_stmt 0 view .LVU35
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
  59:../USER/ttbasic.c **** 	return (rand() % value) + 1;
 212              		.loc 1 59 27 view .LVU36
 213 0002 0446     		mov	r4, r0
 214              		.loc 1 60 10 view .LVU37
 215 0004 FFF7FEFF 		bl	rand
 216              	.LVL10:
 217              		.loc 1 60 17 view .LVU38
 218 0008 90FBF4F3 		sdiv	r3, r0, r4
 219 000c 03FB1400 		mls	r0, r3, r4, r0
 220              		.loc 1 60 26 view .LVU39
 221 0010 0130     		adds	r0, r0, #1
  61:../USER/ttbasic.c **** }
 222              		.loc 1 61 1 view .LVU40
 223 0012 00B2     		sxth	r0, r0
 224 0014 10BD     		pop	{r4, pc}
 225              		.cfi_endproc
 226              	.LFE7:
 228 0016 00BF     		.section	.text.sstyle,"ax",%progbits
 229              		.align	1
 230              		.p2align 2,,3
 231              		.global	sstyle
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu softvfp
 237              	sstyle:
 238              	.LVL11:
 239              	.LFB8:
  62:../USER/ttbasic.c **** 
  63:../USER/ttbasic.c **** // Prototypes (necessity minimum)
  64:../USER/ttbasic.c **** short iexp(void);
  65:../USER/ttbasic.c **** 
  66:../USER/ttbasic.c **** // Keyword table
  67:../USER/ttbasic.c **** const char *kwtbl[] = {
  68:../USER/ttbasic.c **** 	"GOTO", "GOSUB", "RETURN",
  69:../USER/ttbasic.c **** 	"FOR", "TO", "STEP", "NEXT",
  70:../USER/ttbasic.c **** 	"IF", "REM", "STOP",
  71:../USER/ttbasic.c **** 	"INPUT", "PRINT", "LET",
  72:../USER/ttbasic.c **** 	"?","PSET","LINE","CIRCLE","PAINT","GOXY","BYE",		// new
  73:../USER/ttbasic.c **** 	",", ";",
  74:../USER/ttbasic.c **** 	"-", "+", "*", "/", "(", ")",
  75:../USER/ttbasic.c **** 	">=", "#", ">", "=", "<=", "<",
  76:../USER/ttbasic.c **** 	"@", "RND", "ABS", "SIZE",
  77:../USER/ttbasic.c **** 	"LIST", "RUN", "NEW"
  78:../USER/ttbasic.c **** };
  79:../USER/ttbasic.c **** 
  80:../USER/ttbasic.c **** // i-code(Intermediate code) assignment
  81:../USER/ttbasic.c **** enum {
  82:../USER/ttbasic.c **** 	I_GOTO, I_GOSUB, I_RETURN,
  83:../USER/ttbasic.c **** 	I_FOR, I_TO, I_STEP, I_NEXT,
  84:../USER/ttbasic.c **** 	I_IF, I_REM, I_STOP,
  85:../USER/ttbasic.c **** 	I_INPUT, I_PRINT, I_LET,
  86:../USER/ttbasic.c **** 	I_PRT,I_PSET,I_LINE,I_CIRCLE,I_PAINT,I_GOXY,I_BYE,	// new
  87:../USER/ttbasic.c **** 	I_COMMA, I_SEMI,
  88:../USER/ttbasic.c **** 	I_MINUS, I_PLUS, I_MUL, I_DIV, I_OPEN, I_CLOSE,
  89:../USER/ttbasic.c **** 	I_GTE, I_SHARP, I_GT, I_EQ, I_LTE, I_LT,
  90:../USER/ttbasic.c **** 	I_ARRAY, I_RND, I_ABS, I_SIZE,
  91:../USER/ttbasic.c **** 	I_LIST, I_RUN, I_NEW,
  92:../USER/ttbasic.c **** 	I_NUM, I_VAR, I_STR,
  93:../USER/ttbasic.c **** 	I_EOL
  94:../USER/ttbasic.c **** };
  95:../USER/ttbasic.c **** 
  96:../USER/ttbasic.c **** // Keyword count
  97:../USER/ttbasic.c **** #define SIZE_KWTBL (sizeof(kwtbl) / sizeof(const char*))
  98:../USER/ttbasic.c **** 
  99:../USER/ttbasic.c **** // List formatting condition
 100:../USER/ttbasic.c **** // no space after
 101:../USER/ttbasic.c **** const unsigned char i_nsa[] = {
 102:../USER/ttbasic.c **** 	I_RETURN, I_STOP, I_COMMA,
 103:../USER/ttbasic.c **** 	I_MINUS, I_PLUS, I_MUL, I_DIV, I_OPEN, I_CLOSE,
 104:../USER/ttbasic.c **** 	I_GTE, I_SHARP, I_GT, I_EQ, I_LTE, I_LT,
 105:../USER/ttbasic.c **** 	I_ARRAY, I_RND, I_ABS, I_SIZE
 106:../USER/ttbasic.c **** };
 107:../USER/ttbasic.c **** 
 108:../USER/ttbasic.c **** // no space before
 109:../USER/ttbasic.c **** const unsigned char i_nsb[] = {
 110:../USER/ttbasic.c **** 	I_MINUS, I_PLUS, I_MUL, I_DIV, I_OPEN, I_CLOSE,
 111:../USER/ttbasic.c **** 	I_GTE, I_SHARP, I_GT, I_EQ, I_LTE, I_LT,
 112:../USER/ttbasic.c **** 	I_COMMA, I_SEMI, I_EOL
 113:../USER/ttbasic.c **** };
 114:../USER/ttbasic.c **** 
 115:../USER/ttbasic.c **** // exception search function
 116:../USER/ttbasic.c **** char sstyle(unsigned char code, const unsigned char *table, unsigned char count) {
 240              		.loc 1 116 82 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 117:../USER/ttbasic.c **** 	while (count--)
 245              		.loc 1 117 2 view .LVU42
 246 0000 013A     		subs	r2, r2, #1
 247              	.LVL12:
 248              		.loc 1 117 2 is_stmt 0 view .LVU43
 249 0002 D2B2     		uxtb	r2, r2
 118:../USER/ttbasic.c **** 		if (code == table[count])
 250              		.loc 1 118 3 is_stmt 1 view .LVU44
 251              	.LVL13:
 117:../USER/ttbasic.c **** 	while (count--)
 252              		.loc 1 117 8 is_stmt 0 view .LVU45
 253 0004 FF2A     		cmp	r2, #255
 254 0006 02F1FF33 		add	r3, r2, #-1
 255 000a 12D0     		beq	.L23
 116:../USER/ttbasic.c **** 	while (count--)
 256              		.loc 1 116 82 view .LVU46
 257 000c 10B4     		push	{r4}
 258              		.cfi_def_cfa_offset 4
 259              		.cfi_offset 4, -4
 260              		.loc 1 118 20 view .LVU47
 261 000e 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 262 0010 DAB2     		uxtb	r2, r3
 263              	.LVL14:
 264              		.loc 1 118 6 view .LVU48
 265 0012 8442     		cmp	r4, r0
 266 0014 07D0     		beq	.L18
 267              	.LVL15:
 268              	.L25:
 269              		.loc 1 118 3 is_stmt 1 view .LVU49
 117:../USER/ttbasic.c **** 	while (count--)
 270              		.loc 1 117 8 is_stmt 0 view .LVU50
 271 0016 FF2A     		cmp	r2, #255
 272 0018 02F1FF33 		add	r3, r2, #-1
 273 001c 06D0     		beq	.L24
 274              		.loc 1 118 20 view .LVU51
 275 001e 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 276 0020 DAB2     		uxtb	r2, r3
 277              	.LVL16:
 278              		.loc 1 118 6 view .LVU52
 279 0022 8442     		cmp	r4, r0
 280 0024 F7D1     		bne	.L25
 281              	.L18:
 119:../USER/ttbasic.c **** 			return 1;
 282              		.loc 1 119 11 view .LVU53
 283 0026 0120     		movs	r0, #1
 284              	.LVL17:
 120:../USER/ttbasic.c **** 	return 0;
 121:../USER/ttbasic.c **** }
 285              		.loc 1 121 1 view .LVU54
 286 0028 10BC     		pop	{r4}
 287              		.cfi_remember_state
 288              		.cfi_restore 4
 289              		.cfi_def_cfa_offset 0
 290 002a 7047     		bx	lr
 291              	.LVL18:
 292              	.L24:
 293              		.cfi_restore_state
 120:../USER/ttbasic.c **** 	return 0;
 294              		.loc 1 120 9 view .LVU55
 295 002c 0020     		movs	r0, #0
 296              	.LVL19:
 297              		.loc 1 121 1 view .LVU56
 298 002e 10BC     		pop	{r4}
 299              		.cfi_restore 4
 300              		.cfi_def_cfa_offset 0
 301 0030 7047     		bx	lr
 302              	.LVL20:
 303              	.L23:
 120:../USER/ttbasic.c **** 	return 0;
 304              		.loc 1 120 9 view .LVU57
 305 0032 0020     		movs	r0, #0
 306              	.LVL21:
 307              		.loc 1 121 1 view .LVU58
 308 0034 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE8:
 312 0036 00BF     		.section	.text.c_toupper,"ax",%progbits
 313              		.align	1
 314              		.p2align 2,,3
 315              		.global	c_toupper
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	c_toupper:
 322              	.LVL22:
 323              	.LFB9:
 122:../USER/ttbasic.c **** 
 123:../USER/ttbasic.c **** // exception search macro
 124:../USER/ttbasic.c **** #define nospacea(c) sstyle(c, i_nsa, sizeof(i_nsa))
 125:../USER/ttbasic.c **** #define nospaceb(c) sstyle(c, i_nsb, sizeof(i_nsb))
 126:../USER/ttbasic.c **** 
 127:../USER/ttbasic.c **** // Error messages
 128:../USER/ttbasic.c **** const char* errmsg[] = {
 129:../USER/ttbasic.c **** 	"OK",
 130:../USER/ttbasic.c **** 	"Devision by zero",
 131:../USER/ttbasic.c **** 	"Overflow",
 132:../USER/ttbasic.c **** 	"Subscript out of range",
 133:../USER/ttbasic.c **** 	"Icode buffer full",
 134:../USER/ttbasic.c **** 	"List full",
 135:../USER/ttbasic.c **** 	"GOSUB too many nested",
 136:../USER/ttbasic.c **** 	"RETURN stack underflow",
 137:../USER/ttbasic.c **** 	"FOR too many nested",
 138:../USER/ttbasic.c **** 	"NEXT without FOR",
 139:../USER/ttbasic.c **** 	"NEXT without counter",
 140:../USER/ttbasic.c **** 	"NEXT mismatch FOR",
 141:../USER/ttbasic.c **** 	"FOR without variable",
 142:../USER/ttbasic.c **** 	"FOR without TO",
 143:../USER/ttbasic.c **** 	"LET without variable",
 144:../USER/ttbasic.c **** 	"IF without condition",
 145:../USER/ttbasic.c **** 	"Undefined line number",
 146:../USER/ttbasic.c **** 	"\'(\' or \')\' expected",
 147:../USER/ttbasic.c **** 	"\'=\' expected",
 148:../USER/ttbasic.c **** 	"Illegal command",
 149:../USER/ttbasic.c **** 	"Syntax error",
 150:../USER/ttbasic.c **** 	"Internal error",
 151:../USER/ttbasic.c **** 	"Abort by [ESC]"
 152:../USER/ttbasic.c **** };
 153:../USER/ttbasic.c **** 
 154:../USER/ttbasic.c **** // Error code assignment
 155:../USER/ttbasic.c **** enum {
 156:../USER/ttbasic.c **** 	ERR_OK,
 157:../USER/ttbasic.c **** 	ERR_DIVBY0,
 158:../USER/ttbasic.c **** 	ERR_VOF,
 159:../USER/ttbasic.c **** 	ERR_SOR,
 160:../USER/ttbasic.c **** 	ERR_IBUFOF, ERR_LBUFOF,
 161:../USER/ttbasic.c **** 	ERR_GSTKOF, ERR_GSTKUF,
 162:../USER/ttbasic.c **** 	ERR_LSTKOF, ERR_LSTKUF,
 163:../USER/ttbasic.c **** 	ERR_NEXTWOV, ERR_NEXTUM, ERR_FORWOV, ERR_FORWOTO,
 164:../USER/ttbasic.c **** 	ERR_LETWOV, ERR_IFWOC,
 165:../USER/ttbasic.c **** 	ERR_ULN,
 166:../USER/ttbasic.c **** 	ERR_PAREN, ERR_VWOEQ,
 167:../USER/ttbasic.c **** 	ERR_COM,
 168:../USER/ttbasic.c **** 	ERR_SYNTAX,
 169:../USER/ttbasic.c **** 	ERR_SYS,
 170:../USER/ttbasic.c **** 	ERR_ESC
 171:../USER/ttbasic.c **** };
 172:../USER/ttbasic.c **** 
 173:../USER/ttbasic.c **** // RAM mapping
 174:../USER/ttbasic.c **** char lbuf[SIZE_LINE]; //Command line buffer
 175:../USER/ttbasic.c **** unsigned char ibuf[SIZE_IBUF]; //i-code conversion buffer
 176:../USER/ttbasic.c **** short var[26]; //Variable area
 177:../USER/ttbasic.c **** short arr[SIZE_ARRY]; //Array area
 178:../USER/ttbasic.c **** unsigned char listbuf[SIZE_LIST]; //List area
 179:../USER/ttbasic.c **** unsigned char* clp; //Pointer for current line
 180:../USER/ttbasic.c **** unsigned char* cip; //Pointer for current Intermediate code
 181:../USER/ttbasic.c **** unsigned char* gstk[SIZE_GSTK]; //GOSUB stack
 182:../USER/ttbasic.c **** unsigned char gstki; //GOSUB stack index
 183:../USER/ttbasic.c **** unsigned char* lstk[SIZE_LSTK]; //FOR stack
 184:../USER/ttbasic.c **** unsigned char lstki; //FOR stack index
 185:../USER/ttbasic.c **** 
 186:../USER/ttbasic.c **** unsigned char err;// Error message index
 187:../USER/ttbasic.c **** 
 188:../USER/ttbasic.c **** 				  // Standard C libraly (about) same functions
 189:../USER/ttbasic.c **** char c_toupper(char c) { return(c <= 'z' && c >= 'a' ? c - 32 : c); }
 324              		.loc 1 189 24 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329              		.loc 1 189 26 view .LVU60
 330              		.loc 1 189 42 is_stmt 0 view .LVU61
 331 0000 C3B2     		uxtb	r3, r0
 332              		.loc 1 189 63 view .LVU62
 333 0002 A3F16102 		sub	r2, r3, #97
 334 0006 192A     		cmp	r2, #25
 335              		.loc 1 189 58 view .LVU63
 336 0008 9CBF     		itt	ls
 337 000a A3F12000 		subls	r0, r3, #32
 338              	.LVL23:
 339              		.loc 1 189 63 view .LVU64
 340 000e 40B2     		sxtbls	r0, r0
 341              		.loc 1 189 1 view .LVU65
 342 0010 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE9:
 346 0012 00BF     		.section	.text.c_isprint,"ax",%progbits
 347              		.align	1
 348              		.p2align 2,,3
 349              		.global	c_isprint
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu softvfp
 355              	c_isprint:
 356              	.LVL24:
 357              	.LFB10:
 190:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 358              		.loc 1 190 24 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363              		.loc 1 190 26 view .LVU67
 364              		.loc 1 190 41 is_stmt 0 view .LVU68
 365 0000 2038     		subs	r0, r0, #32
 366              	.LVL25:
 367              		.loc 1 190 41 view .LVU69
 368 0002 C0B2     		uxtb	r0, r0
 369              		.loc 1 190 1 view .LVU70
 370 0004 5E28     		cmp	r0, #94
 371 0006 8CBF     		ite	hi
 372 0008 0020     		movhi	r0, #0
 373 000a 0120     		movls	r0, #1
 374 000c 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE10:
 378 000e 00BF     		.section	.text.c_isspace,"ax",%progbits
 379              		.align	1
 380              		.p2align 2,,3
 381              		.global	c_isspace
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
 387              	c_isspace:
 388              	.LVL26:
 389              	.LFB11:
 191:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 390              		.loc 1 191 24 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395              		.loc 1 191 26 view .LVU72
 396              		.loc 1 191 42 is_stmt 0 view .LVU73
 397 0000 2028     		cmp	r0, #32
 398 0002 06D0     		beq	.L31
 399              		.loc 1 191 54 discriminator 2 view .LVU74
 400 0004 0938     		subs	r0, r0, #9
 401              	.LVL27:
 402              		.loc 1 191 42 discriminator 2 view .LVU75
 403 0006 C0B2     		uxtb	r0, r0
 404 0008 0428     		cmp	r0, #4
 405 000a 8CBF     		ite	hi
 406 000c 0020     		movhi	r0, #0
 407 000e 0120     		movls	r0, #1
 408 0010 7047     		bx	lr
 409              	.LVL28:
 410              	.L31:
 411              		.loc 1 191 42 discriminator 2 view .LVU76
 412 0012 0120     		movs	r0, #1
 413              	.LVL29:
 414              		.loc 1 191 1 view .LVU77
 415 0014 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE11:
 419 0016 00BF     		.section	.text.c_isdigit,"ax",%progbits
 420              		.align	1
 421              		.p2align 2,,3
 422              		.global	c_isdigit
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu softvfp
 428              	c_isdigit:
 429              	.LVL30:
 430              	.LFB12:
 192:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 431              		.loc 1 192 24 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436              		.loc 1 192 26 view .LVU79
 437              		.loc 1 192 42 is_stmt 0 view .LVU80
 438 0000 3038     		subs	r0, r0, #48
 439              	.LVL31:
 440              		.loc 1 192 42 view .LVU81
 441 0002 C0B2     		uxtb	r0, r0
 442              		.loc 1 192 1 view .LVU82
 443 0004 0928     		cmp	r0, #9
 444 0006 8CBF     		ite	hi
 445 0008 0020     		movhi	r0, #0
 446 000a 0120     		movls	r0, #1
 447 000c 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE12:
 451 000e 00BF     		.section	.text.c_isalpha,"ax",%progbits
 452              		.align	1
 453              		.p2align 2,,3
 454              		.global	c_isalpha
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu softvfp
 460              	c_isalpha:
 461              	.LVL32:
 462              	.LFB13:
 193:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 463              		.loc 1 193 24 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              		.loc 1 193 26 view .LVU84
 469              		.loc 1 193 57 is_stmt 0 view .LVU85
 470 0000 20F02000 		bic	r0, r0, #32
 471              	.LVL33:
 472              		.loc 1 193 57 view .LVU86
 473 0004 4138     		subs	r0, r0, #65
 474 0006 C0B2     		uxtb	r0, r0
 475              		.loc 1 193 1 view .LVU87
 476 0008 1928     		cmp	r0, #25
 477 000a 8CBF     		ite	hi
 478 000c 0020     		movhi	r0, #0
 479 000e 0120     		movls	r0, #1
 480 0010 7047     		bx	lr
 481              		.cfi_endproc
 482              	.LFE13:
 484 0012 00BF     		.section	.text.c_puts,"ax",%progbits
 485              		.align	1
 486              		.p2align 2,,3
 487              		.global	c_puts
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu softvfp
 493              	c_puts:
 494              	.LVL34:
 495              	.LFB14:
 194:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 496              		.loc 1 194 28 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		.loc 1 194 30 view .LVU89
 501              		.loc 1 194 28 is_stmt 0 view .LVU90
 502 0000 38B5     		push	{r3, r4, r5, lr}
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 3, -16
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508              		.loc 1 194 28 view .LVU91
 509 0002 0446     		mov	r4, r0
 510              		.loc 1 194 37 view .LVU92
 511 0004 90F90000 		ldrsb	r0, [r0]
 512              	.LVL35:
 513              		.loc 1 194 36 view .LVU93
 514 0008 50B1     		cbz	r0, .L34
 515 000a 064D     		ldr	r5, .L42
 516              	.LVL36:
 517              	.L36:
 518              		.loc 1 194 41 is_stmt 1 discriminator 2 view .LVU94
 519              	.LBB183:
 520              	.LBI183:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 521              		.loc 1 35 6 discriminator 2 view .LVU95
 522              	.LBB184:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 523              		.loc 1 35 22 discriminator 2 view .LVU96
 524 000c FFF7FEFF 		bl	putch_uart
 525              	.LVL37:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 526              		.loc 1 35 37 discriminator 2 view .LVU97
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 527              		.loc 1 35 44 is_stmt 0 discriminator 2 view .LVU98
 528 0010 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 529              		.loc 1 35 37 discriminator 2 view .LVU99
 530 0012 9868     		ldr	r0, [r3, #8]
 531 0014 FFF7FEFF 		bl	fflush
 532              	.LVL38:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 533              		.loc 1 35 37 discriminator 2 view .LVU100
 534              	.LBE184:
 535              	.LBE183:
 536              		.loc 1 194 37 discriminator 2 view .LVU101
 537 0018 14F9010F 		ldrsb	r0, [r4, #1]!
 538              	.LVL39:
 539              		.loc 1 194 36 discriminator 2 view .LVU102
 540 001c 0028     		cmp	r0, #0
 541 001e F5D1     		bne	.L36
 542              	.LVL40:
 543              	.L34:
 544              		.loc 1 194 1 view .LVU103
 545 0020 38BD     		pop	{r3, r4, r5, pc}
 546              	.L43:
 547 0022 00BF     		.align	2
 548              	.L42:
 549 0024 00000000 		.word	_impure_ptr
 550              		.cfi_endproc
 551              	.LFE14:
 553              		.section	.text.c_gets,"ax",%progbits
 554              		.align	1
 555              		.p2align 2,,3
 556              		.global	c_gets
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu softvfp
 562              	c_gets:
 563              	.LFB15:
 195:../USER/ttbasic.c **** void c_gets() {
 564              		.loc 1 195 15 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 196:../USER/ttbasic.c **** 	char c;
 568              		.loc 1 196 2 view .LVU105
 197:../USER/ttbasic.c **** 	unsigned char len;
 569              		.loc 1 197 2 view .LVU106
 198:../USER/ttbasic.c **** 
 199:../USER/ttbasic.c **** 	len = 0;
 570              		.loc 1 199 2 view .LVU107
 571              	.LVL41:
 200:../USER/ttbasic.c **** 	while ((c = c_getch()) != KEY_ENTER) {
 572              		.loc 1 200 2 view .LVU108
 195:../USER/ttbasic.c **** 	char c;
 573              		.loc 1 195 15 is_stmt 0 view .LVU109
 574 0000 70B5     		push	{r4, r5, r6, lr}
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 4, -16
 577              		.cfi_offset 5, -12
 578              		.cfi_offset 6, -8
 579              		.cfi_offset 14, -4
 199:../USER/ttbasic.c **** 	while ((c = c_getch()) != KEY_ENTER) {
 580              		.loc 1 199 6 view .LVU110
 581 0002 0024     		movs	r4, #0
 582 0004 304E     		ldr	r6, .L69
 583 0006 314D     		ldr	r5, .L69+4
 584              	.LVL42:
 585              	.L45:
 586              	.LBB205:
 587              	.LBI205:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 588              		.loc 1 36 5 is_stmt 1 view .LVU111
 589              	.LBB206:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 590              		.loc 1 36 15 view .LVU112
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 591              		.loc 1 36 22 is_stmt 0 view .LVU113
 592 0008 FFF7FEFF 		bl	getch_uart
 593              	.LVL43:
 594              	.LBE206:
 595              	.LBE205:
 596              		.loc 1 200 12 view .LVU114
 597 000c 43B2     		sxtb	r3, r0
 598              	.LVL44:
 599              		.loc 1 200 8 view .LVU115
 600 000e 0D2B     		cmp	r3, #13
 601 0010 23D0     		beq	.L67
 602              	.L51:
 201:../USER/ttbasic.c **** 		if (c == 9) c = ' '; // TAB change Space
 603              		.loc 1 201 3 is_stmt 1 view .LVU116
 604              		.loc 1 201 6 is_stmt 0 view .LVU117
 605 0012 092B     		cmp	r3, #9
 606 0014 50D0     		beq	.L56
 202:../USER/ttbasic.c **** 		if (((c == 8) || (c == 127)) && (len > 0)) { // Backspace manipulation
 607              		.loc 1 202 3 is_stmt 1 view .LVU118
 608              		.loc 1 202 6 is_stmt 0 view .LVU119
 609 0016 082B     		cmp	r3, #8
 610 0018 01D0     		beq	.L66
 611              		.loc 1 202 17 discriminator 2 view .LVU120
 612 001a 7F2B     		cmp	r3, #127
 613 001c 3BD1     		bne	.L50
 614              	.L66:
 615              		.loc 1 202 32 view .LVU121
 616 001e 002C     		cmp	r4, #0
 617 0020 F2D0     		beq	.L45
 203:../USER/ttbasic.c **** 			len--;
 618              		.loc 1 203 4 is_stmt 1 view .LVU122
 619              	.LBB208:
 620              	.LBB209:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 621              		.loc 1 35 22 is_stmt 0 view .LVU123
 622 0022 0820     		movs	r0, #8
 623 0024 FFF7FEFF 		bl	putch_uart
 624              	.LVL45:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 625              		.loc 1 35 44 view .LVU124
 626 0028 3368     		ldr	r3, [r6]
 627              	.LBE209:
 628              	.LBE208:
 629              		.loc 1 203 7 view .LVU125
 630 002a 013C     		subs	r4, r4, #1
 631              	.LVL46:
 632              	.LBB212:
 633              	.LBB210:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 634              		.loc 1 35 37 view .LVU126
 635 002c 9868     		ldr	r0, [r3, #8]
 636 002e FFF7FEFF 		bl	fflush
 637              	.LVL47:
 638              	.LBE210:
 639              	.LBE212:
 640              	.LBB213:
 641              	.LBB214:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 642              		.loc 1 35 22 view .LVU127
 643 0032 2020     		movs	r0, #32
 644 0034 FFF7FEFF 		bl	putch_uart
 645              	.LVL48:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 646              		.loc 1 35 44 view .LVU128
 647 0038 3368     		ldr	r3, [r6]
 648              	.LBE214:
 649              	.LBE213:
 650              		.loc 1 203 7 view .LVU129
 651 003a E4B2     		uxtb	r4, r4
 652              	.LVL49:
 204:../USER/ttbasic.c **** 			c_putch(8); c_putch(' '); c_putch(8);
 653              		.loc 1 204 4 is_stmt 1 view .LVU130
 654              	.LBB216:
 655              	.LBI208:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 656              		.loc 1 35 6 view .LVU131
 657              	.LBB211:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 658              		.loc 1 35 22 view .LVU132
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 659              		.loc 1 35 37 view .LVU133
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 660              		.loc 1 35 37 is_stmt 0 view .LVU134
 661              	.LBE211:
 662              	.LBE216:
 663              		.loc 1 204 16 is_stmt 1 view .LVU135
 664              	.LBB217:
 665              	.LBI213:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 666              		.loc 1 35 6 view .LVU136
 667              	.LBB215:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 668              		.loc 1 35 22 view .LVU137
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 669              		.loc 1 35 37 view .LVU138
 670 003c 9868     		ldr	r0, [r3, #8]
 671 003e FFF7FEFF 		bl	fflush
 672              	.LVL50:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 673              		.loc 1 35 37 is_stmt 0 view .LVU139
 674              	.LBE215:
 675              	.LBE217:
 676              		.loc 1 204 30 is_stmt 1 view .LVU140
 677              	.LBB218:
 678              	.LBI218:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 679              		.loc 1 35 6 view .LVU141
 680              	.LBB219:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 681              		.loc 1 35 22 view .LVU142
 682 0042 0820     		movs	r0, #8
 683 0044 FFF7FEFF 		bl	putch_uart
 684              	.LVL51:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 685              		.loc 1 35 37 view .LVU143
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 686              		.loc 1 35 44 is_stmt 0 view .LVU144
 687 0048 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 688              		.loc 1 35 37 view .LVU145
 689 004a 9868     		ldr	r0, [r3, #8]
 690 004c FFF7FEFF 		bl	fflush
 691              	.LVL52:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 692              		.loc 1 35 37 view .LVU146
 693              	.LBE219:
 694              	.LBE218:
 695              	.LBB220:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 696              		.loc 1 36 5 is_stmt 1 view .LVU147
 697              	.LBB207:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 698              		.loc 1 36 15 view .LVU148
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 699              		.loc 1 36 22 is_stmt 0 view .LVU149
 700 0050 FFF7FEFF 		bl	getch_uart
 701              	.LVL53:
 702              	.LBE207:
 703              	.LBE220:
 200:../USER/ttbasic.c **** 		if (c == 9) c = ' '; // TAB change Space
 704              		.loc 1 200 12 view .LVU150
 705 0054 43B2     		sxtb	r3, r0
 706              	.LVL54:
 200:../USER/ttbasic.c **** 		if (c == 9) c = ' '; // TAB change Space
 707              		.loc 1 200 8 view .LVU151
 708 0056 0D2B     		cmp	r3, #13
 709 0058 DBD1     		bne	.L51
 710              	.LVL55:
 711              	.L67:
 205:../USER/ttbasic.c **** 		}
 206:../USER/ttbasic.c **** 		else
 207:../USER/ttbasic.c **** 			if (c_isprint(c) && (len < (SIZE_LINE - 1))) {
 208:../USER/ttbasic.c **** 				lbuf[len++] = c;
 209:../USER/ttbasic.c **** 				c_putch(c);
 210:../USER/ttbasic.c **** 			}
 211:../USER/ttbasic.c **** 	}
 212:../USER/ttbasic.c **** 	newline();
 712              		.loc 1 212 2 is_stmt 1 view .LVU152
 713              	.LBB221:
 714              	.LBI221:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 715              		.loc 1 53 6 view .LVU153
 716              	.LBE221:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 717              		.loc 1 54 2 view .LVU154
 718              	.LBB226:
 719              	.LBB222:
 720              	.LBI222:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 721              		.loc 1 35 6 view .LVU155
 722              	.LBB223:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 723              		.loc 1 35 22 view .LVU156
 724 005a 1846     		mov	r0, r3
 725 005c FFF7FEFF 		bl	putch_uart
 726              	.LVL56:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 727              		.loc 1 35 37 view .LVU157
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 728              		.loc 1 35 44 is_stmt 0 view .LVU158
 729 0060 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 730              		.loc 1 35 37 view .LVU159
 731 0062 9868     		ldr	r0, [r3, #8]
 732 0064 FFF7FEFF 		bl	fflush
 733              	.LVL57:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 734              		.loc 1 35 37 view .LVU160
 735              	.LBE223:
 736              	.LBE222:
 737              	.LBE226:
  55:../USER/ttbasic.c **** }
 738              		.loc 1 55 2 is_stmt 1 view .LVU161
 739              	.LBB227:
 740              	.LBB224:
 741              	.LBI224:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 742              		.loc 1 35 6 view .LVU162
 743              	.LBB225:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 744              		.loc 1 35 22 view .LVU163
 745 0068 0A20     		movs	r0, #10
 746 006a FFF7FEFF 		bl	putch_uart
 747              	.LVL58:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 748              		.loc 1 35 37 view .LVU164
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 749              		.loc 1 35 44 is_stmt 0 view .LVU165
 750 006e 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 751              		.loc 1 35 37 view .LVU166
 752 0070 9868     		ldr	r0, [r3, #8]
 753 0072 FFF7FEFF 		bl	fflush
 754              	.LVL59:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 755              		.loc 1 35 37 view .LVU167
 756              	.LBE225:
 757              	.LBE224:
 758              	.LBE227:
 213:../USER/ttbasic.c **** 	lbuf[len] = 0; // Put NULL
 759              		.loc 1 213 2 is_stmt 1 view .LVU168
 760              		.loc 1 213 12 is_stmt 0 view .LVU169
 761 0076 0023     		movs	r3, #0
 762 0078 2B55     		strb	r3, [r5, r4]
 214:../USER/ttbasic.c **** 
 215:../USER/ttbasic.c **** 
 216:../USER/ttbasic.c **** 
 217:../USER/ttbasic.c **** 	if (len > 0) {
 763              		.loc 1 217 2 is_stmt 1 view .LVU170
 764              		.loc 1 217 5 is_stmt 0 view .LVU171
 765 007a 5CB1     		cbz	r4, .L44
 766              	.LVL60:
 767              	.L52:
 218:../USER/ttbasic.c **** 		while (c_isspace(lbuf[--len])); // Skip space
 768              		.loc 1 218 33 is_stmt 1 discriminator 1 view .LVU172
 769              		.loc 1 218 9 is_stmt 0 discriminator 1 view .LVU173
 770 007c 631E     		subs	r3, r4, #1
 771 007e DBB2     		uxtb	r3, r3
 772              	.LVL61:
 773              		.loc 1 218 10 discriminator 1 view .LVU174
 774 0080 E956     		ldrsb	r1, [r5, r3]
 775              	.LVL62:
 776              	.LBB228:
 777              	.LBI228:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 778              		.loc 1 191 6 is_stmt 1 discriminator 1 view .LVU175
 779              	.LBB229:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 780              		.loc 1 191 26 discriminator 1 view .LVU176
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 781              		.loc 1 191 54 is_stmt 0 discriminator 1 view .LVU177
 782 0082 A1F10902 		sub	r2, r1, #9
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 783              		.loc 1 191 42 discriminator 1 view .LVU178
 784 0086 2029     		cmp	r1, #32
 785 0088 D2B2     		uxtb	r2, r2
 786 008a 1AD0     		beq	.L54
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 787              		.loc 1 191 42 view .LVU179
 788 008c 042A     		cmp	r2, #4
 789 008e 18D9     		bls	.L54
 790              	.LVL63:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 791              		.loc 1 191 42 view .LVU180
 792              	.LBE229:
 793              	.LBE228:
 219:../USER/ttbasic.c **** 		lbuf[++len] = 0; // Put NULL
 794              		.loc 1 219 3 is_stmt 1 view .LVU181
 795              		.loc 1 219 15 is_stmt 0 view .LVU182
 796 0090 0023     		movs	r3, #0
 797 0092 2B55     		strb	r3, [r5, r4]
 798              	.L44:
 220:../USER/ttbasic.c **** 	}
 221:../USER/ttbasic.c **** }
 799              		.loc 1 221 1 view .LVU183
 800 0094 70BD     		pop	{r4, r5, r6, pc}
 801              	.LVL64:
 802              	.L50:
 207:../USER/ttbasic.c **** 				lbuf[len++] = c;
 803              		.loc 1 207 4 is_stmt 1 view .LVU184
 804              	.LBB230:
 805              	.LBI230:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 806              		.loc 1 190 6 view .LVU185
 807              	.LBB231:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 808              		.loc 1 190 26 view .LVU186
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 809              		.loc 1 190 41 is_stmt 0 view .LVU187
 810 0096 2038     		subs	r0, r0, #32
 811              	.LBE231:
 812              	.LBE230:
 207:../USER/ttbasic.c **** 				lbuf[len++] = c;
 813              		.loc 1 207 7 view .LVU188
 814 0098 C0B2     		uxtb	r0, r0
 815 009a 5E28     		cmp	r0, #94
 816 009c B4D8     		bhi	.L45
 207:../USER/ttbasic.c **** 				lbuf[len++] = c;
 817              		.loc 1 207 21 discriminator 1 view .LVU189
 818 009e 4E2C     		cmp	r4, #78
 819 00a0 B2D8     		bhi	.L45
 820              	.LVL65:
 821              	.L68:
 208:../USER/ttbasic.c **** 				c_putch(c);
 822              		.loc 1 208 5 is_stmt 1 view .LVU190
 208:../USER/ttbasic.c **** 				c_putch(c);
 823              		.loc 1 208 13 is_stmt 0 view .LVU191
 824 00a2 621C     		adds	r2, r4, #1
 825              	.LBB232:
 826              	.LBB233:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 827              		.loc 1 35 22 view .LVU192
 828 00a4 1846     		mov	r0, r3
 829              	.LBE233:
 830              	.LBE232:
 208:../USER/ttbasic.c **** 				c_putch(c);
 831              		.loc 1 208 17 view .LVU193
 832 00a6 2B55     		strb	r3, [r5, r4]
 208:../USER/ttbasic.c **** 				c_putch(c);
 833              		.loc 1 208 13 view .LVU194
 834 00a8 D4B2     		uxtb	r4, r2
 835              	.LVL66:
 209:../USER/ttbasic.c **** 			}
 836              		.loc 1 209 5 is_stmt 1 view .LVU195
 837              	.LBB235:
 838              	.LBI232:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 839              		.loc 1 35 6 view .LVU196
 840              	.LBB234:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 841              		.loc 1 35 22 view .LVU197
 842 00aa FFF7FEFF 		bl	putch_uart
 843              	.LVL67:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 844              		.loc 1 35 37 view .LVU198
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 845              		.loc 1 35 44 is_stmt 0 view .LVU199
 846 00ae 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 847              		.loc 1 35 37 view .LVU200
 848 00b0 9868     		ldr	r0, [r3, #8]
 849 00b2 FFF7FEFF 		bl	fflush
 850              	.LVL68:
 851 00b6 A7E7     		b	.L45
 852              	.LVL69:
 853              	.L56:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 854              		.loc 1 35 37 view .LVU201
 855              	.LBE234:
 856              	.LBE235:
 207:../USER/ttbasic.c **** 				lbuf[len++] = c;
 857              		.loc 1 207 21 view .LVU202
 858 00b8 4E2C     		cmp	r4, #78
 201:../USER/ttbasic.c **** 		if (((c == 8) || (c == 127)) && (len > 0)) { // Backspace manipulation
 859              		.loc 1 201 17 view .LVU203
 860 00ba 4FF02003 		mov	r3, #32
 861              	.LVL70:
 207:../USER/ttbasic.c **** 				lbuf[len++] = c;
 862              		.loc 1 207 21 view .LVU204
 863 00be A3D8     		bhi	.L45
 864 00c0 EFE7     		b	.L68
 865              	.LVL71:
 866              	.L54:
 199:../USER/ttbasic.c **** 	while ((c = c_getch()) != KEY_ENTER) {
 867              		.loc 1 199 6 discriminator 1 view .LVU205
 868 00c2 1C46     		mov	r4, r3
 869 00c4 DAE7     		b	.L52
 870              	.L70:
 871 00c6 00BF     		.align	2
 872              	.L69:
 873 00c8 00000000 		.word	_impure_ptr
 874 00cc 00000000 		.word	lbuf
 875              		.cfi_endproc
 876              	.LFE15:
 878              		.section	.text.putnum,"ax",%progbits
 879              		.align	1
 880              		.p2align 2,,3
 881              		.global	putnum
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu softvfp
 887              	putnum:
 888              	.LVL72:
 889              	.LFB16:
 222:../USER/ttbasic.c **** 
 223:../USER/ttbasic.c **** // Print numeric specified columns
 224:../USER/ttbasic.c **** void putnum(short value, short d) {
 890              		.loc 1 224 35 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 225:../USER/ttbasic.c **** 	unsigned char dig;
 894              		.loc 1 225 2 view .LVU207
 226:../USER/ttbasic.c **** 	unsigned char sign;
 895              		.loc 1 226 2 view .LVU208
 227:../USER/ttbasic.c **** 
 228:../USER/ttbasic.c **** 	if (value < 0) {
 896              		.loc 1 228 2 view .LVU209
 229:../USER/ttbasic.c **** 		sign = 1;
 897              		.loc 1 229 3 view .LVU210
 230:../USER/ttbasic.c **** 		value = -value;
 898              		.loc 1 230 3 view .LVU211
 231:../USER/ttbasic.c **** 	}
 232:../USER/ttbasic.c **** 	else {
 233:../USER/ttbasic.c **** 		sign = 0;
 234:../USER/ttbasic.c **** 	}
 235:../USER/ttbasic.c **** 
 236:../USER/ttbasic.c **** 	lbuf[6] = 0;
 899              		.loc 1 236 10 is_stmt 0 view .LVU212
 900 0000 0023     		movs	r3, #0
 224:../USER/ttbasic.c **** 	unsigned char dig;
 901              		.loc 1 224 35 view .LVU213
 902 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 903              		.cfi_def_cfa_offset 24
 904              		.cfi_offset 4, -24
 905              		.cfi_offset 5, -20
 906              		.cfi_offset 6, -16
 907              		.cfi_offset 7, -12
 908              		.cfi_offset 8, -8
 909              		.cfi_offset 14, -4
 228:../USER/ttbasic.c **** 		sign = 1;
 910              		.loc 1 228 5 view .LVU214
 911 0006 051E     		subs	r5, r0, #0
 912              		.loc 1 236 10 view .LVU215
 913 0008 294C     		ldr	r4, .L88
 230:../USER/ttbasic.c **** 	}
 914              		.loc 1 230 9 view .LVU216
 915 000a B8BF     		it	lt
 916 000c 6D42     		rsblt	r5, r5, #0
 224:../USER/ttbasic.c **** 	unsigned char dig;
 917              		.loc 1 224 35 view .LVU217
 918 000e 0E46     		mov	r6, r1
 230:../USER/ttbasic.c **** 	}
 919              		.loc 1 230 9 view .LVU218
 920 0010 BABF     		itte	lt
 921 0012 2DB2     		sxthlt	r5, r5
 922              	.LVL73:
 229:../USER/ttbasic.c **** 		value = -value;
 923              		.loc 1 229 8 view .LVU219
 924 0014 4FF0010E 		movlt	lr, #1
 233:../USER/ttbasic.c **** 	}
 925              		.loc 1 233 8 view .LVU220
 926 0018 4FF0000E 		movge	lr, #0
 927              	.LVL74:
 928              		.loc 1 236 2 is_stmt 1 view .LVU221
 237:../USER/ttbasic.c **** 	dig = 6;
 929              		.loc 1 237 6 is_stmt 0 view .LVU222
 930 001c 0621     		movs	r1, #6
 931              	.LVL75:
 236:../USER/ttbasic.c **** 	dig = 6;
 932              		.loc 1 236 10 view .LVU223
 933 001e A371     		strb	r3, [r4, #6]
 934              		.loc 1 237 2 is_stmt 1 view .LVU224
 935              	.LVL76:
 238:../USER/ttbasic.c **** 	do {
 239:../USER/ttbasic.c **** 		lbuf[--dig] = (value % 10) + '0';
 936              		.loc 1 239 30 is_stmt 0 view .LVU225
 937 0020 DFF894C0 		ldr	ip, .L88+8
 938 0024 01E0     		b	.L73
 939              	.LVL77:
 940              	.L83:
 941              		.loc 1 239 15 view .LVU226
 942 0026 1946     		mov	r1, r3
 240:../USER/ttbasic.c **** 		value /= 10;
 943              		.loc 1 240 9 view .LVU227
 944 0028 1546     		mov	r5, r2
 945              	.LVL78:
 946              	.L73:
 238:../USER/ttbasic.c **** 	do {
 947              		.loc 1 238 2 is_stmt 1 discriminator 1 view .LVU228
 239:../USER/ttbasic.c **** 		value /= 10;
 948              		.loc 1 239 3 discriminator 1 view .LVU229
 239:../USER/ttbasic.c **** 		value /= 10;
 949              		.loc 1 239 30 is_stmt 0 discriminator 1 view .LVU230
 950 002a 8CFB0523 		smull	r2, r3, ip, r5
 951 002e EA17     		asrs	r2, r5, #31
 952 0030 C2EBA302 		rsb	r2, r2, r3, asr #2
 953 0034 02EB8200 		add	r0, r2, r2, lsl #2
 954 0038 A5EB4000 		sub	r0, r5, r0, lsl #1
 955 003c 3030     		adds	r0, r0, #48
 239:../USER/ttbasic.c **** 		value /= 10;
 956              		.loc 1 239 15 discriminator 1 view .LVU231
 957 003e 4B1E     		subs	r3, r1, #1
 958 0040 DBB2     		uxtb	r3, r3
 959              	.LVL79:
 239:../USER/ttbasic.c **** 		value /= 10;
 960              		.loc 1 239 30 discriminator 1 view .LVU232
 961 0042 40B2     		sxtb	r0, r0
 241:../USER/ttbasic.c **** 	} while (value > 0);
 962              		.loc 1 241 2 discriminator 1 view .LVU233
 963 0044 092D     		cmp	r5, #9
 240:../USER/ttbasic.c **** 		value /= 10;
 964              		.loc 1 240 9 discriminator 1 view .LVU234
 965 0046 12B2     		sxth	r2, r2
 239:../USER/ttbasic.c **** 		value /= 10;
 966              		.loc 1 239 15 discriminator 1 view .LVU235
 967 0048 E054     		strb	r0, [r4, r3]
 240:../USER/ttbasic.c **** 		value /= 10;
 968              		.loc 1 240 3 is_stmt 1 discriminator 1 view .LVU236
 969              	.LVL80:
 239:../USER/ttbasic.c **** 		value /= 10;
 970              		.loc 1 239 8 is_stmt 0 discriminator 1 view .LVU237
 971 004a 1F46     		mov	r7, r3
 972              		.loc 1 241 2 discriminator 1 view .LVU238
 973 004c EBDC     		bgt	.L83
 242:../USER/ttbasic.c **** 
 243:../USER/ttbasic.c **** 	if (sign)
 974              		.loc 1 243 2 is_stmt 1 view .LVU239
 975              		.loc 1 243 5 is_stmt 0 view .LVU240
 976 004e BEF1000F 		cmp	lr, #0
 977 0052 23D0     		beq	.L74
 244:../USER/ttbasic.c **** 		lbuf[--dig] = '-';
 978              		.loc 1 244 3 is_stmt 1 view .LVU241
 979              		.loc 1 244 15 is_stmt 0 view .LVU242
 980 0054 2D20     		movs	r0, #45
 981 0056 0239     		subs	r1, r1, #2
 982 0058 C9B2     		uxtb	r1, r1
 983              	.LVL81:
 245:../USER/ttbasic.c **** 
 246:../USER/ttbasic.c **** 	while (6 - dig < d) { // If short
 984              		.loc 1 246 11 view .LVU243
 985 005a C1F10608 		rsb	r8, r1, #6
 986              		.loc 1 246 8 view .LVU244
 987 005e 4645     		cmp	r6, r8
 244:../USER/ttbasic.c **** 		lbuf[--dig] = '-';
 988              		.loc 1 244 8 view .LVU245
 989 0060 0F46     		mov	r7, r1
 244:../USER/ttbasic.c **** 		lbuf[--dig] = '-';
 990              		.loc 1 244 15 view .LVU246
 991 0062 6054     		strb	r0, [r4, r1]
 992              	.LVL82:
 993              		.loc 1 246 8 view .LVU247
 994 0064 21DD     		ble	.L75
 995              	.L79:
 996              		.loc 1 246 8 view .LVU248
 997 0066 134D     		ldr	r5, .L88+4
 998              	.LVL83:
 999              	.L76:
 247:../USER/ttbasic.c **** 		c_putch(' '); // Fill space
 1000              		.loc 1 247 3 is_stmt 1 view .LVU249
 1001              	.LBB244:
 1002              	.LBI244:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1003              		.loc 1 35 6 view .LVU250
 1004              	.LBB245:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1005              		.loc 1 35 22 view .LVU251
 1006 0068 2020     		movs	r0, #32
 1007 006a FFF7FEFF 		bl	putch_uart
 1008              	.LVL84:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1009              		.loc 1 35 37 view .LVU252
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1010              		.loc 1 35 44 is_stmt 0 view .LVU253
 1011 006e 2B68     		ldr	r3, [r5]
 1012 0070 013E     		subs	r6, r6, #1
 1013              	.LVL85:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1014              		.loc 1 35 37 view .LVU254
 1015 0072 9868     		ldr	r0, [r3, #8]
 1016 0074 36B2     		sxth	r6, r6
 1017 0076 FFF7FEFF 		bl	fflush
 1018              	.LVL86:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1019              		.loc 1 35 37 view .LVU255
 1020              	.LBE245:
 1021              	.LBE244:
 248:../USER/ttbasic.c **** 		d--;
 1022              		.loc 1 248 3 is_stmt 1 view .LVU256
 246:../USER/ttbasic.c **** 		c_putch(' '); // Fill space
 1023              		.loc 1 246 8 is_stmt 0 view .LVU257
 1024 007a 4645     		cmp	r6, r8
 1025 007c F4DC     		bgt	.L76
 1026 007e E057     		ldrsb	r0, [r4, r7]
 249:../USER/ttbasic.c **** 	}
 250:../USER/ttbasic.c **** 	c_puts(&lbuf[dig]);
 1027              		.loc 1 250 2 is_stmt 1 view .LVU258
 1028              		.loc 1 250 9 is_stmt 0 view .LVU259
 1029 0080 3C44     		add	r4, r4, r7
 1030              	.LVL87:
 1031              	.LBB246:
 1032              	.LBI246:
 194:../USER/ttbasic.c **** void c_gets() {
 1033              		.loc 1 194 6 is_stmt 1 view .LVU260
 1034              	.LBB247:
 194:../USER/ttbasic.c **** void c_gets() {
 1035              		.loc 1 194 36 is_stmt 0 view .LVU261
 1036 0082 48B1     		cbz	r0, .L71
 1037              	.LVL88:
 1038              	.L81:
 194:../USER/ttbasic.c **** void c_gets() {
 1039              		.loc 1 194 41 is_stmt 1 view .LVU262
 1040              	.LBB248:
 1041              	.LBI248:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1042              		.loc 1 35 6 view .LVU263
 1043              	.LBB249:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1044              		.loc 1 35 22 view .LVU264
 1045 0084 FFF7FEFF 		bl	putch_uart
 1046              	.LVL89:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1047              		.loc 1 35 37 view .LVU265
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1048              		.loc 1 35 44 is_stmt 0 view .LVU266
 1049 0088 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1050              		.loc 1 35 37 view .LVU267
 1051 008a 9868     		ldr	r0, [r3, #8]
 1052 008c FFF7FEFF 		bl	fflush
 1053              	.LVL90:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1054              		.loc 1 35 37 view .LVU268
 1055              	.LBE249:
 1056              	.LBE248:
 194:../USER/ttbasic.c **** void c_gets() {
 1057              		.loc 1 194 37 view .LVU269
 1058 0090 14F9010F 		ldrsb	r0, [r4, #1]!
 1059              	.LVL91:
 194:../USER/ttbasic.c **** void c_gets() {
 1060              		.loc 1 194 36 view .LVU270
 1061 0094 0028     		cmp	r0, #0
 1062 0096 F5D1     		bne	.L81
 1063              	.LVL92:
 1064              	.L71:
 194:../USER/ttbasic.c **** void c_gets() {
 1065              		.loc 1 194 36 view .LVU271
 1066              	.LBE247:
 1067              	.LBE246:
 251:../USER/ttbasic.c **** }
 1068              		.loc 1 251 1 view .LVU272
 1069 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1070              	.LVL93:
 1071              	.L74:
 246:../USER/ttbasic.c **** 		c_putch(' '); // Fill space
 1072              		.loc 1 246 11 view .LVU273
 1073 009c C3F10608 		rsb	r8, r3, #6
 246:../USER/ttbasic.c **** 		c_putch(' '); // Fill space
 1074              		.loc 1 246 8 view .LVU274
 1075 00a0 B045     		cmp	r8, r6
 1076 00a2 E0DB     		blt	.L79
 250:../USER/ttbasic.c **** }
 1077              		.loc 1 250 2 is_stmt 1 view .LVU275
 250:../USER/ttbasic.c **** }
 1078              		.loc 1 250 9 is_stmt 0 view .LVU276
 1079 00a4 1C44     		add	r4, r4, r3
 1080              	.LVL94:
 1081              	.LBB250:
 194:../USER/ttbasic.c **** void c_gets() {
 1082              		.loc 1 194 6 is_stmt 1 view .LVU277
 194:../USER/ttbasic.c **** void c_gets() {
 1083              		.loc 1 194 6 is_stmt 0 view .LVU278
 1084 00a6 034D     		ldr	r5, .L88+4
 1085 00a8 ECE7     		b	.L81
 1086              	.LVL95:
 1087              	.L75:
 194:../USER/ttbasic.c **** void c_gets() {
 1088              		.loc 1 194 6 view .LVU279
 1089              	.LBE250:
 250:../USER/ttbasic.c **** }
 1090              		.loc 1 250 2 is_stmt 1 view .LVU280
 250:../USER/ttbasic.c **** }
 1091              		.loc 1 250 9 is_stmt 0 view .LVU281
 1092 00aa 0C44     		add	r4, r4, r1
 1093              	.LVL96:
 1094              	.LBB251:
 194:../USER/ttbasic.c **** void c_gets() {
 1095              		.loc 1 194 6 is_stmt 1 view .LVU282
 194:../USER/ttbasic.c **** void c_gets() {
 1096              		.loc 1 194 6 is_stmt 0 view .LVU283
 1097 00ac 014D     		ldr	r5, .L88+4
 1098 00ae E9E7     		b	.L81
 1099              	.L89:
 1100              		.align	2
 1101              	.L88:
 1102 00b0 00000000 		.word	lbuf
 1103 00b4 00000000 		.word	_impure_ptr
 1104 00b8 67666666 		.word	1717986919
 1105              	.LBE251:
 1106              		.cfi_endproc
 1107              	.LFE16:
 1109              		.section	.text.getnum,"ax",%progbits
 1110              		.align	1
 1111              		.p2align 2,,3
 1112              		.global	getnum
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu softvfp
 1118              	getnum:
 1119              	.LFB17:
 252:../USER/ttbasic.c **** 
 253:../USER/ttbasic.c **** // Input numeric and return value
 254:../USER/ttbasic.c **** // Called by only INPUT statement
 255:../USER/ttbasic.c **** short getnum() {
 1120              		.loc 1 255 16 is_stmt 1 view -0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 256:../USER/ttbasic.c **** 	short value, tmp;
 1124              		.loc 1 256 2 view .LVU285
 257:../USER/ttbasic.c **** 	char c;
 1125              		.loc 1 257 2 view .LVU286
 258:../USER/ttbasic.c **** 	unsigned char len;
 1126              		.loc 1 258 2 view .LVU287
 259:../USER/ttbasic.c **** 	unsigned char sign;
 1127              		.loc 1 259 2 view .LVU288
 260:../USER/ttbasic.c **** 
 261:../USER/ttbasic.c **** 	len = 0;
 1128              		.loc 1 261 2 view .LVU289
 1129              	.LVL97:
 262:../USER/ttbasic.c **** 	while ((c = c_getch()) != KEY_ENTER) {
 1130              		.loc 1 262 2 view .LVU290
 255:../USER/ttbasic.c **** 	short value, tmp;
 1131              		.loc 1 255 16 is_stmt 0 view .LVU291
 1132 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1133              		.cfi_def_cfa_offset 24
 1134              		.cfi_offset 3, -24
 1135              		.cfi_offset 4, -20
 1136              		.cfi_offset 5, -16
 1137              		.cfi_offset 6, -12
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 261:../USER/ttbasic.c **** 	while ((c = c_getch()) != KEY_ENTER) {
 1140              		.loc 1 261 6 view .LVU292
 1141 0002 0025     		movs	r5, #0
 1142 0004 454E     		ldr	r6, .L136
 1143 0006 464C     		ldr	r4, .L136+4
 1144              	.LVL98:
 1145              	.L91:
 1146              	.LBB270:
 1147              	.LBI270:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 1148              		.loc 1 36 5 is_stmt 1 view .LVU293
 1149              	.LBB271:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 1150              		.loc 1 36 15 view .LVU294
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 1151              		.loc 1 36 22 is_stmt 0 view .LVU295
 1152 0008 FFF7FEFF 		bl	getch_uart
 1153              	.LVL99:
 1154              	.LBE271:
 1155              	.LBE270:
 1156              		.loc 1 262 12 view .LVU296
 1157 000c 43B2     		sxtb	r3, r0
 1158              	.LVL100:
 1159              		.loc 1 262 8 view .LVU297
 1160 000e 0D2B     		cmp	r3, #13
 1161 0010 1AD0     		beq	.L134
 1162              	.L98:
 263:../USER/ttbasic.c **** 		if (((c == 8) || (c == 127)) && (len > 0)) { // Backspace manipulation
 1163              		.loc 1 263 3 is_stmt 1 view .LVU298
 1164              		.loc 1 263 6 is_stmt 0 view .LVU299
 1165 0012 082B     		cmp	r3, #8
 1166 0014 4CD0     		beq	.L92
 1167              		.loc 1 263 17 discriminator 2 view .LVU300
 1168 0016 7F2B     		cmp	r3, #127
 1169 0018 4AD0     		beq	.L92
 264:../USER/ttbasic.c **** 			len--;
 265:../USER/ttbasic.c **** 			c_putch(8); c_putch(' '); c_putch(8);
 266:../USER/ttbasic.c **** 		}
 267:../USER/ttbasic.c **** 		else
 268:../USER/ttbasic.c **** 			if ((len == 0 && (c == '+' || c == '-')) ||
 1170              		.loc 1 268 4 is_stmt 1 view .LVU301
 1171              		.loc 1 268 7 is_stmt 0 view .LVU302
 1172 001a 002D     		cmp	r5, #0
 1173 001c 62D0     		beq	.L135
 1174              		.loc 1 268 45 discriminator 4 view .LVU303
 1175 001e 052D     		cmp	r5, #5
 1176 0020 F2D8     		bhi	.L91
 1177              	.L97:
 1178              	.LVL101:
 1179              	.LBB273:
 1180              	.LBI273:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1181              		.loc 1 192 6 is_stmt 1 view .LVU304
 1182              	.LBB274:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1183              		.loc 1 192 26 view .LVU305
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1184              		.loc 1 192 42 is_stmt 0 view .LVU306
 1185 0022 3038     		subs	r0, r0, #48
 1186              	.LBE274:
 1187              	.LBE273:
 269:../USER/ttbasic.c **** 				(len < 6 && c_isdigit(c))) { // Numeric or sign only
 1188              		.loc 1 269 14 view .LVU307
 1189 0024 C0B2     		uxtb	r0, r0
 1190 0026 0928     		cmp	r0, #9
 1191 0028 EED8     		bhi	.L91
 1192              	.L96:
 270:../USER/ttbasic.c **** 				lbuf[len++] = c;
 1193              		.loc 1 270 5 is_stmt 1 view .LVU308
 1194              		.loc 1 270 13 is_stmt 0 view .LVU309
 1195 002a 6A1C     		adds	r2, r5, #1
 1196              	.LBB275:
 1197              	.LBB276:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1198              		.loc 1 35 22 view .LVU310
 1199 002c 1846     		mov	r0, r3
 1200              	.LBE276:
 1201              	.LBE275:
 1202              		.loc 1 270 17 view .LVU311
 1203 002e 6355     		strb	r3, [r4, r5]
 1204              		.loc 1 270 13 view .LVU312
 1205 0030 D5B2     		uxtb	r5, r2
 1206              	.LVL102:
 271:../USER/ttbasic.c **** 				c_putch(c);
 1207              		.loc 1 271 5 is_stmt 1 view .LVU313
 1208              	.LBB278:
 1209              	.LBI275:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1210              		.loc 1 35 6 view .LVU314
 1211              	.LBB277:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1212              		.loc 1 35 22 view .LVU315
 1213 0032 FFF7FEFF 		bl	putch_uart
 1214              	.LVL103:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1215              		.loc 1 35 37 view .LVU316
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1216              		.loc 1 35 44 is_stmt 0 view .LVU317
 1217 0036 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1218              		.loc 1 35 37 view .LVU318
 1219 0038 9868     		ldr	r0, [r3, #8]
 1220 003a FFF7FEFF 		bl	fflush
 1221              	.LVL104:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1222              		.loc 1 35 37 view .LVU319
 1223              	.LBE277:
 1224              	.LBE278:
 1225              	.LBB279:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 1226              		.loc 1 36 5 is_stmt 1 view .LVU320
 1227              	.LBB272:
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 1228              		.loc 1 36 15 view .LVU321
  36:../USER/ttbasic.c **** int _kbhit(){ return 0;}	// No Effect
 1229              		.loc 1 36 22 is_stmt 0 view .LVU322
 1230 003e FFF7FEFF 		bl	getch_uart
 1231              	.LVL105:
 1232              	.LBE272:
 1233              	.LBE279:
 262:../USER/ttbasic.c **** 		if (((c == 8) || (c == 127)) && (len > 0)) { // Backspace manipulation
 1234              		.loc 1 262 12 view .LVU323
 1235 0042 43B2     		sxtb	r3, r0
 1236              	.LVL106:
 262:../USER/ttbasic.c **** 		if (((c == 8) || (c == 127)) && (len > 0)) { // Backspace manipulation
 1237              		.loc 1 262 8 view .LVU324
 1238 0044 0D2B     		cmp	r3, #13
 1239 0046 E4D1     		bne	.L98
 1240              	.L134:
 272:../USER/ttbasic.c **** 			}
 273:../USER/ttbasic.c **** 	}
 274:../USER/ttbasic.c **** 	newline();
 1241              		.loc 1 274 2 is_stmt 1 view .LVU325
 1242              	.LBB280:
 1243              	.LBI280:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 1244              		.loc 1 53 6 view .LVU326
 1245              	.LBE280:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 1246              		.loc 1 54 2 view .LVU327
 1247              	.LVL107:
 1248              	.LBB285:
 1249              	.LBB281:
 1250              	.LBI281:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1251              		.loc 1 35 6 view .LVU328
 1252              	.LBB282:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1253              		.loc 1 35 22 view .LVU329
 1254 0048 1846     		mov	r0, r3
 1255 004a FFF7FEFF 		bl	putch_uart
 1256              	.LVL108:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1257              		.loc 1 35 37 view .LVU330
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1258              		.loc 1 35 44 is_stmt 0 view .LVU331
 1259 004e 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1260              		.loc 1 35 37 view .LVU332
 1261 0050 9868     		ldr	r0, [r3, #8]
 1262 0052 FFF7FEFF 		bl	fflush
 1263              	.LVL109:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1264              		.loc 1 35 37 view .LVU333
 1265              	.LBE282:
 1266              	.LBE281:
 1267              	.LBE285:
  55:../USER/ttbasic.c **** }
 1268              		.loc 1 55 2 is_stmt 1 view .LVU334
 1269              	.LBB286:
 1270              	.LBB283:
 1271              	.LBI283:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1272              		.loc 1 35 6 view .LVU335
 1273              	.LBB284:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1274              		.loc 1 35 22 view .LVU336
 1275 0056 0A20     		movs	r0, #10
 1276 0058 FFF7FEFF 		bl	putch_uart
 1277              	.LVL110:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1278              		.loc 1 35 37 view .LVU337
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1279              		.loc 1 35 44 is_stmt 0 view .LVU338
 1280 005c 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1281              		.loc 1 35 37 view .LVU339
 1282 005e 9868     		ldr	r0, [r3, #8]
 1283 0060 FFF7FEFF 		bl	fflush
 1284              	.LVL111:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1285              		.loc 1 35 37 view .LVU340
 1286              	.LBE284:
 1287              	.LBE283:
 1288              	.LBE286:
 275:../USER/ttbasic.c **** 	lbuf[len] = 0;
 1289              		.loc 1 275 2 is_stmt 1 view .LVU341
 1290              		.loc 1 275 12 is_stmt 0 view .LVU342
 1291 0064 0022     		movs	r2, #0
 1292 0066 6255     		strb	r2, [r4, r5]
 276:../USER/ttbasic.c **** 
 277:../USER/ttbasic.c **** 	switch (lbuf[0]) {
 1293              		.loc 1 277 2 is_stmt 1 view .LVU343
 1294              		.loc 1 277 14 is_stmt 0 view .LVU344
 1295 0068 94F90030 		ldrsb	r3, [r4]
 1296 006c DFF8B4C0 		ldr	ip, .L136+8
 1297              		.loc 1 277 2 view .LVU345
 1298 0070 2B2B     		cmp	r3, #43
 1299 0072 3FD0     		beq	.L99
 1300 0074 2D2B     		cmp	r3, #45
 1301 0076 45D0     		beq	.L100
 1302              	.LVL112:
 278:../USER/ttbasic.c **** 	case '-':
 279:../USER/ttbasic.c **** 		sign = 1;
 280:../USER/ttbasic.c **** 		len = 1;
 281:../USER/ttbasic.c **** 		break;
 282:../USER/ttbasic.c **** 	case '+':
 283:../USER/ttbasic.c **** 		sign = 0;
 284:../USER/ttbasic.c **** 		len = 1;
 285:../USER/ttbasic.c **** 		break;
 286:../USER/ttbasic.c **** 	default:
 287:../USER/ttbasic.c **** 		sign = 0;
 288:../USER/ttbasic.c **** 		len = 0;
 289:../USER/ttbasic.c **** 		break;
 290:../USER/ttbasic.c **** 	}
 291:../USER/ttbasic.c **** 
 292:../USER/ttbasic.c **** 	value = 0; // Initialize value
 1303              		.loc 1 292 2 is_stmt 1 view .LVU346
 293:../USER/ttbasic.c **** 	tmp = 0; // Temp value
 1304              		.loc 1 293 2 view .LVU347
 294:../USER/ttbasic.c **** 	while (lbuf[len]) {
 1305              		.loc 1 294 2 view .LVU348
 1306 0078 9CF80060 		ldrb	r6, [ip]	@ zero_extendqisi2
 1307              		.loc 1 294 8 is_stmt 0 view .LVU349
 1308 007c 002B     		cmp	r3, #0
 1309 007e 4BD0     		beq	.L110
 287:../USER/ttbasic.c **** 		len = 0;
 1310              		.loc 1 287 8 view .LVU350
 1311 0080 1746     		mov	r7, r2
 1312              	.LVL113:
 1313              	.L101:
 284:../USER/ttbasic.c **** 		break;
 1314              		.loc 1 284 7 view .LVU351
 1315 0082 0025     		movs	r5, #0
 292:../USER/ttbasic.c **** 	tmp = 0; // Temp value
 1316              		.loc 1 292 8 view .LVU352
 1317 0084 2946     		mov	r1, r5
 1318              	.LVL114:
 1319              	.L105:
 295:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1320              		.loc 1 295 3 is_stmt 1 view .LVU353
 1321              		.loc 1 295 34 is_stmt 0 view .LVU354
 1322 0086 303B     		subs	r3, r3, #48
 1323              		.loc 1 295 12 view .LVU355
 1324 0088 01EB8100 		add	r0, r1, r1, lsl #2
 1325              		.loc 1 295 30 view .LVU356
 1326 008c 0132     		adds	r2, r2, #1
 1327              	.LVL115:
 1328              		.loc 1 295 34 view .LVU357
 1329 008e 03EB4000 		add	r0, r3, r0, lsl #1
 1330              		.loc 1 295 30 view .LVU358
 1331 0092 D2B2     		uxtb	r2, r2
 1332              	.LVL116:
 1333              		.loc 1 295 7 view .LVU359
 1334 0094 00B2     		sxth	r0, r0
 1335              	.LVL117:
 296:../USER/ttbasic.c **** 		if (value > tmp) { // It means overflow
 1336              		.loc 1 296 3 is_stmt 1 view .LVU360
 1337 0096 A356     		ldrsb	r3, [r4, r2]
 1338              	.LVL118:
 1339              		.loc 1 296 6 is_stmt 0 view .LVU361
 1340 0098 8842     		cmp	r0, r1
 1341 009a BCBF     		itt	lt
 1342 009c 0125     		movlt	r5, #1
 1343 009e 0226     		movlt	r6, #2
 295:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1344              		.loc 1 295 7 view .LVU362
 1345 00a0 0146     		mov	r1, r0
 294:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1346              		.loc 1 294 8 view .LVU363
 1347 00a2 002B     		cmp	r3, #0
 1348 00a4 EFD1     		bne	.L105
 1349 00a6 0DB1     		cbz	r5, .L106
 1350 00a8 8CF80060 		strb	r6, [ip]
 1351              	.L106:
 297:../USER/ttbasic.c **** 			err = ERR_VOF;
 298:../USER/ttbasic.c **** 		}
 299:../USER/ttbasic.c **** 		value = tmp;
 300:../USER/ttbasic.c **** 	}
 301:../USER/ttbasic.c **** 	if (sign)
 1352              		.loc 1 301 2 is_stmt 1 view .LVU364
 1353              		.loc 1 301 5 is_stmt 0 view .LVU365
 1354 00ac FFB9     		cbnz	r7, .L103
 302:../USER/ttbasic.c **** 		return -value;
 303:../USER/ttbasic.c **** 	return value;
 304:../USER/ttbasic.c **** }
 1355              		.loc 1 304 1 view .LVU366
 1356 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1357              	.LVL119:
 1358              	.L92:
 263:../USER/ttbasic.c **** 			len--;
 1359              		.loc 1 263 32 view .LVU367
 1360 00b0 002D     		cmp	r5, #0
 1361 00b2 B6D0     		beq	.L97
 264:../USER/ttbasic.c **** 			c_putch(8); c_putch(' '); c_putch(8);
 1362              		.loc 1 264 4 is_stmt 1 view .LVU368
 1363              	.LBB287:
 1364              	.LBB288:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1365              		.loc 1 35 22 is_stmt 0 view .LVU369
 1366 00b4 0820     		movs	r0, #8
 1367 00b6 FFF7FEFF 		bl	putch_uart
 1368              	.LVL120:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1369              		.loc 1 35 44 view .LVU370
 1370 00ba 3368     		ldr	r3, [r6]
 1371              	.LBE288:
 1372              	.LBE287:
 264:../USER/ttbasic.c **** 			c_putch(8); c_putch(' '); c_putch(8);
 1373              		.loc 1 264 7 view .LVU371
 1374 00bc 013D     		subs	r5, r5, #1
 1375              	.LVL121:
 1376              	.LBB291:
 1377              	.LBB289:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1378              		.loc 1 35 37 view .LVU372
 1379 00be 9868     		ldr	r0, [r3, #8]
 1380 00c0 FFF7FEFF 		bl	fflush
 1381              	.LVL122:
 1382              	.LBE289:
 1383              	.LBE291:
 1384              	.LBB292:
 1385              	.LBB293:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1386              		.loc 1 35 22 view .LVU373
 1387 00c4 2020     		movs	r0, #32
 1388 00c6 FFF7FEFF 		bl	putch_uart
 1389              	.LVL123:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1390              		.loc 1 35 44 view .LVU374
 1391 00ca 3368     		ldr	r3, [r6]
 1392              	.LBE293:
 1393              	.LBE292:
 264:../USER/ttbasic.c **** 			c_putch(8); c_putch(' '); c_putch(8);
 1394              		.loc 1 264 7 view .LVU375
 1395 00cc EDB2     		uxtb	r5, r5
 1396              	.LVL124:
 265:../USER/ttbasic.c **** 		}
 1397              		.loc 1 265 4 is_stmt 1 view .LVU376
 1398              	.LBB295:
 1399              	.LBI287:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1400              		.loc 1 35 6 view .LVU377
 1401              	.LBB290:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1402              		.loc 1 35 22 view .LVU378
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1403              		.loc 1 35 37 view .LVU379
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1404              		.loc 1 35 37 is_stmt 0 view .LVU380
 1405              	.LBE290:
 1406              	.LBE295:
 265:../USER/ttbasic.c **** 		}
 1407              		.loc 1 265 16 is_stmt 1 view .LVU381
 1408              	.LBB296:
 1409              	.LBI292:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1410              		.loc 1 35 6 view .LVU382
 1411              	.LBB294:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1412              		.loc 1 35 22 view .LVU383
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1413              		.loc 1 35 37 view .LVU384
 1414 00ce 9868     		ldr	r0, [r3, #8]
 1415 00d0 FFF7FEFF 		bl	fflush
 1416              	.LVL125:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1417              		.loc 1 35 37 is_stmt 0 view .LVU385
 1418              	.LBE294:
 1419              	.LBE296:
 265:../USER/ttbasic.c **** 		}
 1420              		.loc 1 265 30 is_stmt 1 view .LVU386
 1421              	.LBB297:
 1422              	.LBI297:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1423              		.loc 1 35 6 view .LVU387
 1424              	.LBB298:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1425              		.loc 1 35 22 view .LVU388
 1426 00d4 0820     		movs	r0, #8
 1427 00d6 FFF7FEFF 		bl	putch_uart
 1428              	.LVL126:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1429              		.loc 1 35 37 view .LVU389
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1430              		.loc 1 35 44 is_stmt 0 view .LVU390
 1431 00da 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1432              		.loc 1 35 37 view .LVU391
 1433 00dc 9868     		ldr	r0, [r3, #8]
 1434 00de FFF7FEFF 		bl	fflush
 1435              	.LVL127:
 1436 00e2 91E7     		b	.L91
 1437              	.LVL128:
 1438              	.L135:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 1439              		.loc 1 35 37 view .LVU392
 1440              	.LBE298:
 1441              	.LBE297:
 268:../USER/ttbasic.c **** 				(len < 6 && c_isdigit(c))) { // Numeric or sign only
 1442              		.loc 1 268 18 discriminator 1 view .LVU393
 1443 00e4 2B2B     		cmp	r3, #43
 1444 00e6 A0D0     		beq	.L96
 268:../USER/ttbasic.c **** 				(len < 6 && c_isdigit(c))) { // Numeric or sign only
 1445              		.loc 1 268 31 discriminator 3 view .LVU394
 1446 00e8 2D2B     		cmp	r3, #45
 1447 00ea 9ED0     		beq	.L96
 1448 00ec 99E7     		b	.L97
 1449              	.LVL129:
 1450              	.L103:
 302:../USER/ttbasic.c **** 	return value;
 1451              		.loc 1 302 3 is_stmt 1 view .LVU395
 302:../USER/ttbasic.c **** 	return value;
 1452              		.loc 1 302 10 is_stmt 0 view .LVU396
 1453 00ee 4042     		rsbs	r0, r0, #0
 1454 00f0 00B2     		sxth	r0, r0
 1455              		.loc 1 304 1 view .LVU397
 1456 00f2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1457              	.LVL130:
 1458              	.L99:
 283:../USER/ttbasic.c **** 		len = 1;
 1459              		.loc 1 283 3 is_stmt 1 view .LVU398
 284:../USER/ttbasic.c **** 		break;
 1460              		.loc 1 284 3 view .LVU399
 285:../USER/ttbasic.c **** 	default:
 1461              		.loc 1 285 3 view .LVU400
 1462 00f4 94F90130 		ldrsb	r3, [r4, #1]
 292:../USER/ttbasic.c **** 	tmp = 0; // Temp value
 1463              		.loc 1 292 2 view .LVU401
 1464              	.LVL131:
 293:../USER/ttbasic.c **** 	while (lbuf[len]) {
 1465              		.loc 1 293 2 view .LVU402
 294:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1466              		.loc 1 294 2 view .LVU403
 1467 00f8 9CF80060 		ldrb	r6, [ip]	@ zero_extendqisi2
 294:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1468              		.loc 1 294 8 is_stmt 0 view .LVU404
 1469 00fc 63B1     		cbz	r3, .L110
 283:../USER/ttbasic.c **** 		len = 1;
 1470              		.loc 1 283 8 view .LVU405
 1471 00fe 1746     		mov	r7, r2
 284:../USER/ttbasic.c **** 		break;
 1472              		.loc 1 284 7 view .LVU406
 1473 0100 0122     		movs	r2, #1
 1474 0102 BEE7     		b	.L101
 1475              	.LVL132:
 1476              	.L100:
 284:../USER/ttbasic.c **** 		break;
 1477              		.loc 1 284 7 view .LVU407
 1478 0104 94F90130 		ldrsb	r3, [r4, #1]
 1479              	.LVL133:
 292:../USER/ttbasic.c **** 	tmp = 0; // Temp value
 1480              		.loc 1 292 2 is_stmt 1 view .LVU408
 293:../USER/ttbasic.c **** 	while (lbuf[len]) {
 1481              		.loc 1 293 2 view .LVU409
 294:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1482              		.loc 1 294 2 view .LVU410
 1483 0108 9CF80060 		ldrb	r6, [ip]	@ zero_extendqisi2
 292:../USER/ttbasic.c **** 	tmp = 0; // Temp value
 1484              		.loc 1 292 8 is_stmt 0 view .LVU411
 1485 010c 1846     		mov	r0, r3
 294:../USER/ttbasic.c **** 		tmp = 10 * value + lbuf[len++] - '0';
 1486              		.loc 1 294 8 view .LVU412
 1487 010e 002B     		cmp	r3, #0
 1488 0110 EDD0     		beq	.L103
 279:../USER/ttbasic.c **** 		len = 1;
 1489              		.loc 1 279 8 view .LVU413
 1490 0112 0127     		movs	r7, #1
 280:../USER/ttbasic.c **** 		break;
 1491              		.loc 1 280 7 view .LVU414
 1492 0114 3A46     		mov	r2, r7
 1493 0116 B4E7     		b	.L101
 1494              	.LVL134:
 1495              	.L110:
 292:../USER/ttbasic.c **** 	tmp = 0; // Temp value
 1496              		.loc 1 292 8 view .LVU415
 1497 0118 1846     		mov	r0, r3
 1498              		.loc 1 304 1 view .LVU416
 1499 011a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1500              	.L137:
 1501              		.align	2
 1502              	.L136:
 1503 011c 00000000 		.word	_impure_ptr
 1504 0120 00000000 		.word	lbuf
 1505 0124 00000000 		.word	err
 1506              		.cfi_endproc
 1507              	.LFE17:
 1509              		.section	.text.toktoi,"ax",%progbits
 1510              		.align	1
 1511              		.p2align 2,,3
 1512              		.global	toktoi
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	toktoi:
 1519              	.LFB18:
 305:../USER/ttbasic.c **** 
 306:../USER/ttbasic.c **** // Convert token to i-code
 307:../USER/ttbasic.c **** // Return byte length or 0
 308:../USER/ttbasic.c **** unsigned char toktoi() {
 1520              		.loc 1 308 24 is_stmt 1 view -0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 309:../USER/ttbasic.c **** 	unsigned char i; // Loop counter(i-code sometime)
 1524              		.loc 1 309 2 view .LVU418
 310:../USER/ttbasic.c **** 	unsigned char len = 0; //byte counter
 1525              		.loc 1 310 2 view .LVU419
 1526              	.LVL135:
 311:../USER/ttbasic.c **** 	char* pkw = 0; // Temporary keyword pointer
 1527              		.loc 1 311 2 view .LVU420
 312:../USER/ttbasic.c **** 	char* ptok; // Temporary token pointer
 1528              		.loc 1 312 2 view .LVU421
 313:../USER/ttbasic.c **** 	char* s = lbuf; // Pointer to charactor at line buffer
 1529              		.loc 1 313 2 view .LVU422
 314:../USER/ttbasic.c **** 	char c; // Surround the string character, " or '
 1530              		.loc 1 314 2 view .LVU423
 315:../USER/ttbasic.c **** 	short value; //numeric
 1531              		.loc 1 315 2 view .LVU424
 316:../USER/ttbasic.c **** 	short tmp; //numeric for overflow check
 1532              		.loc 1 316 2 view .LVU425
 317:../USER/ttbasic.c **** 
 318:../USER/ttbasic.c **** 	while (*s) {
 1533              		.loc 1 318 2 view .LVU426
 1534 0000 B64B     		ldr	r3, .L223
 308:../USER/ttbasic.c **** 	unsigned char i; // Loop counter(i-code sometime)
 1535              		.loc 1 308 24 is_stmt 0 view .LVU427
 1536 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1537              		.cfi_def_cfa_offset 36
 1538              		.cfi_offset 4, -36
 1539              		.cfi_offset 5, -32
 1540              		.cfi_offset 6, -28
 1541              		.cfi_offset 7, -24
 1542              		.cfi_offset 8, -20
 1543              		.cfi_offset 9, -16
 1544              		.cfi_offset 10, -12
 1545              		.cfi_offset 11, -8
 1546              		.cfi_offset 14, -4
 313:../USER/ttbasic.c **** 	char c; // Surround the string character, " or '
 1547              		.loc 1 313 8 view .LVU428
 1548 0006 9C46     		mov	ip, r3
 310:../USER/ttbasic.c **** 	char* pkw = 0; // Temporary keyword pointer
 1549              		.loc 1 310 16 view .LVU429
 1550 0008 4FF00009 		mov	r9, #0
 319:../USER/ttbasic.c **** 		while (c_isspace(*s)) s++; // Skip space
 320:../USER/ttbasic.c **** 
 321:../USER/ttbasic.c **** 								   //Try keyword conversion
 322:../USER/ttbasic.c **** 		for (i = 0; i < SIZE_KWTBL; i++) {
 323:../USER/ttbasic.c **** 			pkw = (char *)kwtbl[i]; // Point keyword
 324:../USER/ttbasic.c **** 			ptok = s; // Point top of command line
 325:../USER/ttbasic.c **** 
 326:../USER/ttbasic.c **** 					  // Compare 1 keyword
 327:../USER/ttbasic.c **** 			while ((*pkw != 0) && (*pkw == c_toupper(*ptok))) {
 328:../USER/ttbasic.c **** 				pkw++;
 329:../USER/ttbasic.c **** 				ptok++;
 330:../USER/ttbasic.c **** 			}
 331:../USER/ttbasic.c **** 
 332:../USER/ttbasic.c **** 			if (*pkw == 0) {// Case success
 333:../USER/ttbasic.c **** 
 334:../USER/ttbasic.c **** 				if (len >= SIZE_IBUF - 1) {// List area full
 335:../USER/ttbasic.c **** 					err = ERR_IBUFOF;
 336:../USER/ttbasic.c **** 					return 0;
 337:../USER/ttbasic.c **** 				}
 338:../USER/ttbasic.c **** 
 339:../USER/ttbasic.c **** 				// i have i-code
 340:../USER/ttbasic.c **** 				ibuf[len++] = i;
 341:../USER/ttbasic.c **** 				s = ptok;
 342:../USER/ttbasic.c **** 				break;
 343:../USER/ttbasic.c **** 			}
 344:../USER/ttbasic.c **** 		}
 345:../USER/ttbasic.c **** 
 346:../USER/ttbasic.c **** 		// Case statement needs an argument except numeric, valiable, or strings
 347:../USER/ttbasic.c **** 		if (i == I_REM) {
 348:../USER/ttbasic.c **** 			while (c_isspace(*s)) s++; // Skip space
 349:../USER/ttbasic.c **** 			ptok = s;
 350:../USER/ttbasic.c **** 			for (i = 0; *ptok++; i++); // Get length
 351:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 352:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 353:../USER/ttbasic.c **** 				return 0;
 354:../USER/ttbasic.c **** 			}
 355:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 356:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 357:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 358:../USER/ttbasic.c **** 			}
 359:../USER/ttbasic.c **** 			break;
 360:../USER/ttbasic.c **** 		}
 361:../USER/ttbasic.c **** 
 362:../USER/ttbasic.c **** 		if (*pkw == 0)
 363:../USER/ttbasic.c **** 			continue;
 364:../USER/ttbasic.c **** 
 365:../USER/ttbasic.c **** 		ptok = s; // Point top of command line
 366:../USER/ttbasic.c **** 
 367:../USER/ttbasic.c **** 		// Try numeric conversion
 368:../USER/ttbasic.c **** 		if (c_isdigit(*ptok)) {
 369:../USER/ttbasic.c **** 			value = 0;
 370:../USER/ttbasic.c **** 			tmp = 0;
 371:../USER/ttbasic.c **** 			do {
 372:../USER/ttbasic.c **** 				tmp = 10 * value + *ptok++ - '0';
 373:../USER/ttbasic.c **** 				if (value > tmp) {
 374:../USER/ttbasic.c **** 					err = ERR_VOF;
 375:../USER/ttbasic.c **** 					return 0;
 376:../USER/ttbasic.c **** 				}
 377:../USER/ttbasic.c **** 				value = tmp;
 378:../USER/ttbasic.c **** 			} while (c_isdigit(*ptok));
 379:../USER/ttbasic.c **** 
 380:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 3) {
 381:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 382:../USER/ttbasic.c **** 				return 0;
 383:../USER/ttbasic.c **** 			}
 384:../USER/ttbasic.c **** 			s = ptok;
 385:../USER/ttbasic.c **** 			ibuf[len++] = I_NUM;
 386:../USER/ttbasic.c **** 			ibuf[len++] = value & 255;
 387:../USER/ttbasic.c **** 			ibuf[len++] = value >> 8;
 388:../USER/ttbasic.c **** 		}
 389:../USER/ttbasic.c **** 		else
 390:../USER/ttbasic.c **** 
 391:../USER/ttbasic.c **** 		// Try string conversion
 392:../USER/ttbasic.c **** 		if (*s == '\"' || *s == '\'') {// If start of string
 393:../USER/ttbasic.c **** 			c = *s++;
 394:../USER/ttbasic.c **** 			ptok = s;
 395:../USER/ttbasic.c **** 			for (i = 0; (*ptok != c) && c_isprint(*ptok); i++) // Get length
 396:../USER/ttbasic.c **** 				ptok++;
 397:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 1 - i) { // List area full
 398:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 399:../USER/ttbasic.c **** 				return 0;
 400:../USER/ttbasic.c **** 			}
 401:../USER/ttbasic.c **** 			ibuf[len++] = I_STR; // Put i-code
 1551              		.loc 1 401 16 view .LVU430
 1552 000c 4FF02B0B 		mov	fp, #43
 1553 0010 93F90070 		ldrsb	r7, [r3]
 340:../USER/ttbasic.c **** 				s = ptok;
 1554              		.loc 1 340 17 view .LVU431
 1555 0014 DFF8D0A2 		ldr	r10, .L223+12
 1556              	.LVL136:
 1557              	.L139:
 318:../USER/ttbasic.c **** 		while (c_isspace(*s)) s++; // Skip space
 1558              		.loc 1 318 8 view .LVU432
 1559 0018 002F     		cmp	r7, #0
 1560 001a 00F05281 		beq	.L217
 1561              	.LVL137:
 1562              	.L174:
 1563              	.LBB299:
 1564              	.LBI299:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1565              		.loc 1 191 6 is_stmt 1 discriminator 1 view .LVU433
 1566              	.LBB300:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1567              		.loc 1 191 26 discriminator 1 view .LVU434
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1568              		.loc 1 191 42 is_stmt 0 discriminator 1 view .LVU435
 1569 001e 202F     		cmp	r7, #32
 1570 0020 41D0     		beq	.L140
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1571              		.loc 1 191 54 view .LVU436
 1572 0022 A7F10903 		sub	r3, r7, #9
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1573              		.loc 1 191 42 view .LVU437
 1574 0026 DBB2     		uxtb	r3, r3
 1575 0028 042B     		cmp	r3, #4
 1576 002a 3CD9     		bls	.L140
 1577 002c 0025     		movs	r5, #0
 1578 002e AC4E     		ldr	r6, .L223+4
 1579              	.L177:
 1580              	.LBE300:
 1581              	.LBE299:
 323:../USER/ttbasic.c **** 			ptok = s; // Point top of command line
 1582              		.loc 1 323 8 view .LVU438
 1583 0030 56F8043B 		ldr	r3, [r6], #4
 1584 0034 5FFA85FE 		uxtb	lr, r5
 1585              	.LVL138:
 323:../USER/ttbasic.c **** 			ptok = s; // Point top of command line
 1586              		.loc 1 323 4 is_stmt 1 view .LVU439
 324:../USER/ttbasic.c **** 
 1587              		.loc 1 324 4 view .LVU440
 327:../USER/ttbasic.c **** 				pkw++;
 1588              		.loc 1 327 4 view .LVU441
 327:../USER/ttbasic.c **** 				pkw++;
 1589              		.loc 1 327 12 is_stmt 0 view .LVU442
 1590 0038 93F90010 		ldrsb	r1, [r3]
 327:../USER/ttbasic.c **** 				pkw++;
 1591              		.loc 1 327 10 view .LVU443
 1592 003c B1B3     		cbz	r1, .L182
 1593 003e 5C1C     		adds	r4, r3, #1
 1594 0040 6046     		mov	r0, ip
 1595 0042 04E0     		b	.L142
 1596              	.LVL139:
 1597              	.L144:
 328:../USER/ttbasic.c **** 				ptok++;
 1598              		.loc 1 328 8 view .LVU444
 1599 0044 2346     		mov	r3, r4
 1600              	.LVL140:
 329:../USER/ttbasic.c **** 			}
 1601              		.loc 1 329 5 is_stmt 1 view .LVU445
 327:../USER/ttbasic.c **** 				pkw++;
 1602              		.loc 1 327 12 is_stmt 0 view .LVU446
 1603 0046 14F9011B 		ldrsb	r1, [r4], #1
 1604              	.LVL141:
 329:../USER/ttbasic.c **** 			}
 1605              		.loc 1 329 9 view .LVU447
 1606 004a 0246     		mov	r2, r0
 1607              	.LVL142:
 327:../USER/ttbasic.c **** 				pkw++;
 1608              		.loc 1 327 10 view .LVU448
 1609 004c 79B3     		cbz	r1, .L141
 1610              	.LVL143:
 1611              	.L142:
 328:../USER/ttbasic.c **** 				ptok++;
 1612              		.loc 1 328 5 is_stmt 1 discriminator 1 view .LVU449
 327:../USER/ttbasic.c **** 				pkw++;
 1613              		.loc 1 327 35 is_stmt 0 discriminator 1 view .LVU450
 1614 004e 10F9013B 		ldrsb	r3, [r0], #1
 1615              	.LVL144:
 1616              	.LBB302:
 1617              	.LBI302:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1618              		.loc 1 189 6 is_stmt 1 discriminator 1 view .LVU451
 1619              	.LBB303:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1620              		.loc 1 189 26 discriminator 1 view .LVU452
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1621              		.loc 1 189 42 is_stmt 0 discriminator 1 view .LVU453
 1622 0052 DAB2     		uxtb	r2, r3
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1623              		.loc 1 189 63 discriminator 1 view .LVU454
 1624 0054 A2F16108 		sub	r8, r2, #97
 1625 0058 B8F1190F 		cmp	r8, #25
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1626              		.loc 1 189 58 discriminator 1 view .LVU455
 1627 005c 9CBF     		itt	ls
 1628 005e A2F12003 		subls	r3, r2, #32
 1629              	.LVL145:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1630              		.loc 1 189 63 discriminator 1 view .LVU456
 1631 0062 5BB2     		sxtbls	r3, r3
 1632              	.LBE303:
 1633              	.LBE302:
 327:../USER/ttbasic.c **** 				pkw++;
 1634              		.loc 1 327 23 discriminator 1 view .LVU457
 1635 0064 9942     		cmp	r1, r3
 1636 0066 EDD0     		beq	.L144
 332:../USER/ttbasic.c **** 
 1637              		.loc 1 332 4 is_stmt 1 view .LVU458
 1638              	.LVL146:
 332:../USER/ttbasic.c **** 
 1639              		.loc 1 332 4 is_stmt 0 view .LVU459
 1640 0068 0135     		adds	r5, r5, #1
 1641              	.LVL147:
 322:../USER/ttbasic.c **** 			pkw = (char *)kwtbl[i]; // Point keyword
 1642              		.loc 1 322 3 view .LVU460
 1643 006a 292D     		cmp	r5, #41
 1644 006c E0D1     		bne	.L177
 1645 006e 6246     		mov	r2, ip
 1646              	.LVL148:
 322:../USER/ttbasic.c **** 			pkw = (char *)kwtbl[i]; // Point keyword
 1647              		.loc 1 322 3 view .LVU461
 1648 0070 4946     		mov	r1, r9
 1649              	.LVL149:
 1650              	.L178:
 365:../USER/ttbasic.c **** 
 1651              		.loc 1 365 3 is_stmt 1 view .LVU462
 368:../USER/ttbasic.c **** 			value = 0;
 1652              		.loc 1 368 3 view .LVU463
 1653              	.LBB304:
 1654              	.LBI304:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1655              		.loc 1 192 6 view .LVU464
 1656              	.LBB305:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1657              		.loc 1 192 26 view .LVU465
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1658              		.loc 1 192 42 is_stmt 0 view .LVU466
 1659 0072 FBB2     		uxtb	r3, r7
 1660              	.LVL150:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1661              		.loc 1 192 42 view .LVU467
 1662              	.LBE305:
 1663              	.LBE304:
 368:../USER/ttbasic.c **** 			value = 0;
 1664              		.loc 1 368 6 view .LVU468
 1665 0074 A3F13000 		sub	r0, r3, #48
 1666 0078 0928     		cmp	r0, #9
 1667 007a 40F28F80 		bls	.L218
 392:../USER/ttbasic.c **** 			c = *s++;
 1668              		.loc 1 392 3 is_stmt 1 view .LVU469
 392:../USER/ttbasic.c **** 			c = *s++;
 1669              		.loc 1 392 6 is_stmt 0 view .LVU470
 1670 007e 222F     		cmp	r7, #34
 1671 0080 00F0A780 		beq	.L162
 392:../USER/ttbasic.c **** 			c = *s++;
 1672              		.loc 1 392 18 discriminator 1 view .LVU471
 1673 0084 272F     		cmp	r7, #39
 1674 0086 00F0A480 		beq	.L162
 402:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 403:../USER/ttbasic.c **** 			while (i--) { // Put string
 404:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 405:../USER/ttbasic.c **** 			}
 406:../USER/ttbasic.c **** 			if (*s == c) s++; // Skip " or '
 407:../USER/ttbasic.c **** 		}
 408:../USER/ttbasic.c **** 		else
 409:../USER/ttbasic.c **** 
 410:../USER/ttbasic.c **** 		// Try variable conversion
 411:../USER/ttbasic.c **** 		if (c_isalpha(*ptok)) {
 1675              		.loc 1 411 3 is_stmt 1 view .LVU472
 1676              	.LVL151:
 1677              	.LBB306:
 1678              	.LBI306:
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1679              		.loc 1 193 6 view .LVU473
 1680              	.LBB307:
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1681              		.loc 1 193 26 view .LVU474
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1682              		.loc 1 193 57 is_stmt 0 view .LVU475
 1683 008a 23F02004 		bic	r4, r3, #32
 1684 008e 413C     		subs	r4, r4, #65
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1685              		.loc 1 193 44 view .LVU476
 1686 0090 A3F16100 		sub	r0, r3, #97
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1687              		.loc 1 193 57 view .LVU477
 1688 0094 192C     		cmp	r4, #25
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1689              		.loc 1 193 44 view .LVU478
 1690 0096 C0B2     		uxtb	r0, r0
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1691              		.loc 1 193 57 view .LVU479
 1692 0098 5ED9     		bls	.L169
 1693              	.LVL152:
 1694              	.L170:
 193:../USER/ttbasic.c **** void c_puts(const char *s) { while (*s) c_putch(*s++); }
 1695              		.loc 1 193 57 view .LVU480
 1696              	.LBE307:
 1697              	.LBE306:
 412:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2) {
 413:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 414:../USER/ttbasic.c **** 				return 0;
 415:../USER/ttbasic.c **** 			}
 416:../USER/ttbasic.c **** 			if (len >= 4 && ibuf[len - 2] == I_VAR && ibuf[len - 4] == I_VAR) { // Case series of variables
 417:../USER/ttbasic.c **** 				err = ERR_SYNTAX; // Syntax error
 1698              		.loc 1 417 5 is_stmt 1 view .LVU481
 1699              		.loc 1 417 9 is_stmt 0 view .LVU482
 1700 009a 1422     		movs	r2, #20
 1701              	.LVL153:
 1702              		.loc 1 417 9 view .LVU483
 1703 009c 914B     		ldr	r3, .L223+8
 418:../USER/ttbasic.c **** 				return 0;
 1704              		.loc 1 418 12 view .LVU484
 1705 009e 0020     		movs	r0, #0
 417:../USER/ttbasic.c **** 				return 0;
 1706              		.loc 1 417 9 view .LVU485
 1707 00a0 1A70     		strb	r2, [r3]
 1708              		.loc 1 418 5 is_stmt 1 view .LVU486
 419:../USER/ttbasic.c **** 			}
 420:../USER/ttbasic.c **** 			ibuf[len++] = I_VAR; // Put i-code
 421:../USER/ttbasic.c **** 			ibuf[len++] = c_toupper(*ptok) - 'A'; // Put index of valiable area
 422:../USER/ttbasic.c **** 			s++;
 423:../USER/ttbasic.c **** 		}
 424:../USER/ttbasic.c **** 		else
 425:../USER/ttbasic.c **** 
 426:../USER/ttbasic.c **** 		// Nothing mutch
 427:../USER/ttbasic.c **** 		{
 428:../USER/ttbasic.c **** 			err = ERR_SYNTAX;
 429:../USER/ttbasic.c **** 			return 0;
 430:../USER/ttbasic.c **** 		}
 431:../USER/ttbasic.c **** 	}
 432:../USER/ttbasic.c **** 	ibuf[len++] = I_EOL; // Put end of line
 433:../USER/ttbasic.c **** 	return len; // Return byte length
 434:../USER/ttbasic.c **** }
 1709              		.loc 1 434 1 is_stmt 0 view .LVU487
 1710 00a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1711              	.LVL154:
 1712              	.L140:
 319:../USER/ttbasic.c **** 
 1713              		.loc 1 319 25 is_stmt 1 view .LVU488
 319:../USER/ttbasic.c **** 
 1714              		.loc 1 319 25 is_stmt 0 view .LVU489
 1715 00a6 1CF9017F 		ldrsb	r7, [ip, #1]!
 1716 00aa B8E7     		b	.L174
 1717              	.LVL155:
 1718              	.L182:
 327:../USER/ttbasic.c **** 				pkw++;
 1719              		.loc 1 327 10 view .LVU490
 1720 00ac 6246     		mov	r2, ip
 1721              	.L141:
 332:../USER/ttbasic.c **** 
 1722              		.loc 1 332 4 is_stmt 1 view .LVU491
 334:../USER/ttbasic.c **** 					err = ERR_IBUFOF;
 1723              		.loc 1 334 5 view .LVU492
 334:../USER/ttbasic.c **** 					err = ERR_IBUFOF;
 1724              		.loc 1 334 8 is_stmt 0 view .LVU493
 1725 00ae B9F14E0F 		cmp	r9, #78
 1726 00b2 00F2F180 		bhi	.L153
 340:../USER/ttbasic.c **** 				s = ptok;
 1727              		.loc 1 340 5 is_stmt 1 view .LVU494
 340:../USER/ttbasic.c **** 				s = ptok;
 1728              		.loc 1 340 13 is_stmt 0 view .LVU495
 1729 00b6 09F10101 		add	r1, r9, #1
 347:../USER/ttbasic.c **** 			while (c_isspace(*s)) s++; // Skip space
 1730              		.loc 1 347 6 view .LVU496
 1731 00ba BEF1080F 		cmp	lr, #8
 340:../USER/ttbasic.c **** 				s = ptok;
 1732              		.loc 1 340 17 view .LVU497
 1733 00be 0AF809E0 		strb	lr, [r10, r9]
 340:../USER/ttbasic.c **** 				s = ptok;
 1734              		.loc 1 340 13 view .LVU498
 1735 00c2 C9B2     		uxtb	r1, r1
 341:../USER/ttbasic.c **** 				break;
 1736              		.loc 1 341 5 is_stmt 1 view .LVU499
 1737              	.LVL156:
 342:../USER/ttbasic.c **** 			}
 1738              		.loc 1 342 5 view .LVU500
 347:../USER/ttbasic.c **** 			while (c_isspace(*s)) s++; // Skip space
 1739              		.loc 1 347 3 view .LVU501
 340:../USER/ttbasic.c **** 				s = ptok;
 1740              		.loc 1 340 17 is_stmt 0 view .LVU502
 1741 00c4 5046     		mov	r0, r10
 1742 00c6 92F90070 		ldrsb	r7, [r2]
 347:../USER/ttbasic.c **** 			while (c_isspace(*s)) s++; // Skip space
 1743              		.loc 1 347 6 view .LVU503
 1744 00ca 10D0     		beq	.L148
 362:../USER/ttbasic.c **** 			continue;
 1745              		.loc 1 362 3 is_stmt 1 view .LVU504
 362:../USER/ttbasic.c **** 			continue;
 1746              		.loc 1 362 6 is_stmt 0 view .LVU505
 1747 00cc 93F90030 		ldrsb	r3, [r3]
 1748 00d0 002B     		cmp	r3, #0
 1749 00d2 CED1     		bne	.L178
 362:../USER/ttbasic.c **** 			continue;
 1750              		.loc 1 362 6 view .LVU506
 1751 00d4 9446     		mov	ip, r2
 1752              	.LVL157:
 340:../USER/ttbasic.c **** 				s = ptok;
 1753              		.loc 1 340 13 view .LVU507
 1754 00d6 8946     		mov	r9, r1
 318:../USER/ttbasic.c **** 		while (c_isspace(*s)) s++; // Skip space
 1755              		.loc 1 318 8 view .LVU508
 1756 00d8 002F     		cmp	r7, #0
 1757 00da A0D1     		bne	.L174
 1758              	.LVL158:
 1759              	.L154:
 432:../USER/ttbasic.c **** 	return len; // Return byte length
 1760              		.loc 1 432 2 is_stmt 1 view .LVU509
 432:../USER/ttbasic.c **** 	return len; // Return byte length
 1761              		.loc 1 432 14 is_stmt 0 view .LVU510
 1762 00dc 2C22     		movs	r2, #44
 432:../USER/ttbasic.c **** 	return len; // Return byte length
 1763              		.loc 1 432 10 view .LVU511
 1764 00de 09F10103 		add	r3, r9, #1
 432:../USER/ttbasic.c **** 	return len; // Return byte length
 1765              		.loc 1 432 14 view .LVU512
 1766 00e2 00F80920 		strb	r2, [r0, r9]
 432:../USER/ttbasic.c **** 	return len; // Return byte length
 1767              		.loc 1 432 10 view .LVU513
 1768 00e6 D8B2     		uxtb	r0, r3
 1769              	.LVL159:
 433:../USER/ttbasic.c **** }
 1770              		.loc 1 433 2 is_stmt 1 view .LVU514
 1771              		.loc 1 434 1 is_stmt 0 view .LVU515
 1772 00e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1773              	.LVL160:
 1774              	.L149:
 1775              	.LBB308:
 1776              	.LBB301:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1777              		.loc 1 191 42 discriminator 1 view .LVU516
 1778 00ec 1A46     		mov	r2, r3
 1779              	.LVL161:
 1780              	.L148:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1781              		.loc 1 191 42 discriminator 1 view .LVU517
 1782              	.LBE301:
 1783              	.LBE308:
 348:../USER/ttbasic.c **** 			ptok = s;
 1784              		.loc 1 348 11 discriminator 1 view .LVU518
 1785 00ee 1346     		mov	r3, r2
 1786 00f0 13F9014B 		ldrsb	r4, [r3], #1
 1787 00f4 1546     		mov	r5, r2
 1788              	.LVL162:
 1789              	.LBB309:
 1790              	.LBI309:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1791              		.loc 1 191 6 is_stmt 1 discriminator 1 view .LVU519
 1792              	.LBB310:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1793              		.loc 1 191 26 discriminator 1 view .LVU520
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1794              		.loc 1 191 54 is_stmt 0 discriminator 1 view .LVU521
 1795 00f6 A4F10906 		sub	r6, r4, #9
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1796              		.loc 1 191 42 discriminator 1 view .LVU522
 1797 00fa 202C     		cmp	r4, #32
 1798 00fc F6B2     		uxtb	r6, r6
 1799 00fe F5D0     		beq	.L149
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1800              		.loc 1 191 42 view .LVU523
 1801 0100 042E     		cmp	r6, #4
 1802 0102 F3D9     		bls	.L149
 1803              	.LVL163:
 191:../USER/ttbasic.c **** char c_isdigit(char c) { return(c <= '9' && c >= '0'); }
 1804              		.loc 1 191 42 view .LVU524
 1805              	.LBE310:
 1806              	.LBE309:
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1807              		.loc 1 350 4 view .LVU525
 1808 0104 002C     		cmp	r4, #0
 1809 0106 00F0DE80 		beq	.L150
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1810              		.loc 1 350 11 view .LVU526
 1811 010a 0026     		movs	r6, #0
 1812 010c 00E0     		b	.L151
 1813              	.LVL164:
 1814              	.L183:
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1815              		.loc 1 350 26 view .LVU527
 1816 010e 3E46     		mov	r6, r7
 1817              	.LVL165:
 1818              	.L151:
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1819              		.loc 1 350 29 is_stmt 1 discriminator 3 view .LVU528
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1820              		.loc 1 350 4 is_stmt 0 discriminator 3 view .LVU529
 1821 0110 13F901CB 		ldrsb	ip, [r3], #1
 1822              	.LVL166:
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1823              		.loc 1 350 26 discriminator 3 view .LVU530
 1824 0114 741C     		adds	r4, r6, #1
 1825 0116 E7B2     		uxtb	r7, r4
 1826              	.LVL167:
 350:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 2 - i) {
 1827              		.loc 1 350 4 discriminator 3 view .LVU531
 1828 0118 BCF1000F 		cmp	ip, #0
 1829 011c F7D1     		bne	.L183
 351:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 1830              		.loc 1 351 4 is_stmt 1 view .LVU532
 351:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 1831              		.loc 1 351 29 is_stmt 0 view .LVU533
 1832 011e C7F14E03 		rsb	r3, r7, #78
 351:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 1833              		.loc 1 351 7 view .LVU534
 1834 0122 8B42     		cmp	r3, r1
 1835 0124 40F3B880 		ble	.L153
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 1836              		.loc 1 355 4 is_stmt 1 view .LVU535
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 1837              		.loc 1 355 12 is_stmt 0 view .LVU536
 1838 0128 09F10203 		add	r3, r9, #2
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 1839              		.loc 1 355 16 view .LVU537
 1840 012c 0AF80170 		strb	r7, [r10, r1]
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 1841              		.loc 1 355 12 view .LVU538
 1842 0130 DBB2     		uxtb	r3, r3
 1843              	.LVL168:
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 1844              		.loc 1 356 4 is_stmt 1 view .LVU539
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 1845              		.loc 1 356 10 is_stmt 0 view .LVU540
 1846 0132 002F     		cmp	r7, #0
 1847 0134 00F0D080 		beq	.L184
 1848 0138 1444     		add	r4, r4, r2
 1849 013a 9B1A     		subs	r3, r3, r2
 1850              	.LVL169:
 1851              	.L155:
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 1852              		.loc 1 356 10 view .LVU541
 1853 013c EA18     		adds	r2, r5, r3
 357:../USER/ttbasic.c **** 			}
 1854              		.loc 1 357 17 view .LVU542
 1855 013e 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1856 0142 D2B2     		uxtb	r2, r2
 1857              	.LVL170:
 357:../USER/ttbasic.c **** 			}
 1858              		.loc 1 357 5 is_stmt 1 view .LVU543
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 1859              		.loc 1 356 10 is_stmt 0 view .LVU544
 1860 0144 A542     		cmp	r5, r4
 357:../USER/ttbasic.c **** 			}
 1861              		.loc 1 357 17 view .LVU545
 1862 0146 0AF80210 		strb	r1, [r10, r2]
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 1863              		.loc 1 356 10 view .LVU546
 1864 014a F7D1     		bne	.L155
 1865 014c 09F10309 		add	r9, r9, #3
 1866 0150 4E44     		add	r6, r6, r9
 1867 0152 06F0FF09 		and	r9, r6, #255
 1868 0156 C1E7     		b	.L154
 1869              	.LVL171:
 1870              	.L169:
 412:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 1871              		.loc 1 412 4 is_stmt 1 view .LVU547
 412:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 1872              		.loc 1 412 7 is_stmt 0 view .LVU548
 1873 0158 4D29     		cmp	r1, #77
 1874 015a 00F29D80 		bhi	.L153
 416:../USER/ttbasic.c **** 				err = ERR_SYNTAX; // Syntax error
 1875              		.loc 1 416 4 is_stmt 1 view .LVU549
 416:../USER/ttbasic.c **** 				err = ERR_SYNTAX; // Syntax error
 1876              		.loc 1 416 7 is_stmt 0 view .LVU550
 1877 015e 0329     		cmp	r1, #3
 1878 0160 06D9     		bls	.L171
 416:../USER/ttbasic.c **** 				err = ERR_SYNTAX; // Syntax error
 1879              		.loc 1 416 24 discriminator 1 view .LVU551
 1880 0162 0AEB0104 		add	r4, r10, r1
 416:../USER/ttbasic.c **** 				err = ERR_SYNTAX; // Syntax error
 1881              		.loc 1 416 17 discriminator 1 view .LVU552
 1882 0166 14F8025C 		ldrb	r5, [r4, #-2]	@ zero_extendqisi2
 1883 016a 2A2D     		cmp	r5, #42
 1884 016c 00F08E80 		beq	.L219
 1885              	.L171:
 420:../USER/ttbasic.c **** 			ibuf[len++] = c_toupper(*ptok) - 'A'; // Put index of valiable area
 1886              		.loc 1 420 4 is_stmt 1 view .LVU553
 420:../USER/ttbasic.c **** 			ibuf[len++] = c_toupper(*ptok) - 'A'; // Put index of valiable area
 1887              		.loc 1 420 16 is_stmt 0 view .LVU554
 1888 0170 4FF02A05 		mov	r5, #42
 1889              	.LBB311:
 1890              	.LBB312:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1891              		.loc 1 189 63 view .LVU555
 1892 0174 1928     		cmp	r0, #25
 1893              	.LBE312:
 1894              	.LBE311:
 420:../USER/ttbasic.c **** 			ibuf[len++] = c_toupper(*ptok) - 'A'; // Put index of valiable area
 1895              		.loc 1 420 12 view .LVU556
 1896 0176 01F10104 		add	r4, r1, #1
 1897 017a 88BF     		it	hi
 1898 017c 413B     		subhi	r3, r3, #65
 420:../USER/ttbasic.c **** 			ibuf[len++] = c_toupper(*ptok) - 'A'; // Put index of valiable area
 1899              		.loc 1 420 16 view .LVU557
 1900 017e 0AF80150 		strb	r5, [r10, r1]
 420:../USER/ttbasic.c **** 			ibuf[len++] = c_toupper(*ptok) - 'A'; // Put index of valiable area
 1901              		.loc 1 420 12 view .LVU558
 1902 0182 E4B2     		uxtb	r4, r4
 1903              	.LVL172:
 421:../USER/ttbasic.c **** 			s++;
 1904              		.loc 1 421 4 is_stmt 1 view .LVU559
 1905              	.LBB314:
 1906              	.LBI311:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1907              		.loc 1 189 6 view .LVU560
 1908              	.LBB313:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1909              		.loc 1 189 26 view .LVU561
 1910 0184 88BF     		it	hi
 1911 0186 D8B2     		uxtbhi	r0, r3
 1912              	.LVL173:
 189:../USER/ttbasic.c **** char c_isprint(char c) { return(c >= 32 && c <= 126); }
 1913              		.loc 1 189 26 is_stmt 0 view .LVU562
 1914              	.LBE313:
 1915              	.LBE314:
 421:../USER/ttbasic.c **** 			s++;
 1916              		.loc 1 421 12 view .LVU563
 1917 0188 0231     		adds	r1, r1, #2
 1918 018a 5FFA81F9 		uxtb	r9, r1
 1919              	.LVL174:
 421:../USER/ttbasic.c **** 			s++;
 1920              		.loc 1 421 16 view .LVU564
 1921 018e 0AF80400 		strb	r0, [r10, r4]
 422:../USER/ttbasic.c **** 		}
 1922              		.loc 1 422 4 is_stmt 1 view .LVU565
 422:../USER/ttbasic.c **** 		}
 1923              		.loc 1 422 5 is_stmt 0 view .LVU566
 1924 0192 02F1010C 		add	ip, r2, #1
 1925              	.LVL175:
 422:../USER/ttbasic.c **** 		}
 1926              		.loc 1 422 5 view .LVU567
 1927 0196 92F90170 		ldrsb	r7, [r2, #1]
 1928 019a 3DE7     		b	.L139
 1929              	.LVL176:
 1930              	.L218:
 369:../USER/ttbasic.c **** 			tmp = 0;
 1931              		.loc 1 369 10 view .LVU568
 1932 019c 0020     		movs	r0, #0
 1933 019e 07E0     		b	.L160
 1934              	.LVL177:
 1935              	.L159:
 378:../USER/ttbasic.c **** 
 1936              		.loc 1 378 13 view .LVU569
 1937 01a0 92F90070 		ldrsb	r7, [r2]
 1938              	.LVL178:
 1939              	.LBB315:
 1940              	.LBI315:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1941              		.loc 1 192 6 is_stmt 1 view .LVU570
 1942              	.LBB316:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1943              		.loc 1 192 26 view .LVU571
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1944              		.loc 1 192 26 is_stmt 0 view .LVU572
 1945 01a4 2046     		mov	r0, r4
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1946              		.loc 1 192 42 view .LVU573
 1947 01a6 A7F13004 		sub	r4, r7, #48
 1948              	.LVL179:
 192:../USER/ttbasic.c **** char c_isalpha(char c) { return ((c <= 'z' && c >= 'a') || (c <= 'Z' && c >= 'A')); }
 1949              		.loc 1 192 42 view .LVU574
 1950              	.LBE316:
 1951              	.LBE315:
 378:../USER/ttbasic.c **** 
 1952              		.loc 1 378 4 view .LVU575
 1953 01aa E4B2     		uxtb	r4, r4
 1954 01ac 092C     		cmp	r4, #9
 1955 01ae 54D8     		bhi	.L220
 1956              	.LVL180:
 1957              	.L160:
 371:../USER/ttbasic.c **** 				tmp = 10 * value + *ptok++ - '0';
 1958              		.loc 1 371 4 is_stmt 1 view .LVU576
 372:../USER/ttbasic.c **** 				if (value > tmp) {
 1959              		.loc 1 372 5 view .LVU577
 377:../USER/ttbasic.c **** 			} while (c_isdigit(*ptok));
 1960              		.loc 1 377 5 view .LVU578
 372:../USER/ttbasic.c **** 				if (value > tmp) {
 1961              		.loc 1 372 24 is_stmt 0 view .LVU579
 1962 01b0 12F9013B 		ldrsb	r3, [r2], #1
 1963              	.LVL181:
 372:../USER/ttbasic.c **** 				if (value > tmp) {
 1964              		.loc 1 372 14 view .LVU580
 1965 01b4 00EB8004 		add	r4, r0, r0, lsl #2
 372:../USER/ttbasic.c **** 				if (value > tmp) {
 1966              		.loc 1 372 32 view .LVU581
 1967 01b8 303B     		subs	r3, r3, #48
 1968 01ba 03EB4403 		add	r3, r3, r4, lsl #1
 1969 01be 9BB2     		uxth	r3, r3
 372:../USER/ttbasic.c **** 				if (value > tmp) {
 1970              		.loc 1 372 9 view .LVU582
 1971 01c0 1CB2     		sxth	r4, r3
 1972              	.LVL182:
 373:../USER/ttbasic.c **** 					err = ERR_VOF;
 1973              		.loc 1 373 5 is_stmt 1 view .LVU583
 373:../USER/ttbasic.c **** 					err = ERR_VOF;
 1974              		.loc 1 373 8 is_stmt 0 view .LVU584
 1975 01c2 A042     		cmp	r0, r4
 1976 01c4 ECDD     		ble	.L159
 374:../USER/ttbasic.c **** 					return 0;
 1977              		.loc 1 374 6 is_stmt 1 view .LVU585
 374:../USER/ttbasic.c **** 					return 0;
 1978              		.loc 1 374 10 is_stmt 0 view .LVU586
 1979 01c6 0222     		movs	r2, #2
 1980              	.LVL183:
 374:../USER/ttbasic.c **** 					return 0;
 1981              		.loc 1 374 10 view .LVU587
 1982 01c8 464B     		ldr	r3, .L223+8
 375:../USER/ttbasic.c **** 				}
 1983              		.loc 1 375 13 view .LVU588
 1984 01ca 0020     		movs	r0, #0
 374:../USER/ttbasic.c **** 					return 0;
 1985              		.loc 1 374 10 view .LVU589
 1986 01cc 1A70     		strb	r2, [r3]
 375:../USER/ttbasic.c **** 				}
 1987              		.loc 1 375 6 is_stmt 1 view .LVU590
 1988              		.loc 1 434 1 is_stmt 0 view .LVU591
 1989 01ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1990              	.LVL184:
 1991              	.L162:
 393:../USER/ttbasic.c **** 			ptok = s;
 1992              		.loc 1 393 4 is_stmt 1 view .LVU592
 395:../USER/ttbasic.c **** 				ptok++;
 1993              		.loc 1 395 17 is_stmt 0 view .LVU593
 1994 01d2 92F901E0 		ldrsb	lr, [r2, #1]
 393:../USER/ttbasic.c **** 			ptok = s;
 1995              		.loc 1 393 10 view .LVU594
 1996 01d6 02F1010C 		add	ip, r2, #1
 1997              	.LVL185:
 394:../USER/ttbasic.c **** 			for (i = 0; (*ptok != c) && c_isprint(*ptok); i++) // Get length
 1998              		.loc 1 394 4 is_stmt 1 view .LVU595
 395:../USER/ttbasic.c **** 				ptok++;
 1999              		.loc 1 395 4 view .LVU596
 395:../USER/ttbasic.c **** 				ptok++;
 2000              		.loc 1 395 4 is_stmt 0 view .LVU597
 2001 01da BE45     		cmp	lr, r7
 2002 01dc 62D0     		beq	.L164
 2003              	.LVL186:
 2004              	.LBB317:
 2005              	.LBI317:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2006              		.loc 1 190 6 is_stmt 1 view .LVU598
 2007              	.LBB318:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2008              		.loc 1 190 26 view .LVU599
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2009              		.loc 1 190 41 is_stmt 0 view .LVU600
 2010 01de AEF12003 		sub	r3, lr, #32
 2011              	.LBE318:
 2012              	.LBE317:
 395:../USER/ttbasic.c **** 				ptok++;
 2013              		.loc 1 395 29 view .LVU601
 2014 01e2 DBB2     		uxtb	r3, r3
 2015 01e4 5E2B     		cmp	r3, #94
 2016 01e6 5DD8     		bhi	.L164
 2017 01e8 E046     		mov	r8, ip
 395:../USER/ttbasic.c **** 				ptok++;
 2018              		.loc 1 395 11 view .LVU602
 2019 01ea 0020     		movs	r0, #0
 2020 01ec 02E0     		b	.L166
 2021              	.LVL187:
 2022              	.L221:
 395:../USER/ttbasic.c **** 				ptok++;
 2023              		.loc 1 395 29 discriminator 3 view .LVU603
 2024 01ee 5E2B     		cmp	r3, #94
 2025 01f0 09D8     		bhi	.L165
 395:../USER/ttbasic.c **** 				ptok++;
 2026              		.loc 1 395 51 view .LVU604
 2027 01f2 3046     		mov	r0, r6
 2028              	.LVL188:
 2029              	.L166:
 396:../USER/ttbasic.c **** 			if (len >= SIZE_IBUF - 1 - i) { // List area full
 2030              		.loc 1 396 5 is_stmt 1 discriminator 4 view .LVU605
 395:../USER/ttbasic.c **** 				ptok++;
 2031              		.loc 1 395 17 is_stmt 0 discriminator 4 view .LVU606
 2032 01f4 18F9015F 		ldrsb	r5, [r8, #1]!
 2033              	.LVL189:
 2034              	.LBB321:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2035              		.loc 1 190 6 is_stmt 1 discriminator 4 view .LVU607
 2036              	.LBB319:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2037              		.loc 1 190 26 discriminator 4 view .LVU608
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2038              		.loc 1 190 26 is_stmt 0 discriminator 4 view .LVU609
 2039              	.LBE319:
 2040              	.LBE321:
 395:../USER/ttbasic.c **** 				ptok++;
 2041              		.loc 1 395 51 discriminator 4 view .LVU610
 2042 01f8 441C     		adds	r4, r0, #1
 2043              	.LBB322:
 2044              	.LBB320:
 190:../USER/ttbasic.c **** char c_isspace(char c) { return(c == ' ' || (c <= 13 && c >= 9)); }
 2045              		.loc 1 190 41 discriminator 4 view .LVU611
 2046 01fa A5F12003 		sub	r3, r5, #32
 2047              	.LBE320:
 2048              	.LBE322:
 395:../USER/ttbasic.c **** 				ptok++;
 2049              		.loc 1 395 4 discriminator 4 view .LVU612
 2050 01fe BD42     		cmp	r5, r7
 395:../USER/ttbasic.c **** 				ptok++;
 2051              		.loc 1 395 29 discriminator 4 view .LVU613
 2052 0200 DBB2     		uxtb	r3, r3
 395:../USER/ttbasic.c **** 				ptok++;
 2053              		.loc 1 395 51 discriminator 4 view .LVU614
 2054 0202 E6B2     		uxtb	r6, r4
 2055              	.LVL190:
 395:../USER/ttbasic.c **** 				ptok++;
 2056              		.loc 1 395 4 discriminator 4 view .LVU615
 2057 0204 F3D1     		bne	.L221
 2058              	.L165:
 397:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2059              		.loc 1 397 4 is_stmt 1 view .LVU616
 397:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2060              		.loc 1 397 29 is_stmt 0 view .LVU617
 2061 0206 C6F14F03 		rsb	r3, r6, #79
 397:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2062              		.loc 1 397 7 view .LVU618
 2063 020a 9942     		cmp	r1, r3
 2064 020c 44DA     		bge	.L153
 401:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 2065              		.loc 1 401 4 is_stmt 1 view .LVU619
 401:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 2066              		.loc 1 401 12 is_stmt 0 view .LVU620
 2067 020e 4B1C     		adds	r3, r1, #1
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2068              		.loc 1 402 12 view .LVU621
 2069 0210 DBB2     		uxtb	r3, r3
 2070 0212 01F10209 		add	r9, r1, #2
 401:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 2071              		.loc 1 401 16 view .LVU622
 2072 0216 0AF801B0 		strb	fp, [r10, r1]
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2073              		.loc 1 402 4 is_stmt 1 view .LVU623
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2074              		.loc 1 402 12 is_stmt 0 view .LVU624
 2075 021a 5FFA89F9 		uxtb	r9, r9
 2076              	.LVL191:
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2077              		.loc 1 402 16 view .LVU625
 2078 021e 0AF80360 		strb	r6, [r10, r3]
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2079              		.loc 1 403 4 is_stmt 1 view .LVU626
 2080              	.LVL192:
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2081              		.loc 1 403 10 is_stmt 0 view .LVU627
 2082 0222 C6B1     		cbz	r6, .L187
 393:../USER/ttbasic.c **** 			ptok = s;
 2083              		.loc 1 393 10 view .LVU628
 2084 0224 6346     		mov	r3, ip
 2085 0226 861C     		adds	r6, r0, #2
 2086 0228 A9EB0C09 		sub	r9, r9, ip
 2087              	.LVL193:
 393:../USER/ttbasic.c **** 			ptok = s;
 2088              		.loc 1 393 10 view .LVU629
 2089 022c 1644     		add	r6, r6, r2
 2090              	.LVL194:
 2091              	.L168:
 393:../USER/ttbasic.c **** 			ptok = s;
 2092              		.loc 1 393 10 view .LVU630
 2093 022e 03EB0902 		add	r2, r3, r9
 404:../USER/ttbasic.c **** 			}
 2094              		.loc 1 404 17 view .LVU631
 2095 0232 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 2096              	.LVL195:
 404:../USER/ttbasic.c **** 			}
 2097              		.loc 1 404 17 view .LVU632
 2098 0236 D2B2     		uxtb	r2, r2
 2099              	.LVL196:
 404:../USER/ttbasic.c **** 			}
 2100              		.loc 1 404 5 is_stmt 1 view .LVU633
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2101              		.loc 1 403 10 is_stmt 0 view .LVU634
 2102 0238 9E42     		cmp	r6, r3
 404:../USER/ttbasic.c **** 			}
 2103              		.loc 1 404 17 view .LVU635
 2104 023a 0AF80250 		strb	r5, [r10, r2]
 2105              	.LVL197:
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2106              		.loc 1 403 10 view .LVU636
 2107 023e F6D1     		bne	.L168
 2108 0240 0CEB0003 		add	r3, ip, r0
 2109              	.LVL198:
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2110              		.loc 1 403 10 view .LVU637
 2111 0244 0331     		adds	r1, r1, #3
 2112 0246 0844     		add	r0, r0, r1
 2113 0248 93F901E0 		ldrsb	lr, [r3, #1]
 2114 024c 00F0FF09 		and	r9, r0, #255
 2115 0250 A444     		add	ip, ip, r4
 2116              	.LVL199:
 2117              	.L180:
 406:../USER/ttbasic.c **** 		}
 2118              		.loc 1 406 4 is_stmt 1 view .LVU638
 406:../USER/ttbasic.c **** 		}
 2119              		.loc 1 406 7 is_stmt 0 view .LVU639
 2120 0252 BE45     		cmp	lr, r7
 2121 0254 15D0     		beq	.L222
 2122              	.L187:
 2123 0256 7746     		mov	r7, lr
 2124 0258 DEE6     		b	.L139
 2125              	.LVL200:
 2126              	.L220:
 380:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2127              		.loc 1 380 4 is_stmt 1 view .LVU640
 380:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2128              		.loc 1 380 7 is_stmt 0 view .LVU641
 2129 025a 4C29     		cmp	r1, #76
 2130 025c 1CD8     		bhi	.L153
 384:../USER/ttbasic.c **** 			ibuf[len++] = I_NUM;
 2131              		.loc 1 384 4 is_stmt 1 view .LVU642
 2132              	.LVL201:
 385:../USER/ttbasic.c **** 			ibuf[len++] = value & 255;
 2133              		.loc 1 385 4 view .LVU643
 385:../USER/ttbasic.c **** 			ibuf[len++] = value & 255;
 2134              		.loc 1 385 16 is_stmt 0 view .LVU644
 2135 025e 4FF02906 		mov	r6, #41
 385:../USER/ttbasic.c **** 			ibuf[len++] = value & 255;
 2136              		.loc 1 385 12 view .LVU645
 2137 0262 4D1C     		adds	r5, r1, #1
 386:../USER/ttbasic.c **** 			ibuf[len++] = value >> 8;
 2138              		.loc 1 386 12 view .LVU646
 2139 0264 8C1C     		adds	r4, r1, #2
 385:../USER/ttbasic.c **** 			ibuf[len++] = value & 255;
 2140              		.loc 1 385 16 view .LVU647
 2141 0266 0AF80160 		strb	r6, [r10, r1]
 386:../USER/ttbasic.c **** 			ibuf[len++] = value >> 8;
 2142              		.loc 1 386 4 is_stmt 1 view .LVU648
 387:../USER/ttbasic.c **** 		}
 2143              		.loc 1 387 16 is_stmt 0 view .LVU649
 2144 026a 0012     		asrs	r0, r0, #8
 2145              	.LVL202:
 386:../USER/ttbasic.c **** 			ibuf[len++] = value >> 8;
 2146              		.loc 1 386 12 view .LVU650
 2147 026c EDB2     		uxtb	r5, r5
 387:../USER/ttbasic.c **** 		}
 2148              		.loc 1 387 12 view .LVU651
 2149 026e E4B2     		uxtb	r4, r4
 2150 0270 0331     		adds	r1, r1, #3
 386:../USER/ttbasic.c **** 			ibuf[len++] = value >> 8;
 2151              		.loc 1 386 16 view .LVU652
 2152 0272 0AF80530 		strb	r3, [r10, r5]
 387:../USER/ttbasic.c **** 		}
 2153              		.loc 1 387 4 is_stmt 1 view .LVU653
 372:../USER/ttbasic.c **** 				if (value > tmp) {
 2154              		.loc 1 372 29 is_stmt 0 view .LVU654
 2155 0276 9446     		mov	ip, r2
 2156              	.LVL203:
 387:../USER/ttbasic.c **** 		}
 2157              		.loc 1 387 12 view .LVU655
 2158 0278 5FFA81F9 		uxtb	r9, r1
 2159              	.LVL204:
 387:../USER/ttbasic.c **** 		}
 2160              		.loc 1 387 16 view .LVU656
 2161 027c 0AF80400 		strb	r0, [r10, r4]
 2162 0280 CAE6     		b	.L139
 2163              	.LVL205:
 2164              	.L222:
 406:../USER/ttbasic.c **** 		}
 2165              		.loc 1 406 17 is_stmt 1 discriminator 1 view .LVU657
 406:../USER/ttbasic.c **** 		}
 2166              		.loc 1 406 17 is_stmt 0 discriminator 1 view .LVU658
 2167 0282 9CF90170 		ldrsb	r7, [ip, #1]
 406:../USER/ttbasic.c **** 		}
 2168              		.loc 1 406 18 discriminator 1 view .LVU659
 2169 0286 0CF1010C 		add	ip, ip, #1
 2170              	.LVL206:
 406:../USER/ttbasic.c **** 		}
 2171              		.loc 1 406 18 discriminator 1 view .LVU660
 2172 028a C5E6     		b	.L139
 2173              	.LVL207:
 2174              	.L219:
 416:../USER/ttbasic.c **** 				err = ERR_SYNTAX; // Syntax error
 2175              		.loc 1 416 43 discriminator 2 view .LVU661
 2176 028c 14F8044C 		ldrb	r4, [r4, #-4]	@ zero_extendqisi2
 2177 0290 2A2C     		cmp	r4, #42
 2178 0292 7FF46DAF 		bne	.L171
 2179 0296 00E7     		b	.L170
 2180              	.LVL208:
 2181              	.L153:
 335:../USER/ttbasic.c **** 					return 0;
 2182              		.loc 1 335 6 is_stmt 1 view .LVU662
 335:../USER/ttbasic.c **** 					return 0;
 2183              		.loc 1 335 10 is_stmt 0 view .LVU663
 2184 0298 0422     		movs	r2, #4
 2185 029a 124B     		ldr	r3, .L223+8
 336:../USER/ttbasic.c **** 				}
 2186              		.loc 1 336 13 view .LVU664
 2187 029c 0020     		movs	r0, #0
 335:../USER/ttbasic.c **** 					return 0;
 2188              		.loc 1 335 10 view .LVU665
 2189 029e 1A70     		strb	r2, [r3]
 336:../USER/ttbasic.c **** 				}
 2190              		.loc 1 336 6 is_stmt 1 view .LVU666
 2191              		.loc 1 434 1 is_stmt 0 view .LVU667
 2192 02a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2193              	.LVL209:
 2194              	.L164:
 397:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2195              		.loc 1 397 4 is_stmt 1 view .LVU668
 397:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2196              		.loc 1 397 7 is_stmt 0 view .LVU669
 2197 02a4 4E29     		cmp	r1, #78
 2198 02a6 F7DC     		bgt	.L153
 401:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 2199              		.loc 1 401 4 is_stmt 1 view .LVU670
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2200              		.loc 1 402 16 is_stmt 0 view .LVU671
 2201 02a8 4FF00002 		mov	r2, #0
 2202              	.LVL210:
 401:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 2203              		.loc 1 401 12 view .LVU672
 2204 02ac 4B1C     		adds	r3, r1, #1
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2205              		.loc 1 402 12 view .LVU673
 2206 02ae DBB2     		uxtb	r3, r3
 2207 02b0 01F10209 		add	r9, r1, #2
 401:../USER/ttbasic.c **** 			ibuf[len++] = i; // Put length
 2208              		.loc 1 401 16 view .LVU674
 2209 02b4 0AF801B0 		strb	fp, [r10, r1]
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2210              		.loc 1 402 4 is_stmt 1 view .LVU675
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2211              		.loc 1 402 12 is_stmt 0 view .LVU676
 2212 02b8 5FFA89F9 		uxtb	r9, r9
 2213              	.LVL211:
 402:../USER/ttbasic.c **** 			while (i--) { // Put string
 2214              		.loc 1 402 16 view .LVU677
 2215 02bc 0AF80320 		strb	r2, [r10, r3]
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2216              		.loc 1 403 4 is_stmt 1 view .LVU678
 2217              	.LVL212:
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2218              		.loc 1 403 4 is_stmt 0 view .LVU679
 2219 02c0 C7E7     		b	.L180
 2220              	.LVL213:
 2221              	.L217:
 403:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2222              		.loc 1 403 4 view .LVU680
 2223 02c2 0948     		ldr	r0, .L223+12
 2224 02c4 0AE7     		b	.L154
 2225              	.LVL214:
 2226              	.L150:
 351:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2227              		.loc 1 351 4 is_stmt 1 view .LVU681
 351:../USER/ttbasic.c **** 				err = ERR_IBUFOF;
 2228              		.loc 1 351 7 is_stmt 0 view .LVU682
 2229 02c6 4D29     		cmp	r1, #77
 2230 02c8 E6D8     		bhi	.L153
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 2231              		.loc 1 355 4 is_stmt 1 view .LVU683
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 2232              		.loc 1 355 12 is_stmt 0 view .LVU684
 2233 02ca 09F10209 		add	r9, r9, #2
 2234 02ce 5FFA89F9 		uxtb	r9, r9
 2235              	.LVL215:
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 2236              		.loc 1 355 16 view .LVU685
 2237 02d2 0AF80140 		strb	r4, [r10, r1]
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2238              		.loc 1 356 4 is_stmt 1 view .LVU686
 2239              	.LVL216:
 356:../USER/ttbasic.c **** 				ibuf[len++] = *s++;
 2240              		.loc 1 356 4 is_stmt 0 view .LVU687
 2241 02d6 01E7     		b	.L154
 2242              	.LVL217:
 2243              	.L184:
 355:../USER/ttbasic.c **** 			while (i--) { // Copy strings
 2244              		.loc 1 355 12 view .LVU688
 2245 02d8 9946     		mov	r9, r3
 2246 02da FFE6     		b	.L154
 2247              	.L224:
 2248              		.align	2
 2249              	.L223:
 2250 02dc 00000000 		.word	lbuf
 2251 02e0 00000000 		.word	.LANCHOR0
 2252 02e4 00000000 		.word	err
 2253 02e8 00000000 		.word	ibuf
 2254              		.cfi_endproc
 2255              	.LFE18:
 2257              		.section	.text.getlineno,"ax",%progbits
 2258              		.align	1
 2259              		.p2align 2,,3
 2260              		.global	getlineno
 2261              		.syntax unified
 2262              		.thumb
 2263              		.thumb_func
 2264              		.fpu softvfp
 2266              	getlineno:
 2267              	.LVL218:
 2268              	.LFB19:
 435:../USER/ttbasic.c **** 
 436:../USER/ttbasic.c **** // Get line number by line pointer
 437:../USER/ttbasic.c **** short getlineno(unsigned char *lp) {
 2269              		.loc 1 437 36 is_stmt 1 view -0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273              		@ link register save eliminated.
 438:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 2274              		.loc 1 438 2 view .LVU690
 2275              		.loc 1 438 5 is_stmt 0 view .LVU691
 2276 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2277 0002 2BB1     		cbz	r3, .L227
 439:../USER/ttbasic.c **** 		return 32767;// max line bumber
 440:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 2278              		.loc 1 440 2 is_stmt 1 view .LVU692
 2279              		.loc 1 440 21 is_stmt 0 view .LVU693
 2280 0004 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2281              		.loc 1 440 9 view .LVU694
 2282 0006 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 2283              	.LVL219:
 2284              		.loc 1 440 19 view .LVU695
 2285 0008 40EA0320 		orr	r0, r0, r3, lsl #8
 2286 000c 00B2     		sxth	r0, r0
 2287 000e 7047     		bx	lr
 2288              	.LVL220:
 2289              	.L227:
 439:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2290              		.loc 1 439 10 view .LVU696
 2291 0010 47F6FF70 		movw	r0, #32767
 2292              	.LVL221:
 441:../USER/ttbasic.c **** }
 2293              		.loc 1 441 1 view .LVU697
 2294 0014 7047     		bx	lr
 2295              		.cfi_endproc
 2296              	.LFE19:
 2298 0016 00BF     		.section	.text.getlp,"ax",%progbits
 2299              		.align	1
 2300              		.p2align 2,,3
 2301              		.global	getlp
 2302              		.syntax unified
 2303              		.thumb
 2304              		.thumb_func
 2305              		.fpu softvfp
 2307              	getlp:
 2308              	.LVL222:
 2309              	.LFB20:
 442:../USER/ttbasic.c **** 
 443:../USER/ttbasic.c **** // Search line by line number
 444:../USER/ttbasic.c **** unsigned char* getlp(short lineno) {
 2310              		.loc 1 444 36 is_stmt 1 view -0
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 0
 2313              		@ frame_needed = 0, uses_anonymous_args = 0
 2314              		@ link register save eliminated.
 445:../USER/ttbasic.c **** 	unsigned char *lp;
 2315              		.loc 1 445 2 view .LVU699
 446:../USER/ttbasic.c **** 
 447:../USER/ttbasic.c **** 	for (lp = listbuf; *lp; lp += *lp)
 2316              		.loc 1 447 2 view .LVU700
 2317              		.loc 1 447 21 is_stmt 0 view .LVU701
 2318 0000 094B     		ldr	r3, .L240
 2319 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2320              		.loc 1 447 2 view .LVU702
 2321 0004 71B1     		cbz	r1, .L235
 444:../USER/ttbasic.c **** 	unsigned char *lp;
 2322              		.loc 1 444 36 view .LVU703
 2323 0006 10B4     		push	{r4}
 2324              		.cfi_def_cfa_offset 4
 2325              		.cfi_offset 4, -4
 2326 0008 02E0     		b	.L231
 2327              	.LVL223:
 2328              	.L239:
 448:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2329              		.loc 1 448 3 is_stmt 1 discriminator 2 view .LVU704
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2330              		.loc 1 447 29 is_stmt 0 discriminator 2 view .LVU705
 2331 000a 0B44     		add	r3, r3, r1
 2332              	.LVL224:
 2333              	.LBB323:
 2334              	.LBI323:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 2335              		.loc 1 437 7 is_stmt 1 discriminator 2 view .LVU706
 2336              	.LBB324:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2337              		.loc 1 438 2 discriminator 2 view .LVU707
 440:../USER/ttbasic.c **** }
 2338              		.loc 1 440 2 discriminator 2 view .LVU708
 440:../USER/ttbasic.c **** }
 2339              		.loc 1 440 2 is_stmt 0 discriminator 2 view .LVU709
 2340              	.LBE324:
 2341              	.LBE323:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2342              		.loc 1 447 21 discriminator 2 view .LVU710
 2343 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2344              		.loc 1 447 2 discriminator 2 view .LVU711
 2345 000e 31B1     		cbz	r1, .L228
 2346              	.LVL225:
 2347              	.L231:
 2348              	.LBB326:
 2349              	.LBB325:
 440:../USER/ttbasic.c **** }
 2350              		.loc 1 440 21 view .LVU712
 2351 0010 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2352              		.loc 1 440 9 view .LVU713
 2353 0012 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2354              		.loc 1 440 19 view .LVU714
 2355 0014 42EA0422 		orr	r2, r2, r4, lsl #8
 2356              	.LBE325:
 2357              	.LBE326:
 2358              		.loc 1 448 6 view .LVU715
 2359 0018 12B2     		sxth	r2, r2
 2360 001a 9042     		cmp	r0, r2
 2361 001c F5DC     		bgt	.L239
 2362              	.L228:
 449:../USER/ttbasic.c **** 			break;
 450:../USER/ttbasic.c **** 	return lp;
 451:../USER/ttbasic.c **** }
 2363              		.loc 1 451 1 view .LVU716
 2364 001e 1846     		mov	r0, r3
 2365              	.LVL226:
 2366              		.loc 1 451 1 view .LVU717
 2367 0020 10BC     		pop	{r4}
 2368              		.cfi_restore 4
 2369              		.cfi_def_cfa_offset 0
 2370 0022 7047     		bx	lr
 2371              	.LVL227:
 2372              	.L235:
 2373              		.loc 1 451 1 view .LVU718
 2374 0024 1846     		mov	r0, r3
 2375              	.LVL228:
 2376              		.loc 1 451 1 view .LVU719
 2377 0026 7047     		bx	lr
 2378              	.L241:
 2379              		.align	2
 2380              	.L240:
 2381 0028 00000000 		.word	listbuf
 2382              		.cfi_endproc
 2383              	.LFE20:
 2385              		.section	.text.getsize,"ax",%progbits
 2386              		.align	1
 2387              		.p2align 2,,3
 2388              		.global	getsize
 2389              		.syntax unified
 2390              		.thumb
 2391              		.thumb_func
 2392              		.fpu softvfp
 2394              	getsize:
 2395              	.LFB21:
 452:../USER/ttbasic.c **** 
 453:../USER/ttbasic.c **** // Return free memory size
 454:../USER/ttbasic.c **** short getsize() {
 2396              		.loc 1 454 17 is_stmt 1 view -0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 0, uses_anonymous_args = 0
 2400              		@ link register save eliminated.
 455:../USER/ttbasic.c **** 	unsigned char* lp;
 2401              		.loc 1 455 2 view .LVU721
 456:../USER/ttbasic.c **** 
 457:../USER/ttbasic.c **** 	for (lp = listbuf; *lp; lp += *lp);
 2402              		.loc 1 457 2 view .LVU722
 2403              	.LVL229:
 2404              		.loc 1 457 21 is_stmt 0 view .LVU723
 2405 0000 0648     		ldr	r0, .L247
 2406 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2407              		.loc 1 457 2 view .LVU724
 2408 0004 3BB1     		cbz	r3, .L245
 2409              	.LVL230:
 2410              	.L244:
 2411              		.loc 1 457 36 is_stmt 1 discriminator 3 view .LVU725
 2412              		.loc 1 457 29 is_stmt 0 discriminator 3 view .LVU726
 2413 0006 1844     		add	r0, r0, r3
 2414              	.LVL231:
 2415              		.loc 1 457 21 discriminator 3 view .LVU727
 2416 0008 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2417              		.loc 1 457 2 discriminator 3 view .LVU728
 2418 000a 002B     		cmp	r3, #0
 2419 000c FBD1     		bne	.L244
 2420 000e 044B     		ldr	r3, .L247+4
 2421 0010 181A     		subs	r0, r3, r0
 2422              	.LVL232:
 2423              		.loc 1 457 2 discriminator 3 view .LVU729
 2424 0012 00B2     		sxth	r0, r0
 2425 0014 7047     		bx	lr
 2426              	.LVL233:
 2427              	.L245:
 2428              		.loc 1 457 2 view .LVU730
 2429 0016 40F2FF70 		movw	r0, #2047
 458:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2430              		.loc 1 458 2 is_stmt 1 view .LVU731
 459:../USER/ttbasic.c **** }
 2431              		.loc 1 459 1 is_stmt 0 view .LVU732
 2432 001a 7047     		bx	lr
 2433              	.L248:
 2434              		.align	2
 2435              	.L247:
 2436 001c 00000000 		.word	listbuf
 2437 0020 FF070000 		.word	listbuf+2047
 2438              		.cfi_endproc
 2439              	.LFE21:
 2441              		.section	.text.inslist,"ax",%progbits
 2442              		.align	1
 2443              		.p2align 2,,3
 2444              		.global	inslist
 2445              		.syntax unified
 2446              		.thumb
 2447              		.thumb_func
 2448              		.fpu softvfp
 2450              	inslist:
 2451              	.LFB22:
 460:../USER/ttbasic.c **** 
 461:../USER/ttbasic.c **** // Insert i-code to the list
 462:../USER/ttbasic.c **** // Preconditions to do *ibuf = len
 463:../USER/ttbasic.c **** void inslist() {
 2452              		.loc 1 463 16 is_stmt 1 view -0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
 464:../USER/ttbasic.c **** 	unsigned char *insp;
 2456              		.loc 1 464 2 view .LVU734
 465:../USER/ttbasic.c **** 	unsigned char *p1, *p2;
 2457              		.loc 1 465 2 view .LVU735
 466:../USER/ttbasic.c **** 	short len;
 2458              		.loc 1 466 2 view .LVU736
 467:../USER/ttbasic.c **** 
 468:../USER/ttbasic.c **** 	if (getsize() < *ibuf) {
 2459              		.loc 1 468 2 view .LVU737
 2460              	.LBB327:
 2461              	.LBI327:
 454:../USER/ttbasic.c **** 	unsigned char* lp;
 2462              		.loc 1 454 7 view .LVU738
 2463              	.LBB328:
 455:../USER/ttbasic.c **** 
 2464              		.loc 1 455 2 view .LVU739
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2465              		.loc 1 457 2 view .LVU740
 2466              	.LVL234:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2467              		.loc 1 457 2 is_stmt 0 view .LVU741
 2468              	.LBE328:
 2469              	.LBE327:
 463:../USER/ttbasic.c **** 	unsigned char *insp;
 2470              		.loc 1 463 16 view .LVU742
 2471 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2472              		.cfi_def_cfa_offset 24
 2473              		.cfi_offset 4, -24
 2474              		.cfi_offset 5, -20
 2475              		.cfi_offset 6, -16
 2476              		.cfi_offset 7, -12
 2477              		.cfi_offset 8, -8
 2478              		.cfi_offset 14, -4
 2479              	.LBB330:
 2480              	.LBB329:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2481              		.loc 1 457 21 view .LVU743
 2482 0004 5D48     		ldr	r0, .L309
 2483 0006 5E4E     		ldr	r6, .L309+4
 2484 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 2485 000a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2486              		.loc 1 457 2 view .LVU744
 2487 000c 002C     		cmp	r4, #0
 2488 000e 00F0A780 		beq	.L250
 2489 0012 2246     		mov	r2, r4
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2490              		.loc 1 457 10 view .LVU745
 2491 0014 0346     		mov	r3, r0
 2492              	.LVL235:
 2493              	.L251:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2494              		.loc 1 457 36 is_stmt 1 view .LVU746
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2495              		.loc 1 457 29 is_stmt 0 view .LVU747
 2496 0016 1344     		add	r3, r3, r2
 2497              	.LVL236:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2498              		.loc 1 457 21 view .LVU748
 2499 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 2500              		.loc 1 457 2 view .LVU749
 2501 001a 002A     		cmp	r2, #0
 2502 001c FBD1     		bne	.L251
 458:../USER/ttbasic.c **** }
 2503              		.loc 1 458 2 is_stmt 1 view .LVU750
 2504              	.LVL237:
 458:../USER/ttbasic.c **** }
 2505              		.loc 1 458 29 is_stmt 0 view .LVU751
 2506 001e 594A     		ldr	r2, .L309+8
 458:../USER/ttbasic.c **** }
 2507              		.loc 1 458 34 view .LVU752
 2508 0020 D31A     		subs	r3, r2, r3
 2509              	.LBE329:
 2510              	.LBE330:
 2511              		.loc 1 468 6 view .LVU753
 2512 0022 1BB2     		sxth	r3, r3
 2513              		.loc 1 468 5 view .LVU754
 2514 0024 8B42     		cmp	r3, r1
 2515 0026 44DB     		blt	.L305
 469:../USER/ttbasic.c **** 		err = ERR_LBUFOF; // List buffer overflow
 470:../USER/ttbasic.c **** 		return;
 471:../USER/ttbasic.c **** 	}
 472:../USER/ttbasic.c **** 
 473:../USER/ttbasic.c **** 	insp = getlp(getlineno(ibuf));
 2516              		.loc 1 473 2 is_stmt 1 view .LVU755
 2517              	.LVL238:
 2518              	.LBB331:
 2519              	.LBI331:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 2520              		.loc 1 437 7 view .LVU756
 2521              	.LBB332:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2522              		.loc 1 438 2 view .LVU757
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2523              		.loc 1 438 5 is_stmt 0 view .LVU758
 2524 0028 0029     		cmp	r1, #0
 2525 002a 00F09680 		beq	.L306
 440:../USER/ttbasic.c **** }
 2526              		.loc 1 440 2 is_stmt 1 view .LVU759
 440:../USER/ttbasic.c **** }
 2527              		.loc 1 440 21 is_stmt 0 view .LVU760
 2528 002e B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2529              		.loc 1 440 9 view .LVU761
 2530 0030 7578     		ldrb	r5, [r6, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2531              		.loc 1 440 19 view .LVU762
 2532 0032 45EA0325 		orr	r5, r5, r3, lsl #8
 2533 0036 2DB2     		sxth	r5, r5
 2534              	.LVL239:
 440:../USER/ttbasic.c **** }
 2535              		.loc 1 440 19 view .LVU763
 2536              	.LBE332:
 2537              	.LBE331:
 2538              	.LBB336:
 2539              	.LBI336:
 444:../USER/ttbasic.c **** 	unsigned char *lp;
 2540              		.loc 1 444 16 is_stmt 1 view .LVU764
 2541              	.L277:
 2542              	.LBB337:
 448:../USER/ttbasic.c **** 			break;
 2543              		.loc 1 448 3 view .LVU765
 2544              	.LBB338:
 2545              	.LBI338:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 2546              		.loc 1 437 7 view .LVU766
 2547              	.LBB339:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2548              		.loc 1 438 2 view .LVU767
 440:../USER/ttbasic.c **** }
 2549              		.loc 1 440 2 view .LVU768
 440:../USER/ttbasic.c **** }
 2550              		.loc 1 440 21 is_stmt 0 view .LVU769
 2551 0038 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2552              		.loc 1 440 9 view .LVU770
 2553 003a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2554              	.LBE339:
 2555              	.LBE338:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2556              		.loc 1 447 10 view .LVU771
 2557 003c 4F48     		ldr	r0, .L309
 2558              	.LBB343:
 2559              	.LBB340:
 440:../USER/ttbasic.c **** }
 2560              		.loc 1 440 19 view .LVU772
 2561 003e 43EA0223 		orr	r3, r3, r2, lsl #8
 2562 0042 1BB2     		sxth	r3, r3
 2563              	.LVL240:
 440:../USER/ttbasic.c **** }
 2564              		.loc 1 440 19 view .LVU773
 2565              	.LBE340:
 2566              	.LBE343:
 448:../USER/ttbasic.c **** 			break;
 2567              		.loc 1 448 6 view .LVU774
 2568 0044 AB42     		cmp	r3, r5
 2569 0046 07DB     		blt	.L255
 2570 0048 0CE0     		b	.L276
 2571              	.LVL241:
 2572              	.L256:
 2573              	.LBB344:
 2574              	.LBB341:
 440:../USER/ttbasic.c **** }
 2575              		.loc 1 440 21 view .LVU775
 2576 004a 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2577              		.loc 1 440 9 view .LVU776
 2578 004c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2579              		.loc 1 440 19 view .LVU777
 2580 004e 43EA0223 		orr	r3, r3, r2, lsl #8
 2581 0052 1BB2     		sxth	r3, r3
 2582              	.LVL242:
 440:../USER/ttbasic.c **** }
 2583              		.loc 1 440 19 view .LVU778
 2584              	.LBE341:
 2585              	.LBE344:
 448:../USER/ttbasic.c **** 			break;
 2586              		.loc 1 448 6 view .LVU779
 2587 0054 AB42     		cmp	r3, r5
 2588 0056 05DA     		bge	.L276
 2589              	.LVL243:
 2590              	.L255:
 448:../USER/ttbasic.c **** 			break;
 2591              		.loc 1 448 3 is_stmt 1 view .LVU780
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2592              		.loc 1 447 29 is_stmt 0 view .LVU781
 2593 0058 2044     		add	r0, r0, r4
 2594              	.LVL244:
 2595              	.LBB345:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 2596              		.loc 1 437 7 is_stmt 1 view .LVU782
 2597              	.LBB342:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2598              		.loc 1 438 2 view .LVU783
 440:../USER/ttbasic.c **** }
 2599              		.loc 1 440 2 view .LVU784
 440:../USER/ttbasic.c **** }
 2600              		.loc 1 440 2 is_stmt 0 view .LVU785
 2601              	.LBE342:
 2602              	.LBE345:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2603              		.loc 1 447 21 view .LVU786
 2604 005a 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2605              		.loc 1 447 2 view .LVU787
 2606 005c 002C     		cmp	r4, #0
 2607 005e F4D1     		bne	.L256
 2608              	.LBE337:
 2609              	.LBE336:
 2610              	.LBB347:
 2611              	.LBB348:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 2612              		.loc 1 439 10 view .LVU788
 2613 0060 47F6FF73 		movw	r3, #32767
 2614              	.LVL245:
 2615              	.L276:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 2616              		.loc 1 439 10 view .LVU789
 2617              	.LBE348:
 2618              	.LBE347:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2619              		.loc 1 438 2 is_stmt 1 view .LVU790
 474:../USER/ttbasic.c **** 
 475:../USER/ttbasic.c **** 	if (getlineno(insp) == getlineno(ibuf)) {// line number agree
 2620              		.loc 1 475 5 is_stmt 0 view .LVU791
 2621 0064 AB42     		cmp	r3, r5
 2622 0066 29D0     		beq	.L307
 2623              	.L257:
 476:../USER/ttbasic.c **** 		p1 = insp;
 477:../USER/ttbasic.c **** 		p2 = p1 + *p1;
 478:../USER/ttbasic.c **** 		while ((len = *p2) != 0) {
 479:../USER/ttbasic.c **** 			while (len--)
 480:../USER/ttbasic.c **** 				*p1++ = *p2++;
 481:../USER/ttbasic.c **** 		}
 482:../USER/ttbasic.c **** 		*p1 = 0;
 483:../USER/ttbasic.c **** 	}
 484:../USER/ttbasic.c **** 
 485:../USER/ttbasic.c **** 	// Case line number only
 486:../USER/ttbasic.c **** 	if (*ibuf == 4)
 2624              		.loc 1 486 2 is_stmt 1 view .LVU792
 2625              		.loc 1 486 5 is_stmt 0 view .LVU793
 2626 0068 0429     		cmp	r1, #4
 2627 006a 25D0     		beq	.L249
 2628              	.LVL246:
 487:../USER/ttbasic.c **** 		return;
 488:../USER/ttbasic.c **** 
 489:../USER/ttbasic.c **** 	// Make space
 490:../USER/ttbasic.c **** 	for (p1 = insp; *p1; p1 += *p1);
 2629              		.loc 1 490 18 view .LVU794
 2630 006c 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 2631              		.loc 1 490 2 view .LVU795
 2632 006e 002A     		cmp	r2, #0
 2633 0070 79D0     		beq	.L269
 2634 0072 0346     		mov	r3, r0
 2635              	.LVL247:
 2636              	.L270:
 2637              		.loc 1 490 33 is_stmt 1 discriminator 3 view .LVU796
 2638              		.loc 1 490 26 is_stmt 0 discriminator 3 view .LVU797
 2639 0074 1344     		add	r3, r3, r2
 2640              	.LVL248:
 2641              		.loc 1 490 18 discriminator 3 view .LVU798
 2642 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2643              		.loc 1 490 2 discriminator 3 view .LVU799
 2644 0078 002A     		cmp	r2, #0
 2645 007a FBD1     		bne	.L270
 491:../USER/ttbasic.c **** 	len = p1 - insp + 1;
 2646              		.loc 1 491 2 is_stmt 1 view .LVU800
 492:../USER/ttbasic.c **** 	p2 = p1 + *ibuf;
 493:../USER/ttbasic.c **** 	while (len--)
 2647              		.loc 1 493 8 is_stmt 0 view .LVU801
 2648 007c 4FF6FF75 		movw	r5, #65535
 491:../USER/ttbasic.c **** 	len = p1 - insp + 1;
 2649              		.loc 1 491 11 view .LVU802
 2650 0080 1A1A     		subs	r2, r3, r0
 2651              	.LVL249:
 492:../USER/ttbasic.c **** 	p2 = p1 + *ibuf;
 2652              		.loc 1 492 2 is_stmt 1 view .LVU803
 2653              		.loc 1 493 8 is_stmt 0 view .LVU804
 2654 0082 96B2     		uxth	r6, r2
 2655 0084 AE42     		cmp	r6, r5
 2656              		.loc 1 493 12 view .LVU805
 2657 0086 12B2     		sxth	r2, r2
 492:../USER/ttbasic.c **** 	p2 = p1 + *ibuf;
 2658              		.loc 1 492 5 view .LVU806
 2659 0088 03EB0104 		add	r4, r3, r1
 2660              	.LVL250:
 2661              		.loc 1 493 2 is_stmt 1 view .LVU807
 2662              		.loc 1 493 8 is_stmt 0 view .LVU808
 2663 008c 08D0     		beq	.L275
 2664              	.LVL251:
 2665              	.L271:
 2666              		.loc 1 493 8 view .LVU809
 2667 008e 92B2     		uxth	r2, r2
 2668 0090 A21A     		subs	r2, r4, r2
 2669 0092 0134     		adds	r4, r4, #1
 2670              	.LVL252:
 2671              	.L274:
 494:../USER/ttbasic.c **** 		*p2-- = *p1--;
 2672              		.loc 1 494 3 is_stmt 1 view .LVU810
 2673              		.loc 1 494 11 is_stmt 0 view .LVU811
 2674 0094 13F80159 		ldrb	r5, [r3], #-1	@ zero_extendqisi2
 2675              	.LVL253:
 2676              		.loc 1 494 9 view .LVU812
 2677 0098 04F8015D 		strb	r5, [r4, #-1]!
 2678              	.LVL254:
 493:../USER/ttbasic.c **** 		*p2-- = *p1--;
 2679              		.loc 1 493 8 view .LVU813
 2680 009c A242     		cmp	r2, r4
 2681 009e F9D1     		bne	.L274
 2682              	.L275:
 495:../USER/ttbasic.c **** 
 496:../USER/ttbasic.c **** 	// Insert
 497:../USER/ttbasic.c **** 	len = *ibuf;
 2683              		.loc 1 497 2 is_stmt 1 view .LVU814
 2684              	.LVL255:
 498:../USER/ttbasic.c **** 	p1 = insp;
 2685              		.loc 1 498 2 view .LVU815
 499:../USER/ttbasic.c **** 	p2 = ibuf;
 2686              		.loc 1 499 2 view .LVU816
 500:../USER/ttbasic.c **** 	while (len--)
 2687              		.loc 1 500 2 view .LVU817
 2688              		.loc 1 500 8 is_stmt 0 view .LVU818
 2689 00a0 51B1     		cbz	r1, .L249
 501:../USER/ttbasic.c **** 		*p1++ = *p2++;
 502:../USER/ttbasic.c **** }
 2690              		.loc 1 502 1 view .LVU819
 2691 00a2 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2692              		.cfi_remember_state
 2693              		.cfi_restore 14
 2694              		.cfi_restore 8
 2695              		.cfi_restore 7
 2696              		.cfi_restore 6
 2697              		.cfi_restore 5
 2698              		.cfi_restore 4
 2699              		.cfi_def_cfa_offset 0
 501:../USER/ttbasic.c **** 		*p1++ = *p2++;
 2700              		.loc 1 501 9 view .LVU820
 2701 00a6 4A1E     		subs	r2, r1, #1
 2702 00a8 92B2     		uxth	r2, r2
 2703 00aa 0132     		adds	r2, r2, #1
 2704 00ac 3449     		ldr	r1, .L309+4
 2705              	.LVL256:
 501:../USER/ttbasic.c **** 		*p1++ = *p2++;
 2706              		.loc 1 501 9 view .LVU821
 2707 00ae FFF7FEBF 		b	memcpy
 2708              	.LVL257:
 2709              	.L305:
 2710              		.cfi_restore_state
 469:../USER/ttbasic.c **** 		return;
 2711              		.loc 1 469 3 is_stmt 1 view .LVU822
 469:../USER/ttbasic.c **** 		return;
 2712              		.loc 1 469 7 is_stmt 0 view .LVU823
 2713 00b2 0522     		movs	r2, #5
 2714 00b4 344B     		ldr	r3, .L309+12
 2715 00b6 1A70     		strb	r2, [r3]
 470:../USER/ttbasic.c **** 	}
 2716              		.loc 1 470 3 is_stmt 1 view .LVU824
 2717              	.L249:
 2718              		.loc 1 502 1 is_stmt 0 view .LVU825
 2719 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2720              	.L307:
 2721 00bc 035D     		ldrb	r3, [r0, r4]	@ zero_extendqisi2
 478:../USER/ttbasic.c **** 			while (len--)
 2722              		.loc 1 478 9 view .LVU826
 2723 00be 0746     		mov	r7, r0
 2724 00c0 0444     		add	r4, r4, r0
 476:../USER/ttbasic.c **** 		p2 = p1 + *p1;
 2725              		.loc 1 476 3 is_stmt 1 view .LVU827
 2726              	.LVL258:
 477:../USER/ttbasic.c **** 		while ((len = *p2) != 0) {
 2727              		.loc 1 477 3 view .LVU828
 478:../USER/ttbasic.c **** 			while (len--)
 2728              		.loc 1 478 3 view .LVU829
 478:../USER/ttbasic.c **** 			while (len--)
 2729              		.loc 1 478 9 is_stmt 0 view .LVU830
 2730 00c2 002B     		cmp	r3, #0
 2731 00c4 3BD0     		beq	.L259
 2732              	.LVL259:
 2733              	.L258:
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2734              		.loc 1 479 14 view .LVU831
 2735 00c6 1FFA83FC 		uxth	ip, r3
 2736 00ca 221D     		adds	r2, r4, #4
 2737 00cc 3B1D     		adds	r3, r7, #4
 2738 00ce 9C42     		cmp	r4, r3
 2739 00d0 38BF     		it	cc
 2740 00d2 9742     		cmpcc	r7, r2
 2741 00d4 0CF1FF35 		add	r5, ip, #-1
 2742 00d8 ADB2     		uxth	r5, r5
 2743 00da 0FFA85F8 		sxth	r8, r5
 2744              	.LVL260:
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2745              		.loc 1 479 14 view .LVU832
 2746 00de 31D3     		bcc	.L267
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2747              		.loc 1 479 14 view .LVU833
 2748 00e0 072D     		cmp	r5, #7
 2749 00e2 2FD9     		bls	.L267
 2750 00e4 3B46     		mov	r3, r7
 2751 00e6 2246     		mov	r2, r4
 2752 00e8 4FEA9C0E 		lsr	lr, ip, #2
 2753 00ec 07EB8E0E 		add	lr, r7, lr, lsl #2
 2754              	.LVL261:
 2755              	.L263:
 480:../USER/ttbasic.c **** 		}
 2756              		.loc 1 480 5 is_stmt 1 view .LVU834
 480:../USER/ttbasic.c **** 		}
 2757              		.loc 1 480 13 is_stmt 0 view .LVU835
 2758 00f0 52F8046B 		ldr	r6, [r2], #4	@ unaligned
 480:../USER/ttbasic.c **** 		}
 2759              		.loc 1 480 11 view .LVU836
 2760 00f4 43F8046B 		str	r6, [r3], #4	@ unaligned
 480:../USER/ttbasic.c **** 		}
 2761              		.loc 1 480 11 view .LVU837
 2762 00f8 9E45     		cmp	lr, r3
 2763 00fa F9D1     		bne	.L263
 2764 00fc 2CF00303 		bic	r3, ip, #3
 2765 0100 9BB2     		uxth	r3, r3
 2766 0102 A8EB0308 		sub	r8, r8, r3
 2767 0106 9C45     		cmp	ip, r3
 2768 0108 0FFA88F2 		sxth	r2, r8
 2769 010c 07EB0306 		add	r6, r7, r3
 2770 0110 04EB030E 		add	lr, r4, r3
 2771 0114 0CD0     		beq	.L262
 2772              	.LVL262:
 480:../USER/ttbasic.c **** 		}
 2773              		.loc 1 480 5 is_stmt 1 view .LVU838
 480:../USER/ttbasic.c **** 		}
 2774              		.loc 1 480 13 is_stmt 0 view .LVU839
 2775 0116 14F803C0 		ldrb	ip, [r4, r3]	@ zero_extendqisi2
 480:../USER/ttbasic.c **** 		}
 2776              		.loc 1 480 11 view .LVU840
 2777 011a 07F803C0 		strb	ip, [r7, r3]
 2778              	.LVL263:
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2779              		.loc 1 479 10 view .LVU841
 2780 011e 3AB1     		cbz	r2, .L262
 480:../USER/ttbasic.c **** 		}
 2781              		.loc 1 480 5 is_stmt 1 view .LVU842
 2782              	.LVL264:
 480:../USER/ttbasic.c **** 		}
 2783              		.loc 1 480 13 is_stmt 0 view .LVU843
 2784 0120 9EF80130 		ldrb	r3, [lr, #1]	@ zero_extendqisi2
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2785              		.loc 1 479 10 view .LVU844
 2786 0124 012A     		cmp	r2, #1
 480:../USER/ttbasic.c **** 		}
 2787              		.loc 1 480 11 view .LVU845
 2788 0126 7370     		strb	r3, [r6, #1]
 2789              	.LVL265:
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2790              		.loc 1 479 10 view .LVU846
 2791 0128 02D0     		beq	.L262
 480:../USER/ttbasic.c **** 		}
 2792              		.loc 1 480 5 is_stmt 1 view .LVU847
 2793              	.LVL266:
 480:../USER/ttbasic.c **** 		}
 2794              		.loc 1 480 13 is_stmt 0 view .LVU848
 2795 012a 9EF80230 		ldrb	r3, [lr, #2]	@ zero_extendqisi2
 480:../USER/ttbasic.c **** 		}
 2796              		.loc 1 480 11 view .LVU849
 2797 012e B370     		strb	r3, [r6, #2]
 2798              	.LVL267:
 2799              	.L262:
 480:../USER/ttbasic.c **** 		}
 2800              		.loc 1 480 11 view .LVU850
 2801 0130 6319     		adds	r3, r4, r5
 2802 0132 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2803 0134 0135     		adds	r5, r5, #1
 2804 0136 2C44     		add	r4, r4, r5
 2805              	.LVL268:
 480:../USER/ttbasic.c **** 		}
 2806              		.loc 1 480 11 view .LVU851
 2807 0138 2F44     		add	r7, r7, r5
 2808              	.LVL269:
 478:../USER/ttbasic.c **** 			while (len--)
 2809              		.loc 1 478 9 view .LVU852
 2810 013a 002B     		cmp	r3, #0
 2811 013c C3D1     		bne	.L258
 2812              	.LVL270:
 2813              	.L259:
 482:../USER/ttbasic.c **** 	}
 2814              		.loc 1 482 3 is_stmt 1 view .LVU853
 482:../USER/ttbasic.c **** 	}
 2815              		.loc 1 482 7 is_stmt 0 view .LVU854
 2816 013e 0023     		movs	r3, #0
 2817 0140 3B70     		strb	r3, [r7]
 2818 0142 91E7     		b	.L257
 2819              	.LVL271:
 2820              	.L267:
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2821              		.loc 1 479 14 view .LVU855
 2822 0144 2246     		mov	r2, r4
 2823 0146 7B1E     		subs	r3, r7, #1
 2824 0148 07EB050C 		add	ip, r7, r5
 2825              	.LVL272:
 2826              	.L261:
 480:../USER/ttbasic.c **** 		}
 2827              		.loc 1 480 5 is_stmt 1 view .LVU856
 480:../USER/ttbasic.c **** 		}
 2828              		.loc 1 480 13 is_stmt 0 view .LVU857
 2829 014c 12F8016B 		ldrb	r6, [r2], #1	@ zero_extendqisi2
 2830              	.LVL273:
 480:../USER/ttbasic.c **** 		}
 2831              		.loc 1 480 11 view .LVU858
 2832 0150 03F8016F 		strb	r6, [r3, #1]!
 2833              	.LVL274:
 479:../USER/ttbasic.c **** 				*p1++ = *p2++;
 2834              		.loc 1 479 10 view .LVU859
 2835 0154 9C45     		cmp	ip, r3
 2836 0156 F9D1     		bne	.L261
 2837 0158 EAE7     		b	.L262
 2838              	.LVL275:
 2839              	.L306:
 2840              	.LBB350:
 2841              	.LBB333:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 2842              		.loc 1 439 10 view .LVU860
 2843 015a 47F6FF75 		movw	r5, #32767
 2844 015e 6BE7     		b	.L277
 2845              	.LVL276:
 2846              	.L250:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 2847              		.loc 1 439 10 view .LVU861
 2848              	.LBE333:
 2849              	.LBE350:
 473:../USER/ttbasic.c **** 
 2850              		.loc 1 473 2 is_stmt 1 view .LVU862
 2851              	.LBB351:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 2852              		.loc 1 437 7 view .LVU863
 2853              	.LBB334:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2854              		.loc 1 438 2 view .LVU864
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 2855              		.loc 1 438 5 is_stmt 0 view .LVU865
 2856 0160 21B9     		cbnz	r1, .L308
 2857              	.LBE334:
 2858              	.LBE351:
 2859              	.LBB352:
 2860              	.LBB346:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2861              		.loc 1 447 10 view .LVU866
 2862 0162 0746     		mov	r7, r0
 2863 0164 EBE7     		b	.L259
 2864              	.LVL277:
 2865              	.L269:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 2866              		.loc 1 447 10 view .LVU867
 2867              	.LBE346:
 2868              	.LBE352:
 491:../USER/ttbasic.c **** 	p2 = p1 + *ibuf;
 2869              		.loc 1 491 2 is_stmt 1 view .LVU868
 492:../USER/ttbasic.c **** 	while (len--)
 2870              		.loc 1 492 2 view .LVU869
 492:../USER/ttbasic.c **** 	while (len--)
 2871              		.loc 1 492 5 is_stmt 0 view .LVU870
 2872 0166 4418     		adds	r4, r0, r1
 2873              	.LVL278:
 493:../USER/ttbasic.c **** 		*p2-- = *p1--;
 2874              		.loc 1 493 2 is_stmt 1 view .LVU871
 492:../USER/ttbasic.c **** 	while (len--)
 2875              		.loc 1 492 5 is_stmt 0 view .LVU872
 2876 0168 0346     		mov	r3, r0
 2877 016a 90E7     		b	.L271
 2878              	.LVL279:
 2879              	.L308:
 2880              	.LBB353:
 2881              	.LBB335:
 440:../USER/ttbasic.c **** }
 2882              		.loc 1 440 2 is_stmt 1 view .LVU873
 440:../USER/ttbasic.c **** }
 2883              		.loc 1 440 21 is_stmt 0 view .LVU874
 2884 016c B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2885              		.loc 1 440 9 view .LVU875
 2886 016e 7578     		ldrb	r5, [r6, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 2887              		.loc 1 440 19 view .LVU876
 2888 0170 45EA0325 		orr	r5, r5, r3, lsl #8
 2889 0174 2DB2     		sxth	r5, r5
 2890              	.LVL280:
 440:../USER/ttbasic.c **** }
 2891              		.loc 1 440 19 view .LVU877
 2892              	.LBE335:
 2893              	.LBE353:
 2894              	.LBB354:
 444:../USER/ttbasic.c **** 	unsigned char *lp;
 2895              		.loc 1 444 16 is_stmt 1 view .LVU878
 444:../USER/ttbasic.c **** 	unsigned char *lp;
 2896              		.loc 1 444 16 is_stmt 0 view .LVU879
 2897              	.LBE354:
 2898              	.LBB355:
 2899              	.LBB349:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 2900              		.loc 1 439 10 view .LVU880
 2901 0176 47F6FF73 		movw	r3, #32767
 2902 017a 73E7     		b	.L276
 2903              	.L310:
 2904              		.align	2
 2905              	.L309:
 2906 017c 00000000 		.word	listbuf
 2907 0180 00000000 		.word	ibuf
 2908 0184 FF070000 		.word	listbuf+2047
 2909 0188 00000000 		.word	err
 2910              	.LBE349:
 2911              	.LBE355:
 2912              		.cfi_endproc
 2913              	.LFE22:
 2915              		.section	.text.putlist,"ax",%progbits
 2916              		.align	1
 2917              		.p2align 2,,3
 2918              		.global	putlist
 2919              		.syntax unified
 2920              		.thumb
 2921              		.thumb_func
 2922              		.fpu softvfp
 2924              	putlist:
 2925              	.LVL281:
 2926              	.LFB23:
 503:../USER/ttbasic.c **** 
 504:../USER/ttbasic.c **** //Listing 1 line of i-code
 505:../USER/ttbasic.c **** void putlist(unsigned char* ip) {
 2927              		.loc 1 505 33 is_stmt 1 view -0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 506:../USER/ttbasic.c **** 	unsigned char i;
 2931              		.loc 1 506 2 view .LVU882
 507:../USER/ttbasic.c **** 
 508:../USER/ttbasic.c **** 	while (*ip != I_EOL) {
 2932              		.loc 1 508 2 view .LVU883
 2933 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2934              		.loc 1 508 8 is_stmt 0 view .LVU884
 2935 0002 2C2B     		cmp	r3, #44
 2936 0004 00F0E680 		beq	.L359
 505:../USER/ttbasic.c **** 	unsigned char i;
 2937              		.loc 1 505 33 view .LVU885
 2938 0008 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2939              		.cfi_def_cfa_offset 32
 2940              		.cfi_offset 4, -32
 2941              		.cfi_offset 5, -28
 2942              		.cfi_offset 6, -24
 2943              		.cfi_offset 7, -20
 2944              		.cfi_offset 8, -16
 2945              		.cfi_offset 9, -12
 2946              		.cfi_offset 10, -8
 2947              		.cfi_offset 14, -4
 2948 000c 0746     		mov	r7, r0
 2949              	.LBB385:
 2950              	.LBB386:
 2951              	.LBB387:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 2952              		.loc 1 35 44 view .LVU886
 2953 000e 724D     		ldr	r5, .L367
 2954              	.LBE387:
 2955              	.LBE386:
 2956              	.LBE385:
 509:../USER/ttbasic.c **** 		// Case keyword
 510:../USER/ttbasic.c **** 		if (*ip < SIZE_KWTBL) {
 511:../USER/ttbasic.c **** 			c_puts(kwtbl[*ip]);
 2957              		.loc 1 511 4 view .LVU887
 2958 0010 724E     		ldr	r6, .L367+4
 2959              	.LVL282:
 2960              	.L334:
 510:../USER/ttbasic.c **** 			c_puts(kwtbl[*ip]);
 2961              		.loc 1 510 3 is_stmt 1 view .LVU888
 510:../USER/ttbasic.c **** 			c_puts(kwtbl[*ip]);
 2962              		.loc 1 510 6 is_stmt 0 view .LVU889
 2963 0012 282B     		cmp	r3, #40
 2964 0014 6BD9     		bls	.L362
 512:../USER/ttbasic.c **** 			if (!nospacea(*ip))
 513:../USER/ttbasic.c **** 				c_putch(' ');
 514:../USER/ttbasic.c **** 			if (*ip == I_REM) {
 515:../USER/ttbasic.c **** 				ip++;
 516:../USER/ttbasic.c **** 				i = *ip++;
 517:../USER/ttbasic.c **** 				while (i--) {
 518:../USER/ttbasic.c **** 					c_putch(*ip++);
 519:../USER/ttbasic.c **** 				}
 520:../USER/ttbasic.c **** 				return;
 521:../USER/ttbasic.c **** 			}
 522:../USER/ttbasic.c **** 			ip++;
 523:../USER/ttbasic.c **** 		}
 524:../USER/ttbasic.c **** 		else
 525:../USER/ttbasic.c **** 
 526:../USER/ttbasic.c **** 			// Case numeric
 527:../USER/ttbasic.c **** 			if (*ip == I_NUM) {
 2965              		.loc 1 527 4 is_stmt 1 view .LVU890
 2966              		.loc 1 527 7 is_stmt 0 view .LVU891
 2967 0016 292B     		cmp	r3, #41
 2968 0018 00F09980 		beq	.L363
 528:../USER/ttbasic.c **** 				ip++;
 529:../USER/ttbasic.c **** 				putnum(*ip | *(ip + 1) << 8, 0);
 530:../USER/ttbasic.c **** 				ip += 2;
 531:../USER/ttbasic.c **** 				if (!nospaceb(*ip)) c_putch(' ');
 532:../USER/ttbasic.c **** 			}
 533:../USER/ttbasic.c **** 			else
 534:../USER/ttbasic.c **** 
 535:../USER/ttbasic.c **** 				// Case variable
 536:../USER/ttbasic.c **** 				if (*ip == I_VAR) {
 2969              		.loc 1 536 5 is_stmt 1 view .LVU892
 2970              		.loc 1 536 8 is_stmt 0 view .LVU893
 2971 001c 2A2B     		cmp	r3, #42
 2972 001e 4BD0     		beq	.L364
 537:../USER/ttbasic.c **** 					ip++;
 538:../USER/ttbasic.c **** 					c_putch(*ip++ + 'A');
 539:../USER/ttbasic.c **** 					if (!nospaceb(*ip)) c_putch(' ');
 540:../USER/ttbasic.c **** 				}
 541:../USER/ttbasic.c **** 				else
 542:../USER/ttbasic.c **** 
 543:../USER/ttbasic.c **** 					// Case string
 544:../USER/ttbasic.c **** 					if (*ip == I_STR) {
 2973              		.loc 1 544 6 is_stmt 1 view .LVU894
 2974              		.loc 1 544 9 is_stmt 0 view .LVU895
 2975 0020 2B2B     		cmp	r3, #43
 2976 0022 40F0BA80 		bne	.L328
 2977              	.LBB396:
 545:../USER/ttbasic.c **** 						char c;
 2978              		.loc 1 545 7 is_stmt 1 view .LVU896
 546:../USER/ttbasic.c **** 
 547:../USER/ttbasic.c **** 						c = '\"';
 2979              		.loc 1 547 7 view .LVU897
 2980              	.LVL283:
 548:../USER/ttbasic.c **** 						ip++;
 2981              		.loc 1 548 7 view .LVU898
 549:../USER/ttbasic.c **** 						for (i = *ip; i; i--)
 2982              		.loc 1 549 7 view .LVU899
 2983              		.loc 1 549 14 is_stmt 0 view .LVU900
 2984 0026 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2985              	.LVL284:
 2986              		.loc 1 549 7 view .LVU901
 2987 0028 002B     		cmp	r3, #0
 2988 002a 00F0AC80 		beq	.L337
 550:../USER/ttbasic.c **** 							if (*(ip + i) == '\"') {
 2989              		.loc 1 550 8 is_stmt 1 view .LVU902
 2990              		.loc 1 550 12 is_stmt 0 view .LVU903
 2991 002e FA18     		adds	r2, r7, r3
 2992              		.loc 1 550 11 view .LVU904
 2993 0030 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2994 0032 222A     		cmp	r2, #34
 2995 0034 00F0AC80 		beq	.L338
 2996 0038 013B     		subs	r3, r3, #1
 2997              	.LVL285:
 2998              		.loc 1 550 11 view .LVU905
 2999 003a DBB2     		uxtb	r3, r3
 3000              	.LVL286:
 3001              		.loc 1 550 11 view .LVU906
 3002 003c 0233     		adds	r3, r3, #2
 3003 003e 3B44     		add	r3, r3, r7
 3004 0040 07F10208 		add	r8, r7, #2
 3005 0044 03E0     		b	.L330
 3006              	.LVL287:
 3007              	.L331:
 3008              		.loc 1 550 11 view .LVU907
 3009 0046 13F8012D 		ldrb	r2, [r3, #-1]!	@ zero_extendqisi2
 3010              	.LVL288:
 3011              		.loc 1 550 11 view .LVU908
 3012 004a 222A     		cmp	r2, #34
 3013 004c 31D0     		beq	.L339
 3014              	.L330:
 3015              		.loc 1 550 8 is_stmt 1 discriminator 2 view .LVU909
 3016              	.LVL289:
 549:../USER/ttbasic.c **** 						for (i = *ip; i; i--)
 3017              		.loc 1 549 7 is_stmt 0 discriminator 2 view .LVU910
 3018 004e 9845     		cmp	r8, r3
 3019 0050 F9D1     		bne	.L331
 547:../USER/ttbasic.c **** 						ip++;
 3020              		.loc 1 547 9 view .LVU911
 3021 0052 4FF0220A 		mov	r10, #34
 3022              	.LVL290:
 3023              	.L329:
 551:../USER/ttbasic.c **** 								c = '\'';
 552:../USER/ttbasic.c **** 								break;
 553:../USER/ttbasic.c **** 							}
 554:../USER/ttbasic.c **** 
 555:../USER/ttbasic.c **** 						c_putch(c);
 3024              		.loc 1 555 7 is_stmt 1 view .LVU912
 3025              	.LBB389:
 3026              	.LBI386:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3027              		.loc 1 35 6 view .LVU913
 3028              	.LBB388:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3029              		.loc 1 35 22 view .LVU914
 3030 0056 5046     		mov	r0, r10
 3031 0058 FFF7FEFF 		bl	putch_uart
 3032              	.LVL291:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3033              		.loc 1 35 37 view .LVU915
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3034              		.loc 1 35 44 is_stmt 0 view .LVU916
 3035 005c 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3036              		.loc 1 35 37 view .LVU917
 3037 005e 9868     		ldr	r0, [r3, #8]
 3038 0060 FFF7FEFF 		bl	fflush
 3039              	.LVL292:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3040              		.loc 1 35 37 view .LVU918
 3041              	.LBE388:
 3042              	.LBE389:
 556:../USER/ttbasic.c **** 						i = *ip++;
 3043              		.loc 1 556 7 is_stmt 1 view .LVU919
 3044              		.loc 1 556 9 is_stmt 0 view .LVU920
 3045 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3046              	.LVL293:
 557:../USER/ttbasic.c **** 						while (i--) {
 3047              		.loc 1 557 7 is_stmt 1 view .LVU921
 3048              		.loc 1 557 15 is_stmt 0 view .LVU922
 3049 0066 03F1FF39 		add	r9, r3, #-1
 3050 006a 5FFA89F9 		uxtb	r9, r9
 3051              	.LVL294:
 3052              		.loc 1 557 13 view .LVU923
 3053 006e 002B     		cmp	r3, #0
 3054 0070 00F08780 		beq	.L340
 556:../USER/ttbasic.c **** 						i = *ip++;
 3055              		.loc 1 556 14 view .LVU924
 3056 0074 4446     		mov	r4, r8
 3057 0076 09F10303 		add	r3, r9, #3
 3058 007a 1F44     		add	r7, r7, r3
 3059              	.LVL295:
 3060              	.L333:
 558:../USER/ttbasic.c **** 							c_putch(*ip++);
 3061              		.loc 1 558 8 is_stmt 1 view .LVU925
 3062              	.LBB390:
 3063              	.LBI390:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3064              		.loc 1 35 6 view .LVU926
 3065              	.LBB391:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3066              		.loc 1 35 22 view .LVU927
 3067 007c 14F9010B 		ldrsb	r0, [r4], #1
 3068              	.LVL296:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3069              		.loc 1 35 22 is_stmt 0 view .LVU928
 3070 0080 FFF7FEFF 		bl	putch_uart
 3071              	.LVL297:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3072              		.loc 1 35 37 is_stmt 1 view .LVU929
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3073              		.loc 1 35 44 is_stmt 0 view .LVU930
 3074 0084 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3075              		.loc 1 35 37 view .LVU931
 3076 0086 9868     		ldr	r0, [r3, #8]
 3077 0088 FFF7FEFF 		bl	fflush
 3078              	.LVL298:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3079              		.loc 1 35 37 view .LVU932
 3080              	.LBE391:
 3081              	.LBE390:
 557:../USER/ttbasic.c **** 						while (i--) {
 3082              		.loc 1 557 13 view .LVU933
 3083 008c BC42     		cmp	r4, r7
 3084 008e F5D1     		bne	.L333
 3085 0090 09F10107 		add	r7, r9, #1
 557:../USER/ttbasic.c **** 						while (i--) {
 3086              		.loc 1 557 13 view .LVU934
 3087 0094 4744     		add	r7, r7, r8
 3088              	.LVL299:
 3089              	.L332:
 559:../USER/ttbasic.c **** 						}
 560:../USER/ttbasic.c **** 						c_putch(c);
 3090              		.loc 1 560 7 is_stmt 1 view .LVU935
 3091              	.LBB392:
 3092              	.LBI392:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3093              		.loc 1 35 6 view .LVU936
 3094              	.LBB393:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3095              		.loc 1 35 22 view .LVU937
 3096 0096 5046     		mov	r0, r10
 3097 0098 FFF7FEFF 		bl	putch_uart
 3098              	.LVL300:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3099              		.loc 1 35 37 view .LVU938
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3100              		.loc 1 35 44 is_stmt 0 view .LVU939
 3101 009c 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3102              		.loc 1 35 37 view .LVU940
 3103 009e 9868     		ldr	r0, [r3, #8]
 3104 00a0 FFF7FEFF 		bl	fflush
 3105              	.LVL301:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3106              		.loc 1 35 37 view .LVU941
 3107              	.LBE393:
 3108              	.LBE392:
 561:../USER/ttbasic.c **** 						if (*ip == I_VAR)
 3109              		.loc 1 561 7 is_stmt 1 view .LVU942
 3110              		.loc 1 561 11 is_stmt 0 view .LVU943
 3111 00a4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3112              		.loc 1 561 10 view .LVU944
 3113 00a6 2A2B     		cmp	r3, #42
 3114 00a8 48D0     		beq	.L365
 3115              	.LVL302:
 3116              	.L323:
 3117              		.loc 1 561 10 view .LVU945
 3118              	.LBE396:
 508:../USER/ttbasic.c **** 		// Case keyword
 3119              		.loc 1 508 8 view .LVU946
 3120 00aa 2C2B     		cmp	r3, #44
 3121 00ac B1D1     		bne	.L334
 3122              	.LVL303:
 3123              	.L311:
 562:../USER/ttbasic.c **** 							c_putch(' ');
 563:../USER/ttbasic.c **** 					}
 564:../USER/ttbasic.c **** 
 565:../USER/ttbasic.c **** 		// Nothing match, I think, such case is impossible
 566:../USER/ttbasic.c **** 					else {
 567:../USER/ttbasic.c **** 						err = ERR_SYS;
 568:../USER/ttbasic.c **** 						return;
 569:../USER/ttbasic.c **** 					}
 570:../USER/ttbasic.c **** 	}
 571:../USER/ttbasic.c **** }
 3124              		.loc 1 571 1 view .LVU947
 3125 00ae BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3126              	.LVL304:
 3127              	.L339:
 3128              	.LBB397:
 551:../USER/ttbasic.c **** 								break;
 3129              		.loc 1 551 11 view .LVU948
 3130 00b2 4FF0270A 		mov	r10, #39
 3131 00b6 CEE7     		b	.L329
 3132              	.LVL305:
 3133              	.L364:
 551:../USER/ttbasic.c **** 								break;
 3134              		.loc 1 551 11 view .LVU949
 3135              	.LBE397:
 537:../USER/ttbasic.c **** 					c_putch(*ip++ + 'A');
 3136              		.loc 1 537 6 is_stmt 1 view .LVU950
 538:../USER/ttbasic.c **** 					if (!nospaceb(*ip)) c_putch(' ');
 3137              		.loc 1 538 6 view .LVU951
 3138 00b8 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 3139 00ba BC1C     		adds	r4, r7, #2
 3140              	.LVL306:
 3141              	.LBB398:
 3142              	.LBI398:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3143              		.loc 1 35 6 view .LVU952
 3144              	.LBB399:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3145              		.loc 1 35 22 view .LVU953
 3146              	.LBE399:
 3147              	.LBE398:
 538:../USER/ttbasic.c **** 					if (!nospaceb(*ip)) c_putch(' ');
 3148              		.loc 1 538 6 is_stmt 0 view .LVU954
 3149 00bc 4130     		adds	r0, r0, #65
 3150              	.LBB401:
 3151              	.LBB400:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3152              		.loc 1 35 22 view .LVU955
 3153 00be 40B2     		sxtb	r0, r0
 3154 00c0 FFF7FEFF 		bl	putch_uart
 3155              	.LVL307:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3156              		.loc 1 35 37 is_stmt 1 view .LVU956
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3157              		.loc 1 35 44 is_stmt 0 view .LVU957
 3158 00c4 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3159              		.loc 1 35 37 view .LVU958
 3160 00c6 9868     		ldr	r0, [r3, #8]
 3161 00c8 FFF7FEFF 		bl	fflush
 3162              	.LVL308:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3163              		.loc 1 35 37 view .LVU959
 3164              	.LBE400:
 3165              	.LBE401:
 539:../USER/ttbasic.c **** 				}
 3166              		.loc 1 539 6 is_stmt 1 view .LVU960
 539:../USER/ttbasic.c **** 				}
 3167              		.loc 1 539 11 is_stmt 0 view .LVU961
 3168 00cc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3169              	.LVL309:
 3170              	.LBB402:
 3171              	.LBI402:
 116:../USER/ttbasic.c **** 	while (count--)
 3172              		.loc 1 116 6 is_stmt 1 view .LVU962
 3173              	.LBB403:
 118:../USER/ttbasic.c **** 			return 1;
 3174              		.loc 1 118 3 view .LVU963
 118:../USER/ttbasic.c **** 			return 1;
 3175              		.loc 1 118 6 is_stmt 0 view .LVU964
 3176 00ce 2C2B     		cmp	r3, #44
 3177 00d0 EDD0     		beq	.L311
 3178              	.LVL310:
 118:../USER/ttbasic.c **** 			return 1;
 3179              		.loc 1 118 3 is_stmt 1 view .LVU965
 118:../USER/ttbasic.c **** 			return 1;
 3180              		.loc 1 118 3 view .LVU966
 118:../USER/ttbasic.c **** 			return 1;
 3181              		.loc 1 118 6 is_stmt 0 view .LVU967
 3182 00d2 A3F11402 		sub	r2, r3, #20
 3183 00d6 0D2A     		cmp	r2, #13
 3184 00d8 66D9     		bls	.L326
 3185              	.LVL311:
 118:../USER/ttbasic.c **** 			return 1;
 3186              		.loc 1 118 3 is_stmt 1 view .LVU968
 118:../USER/ttbasic.c **** 			return 1;
 3187              		.loc 1 118 3 view .LVU969
 118:../USER/ttbasic.c **** 			return 1;
 3188              		.loc 1 118 3 view .LVU970
 118:../USER/ttbasic.c **** 			return 1;
 3189              		.loc 1 118 3 view .LVU971
 118:../USER/ttbasic.c **** 			return 1;
 3190              		.loc 1 118 3 view .LVU972
 118:../USER/ttbasic.c **** 			return 1;
 3191              		.loc 1 118 3 view .LVU973
 118:../USER/ttbasic.c **** 			return 1;
 3192              		.loc 1 118 3 view .LVU974
 118:../USER/ttbasic.c **** 			return 1;
 3193              		.loc 1 118 3 view .LVU975
 118:../USER/ttbasic.c **** 			return 1;
 3194              		.loc 1 118 3 view .LVU976
 118:../USER/ttbasic.c **** 			return 1;
 3195              		.loc 1 118 3 view .LVU977
 118:../USER/ttbasic.c **** 			return 1;
 3196              		.loc 1 118 3 view .LVU978
 118:../USER/ttbasic.c **** 			return 1;
 3197              		.loc 1 118 3 view .LVU979
 118:../USER/ttbasic.c **** 			return 1;
 3198              		.loc 1 118 3 is_stmt 0 view .LVU980
 3199              	.LBE403:
 3200              	.LBE402:
 539:../USER/ttbasic.c **** 				}
 3201              		.loc 1 539 26 is_stmt 1 view .LVU981
 3202              	.LBB404:
 3203              	.LBI404:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3204              		.loc 1 35 6 view .LVU982
 3205              	.LBB405:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3206              		.loc 1 35 22 view .LVU983
 3207 00da 2020     		movs	r0, #32
 3208 00dc FFF7FEFF 		bl	putch_uart
 3209              	.LVL312:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3210              		.loc 1 35 37 view .LVU984
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3211              		.loc 1 35 44 is_stmt 0 view .LVU985
 3212 00e0 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3213              		.loc 1 35 37 view .LVU986
 3214 00e2 9868     		ldr	r0, [r3, #8]
 3215 00e4 FFF7FEFF 		bl	fflush
 3216              	.LVL313:
 3217 00e8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3218              	.LBE405:
 3219              	.LBE404:
 538:../USER/ttbasic.c **** 					if (!nospaceb(*ip)) c_putch(' ');
 3220              		.loc 1 538 6 view .LVU987
 3221 00ea 2746     		mov	r7, r4
 3222 00ec DDE7     		b	.L323
 3223              	.LVL314:
 3224              	.L362:
 511:../USER/ttbasic.c **** 			if (!nospacea(*ip))
 3225              		.loc 1 511 4 is_stmt 1 view .LVU988
 3226 00ee 56F82340 		ldr	r4, [r6, r3, lsl #2]
 3227              	.LVL315:
 3228              	.LBB406:
 3229              	.LBI406:
 194:../USER/ttbasic.c **** void c_gets() {
 3230              		.loc 1 194 6 view .LVU989
 3231              	.LBB407:
 194:../USER/ttbasic.c **** void c_gets() {
 3232              		.loc 1 194 37 is_stmt 0 view .LVU990
 3233 00f2 94F90000 		ldrsb	r0, [r4]
 194:../USER/ttbasic.c **** void c_gets() {
 3234              		.loc 1 194 36 view .LVU991
 3235 00f6 0028     		cmp	r0, #0
 3236 00f8 54D0     		beq	.L336
 3237              	.LVL316:
 3238              	.L315:
 194:../USER/ttbasic.c **** void c_gets() {
 3239              		.loc 1 194 41 is_stmt 1 view .LVU992
 3240              	.LBB408:
 3241              	.LBI408:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3242              		.loc 1 35 6 view .LVU993
 3243              	.LBB409:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3244              		.loc 1 35 22 view .LVU994
 3245 00fa FFF7FEFF 		bl	putch_uart
 3246              	.LVL317:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3247              		.loc 1 35 37 view .LVU995
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3248              		.loc 1 35 44 is_stmt 0 view .LVU996
 3249 00fe 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3250              		.loc 1 35 37 view .LVU997
 3251 0100 9868     		ldr	r0, [r3, #8]
 3252 0102 FFF7FEFF 		bl	fflush
 3253              	.LVL318:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3254              		.loc 1 35 37 view .LVU998
 3255              	.LBE409:
 3256              	.LBE408:
 194:../USER/ttbasic.c **** void c_gets() {
 3257              		.loc 1 194 37 view .LVU999
 3258 0106 14F9010F 		ldrsb	r0, [r4, #1]!
 3259              	.LVL319:
 194:../USER/ttbasic.c **** void c_gets() {
 3260              		.loc 1 194 36 view .LVU1000
 3261 010a 0028     		cmp	r0, #0
 3262 010c F5D1     		bne	.L315
 3263 010e 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 3264              	.LVL320:
 3265              	.L314:
 194:../USER/ttbasic.c **** void c_gets() {
 3266              		.loc 1 194 36 view .LVU1001
 3267              	.LBE407:
 3268              	.LBE406:
 512:../USER/ttbasic.c **** 				c_putch(' ');
 3269              		.loc 1 512 4 is_stmt 1 view .LVU1002
 3270              	.LBB411:
 3271              	.LBI411:
 116:../USER/ttbasic.c **** 	while (count--)
 3272              		.loc 1 116 6 view .LVU1003
 3273              	.LBB412:
 117:../USER/ttbasic.c **** 		if (code == table[count])
 3274              		.loc 1 117 2 view .LVU1004
 117:../USER/ttbasic.c **** 		if (code == table[count])
 3275              		.loc 1 117 2 is_stmt 0 view .LVU1005
 3276 0110 334B     		ldr	r3, .L367+8
 3277 0112 A3F11300 		sub	r0, r3, #19
 3278              	.LVL321:
 3279              	.L317:
 118:../USER/ttbasic.c **** 			return 1;
 3280              		.loc 1 118 3 is_stmt 1 view .LVU1006
 118:../USER/ttbasic.c **** 			return 1;
 3281              		.loc 1 118 6 is_stmt 0 view .LVU1007
 3282 0116 13F8012D 		ldrb	r2, [r3, #-1]!	@ zero_extendqisi2
 3283              	.LVL322:
 118:../USER/ttbasic.c **** 			return 1;
 3284              		.loc 1 118 6 view .LVU1008
 3285 011a 8A42     		cmp	r2, r1
 3286 011c 09D0     		beq	.L316
 117:../USER/ttbasic.c **** 		if (code == table[count])
 3287              		.loc 1 117 8 view .LVU1009
 3288 011e 9842     		cmp	r0, r3
 3289 0120 F9D1     		bne	.L317
 3290              	.LVL323:
 117:../USER/ttbasic.c **** 		if (code == table[count])
 3291              		.loc 1 117 8 view .LVU1010
 3292              	.LBE412:
 3293              	.LBE411:
 513:../USER/ttbasic.c **** 			if (*ip == I_REM) {
 3294              		.loc 1 513 5 is_stmt 1 view .LVU1011
 3295              	.LBB413:
 3296              	.LBI413:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3297              		.loc 1 35 6 view .LVU1012
 3298              	.LBB414:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3299              		.loc 1 35 22 view .LVU1013
 3300 0122 2020     		movs	r0, #32
 3301 0124 FFF7FEFF 		bl	putch_uart
 3302              	.LVL324:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3303              		.loc 1 35 37 view .LVU1014
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3304              		.loc 1 35 44 is_stmt 0 view .LVU1015
 3305 0128 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3306              		.loc 1 35 37 view .LVU1016
 3307 012a 9868     		ldr	r0, [r3, #8]
 3308 012c FFF7FEFF 		bl	fflush
 3309              	.LVL325:
 3310 0130 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 3311              	.LVL326:
 3312              	.L316:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3313              		.loc 1 35 37 view .LVU1017
 3314              	.LBE414:
 3315              	.LBE413:
 514:../USER/ttbasic.c **** 				ip++;
 3316              		.loc 1 514 4 is_stmt 1 view .LVU1018
 514:../USER/ttbasic.c **** 				ip++;
 3317              		.loc 1 514 7 is_stmt 0 view .LVU1019
 3318 0132 0829     		cmp	r1, #8
 3319 0134 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3320 0136 39D0     		beq	.L366
 522:../USER/ttbasic.c **** 		}
 3321              		.loc 1 522 4 is_stmt 1 view .LVU1020
 3322              	.LVL327:
 522:../USER/ttbasic.c **** 		}
 3323              		.loc 1 522 6 is_stmt 0 view .LVU1021
 3324 0138 0137     		adds	r7, r7, #1
 3325              	.LVL328:
 522:../USER/ttbasic.c **** 		}
 3326              		.loc 1 522 6 view .LVU1022
 3327 013a B6E7     		b	.L323
 3328              	.LVL329:
 3329              	.L365:
 3330              	.LBB415:
 562:../USER/ttbasic.c **** 					}
 3331              		.loc 1 562 8 is_stmt 1 view .LVU1023
 3332              	.LBB394:
 3333              	.LBI394:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3334              		.loc 1 35 6 view .LVU1024
 3335              	.LBB395:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3336              		.loc 1 35 22 view .LVU1025
 3337 013c 2020     		movs	r0, #32
 3338 013e FFF7FEFF 		bl	putch_uart
 3339              	.LVL330:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3340              		.loc 1 35 37 view .LVU1026
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3341              		.loc 1 35 44 is_stmt 0 view .LVU1027
 3342 0142 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3343              		.loc 1 35 37 view .LVU1028
 3344 0144 9868     		ldr	r0, [r3, #8]
 3345 0146 FFF7FEFF 		bl	fflush
 3346              	.LVL331:
 3347 014a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3348 014c ADE7     		b	.L323
 3349              	.LVL332:
 3350              	.L363:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3351              		.loc 1 35 37 view .LVU1029
 3352              	.LBE395:
 3353              	.LBE394:
 3354              	.LBE415:
 528:../USER/ttbasic.c **** 				putnum(*ip | *(ip + 1) << 8, 0);
 3355              		.loc 1 528 5 is_stmt 1 view .LVU1030
 529:../USER/ttbasic.c **** 				ip += 2;
 3356              		.loc 1 529 5 view .LVU1031
 529:../USER/ttbasic.c **** 				ip += 2;
 3357              		.loc 1 529 18 is_stmt 0 view .LVU1032
 3358 014e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 529:../USER/ttbasic.c **** 				ip += 2;
 3359              		.loc 1 529 12 view .LVU1033
 3360 0150 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 529:../USER/ttbasic.c **** 				ip += 2;
 3361              		.loc 1 529 5 view .LVU1034
 3362 0152 0021     		movs	r1, #0
 3363 0154 40EA0320 		orr	r0, r0, r3, lsl #8
 3364 0158 00B2     		sxth	r0, r0
 3365 015a FFF7FEFF 		bl	putnum
 3366              	.LVL333:
 530:../USER/ttbasic.c **** 				if (!nospaceb(*ip)) c_putch(' ');
 3367              		.loc 1 530 5 is_stmt 1 view .LVU1035
 531:../USER/ttbasic.c **** 			}
 3368              		.loc 1 531 10 is_stmt 0 view .LVU1036
 3369 015e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 530:../USER/ttbasic.c **** 				if (!nospaceb(*ip)) c_putch(' ');
 3370              		.loc 1 530 8 view .LVU1037
 3371 0160 FC1C     		adds	r4, r7, #3
 3372              	.LVL334:
 531:../USER/ttbasic.c **** 			}
 3373              		.loc 1 531 5 is_stmt 1 view .LVU1038
 3374              	.LBB416:
 3375              	.LBI416:
 116:../USER/ttbasic.c **** 	while (count--)
 3376              		.loc 1 116 6 view .LVU1039
 3377              	.LBB417:
 117:../USER/ttbasic.c **** 		if (code == table[count])
 3378              		.loc 1 117 2 view .LVU1040
 118:../USER/ttbasic.c **** 			return 1;
 3379              		.loc 1 118 3 view .LVU1041
 118:../USER/ttbasic.c **** 			return 1;
 3380              		.loc 1 118 6 is_stmt 0 view .LVU1042
 3381 0162 2C2B     		cmp	r3, #44
 3382 0164 A3D0     		beq	.L311
 3383              	.LVL335:
 118:../USER/ttbasic.c **** 			return 1;
 3384              		.loc 1 118 3 is_stmt 1 view .LVU1043
 118:../USER/ttbasic.c **** 			return 1;
 3385              		.loc 1 118 3 view .LVU1044
 118:../USER/ttbasic.c **** 			return 1;
 3386              		.loc 1 118 6 is_stmt 0 view .LVU1045
 3387 0166 A3F11402 		sub	r2, r3, #20
 3388 016a 0D2A     		cmp	r2, #13
 3389 016c 1CD9     		bls	.L326
 3390              	.LVL336:
 118:../USER/ttbasic.c **** 			return 1;
 3391              		.loc 1 118 3 is_stmt 1 view .LVU1046
 118:../USER/ttbasic.c **** 			return 1;
 3392              		.loc 1 118 3 view .LVU1047
 118:../USER/ttbasic.c **** 			return 1;
 3393              		.loc 1 118 3 view .LVU1048
 118:../USER/ttbasic.c **** 			return 1;
 3394              		.loc 1 118 3 view .LVU1049
 118:../USER/ttbasic.c **** 			return 1;
 3395              		.loc 1 118 3 view .LVU1050
 118:../USER/ttbasic.c **** 			return 1;
 3396              		.loc 1 118 3 view .LVU1051
 118:../USER/ttbasic.c **** 			return 1;
 3397              		.loc 1 118 3 view .LVU1052
 118:../USER/ttbasic.c **** 			return 1;
 3398              		.loc 1 118 3 view .LVU1053
 118:../USER/ttbasic.c **** 			return 1;
 3399              		.loc 1 118 3 view .LVU1054
 118:../USER/ttbasic.c **** 			return 1;
 3400              		.loc 1 118 3 view .LVU1055
 118:../USER/ttbasic.c **** 			return 1;
 3401              		.loc 1 118 3 view .LVU1056
 118:../USER/ttbasic.c **** 			return 1;
 3402              		.loc 1 118 3 view .LVU1057
 118:../USER/ttbasic.c **** 			return 1;
 3403              		.loc 1 118 3 is_stmt 0 view .LVU1058
 3404              	.LBE417:
 3405              	.LBE416:
 531:../USER/ttbasic.c **** 			}
 3406              		.loc 1 531 25 is_stmt 1 view .LVU1059
 3407              	.LBB418:
 3408              	.LBI418:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3409              		.loc 1 35 6 view .LVU1060
 3410              	.LBB419:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3411              		.loc 1 35 22 view .LVU1061
 3412 016e 2020     		movs	r0, #32
 3413 0170 FFF7FEFF 		bl	putch_uart
 3414              	.LVL337:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3415              		.loc 1 35 37 view .LVU1062
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3416              		.loc 1 35 44 is_stmt 0 view .LVU1063
 3417 0174 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3418              		.loc 1 35 37 view .LVU1064
 3419 0176 9868     		ldr	r0, [r3, #8]
 3420 0178 FFF7FEFF 		bl	fflush
 3421              	.LVL338:
 3422 017c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3423              	.LBE419:
 3424              	.LBE418:
 530:../USER/ttbasic.c **** 				if (!nospaceb(*ip)) c_putch(' ');
 3425              		.loc 1 530 8 view .LVU1065
 3426 017e 2746     		mov	r7, r4
 3427 0180 93E7     		b	.L323
 3428              	.LVL339:
 3429              	.L340:
 3430              	.LBB420:
 556:../USER/ttbasic.c **** 						while (i--) {
 3431              		.loc 1 556 14 view .LVU1066
 3432 0182 4746     		mov	r7, r8
 3433 0184 87E7     		b	.L332
 3434              	.LVL340:
 3435              	.L337:
 547:../USER/ttbasic.c **** 						ip++;
 3436              		.loc 1 547 9 view .LVU1067
 3437 0186 4FF0220A 		mov	r10, #34
 3438 018a 07F10208 		add	r8, r7, #2
 3439 018e 62E7     		b	.L329
 3440              	.L338:
 551:../USER/ttbasic.c **** 								break;
 3441              		.loc 1 551 11 view .LVU1068
 3442 0190 4FF0270A 		mov	r10, #39
 3443 0194 07F10208 		add	r8, r7, #2
 3444 0198 5DE7     		b	.L329
 3445              	.LVL341:
 3446              	.L328:
 551:../USER/ttbasic.c **** 								break;
 3447              		.loc 1 551 11 view .LVU1069
 3448              	.LBE420:
 567:../USER/ttbasic.c **** 						return;
 3449              		.loc 1 567 7 is_stmt 1 view .LVU1070
 567:../USER/ttbasic.c **** 						return;
 3450              		.loc 1 567 11 is_stmt 0 view .LVU1071
 3451 019a 1522     		movs	r2, #21
 3452 019c 114B     		ldr	r3, .L367+12
 3453 019e 1A70     		strb	r2, [r3]
 568:../USER/ttbasic.c **** 					}
 3454              		.loc 1 568 7 is_stmt 1 view .LVU1072
 3455              		.loc 1 571 1 is_stmt 0 view .LVU1073
 3456 01a0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3457              	.LVL342:
 3458              	.L336:
 3459              	.LBB421:
 3460              	.LBB410:
 194:../USER/ttbasic.c **** void c_gets() {
 3461              		.loc 1 194 36 view .LVU1074
 3462 01a4 1946     		mov	r1, r3
 3463 01a6 B3E7     		b	.L314
 3464              	.LVL343:
 3465              	.L326:
 194:../USER/ttbasic.c **** void c_gets() {
 3466              		.loc 1 194 36 view .LVU1075
 3467              	.LBE410:
 3468              	.LBE421:
 538:../USER/ttbasic.c **** 					if (!nospaceb(*ip)) c_putch(' ');
 3469              		.loc 1 538 6 view .LVU1076
 3470 01a8 2746     		mov	r7, r4
 538:../USER/ttbasic.c **** 					if (!nospaceb(*ip)) c_putch(' ');
 3471              		.loc 1 538 6 view .LVU1077
 3472 01aa 32E7     		b	.L334
 3473              	.LVL344:
 3474              	.L366:
 515:../USER/ttbasic.c **** 				i = *ip++;
 3475              		.loc 1 515 5 is_stmt 1 view .LVU1078
 516:../USER/ttbasic.c **** 				while (i--) {
 3476              		.loc 1 516 5 view .LVU1079
 517:../USER/ttbasic.c **** 					c_putch(*ip++);
 3477              		.loc 1 517 13 is_stmt 0 view .LVU1080
 3478 01ac 5A1E     		subs	r2, r3, #1
 3479 01ae D2B2     		uxtb	r2, r2
 516:../USER/ttbasic.c **** 				while (i--) {
 3480              		.loc 1 516 12 view .LVU1081
 3481 01b0 BC1C     		adds	r4, r7, #2
 3482              	.LVL345:
 517:../USER/ttbasic.c **** 					c_putch(*ip++);
 3483              		.loc 1 517 5 is_stmt 1 view .LVU1082
 517:../USER/ttbasic.c **** 					c_putch(*ip++);
 3484              		.loc 1 517 11 is_stmt 0 view .LVU1083
 3485 01b2 002B     		cmp	r3, #0
 3486 01b4 3FF47BAF 		beq	.L311
 3487 01b8 D31C     		adds	r3, r2, #3
 3488 01ba 074D     		ldr	r5, .L367
 3489 01bc 1F44     		add	r7, r7, r3
 3490              	.LVL346:
 3491              	.L322:
 518:../USER/ttbasic.c **** 				}
 3492              		.loc 1 518 6 is_stmt 1 view .LVU1084
 3493              	.LBB422:
 3494              	.LBI422:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3495              		.loc 1 35 6 view .LVU1085
 3496              	.LBB423:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3497              		.loc 1 35 22 view .LVU1086
 3498 01be 14F9010B 		ldrsb	r0, [r4], #1
 3499              	.LVL347:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3500              		.loc 1 35 22 is_stmt 0 view .LVU1087
 3501 01c2 FFF7FEFF 		bl	putch_uart
 3502              	.LVL348:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3503              		.loc 1 35 37 is_stmt 1 view .LVU1088
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3504              		.loc 1 35 44 is_stmt 0 view .LVU1089
 3505 01c6 2B68     		ldr	r3, [r5]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3506              		.loc 1 35 37 view .LVU1090
 3507 01c8 9868     		ldr	r0, [r3, #8]
 3508 01ca FFF7FEFF 		bl	fflush
 3509              	.LVL349:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 3510              		.loc 1 35 37 view .LVU1091
 3511              	.LBE423:
 3512              	.LBE422:
 517:../USER/ttbasic.c **** 					c_putch(*ip++);
 3513              		.loc 1 517 11 view .LVU1092
 3514 01ce BC42     		cmp	r4, r7
 3515 01d0 F5D1     		bne	.L322
 3516 01d2 6CE7     		b	.L311
 3517              	.LVL350:
 3518              	.L359:
 3519              		.cfi_def_cfa_offset 0
 3520              		.cfi_restore 4
 3521              		.cfi_restore 5
 3522              		.cfi_restore 6
 3523              		.cfi_restore 7
 3524              		.cfi_restore 8
 3525              		.cfi_restore 9
 3526              		.cfi_restore 10
 3527              		.cfi_restore 14
 517:../USER/ttbasic.c **** 					c_putch(*ip++);
 3528              		.loc 1 517 11 view .LVU1093
 3529 01d4 7047     		bx	lr
 3530              	.L368:
 3531 01d6 00BF     		.align	2
 3532              	.L367:
 3533 01d8 00000000 		.word	_impure_ptr
 3534 01dc 00000000 		.word	.LANCHOR0
 3535 01e0 13000000 		.word	.LANCHOR1+19
 3536 01e4 00000000 		.word	err
 3537              		.cfi_endproc
 3538              	.LFE23:
 3540              		.section	.text.iexp,"ax",%progbits
 3541              		.align	1
 3542              		.p2align 2,,3
 3543              		.global	iexp
 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3547              		.fpu softvfp
 3549              	iexp:
 3550              	.LFB28:
 572:../USER/ttbasic.c **** 
 573:../USER/ttbasic.c **** // Get argument in parenthesis
 574:../USER/ttbasic.c **** short getparam() {
 575:../USER/ttbasic.c **** 	short value;
 576:../USER/ttbasic.c **** 
 577:../USER/ttbasic.c **** 	if (*cip != I_OPEN) {
 578:../USER/ttbasic.c **** 		err = ERR_PAREN;
 579:../USER/ttbasic.c **** 		return 0;
 580:../USER/ttbasic.c **** 	}
 581:../USER/ttbasic.c **** 	cip++;
 582:../USER/ttbasic.c **** 	value = iexp();
 583:../USER/ttbasic.c **** 	if (err)
 584:../USER/ttbasic.c **** 		return 0;
 585:../USER/ttbasic.c **** 
 586:../USER/ttbasic.c **** 	if (*cip != I_CLOSE) {
 587:../USER/ttbasic.c **** 		err = ERR_PAREN;
 588:../USER/ttbasic.c **** 		return 0;
 589:../USER/ttbasic.c **** 	}
 590:../USER/ttbasic.c **** 	cip++;
 591:../USER/ttbasic.c **** 
 592:../USER/ttbasic.c **** 	return value;
 593:../USER/ttbasic.c **** }
 594:../USER/ttbasic.c **** 
 595:../USER/ttbasic.c **** // Get value
 596:../USER/ttbasic.c **** short ivalue() {
 597:../USER/ttbasic.c **** 	short value;
 598:../USER/ttbasic.c **** 
 599:../USER/ttbasic.c **** 	switch (*cip) {
 600:../USER/ttbasic.c **** 	case I_NUM:
 601:../USER/ttbasic.c **** 		cip++;
 602:../USER/ttbasic.c **** 		value = *cip | *(cip + 1) << 8;
 603:../USER/ttbasic.c **** 		cip += 2;
 604:../USER/ttbasic.c **** 		break;
 605:../USER/ttbasic.c **** 	case I_PLUS:
 606:../USER/ttbasic.c **** 		cip++;
 607:../USER/ttbasic.c **** 		value = ivalue();
 608:../USER/ttbasic.c **** 		break;
 609:../USER/ttbasic.c **** 	case I_MINUS:
 610:../USER/ttbasic.c **** 		cip++;
 611:../USER/ttbasic.c **** 		value = 0 - ivalue();
 612:../USER/ttbasic.c **** 		break;
 613:../USER/ttbasic.c **** 	case I_VAR:
 614:../USER/ttbasic.c **** 		cip++;
 615:../USER/ttbasic.c **** 		value = var[*cip++];
 616:../USER/ttbasic.c **** 		break;
 617:../USER/ttbasic.c **** 	case I_OPEN:
 618:../USER/ttbasic.c **** 		value = getparam();
 619:../USER/ttbasic.c **** 		break;
 620:../USER/ttbasic.c **** 	case I_ARRAY:
 621:../USER/ttbasic.c **** 		cip++;
 622:../USER/ttbasic.c **** 		if(*cip==I_ARRAY) {
 623:../USER/ttbasic.c **** 			cip++;
 624:../USER/ttbasic.c **** 			value = getparam();
 625:../USER/ttbasic.c **** 			value = aryex[value];
 626:../USER/ttbasic.c **** 		} else {
 627:../USER/ttbasic.c **** 		value = getparam();
 628:../USER/ttbasic.c **** 		if (err)
 629:../USER/ttbasic.c **** 			break;
 630:../USER/ttbasic.c **** 		if (value >= SIZE_ARRY) {
 631:../USER/ttbasic.c **** 			err = ERR_SOR;
 632:../USER/ttbasic.c **** 			break;
 633:../USER/ttbasic.c **** 		}
 634:../USER/ttbasic.c **** 		value = arr[value];
 635:../USER/ttbasic.c **** 		break;
 636:../USER/ttbasic.c **** 	case I_RND:
 637:../USER/ttbasic.c **** 		cip++;
 638:../USER/ttbasic.c **** 		value = getparam();
 639:../USER/ttbasic.c **** 		if (err)
 640:../USER/ttbasic.c **** 			break;
 641:../USER/ttbasic.c **** 		value = getrnd(value);
 642:../USER/ttbasic.c **** 		}
 643:../USER/ttbasic.c **** 		break;
 644:../USER/ttbasic.c **** 	case I_ABS:
 645:../USER/ttbasic.c **** 		cip++;
 646:../USER/ttbasic.c **** 		value = getparam();
 647:../USER/ttbasic.c **** 		if (err)
 648:../USER/ttbasic.c **** 			break;
 649:../USER/ttbasic.c **** 		if (value < 0)
 650:../USER/ttbasic.c **** 			value *= -1;
 651:../USER/ttbasic.c **** 		break;
 652:../USER/ttbasic.c **** 	case I_SIZE:
 653:../USER/ttbasic.c **** 		cip++;
 654:../USER/ttbasic.c **** 		if ((*cip != I_OPEN) || (*(cip + 1) != I_CLOSE)) {
 655:../USER/ttbasic.c **** 			err = ERR_PAREN;
 656:../USER/ttbasic.c **** 			break;
 657:../USER/ttbasic.c **** 		}
 658:../USER/ttbasic.c **** 		cip += 2;
 659:../USER/ttbasic.c **** 		value = getsize();
 660:../USER/ttbasic.c **** 		break;
 661:../USER/ttbasic.c **** 
 662:../USER/ttbasic.c **** 	default:
 663:../USER/ttbasic.c **** 		err = ERR_SYNTAX;
 664:../USER/ttbasic.c **** 		break;
 665:../USER/ttbasic.c **** 	}
 666:../USER/ttbasic.c **** 	return value;
 667:../USER/ttbasic.c **** }
 668:../USER/ttbasic.c **** 
 669:../USER/ttbasic.c **** // multiply or divide calculation
 670:../USER/ttbasic.c **** short imul() {
 671:../USER/ttbasic.c **** 	short value, tmp;
 672:../USER/ttbasic.c **** 
 673:../USER/ttbasic.c **** 	value = ivalue();
 674:../USER/ttbasic.c **** 	if (err)
 675:../USER/ttbasic.c **** 		return -1;
 676:../USER/ttbasic.c **** 
 677:../USER/ttbasic.c **** 	while (1)
 678:../USER/ttbasic.c **** 		switch (*cip) {
 679:../USER/ttbasic.c **** 		case I_MUL:
 680:../USER/ttbasic.c **** 			cip++;
 681:../USER/ttbasic.c **** 			tmp = ivalue();
 682:../USER/ttbasic.c **** 			value *= tmp;
 683:../USER/ttbasic.c **** 			break;
 684:../USER/ttbasic.c **** 		case I_DIV:
 685:../USER/ttbasic.c **** 			cip++;
 686:../USER/ttbasic.c **** 			tmp = ivalue();
 687:../USER/ttbasic.c **** 			if (tmp == 0) {
 688:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 689:../USER/ttbasic.c **** 				return -1;
 690:../USER/ttbasic.c **** 			}
 691:../USER/ttbasic.c **** 			value /= tmp;
 692:../USER/ttbasic.c **** 			break;
 693:../USER/ttbasic.c **** 		default:
 694:../USER/ttbasic.c **** 			return value;
 695:../USER/ttbasic.c **** 		}
 696:../USER/ttbasic.c **** }
 697:../USER/ttbasic.c **** 
 698:../USER/ttbasic.c **** // add or subtract calculation
 699:../USER/ttbasic.c **** short iplus() {
 700:../USER/ttbasic.c **** 	short value, tmp;
 701:../USER/ttbasic.c **** 
 702:../USER/ttbasic.c **** 	value = imul();
 703:../USER/ttbasic.c **** 	if (err)
 704:../USER/ttbasic.c **** 		return -1;
 705:../USER/ttbasic.c **** 
 706:../USER/ttbasic.c **** 	while (1)
 707:../USER/ttbasic.c **** 		switch (*cip) {
 708:../USER/ttbasic.c **** 		case I_PLUS:
 709:../USER/ttbasic.c **** 			cip++;
 710:../USER/ttbasic.c **** 			tmp = imul();
 711:../USER/ttbasic.c **** 			value += tmp;
 712:../USER/ttbasic.c **** 			break;
 713:../USER/ttbasic.c **** 		case I_MINUS:
 714:../USER/ttbasic.c **** 			cip++;
 715:../USER/ttbasic.c **** 			tmp = imul();
 716:../USER/ttbasic.c **** 			value -= tmp;
 717:../USER/ttbasic.c **** 			break;
 718:../USER/ttbasic.c **** 		default:
 719:../USER/ttbasic.c **** 			return value;
 720:../USER/ttbasic.c **** 		}
 721:../USER/ttbasic.c **** }
 722:../USER/ttbasic.c **** 
 723:../USER/ttbasic.c **** // The parser
 724:../USER/ttbasic.c **** short iexp() {
 3551              		.loc 1 724 14 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 725:../USER/ttbasic.c **** 	short value, tmp;
 3555              		.loc 1 725 2 view .LVU1095
 726:../USER/ttbasic.c **** 
 727:../USER/ttbasic.c **** 	value = iplus();
 3556              		.loc 1 727 2 view .LVU1096
 724:../USER/ttbasic.c **** 	short value, tmp;
 3557              		.loc 1 724 14 is_stmt 0 view .LVU1097
 3558 0000 38B5     		push	{r3, r4, r5, lr}
 3559              		.cfi_def_cfa_offset 16
 3560              		.cfi_offset 3, -16
 3561              		.cfi_offset 4, -12
 3562              		.cfi_offset 5, -8
 3563              		.cfi_offset 14, -4
 3564              		.loc 1 727 10 view .LVU1098
 3565 0002 FFF7FEFF 		bl	iplus
 3566              	.LVL351:
 728:../USER/ttbasic.c **** 	if (err)
 3567              		.loc 1 728 2 is_stmt 1 view .LVU1099
 3568              		.loc 1 728 6 is_stmt 0 view .LVU1100
 3569 0006 244B     		ldr	r3, .L382
 3570              		.loc 1 728 5 view .LVU1101
 3571 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3572 000a 002B     		cmp	r3, #0
 3573 000c 40D1     		bne	.L380
 3574 000e 0546     		mov	r5, r0
 3575 0010 224C     		ldr	r4, .L382+4
 3576              	.LVL352:
 3577              	.L371:
 729:../USER/ttbasic.c **** 		return -1;
 730:../USER/ttbasic.c **** 
 731:../USER/ttbasic.c **** 	// conditional expression 
 732:../USER/ttbasic.c **** 	while (1)
 3578              		.loc 1 732 2 is_stmt 1 view .LVU1102
 733:../USER/ttbasic.c **** 		switch (*cip) {
 3579              		.loc 1 733 3 view .LVU1103
 3580              		.loc 1 733 11 is_stmt 0 view .LVU1104
 3581 0012 2268     		ldr	r2, [r4]
 3582              		.loc 1 733 3 view .LVU1105
 3583 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3584 0016 1C3B     		subs	r3, r3, #28
 3585 0018 052B     		cmp	r3, #5
 3586 001a 3BD8     		bhi	.L370
 3587 001c DFE803F0 		tbb	[pc, r3]
 3588              	.L373:
 3589 0020 2F       		.byte	(.L378-.L373)/2
 3590 0021 27       		.byte	(.L377-.L373)/2
 3591 0022 1E       		.byte	(.L376-.L373)/2
 3592 0023 15       		.byte	(.L375-.L373)/2
 3593 0024 0C       		.byte	(.L374-.L373)/2
 3594 0025 03       		.byte	(.L372-.L373)/2
 3595              		.p2align 1
 3596              	.L372:
 734:../USER/ttbasic.c **** 		case I_EQ:
 735:../USER/ttbasic.c **** 			cip++;
 736:../USER/ttbasic.c **** 			tmp = iplus();
 737:../USER/ttbasic.c **** 			value = (value == tmp);
 738:../USER/ttbasic.c **** 			break;
 739:../USER/ttbasic.c **** 		case I_SHARP:
 740:../USER/ttbasic.c **** 			cip++;
 741:../USER/ttbasic.c **** 			tmp = iplus();
 742:../USER/ttbasic.c **** 			value = (value != tmp);
 743:../USER/ttbasic.c **** 			break;
 744:../USER/ttbasic.c **** 		case I_LT:
 745:../USER/ttbasic.c **** 			cip++;
 3597              		.loc 1 745 4 is_stmt 1 view .LVU1106
 3598              		.loc 1 745 7 is_stmt 0 view .LVU1107
 3599 0026 0132     		adds	r2, r2, #1
 3600 0028 2260     		str	r2, [r4]
 746:../USER/ttbasic.c **** 			tmp = iplus();
 3601              		.loc 1 746 4 is_stmt 1 view .LVU1108
 3602              		.loc 1 746 10 is_stmt 0 view .LVU1109
 3603 002a FFF7FEFF 		bl	iplus
 3604              	.LVL353:
 747:../USER/ttbasic.c **** 			value = (value < tmp);
 3605              		.loc 1 747 4 is_stmt 1 view .LVU1110
 3606              		.loc 1 747 10 is_stmt 0 view .LVU1111
 3607 002e 8542     		cmp	r5, r0
 3608 0030 ACBF     		ite	ge
 3609 0032 0025     		movge	r5, #0
 3610              	.LVL354:
 3611              		.loc 1 747 10 view .LVU1112
 3612 0034 0125     		movlt	r5, #1
 3613              	.LVL355:
 748:../USER/ttbasic.c **** 			break;
 3614              		.loc 1 748 4 is_stmt 1 view .LVU1113
 3615 0036 ECE7     		b	.L371
 3616              	.LVL356:
 3617              	.L374:
 749:../USER/ttbasic.c **** 		case I_LTE:
 750:../USER/ttbasic.c **** 			cip++;
 3618              		.loc 1 750 4 view .LVU1114
 3619              		.loc 1 750 7 is_stmt 0 view .LVU1115
 3620 0038 0132     		adds	r2, r2, #1
 3621 003a 2260     		str	r2, [r4]
 751:../USER/ttbasic.c **** 			tmp = iplus();
 3622              		.loc 1 751 4 is_stmt 1 view .LVU1116
 3623              		.loc 1 751 10 is_stmt 0 view .LVU1117
 3624 003c FFF7FEFF 		bl	iplus
 3625              	.LVL357:
 752:../USER/ttbasic.c **** 			value = (value <= tmp);
 3626              		.loc 1 752 4 is_stmt 1 view .LVU1118
 3627              		.loc 1 752 10 is_stmt 0 view .LVU1119
 3628 0040 8542     		cmp	r5, r0
 3629 0042 CCBF     		ite	gt
 3630 0044 0025     		movgt	r5, #0
 3631              	.LVL358:
 3632              		.loc 1 752 10 view .LVU1120
 3633 0046 0125     		movle	r5, #1
 3634              	.LVL359:
 753:../USER/ttbasic.c **** 			break;
 3635              		.loc 1 753 4 is_stmt 1 view .LVU1121
 3636 0048 E3E7     		b	.L371
 3637              	.LVL360:
 3638              	.L375:
 735:../USER/ttbasic.c **** 			tmp = iplus();
 3639              		.loc 1 735 4 view .LVU1122
 735:../USER/ttbasic.c **** 			tmp = iplus();
 3640              		.loc 1 735 7 is_stmt 0 view .LVU1123
 3641 004a 0132     		adds	r2, r2, #1
 3642 004c 2260     		str	r2, [r4]
 736:../USER/ttbasic.c **** 			value = (value == tmp);
 3643              		.loc 1 736 4 is_stmt 1 view .LVU1124
 736:../USER/ttbasic.c **** 			value = (value == tmp);
 3644              		.loc 1 736 10 is_stmt 0 view .LVU1125
 3645 004e FFF7FEFF 		bl	iplus
 3646              	.LVL361:
 737:../USER/ttbasic.c **** 			break;
 3647              		.loc 1 737 4 is_stmt 1 view .LVU1126
 737:../USER/ttbasic.c **** 			break;
 3648              		.loc 1 737 10 is_stmt 0 view .LVU1127
 3649 0052 2D1A     		subs	r5, r5, r0
 3650              	.LVL362:
 737:../USER/ttbasic.c **** 			break;
 3651              		.loc 1 737 10 view .LVU1128
 3652 0054 B5FA85F5 		clz	r5, r5
 3653 0058 6D09     		lsrs	r5, r5, #5
 3654              	.LVL363:
 738:../USER/ttbasic.c **** 		case I_SHARP:
 3655              		.loc 1 738 4 is_stmt 1 view .LVU1129
 3656 005a DAE7     		b	.L371
 3657              	.LVL364:
 3658              	.L376:
 754:../USER/ttbasic.c **** 		case I_GT:
 755:../USER/ttbasic.c **** 			cip++;
 3659              		.loc 1 755 4 view .LVU1130
 3660              		.loc 1 755 7 is_stmt 0 view .LVU1131
 3661 005c 0132     		adds	r2, r2, #1
 3662 005e 2260     		str	r2, [r4]
 756:../USER/ttbasic.c **** 			tmp = iplus();
 3663              		.loc 1 756 4 is_stmt 1 view .LVU1132
 3664              		.loc 1 756 10 is_stmt 0 view .LVU1133
 3665 0060 FFF7FEFF 		bl	iplus
 3666              	.LVL365:
 757:../USER/ttbasic.c **** 			value = (value > tmp);
 3667              		.loc 1 757 4 is_stmt 1 view .LVU1134
 3668              		.loc 1 757 10 is_stmt 0 view .LVU1135
 3669 0064 8542     		cmp	r5, r0
 3670 0066 D4BF     		ite	le
 3671 0068 0025     		movle	r5, #0
 3672              	.LVL366:
 3673              		.loc 1 757 10 view .LVU1136
 3674 006a 0125     		movgt	r5, #1
 3675              	.LVL367:
 758:../USER/ttbasic.c **** 			break;
 3676              		.loc 1 758 4 is_stmt 1 view .LVU1137
 3677 006c D1E7     		b	.L371
 3678              	.LVL368:
 3679              	.L377:
 740:../USER/ttbasic.c **** 			tmp = iplus();
 3680              		.loc 1 740 4 view .LVU1138
 740:../USER/ttbasic.c **** 			tmp = iplus();
 3681              		.loc 1 740 7 is_stmt 0 view .LVU1139
 3682 006e 0132     		adds	r2, r2, #1
 3683 0070 2260     		str	r2, [r4]
 741:../USER/ttbasic.c **** 			value = (value != tmp);
 3684              		.loc 1 741 4 is_stmt 1 view .LVU1140
 741:../USER/ttbasic.c **** 			value = (value != tmp);
 3685              		.loc 1 741 10 is_stmt 0 view .LVU1141
 3686 0072 FFF7FEFF 		bl	iplus
 3687              	.LVL369:
 742:../USER/ttbasic.c **** 			break;
 3688              		.loc 1 742 4 is_stmt 1 view .LVU1142
 742:../USER/ttbasic.c **** 			break;
 3689              		.loc 1 742 10 is_stmt 0 view .LVU1143
 3690 0076 2D1A     		subs	r5, r5, r0
 3691              	.LVL370:
 742:../USER/ttbasic.c **** 			break;
 3692              		.loc 1 742 10 view .LVU1144
 3693 0078 18BF     		it	ne
 3694 007a 0125     		movne	r5, #1
 3695              	.LVL371:
 743:../USER/ttbasic.c **** 		case I_LT:
 3696              		.loc 1 743 4 is_stmt 1 view .LVU1145
 3697 007c C9E7     		b	.L371
 3698              	.LVL372:
 3699              	.L378:
 759:../USER/ttbasic.c **** 		case I_GTE:
 760:../USER/ttbasic.c **** 			cip++;
 3700              		.loc 1 760 4 view .LVU1146
 3701              		.loc 1 760 7 is_stmt 0 view .LVU1147
 3702 007e 0132     		adds	r2, r2, #1
 3703 0080 2260     		str	r2, [r4]
 761:../USER/ttbasic.c **** 			tmp = iplus();
 3704              		.loc 1 761 4 is_stmt 1 view .LVU1148
 3705              		.loc 1 761 10 is_stmt 0 view .LVU1149
 3706 0082 FFF7FEFF 		bl	iplus
 3707              	.LVL373:
 762:../USER/ttbasic.c **** 			value = (value >= tmp);
 3708              		.loc 1 762 4 is_stmt 1 view .LVU1150
 3709              		.loc 1 762 10 is_stmt 0 view .LVU1151
 3710 0086 8542     		cmp	r5, r0
 3711 0088 B4BF     		ite	lt
 3712 008a 0025     		movlt	r5, #0
 3713              	.LVL374:
 3714              		.loc 1 762 10 view .LVU1152
 3715 008c 0125     		movge	r5, #1
 3716              	.LVL375:
 763:../USER/ttbasic.c **** 			break;
 3717              		.loc 1 763 4 is_stmt 1 view .LVU1153
 3718 008e C0E7     		b	.L371
 3719              	.LVL376:
 3720              	.L380:
 729:../USER/ttbasic.c **** 
 3721              		.loc 1 729 10 is_stmt 0 view .LVU1154
 3722 0090 4FF0FF35 		mov	r5, #-1
 3723              	.LVL377:
 3724              	.L370:
 764:../USER/ttbasic.c **** 		default:
 765:../USER/ttbasic.c **** 			return value;
 766:../USER/ttbasic.c **** 		}
 767:../USER/ttbasic.c **** }
 3725              		.loc 1 767 1 view .LVU1155
 3726 0094 2846     		mov	r0, r5
 3727 0096 38BD     		pop	{r3, r4, r5, pc}
 3728              	.L383:
 3729              		.align	2
 3730              	.L382:
 3731 0098 00000000 		.word	err
 3732 009c 00000000 		.word	cip
 3733              		.cfi_endproc
 3734              	.LFE28:
 3736              		.section	.text.getparam,"ax",%progbits
 3737              		.align	1
 3738              		.p2align 2,,3
 3739              		.global	getparam
 3740              		.syntax unified
 3741              		.thumb
 3742              		.thumb_func
 3743              		.fpu softvfp
 3745              	getparam:
 3746              	.LFB24:
 574:../USER/ttbasic.c **** 	short value;
 3747              		.loc 1 574 18 is_stmt 1 view -0
 3748              		.cfi_startproc
 3749              		@ args = 0, pretend = 0, frame = 0
 3750              		@ frame_needed = 0, uses_anonymous_args = 0
 575:../USER/ttbasic.c **** 
 3751              		.loc 1 575 2 view .LVU1157
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3752              		.loc 1 577 2 view .LVU1158
 574:../USER/ttbasic.c **** 	short value;
 3753              		.loc 1 574 18 is_stmt 0 view .LVU1159
 3754 0000 10B5     		push	{r4, lr}
 3755              		.cfi_def_cfa_offset 8
 3756              		.cfi_offset 4, -8
 3757              		.cfi_offset 14, -4
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3758              		.loc 1 577 6 view .LVU1160
 3759 0002 0D4C     		ldr	r4, .L390
 3760 0004 2368     		ldr	r3, [r4]
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3761              		.loc 1 577 5 view .LVU1161
 3762 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3763 0008 1A2A     		cmp	r2, #26
 3764 000a 04D0     		beq	.L385
 3765 000c 0B4B     		ldr	r3, .L390+4
 3766              	.L387:
 578:../USER/ttbasic.c **** 		return 0;
 3767              		.loc 1 578 3 is_stmt 1 view .LVU1162
 578:../USER/ttbasic.c **** 		return 0;
 3768              		.loc 1 578 7 is_stmt 0 view .LVU1163
 3769 000e 1122     		movs	r2, #17
 3770 0010 1A70     		strb	r2, [r3]
 579:../USER/ttbasic.c **** 	}
 3771              		.loc 1 579 3 is_stmt 1 view .LVU1164
 579:../USER/ttbasic.c **** 	}
 3772              		.loc 1 579 10 is_stmt 0 view .LVU1165
 3773 0012 0020     		movs	r0, #0
 593:../USER/ttbasic.c **** 
 3774              		.loc 1 593 1 view .LVU1166
 3775 0014 10BD     		pop	{r4, pc}
 3776              	.L385:
 581:../USER/ttbasic.c **** 	value = iexp();
 3777              		.loc 1 581 2 is_stmt 1 view .LVU1167
 581:../USER/ttbasic.c **** 	value = iexp();
 3778              		.loc 1 581 5 is_stmt 0 view .LVU1168
 3779 0016 0133     		adds	r3, r3, #1
 3780 0018 2360     		str	r3, [r4]
 582:../USER/ttbasic.c **** 	if (err)
 3781              		.loc 1 582 2 is_stmt 1 view .LVU1169
 582:../USER/ttbasic.c **** 	if (err)
 3782              		.loc 1 582 10 is_stmt 0 view .LVU1170
 3783 001a FFF7FEFF 		bl	iexp
 3784              	.LVL378:
 583:../USER/ttbasic.c **** 		return 0;
 3785              		.loc 1 583 2 is_stmt 1 view .LVU1171
 583:../USER/ttbasic.c **** 		return 0;
 3786              		.loc 1 583 6 is_stmt 0 view .LVU1172
 3787 001e 074B     		ldr	r3, .L390+4
 583:../USER/ttbasic.c **** 		return 0;
 3788              		.loc 1 583 5 view .LVU1173
 3789 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3790 0022 32B9     		cbnz	r2, .L388
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3791              		.loc 1 586 2 is_stmt 1 view .LVU1174
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3792              		.loc 1 586 6 is_stmt 0 view .LVU1175
 3793 0024 2268     		ldr	r2, [r4]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3794              		.loc 1 586 5 view .LVU1176
 3795 0026 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3796 0028 1B29     		cmp	r1, #27
 3797 002a F0D1     		bne	.L387
 590:../USER/ttbasic.c **** 
 3798              		.loc 1 590 2 is_stmt 1 view .LVU1177
 590:../USER/ttbasic.c **** 
 3799              		.loc 1 590 5 is_stmt 0 view .LVU1178
 3800 002c 0132     		adds	r2, r2, #1
 3801 002e 2260     		str	r2, [r4]
 592:../USER/ttbasic.c **** }
 3802              		.loc 1 592 2 is_stmt 1 view .LVU1179
 593:../USER/ttbasic.c **** 
 3803              		.loc 1 593 1 is_stmt 0 view .LVU1180
 3804 0030 10BD     		pop	{r4, pc}
 3805              	.L388:
 584:../USER/ttbasic.c **** 
 3806              		.loc 1 584 10 view .LVU1181
 3807 0032 0020     		movs	r0, #0
 3808              	.LVL379:
 593:../USER/ttbasic.c **** 
 3809              		.loc 1 593 1 view .LVU1182
 3810 0034 10BD     		pop	{r4, pc}
 3811              	.L391:
 3812 0036 00BF     		.align	2
 3813              	.L390:
 3814 0038 00000000 		.word	cip
 3815 003c 00000000 		.word	err
 3816              		.cfi_endproc
 3817              	.LFE24:
 3819              		.section	.text.ivalue,"ax",%progbits
 3820              		.align	1
 3821              		.p2align 2,,3
 3822              		.global	ivalue
 3823              		.syntax unified
 3824              		.thumb
 3825              		.thumb_func
 3826              		.fpu softvfp
 3828              	ivalue:
 3829              	.LFB25:
 596:../USER/ttbasic.c **** 	short value;
 3830              		.loc 1 596 16 is_stmt 1 view -0
 3831              		.cfi_startproc
 3832              		@ args = 0, pretend = 0, frame = 0
 3833              		@ frame_needed = 0, uses_anonymous_args = 0
 3834 0000 70B5     		push	{r4, r5, r6, lr}
 3835              		.cfi_def_cfa_offset 16
 3836              		.cfi_offset 4, -16
 3837              		.cfi_offset 5, -12
 3838              		.cfi_offset 6, -8
 3839              		.cfi_offset 14, -4
 596:../USER/ttbasic.c **** 	short value;
 3840              		.loc 1 596 16 is_stmt 0 view .LVU1184
 3841 0002 0126     		movs	r6, #1
 3842 0004 774D     		ldr	r5, .L434
 3843              	.L393:
 597:../USER/ttbasic.c **** 
 3844              		.loc 1 597 2 is_stmt 1 view .LVU1185
 599:../USER/ttbasic.c **** 	case I_NUM:
 3845              		.loc 1 599 2 view .LVU1186
 599:../USER/ttbasic.c **** 	case I_NUM:
 3846              		.loc 1 599 10 is_stmt 0 view .LVU1187
 3847 0006 2A68     		ldr	r2, [r5]
 599:../USER/ttbasic.c **** 	case I_NUM:
 3848              		.loc 1 599 2 view .LVU1188
 3849 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3850 000a 163B     		subs	r3, r3, #22
 3851 000c 142B     		cmp	r3, #20
 3852 000e 76D8     		bhi	.L394
 3853 0010 DFE803F0 		tbb	[pc, r3]
 3854              	.L396:
 3855 0014 15       		.byte	(.L404-.L396)/2
 3856 0015 1A       		.byte	(.L403-.L396)/2
 3857 0016 75       		.byte	(.L394-.L396)/2
 3858 0017 75       		.byte	(.L394-.L396)/2
 3859 0018 1D       		.byte	(.L402-.L396)/2
 3860 0019 75       		.byte	(.L394-.L396)/2
 3861 001a 75       		.byte	(.L394-.L396)/2
 3862 001b 75       		.byte	(.L394-.L396)/2
 3863 001c 75       		.byte	(.L394-.L396)/2
 3864 001d 75       		.byte	(.L394-.L396)/2
 3865 001e 75       		.byte	(.L394-.L396)/2
 3866 001f 75       		.byte	(.L394-.L396)/2
 3867 0020 2E       		.byte	(.L401-.L396)/2
 3868 0021 3B       		.byte	(.L400-.L396)/2
 3869 0022 45       		.byte	(.L399-.L396)/2
 3870 0023 5F       		.byte	(.L398-.L396)/2
 3871 0024 75       		.byte	(.L394-.L396)/2
 3872 0025 75       		.byte	(.L394-.L396)/2
 3873 0026 75       		.byte	(.L394-.L396)/2
 3874 0027 69       		.byte	(.L397-.L396)/2
 3875 0028 0B       		.byte	(.L395-.L396)/2
 3876 0029 00       		.p2align 1
 3877              	.L395:
 614:../USER/ttbasic.c **** 		value = var[*cip++];
 3878              		.loc 1 614 3 is_stmt 1 view .LVU1189
 615:../USER/ttbasic.c **** 		break;
 3879              		.loc 1 615 3 view .LVU1190
 615:../USER/ttbasic.c **** 		break;
 3880              		.loc 1 615 19 is_stmt 0 view .LVU1191
 3881 002a 931C     		adds	r3, r2, #2
 3882 002c 2B60     		str	r3, [r5]
 3883              	.LVL380:
 616:../USER/ttbasic.c **** 	case I_OPEN:
 3884              		.loc 1 616 3 is_stmt 1 view .LVU1192
 615:../USER/ttbasic.c **** 		break;
 3885              		.loc 1 615 15 is_stmt 0 view .LVU1193
 3886 002e 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 3887              	.LVL381:
 615:../USER/ttbasic.c **** 		break;
 3888              		.loc 1 615 9 view .LVU1194
 3889 0030 6D4B     		ldr	r3, .L434+4
 3890              	.LVL382:
 615:../USER/ttbasic.c **** 		break;
 3891              		.loc 1 615 9 view .LVU1195
 3892 0032 33F81200 		ldrh	r0, [r3, r2, lsl #1]
 3893 0036 00FB06F0 		mul	r0, r0, r6
 3894 003a 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 3895              		.loc 1 667 1 view .LVU1196
 3896 003c 70BD     		pop	{r4, r5, r6, pc}
 3897              	.LVL383:
 3898              	.L404:
 610:../USER/ttbasic.c **** 		value = 0 - ivalue();
 3899              		.loc 1 610 3 is_stmt 1 view .LVU1197
 610:../USER/ttbasic.c **** 		value = 0 - ivalue();
 3900              		.loc 1 610 6 is_stmt 0 view .LVU1198
 3901 003e 0132     		adds	r2, r2, #1
 3902 0040 7042     		rsbs	r0, r6, #0
 3903 0042 2A60     		str	r2, [r5]
 611:../USER/ttbasic.c **** 		break;
 3904              		.loc 1 611 3 is_stmt 1 view .LVU1199
 3905 0044 06B2     		sxth	r6, r0
 612:../USER/ttbasic.c **** 	case I_VAR:
 3906              		.loc 1 612 3 is_stmt 0 view .LVU1200
 3907 0046 DEE7     		b	.L393
 3908              	.L403:
 606:../USER/ttbasic.c **** 		value = ivalue();
 3909              		.loc 1 606 3 is_stmt 1 view .LVU1201
 606:../USER/ttbasic.c **** 		value = ivalue();
 3910              		.loc 1 606 6 is_stmt 0 view .LVU1202
 3911 0048 0132     		adds	r2, r2, #1
 3912 004a 2A60     		str	r2, [r5]
 607:../USER/ttbasic.c **** 		break;
 3913              		.loc 1 607 3 is_stmt 1 view .LVU1203
 608:../USER/ttbasic.c **** 	case I_MINUS:
 3914              		.loc 1 608 3 is_stmt 0 view .LVU1204
 3915 004c DBE7     		b	.L393
 3916              	.L402:
 618:../USER/ttbasic.c **** 		break;
 3917              		.loc 1 618 3 is_stmt 1 view .LVU1205
 3918              	.LBB438:
 3919              	.LBI438:
 574:../USER/ttbasic.c **** 	short value;
 3920              		.loc 1 574 7 view .LVU1206
 3921              	.LBB439:
 575:../USER/ttbasic.c **** 
 3922              		.loc 1 575 2 view .LVU1207
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3923              		.loc 1 577 2 view .LVU1208
 581:../USER/ttbasic.c **** 	value = iexp();
 3924              		.loc 1 581 2 view .LVU1209
 581:../USER/ttbasic.c **** 	value = iexp();
 3925              		.loc 1 581 5 is_stmt 0 view .LVU1210
 3926 004e 0132     		adds	r2, r2, #1
 3927 0050 2A60     		str	r2, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 3928              		.loc 1 582 2 is_stmt 1 view .LVU1211
 582:../USER/ttbasic.c **** 	if (err)
 3929              		.loc 1 582 10 is_stmt 0 view .LVU1212
 3930 0052 FFF7FEFF 		bl	iexp
 3931              	.LVL384:
 583:../USER/ttbasic.c **** 		return 0;
 3932              		.loc 1 583 2 is_stmt 1 view .LVU1213
 583:../USER/ttbasic.c **** 		return 0;
 3933              		.loc 1 583 6 is_stmt 0 view .LVU1214
 3934 0056 654B     		ldr	r3, .L434+8
 583:../USER/ttbasic.c **** 		return 0;
 3935              		.loc 1 583 5 view .LVU1215
 3936 0058 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3937 005a F2B9     		cbnz	r2, .L407
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3938              		.loc 1 586 2 is_stmt 1 view .LVU1216
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3939              		.loc 1 586 6 is_stmt 0 view .LVU1217
 3940 005c 2A68     		ldr	r2, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3941              		.loc 1 586 5 view .LVU1218
 3942 005e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3943 0060 1B29     		cmp	r1, #27
 3944 0062 0ED1     		bne	.L413
 590:../USER/ttbasic.c **** 
 3945              		.loc 1 590 2 is_stmt 1 view .LVU1219
 3946 0064 00FB06F0 		mul	r0, r0, r6
 3947              	.LVL385:
 590:../USER/ttbasic.c **** 
 3948              		.loc 1 590 5 is_stmt 0 view .LVU1220
 3949 0068 0132     		adds	r2, r2, #1
 3950 006a 00B2     		sxth	r0, r0
 3951 006c 2A60     		str	r2, [r5]
 592:../USER/ttbasic.c **** }
 3952              		.loc 1 592 2 is_stmt 1 view .LVU1221
 3953              	.LBE439:
 3954              	.LBE438:
 667:../USER/ttbasic.c **** 
 3955              		.loc 1 667 1 is_stmt 0 view .LVU1222
 3956 006e 70BD     		pop	{r4, r5, r6, pc}
 3957              	.L401:
 621:../USER/ttbasic.c **** 		if(*cip==I_ARRAY) {
 3958              		.loc 1 621 3 is_stmt 1 view .LVU1223
 621:../USER/ttbasic.c **** 		if(*cip==I_ARRAY) {
 3959              		.loc 1 621 6 is_stmt 0 view .LVU1224
 3960 0070 531C     		adds	r3, r2, #1
 3961 0072 2B60     		str	r3, [r5]
 622:../USER/ttbasic.c **** 			cip++;
 3962              		.loc 1 622 3 is_stmt 1 view .LVU1225
 622:../USER/ttbasic.c **** 			cip++;
 3963              		.loc 1 622 6 is_stmt 0 view .LVU1226
 3964 0074 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 622:../USER/ttbasic.c **** 			cip++;
 3965              		.loc 1 622 5 view .LVU1227
 3966 0076 222B     		cmp	r3, #34
 3967 0078 46D0     		beq	.L432
 627:../USER/ttbasic.c **** 		if (err)
 3968              		.loc 1 627 3 is_stmt 1 view .LVU1228
 3969              	.LBB441:
 3970              	.LBI441:
 574:../USER/ttbasic.c **** 	short value;
 3971              		.loc 1 574 7 view .LVU1229
 3972              	.LBB442:
 575:../USER/ttbasic.c **** 
 3973              		.loc 1 575 2 view .LVU1230
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3974              		.loc 1 577 2 view .LVU1231
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 3975              		.loc 1 577 5 is_stmt 0 view .LVU1232
 3976 007a 1A2B     		cmp	r3, #26
 3977 007c 00F08180 		beq	.L428
 3978              	.L431:
 3979 0080 5A4B     		ldr	r3, .L434+8
 3980              	.L413:
 3981              	.LBE442:
 3982              	.LBE441:
 3983              	.LBB445:
 3984              	.LBB440:
 587:../USER/ttbasic.c **** 		return 0;
 3985              		.loc 1 587 3 is_stmt 1 view .LVU1233
 587:../USER/ttbasic.c **** 		return 0;
 3986              		.loc 1 587 7 is_stmt 0 view .LVU1234
 3987 0082 1122     		movs	r2, #17
 3988 0084 1A70     		strb	r2, [r3]
 588:../USER/ttbasic.c **** 	}
 3989              		.loc 1 588 3 is_stmt 1 view .LVU1235
 587:../USER/ttbasic.c **** 		return 0;
 3990              		.loc 1 587 7 is_stmt 0 view .LVU1236
 3991 0086 0020     		movs	r0, #0
 3992              	.LBE440:
 3993              	.LBE445:
 667:../USER/ttbasic.c **** 
 3994              		.loc 1 667 1 view .LVU1237
 3995 0088 70BD     		pop	{r4, r5, r6, pc}
 3996              	.L400:
 637:../USER/ttbasic.c **** 		value = getparam();
 3997              		.loc 1 637 3 is_stmt 1 view .LVU1238
 637:../USER/ttbasic.c **** 		value = getparam();
 3998              		.loc 1 637 6 is_stmt 0 view .LVU1239
 3999 008a 531C     		adds	r3, r2, #1
 4000 008c 2B60     		str	r3, [r5]
 638:../USER/ttbasic.c **** 		if (err)
 4001              		.loc 1 638 3 is_stmt 1 view .LVU1240
 4002              	.LBB446:
 4003              	.LBI446:
 574:../USER/ttbasic.c **** 	short value;
 4004              		.loc 1 574 7 view .LVU1241
 4005              	.LBB447:
 575:../USER/ttbasic.c **** 
 4006              		.loc 1 575 2 view .LVU1242
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4007              		.loc 1 577 2 view .LVU1243
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4008              		.loc 1 577 5 is_stmt 0 view .LVU1244
 4009 008e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4010 0090 1A2B     		cmp	r3, #26
 4011 0092 5DD0     		beq	.L415
 4012 0094 554B     		ldr	r3, .L434+8
 4013              	.L416:
 578:../USER/ttbasic.c **** 		return 0;
 4014              		.loc 1 578 3 is_stmt 1 view .LVU1245
 578:../USER/ttbasic.c **** 		return 0;
 4015              		.loc 1 578 7 is_stmt 0 view .LVU1246
 4016 0096 1122     		movs	r2, #17
 4017 0098 1A70     		strb	r2, [r3]
 579:../USER/ttbasic.c **** 	}
 4018              		.loc 1 579 3 is_stmt 1 view .LVU1247
 4019              	.L407:
 4020              	.LVL386:
 579:../USER/ttbasic.c **** 	}
 4021              		.loc 1 579 3 is_stmt 0 view .LVU1248
 4022              	.LBE447:
 4023              	.LBE446:
 639:../USER/ttbasic.c **** 			break;
 4024              		.loc 1 639 3 is_stmt 1 view .LVU1249
 4025              	.LBB449:
 4026              	.LBB450:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4027              		.loc 1 457 2 is_stmt 0 view .LVU1250
 4028 009a 0020     		movs	r0, #0
 4029              	.LVL387:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4030              		.loc 1 457 2 view .LVU1251
 4031              	.LBE450:
 4032              	.LBE449:
 666:../USER/ttbasic.c **** }
 4033              		.loc 1 666 2 is_stmt 1 view .LVU1252
 667:../USER/ttbasic.c **** 
 4034              		.loc 1 667 1 is_stmt 0 view .LVU1253
 4035 009c 70BD     		pop	{r4, r5, r6, pc}
 4036              	.L399:
 645:../USER/ttbasic.c **** 		value = getparam();
 4037              		.loc 1 645 3 is_stmt 1 view .LVU1254
 645:../USER/ttbasic.c **** 		value = getparam();
 4038              		.loc 1 645 6 is_stmt 0 view .LVU1255
 4039 009e 531C     		adds	r3, r2, #1
 4040 00a0 2B60     		str	r3, [r5]
 646:../USER/ttbasic.c **** 		if (err)
 4041              		.loc 1 646 3 is_stmt 1 view .LVU1256
 4042              	.LBB455:
 4043              	.LBI455:
 574:../USER/ttbasic.c **** 	short value;
 4044              		.loc 1 574 7 view .LVU1257
 4045              	.LBB456:
 575:../USER/ttbasic.c **** 
 4046              		.loc 1 575 2 view .LVU1258
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4047              		.loc 1 577 2 view .LVU1259
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4048              		.loc 1 577 5 is_stmt 0 view .LVU1260
 4049 00a2 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4050 00a4 1A2B     		cmp	r3, #26
 4051 00a6 EBD1     		bne	.L431
 581:../USER/ttbasic.c **** 	value = iexp();
 4052              		.loc 1 581 2 is_stmt 1 view .LVU1261
 581:../USER/ttbasic.c **** 	value = iexp();
 4053              		.loc 1 581 5 is_stmt 0 view .LVU1262
 4054 00a8 0232     		adds	r2, r2, #2
 4055 00aa 2A60     		str	r2, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 4056              		.loc 1 582 2 is_stmt 1 view .LVU1263
 582:../USER/ttbasic.c **** 	if (err)
 4057              		.loc 1 582 10 is_stmt 0 view .LVU1264
 4058 00ac FFF7FEFF 		bl	iexp
 4059              	.LVL388:
 583:../USER/ttbasic.c **** 		return 0;
 4060              		.loc 1 583 2 is_stmt 1 view .LVU1265
 583:../USER/ttbasic.c **** 		return 0;
 4061              		.loc 1 583 6 is_stmt 0 view .LVU1266
 4062 00b0 4E4B     		ldr	r3, .L434+8
 583:../USER/ttbasic.c **** 		return 0;
 4063              		.loc 1 583 5 view .LVU1267
 4064 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4065 00b4 002A     		cmp	r2, #0
 4066 00b6 F0D1     		bne	.L407
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4067              		.loc 1 586 2 is_stmt 1 view .LVU1268
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4068              		.loc 1 586 6 is_stmt 0 view .LVU1269
 4069 00b8 2A68     		ldr	r2, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4070              		.loc 1 586 5 view .LVU1270
 4071 00ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4072 00bc 1B29     		cmp	r1, #27
 4073 00be E0D1     		bne	.L413
 590:../USER/ttbasic.c **** 
 4074              		.loc 1 590 2 is_stmt 1 view .LVU1271
 590:../USER/ttbasic.c **** 
 4075              		.loc 1 590 5 is_stmt 0 view .LVU1272
 4076 00c0 0132     		adds	r2, r2, #1
 4077              	.LBE456:
 4078              	.LBE455:
 649:../USER/ttbasic.c **** 			value *= -1;
 4079              		.loc 1 649 6 view .LVU1273
 4080 00c2 0028     		cmp	r0, #0
 4081              	.LBB458:
 4082              	.LBB457:
 590:../USER/ttbasic.c **** 
 4083              		.loc 1 590 5 view .LVU1274
 4084 00c4 2A60     		str	r2, [r5]
 592:../USER/ttbasic.c **** }
 4085              		.loc 1 592 2 is_stmt 1 view .LVU1275
 4086              	.LVL389:
 592:../USER/ttbasic.c **** }
 4087              		.loc 1 592 2 is_stmt 0 view .LVU1276
 4088              	.LBE457:
 4089              	.LBE458:
 647:../USER/ttbasic.c **** 			break;
 4090              		.loc 1 647 3 is_stmt 1 view .LVU1277
 649:../USER/ttbasic.c **** 			value *= -1;
 4091              		.loc 1 649 3 view .LVU1278
 649:../USER/ttbasic.c **** 			value *= -1;
 4092              		.loc 1 649 6 is_stmt 0 view .LVU1279
 4093 00c6 3FDA     		bge	.L420
 650:../USER/ttbasic.c **** 		break;
 4094              		.loc 1 650 4 is_stmt 1 view .LVU1280
 4095              	.LVL390:
 650:../USER/ttbasic.c **** 		break;
 4096              		.loc 1 650 10 is_stmt 0 view .LVU1281
 4097 00c8 4042     		rsbs	r0, r0, #0
 4098              	.LVL391:
 650:../USER/ttbasic.c **** 		break;
 4099              		.loc 1 650 10 view .LVU1282
 4100 00ca 00FB06F0 		mul	r0, r0, r6
 4101 00ce 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 4102              		.loc 1 667 1 view .LVU1283
 4103 00d0 70BD     		pop	{r4, r5, r6, pc}
 4104              	.L398:
 653:../USER/ttbasic.c **** 		if ((*cip != I_OPEN) || (*(cip + 1) != I_CLOSE)) {
 4105              		.loc 1 653 3 is_stmt 1 view .LVU1284
 653:../USER/ttbasic.c **** 		if ((*cip != I_OPEN) || (*(cip + 1) != I_CLOSE)) {
 4106              		.loc 1 653 6 is_stmt 0 view .LVU1285
 4107 00d2 531C     		adds	r3, r2, #1
 4108 00d4 2B60     		str	r3, [r5]
 654:../USER/ttbasic.c **** 			err = ERR_PAREN;
 4109              		.loc 1 654 3 is_stmt 1 view .LVU1286
 654:../USER/ttbasic.c **** 			err = ERR_PAREN;
 4110              		.loc 1 654 6 is_stmt 0 view .LVU1287
 4111 00d6 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 4112 00d8 1A2B     		cmp	r3, #26
 4113 00da 25D0     		beq	.L433
 4114              	.L418:
 655:../USER/ttbasic.c **** 			break;
 4115              		.loc 1 655 4 is_stmt 1 view .LVU1288
 655:../USER/ttbasic.c **** 			break;
 4116              		.loc 1 655 8 is_stmt 0 view .LVU1289
 4117 00dc 1122     		movs	r2, #17
 4118 00de 434B     		ldr	r3, .L434+8
 4119 00e0 0020     		movs	r0, #0
 4120 00e2 1A70     		strb	r2, [r3]
 656:../USER/ttbasic.c **** 		}
 4121              		.loc 1 656 4 is_stmt 1 view .LVU1290
 667:../USER/ttbasic.c **** 
 4122              		.loc 1 667 1 is_stmt 0 view .LVU1291
 4123 00e4 70BD     		pop	{r4, r5, r6, pc}
 4124              	.L397:
 601:../USER/ttbasic.c **** 		value = *cip | *(cip + 1) << 8;
 4125              		.loc 1 601 3 is_stmt 1 view .LVU1292
 601:../USER/ttbasic.c **** 		value = *cip | *(cip + 1) << 8;
 4126              		.loc 1 601 6 is_stmt 0 view .LVU1293
 4127 00e6 531C     		adds	r3, r2, #1
 4128 00e8 2B60     		str	r3, [r5]
 602:../USER/ttbasic.c **** 		cip += 2;
 4129              		.loc 1 602 3 is_stmt 1 view .LVU1294
 602:../USER/ttbasic.c **** 		cip += 2;
 4130              		.loc 1 602 18 is_stmt 0 view .LVU1295
 4131 00ea 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 602:../USER/ttbasic.c **** 		cip += 2;
 4132              		.loc 1 602 11 view .LVU1296
 4133 00ec 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 603:../USER/ttbasic.c **** 		break;
 4134              		.loc 1 603 7 view .LVU1297
 4135 00ee 0332     		adds	r2, r2, #3
 602:../USER/ttbasic.c **** 		cip += 2;
 4136              		.loc 1 602 9 view .LVU1298
 4137 00f0 40EA0320 		orr	r0, r0, r3, lsl #8
 4138              	.LVL392:
 603:../USER/ttbasic.c **** 		break;
 4139              		.loc 1 603 3 is_stmt 1 view .LVU1299
 4140 00f4 00FB06F0 		mul	r0, r0, r6
 4141              	.LVL393:
 603:../USER/ttbasic.c **** 		break;
 4142              		.loc 1 603 7 is_stmt 0 view .LVU1300
 4143 00f8 2A60     		str	r2, [r5]
 4144              	.LVL394:
 604:../USER/ttbasic.c **** 	case I_PLUS:
 4145              		.loc 1 604 3 is_stmt 1 view .LVU1301
 4146 00fa 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 4147              		.loc 1 667 1 is_stmt 0 view .LVU1302
 4148 00fc 70BD     		pop	{r4, r5, r6, pc}
 4149              	.L394:
 663:../USER/ttbasic.c **** 		break;
 4150              		.loc 1 663 3 is_stmt 1 view .LVU1303
 663:../USER/ttbasic.c **** 		break;
 4151              		.loc 1 663 7 is_stmt 0 view .LVU1304
 4152 00fe 1422     		movs	r2, #20
 4153 0100 3A4B     		ldr	r3, .L434+8
 4154 0102 0020     		movs	r0, #0
 4155 0104 1A70     		strb	r2, [r3]
 664:../USER/ttbasic.c **** 	}
 4156              		.loc 1 664 3 is_stmt 1 view .LVU1305
 667:../USER/ttbasic.c **** 
 4157              		.loc 1 667 1 is_stmt 0 view .LVU1306
 4158 0106 70BD     		pop	{r4, r5, r6, pc}
 4159              	.L432:
 623:../USER/ttbasic.c **** 			value = getparam();
 4160              		.loc 1 623 4 is_stmt 1 view .LVU1307
 623:../USER/ttbasic.c **** 			value = getparam();
 4161              		.loc 1 623 7 is_stmt 0 view .LVU1308
 4162 0108 931C     		adds	r3, r2, #2
 4163 010a 2B60     		str	r3, [r5]
 624:../USER/ttbasic.c **** 			value = aryex[value];
 4164              		.loc 1 624 4 is_stmt 1 view .LVU1309
 4165              	.LBB459:
 4166              	.LBI459:
 574:../USER/ttbasic.c **** 	short value;
 4167              		.loc 1 574 7 view .LVU1310
 4168              	.LBB460:
 575:../USER/ttbasic.c **** 
 4169              		.loc 1 575 2 view .LVU1311
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4170              		.loc 1 577 2 view .LVU1312
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4171              		.loc 1 577 5 is_stmt 0 view .LVU1313
 4172 010c 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 4173 010e 1A2B     		cmp	r3, #26
 4174 0110 55D0     		beq	.L410
 4175 0112 364B     		ldr	r3, .L434+8
 4176              	.L412:
 578:../USER/ttbasic.c **** 		return 0;
 4177              		.loc 1 578 3 is_stmt 1 view .LVU1314
 578:../USER/ttbasic.c **** 		return 0;
 4178              		.loc 1 578 7 is_stmt 0 view .LVU1315
 4179 0114 1122     		movs	r2, #17
 4180 0116 0020     		movs	r0, #0
 4181 0118 1A70     		strb	r2, [r3]
 579:../USER/ttbasic.c **** 	}
 4182              		.loc 1 579 3 is_stmt 1 view .LVU1316
 4183              	.L411:
 4184              	.LBE460:
 4185              	.LBE459:
 625:../USER/ttbasic.c **** 		} else {
 4186              		.loc 1 625 4 view .LVU1317
 4187              	.LVL395:
 625:../USER/ttbasic.c **** 		} else {
 4188              		.loc 1 625 10 is_stmt 0 view .LVU1318
 4189 011a 354B     		ldr	r3, .L434+12
 4190 011c 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 4191              	.LVL396:
 625:../USER/ttbasic.c **** 		} else {
 4192              		.loc 1 625 10 view .LVU1319
 4193 0120 00FB06F0 		mul	r0, r0, r6
 4194 0124 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 4195              		.loc 1 667 1 view .LVU1320
 4196 0126 70BD     		pop	{r4, r5, r6, pc}
 4197              	.L433:
 654:../USER/ttbasic.c **** 			err = ERR_PAREN;
 4198              		.loc 1 654 24 discriminator 1 view .LVU1321
 4199 0128 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 4200 012a 1B2B     		cmp	r3, #27
 4201 012c D6D1     		bne	.L418
 658:../USER/ttbasic.c **** 		value = getsize();
 4202              		.loc 1 658 3 is_stmt 1 view .LVU1322
 4203              	.LBB462:
 4204              	.LBB451:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4205              		.loc 1 457 21 is_stmt 0 view .LVU1323
 4206 012e 314B     		ldr	r3, .L434+16
 4207              	.LBE451:
 4208              	.LBE462:
 658:../USER/ttbasic.c **** 		value = getsize();
 4209              		.loc 1 658 7 view .LVU1324
 4210 0130 0332     		adds	r2, r2, #3
 4211              	.LBB463:
 4212              	.LBB452:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4213              		.loc 1 457 21 view .LVU1325
 4214 0132 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4215              	.LBE452:
 4216              	.LBE463:
 658:../USER/ttbasic.c **** 		value = getsize();
 4217              		.loc 1 658 7 view .LVU1326
 4218 0134 2A60     		str	r2, [r5]
 659:../USER/ttbasic.c **** 		break;
 4219              		.loc 1 659 3 is_stmt 1 view .LVU1327
 4220              	.LBB464:
 4221              	.LBI449:
 454:../USER/ttbasic.c **** 	unsigned char* lp;
 4222              		.loc 1 454 7 view .LVU1328
 4223              	.LBB453:
 455:../USER/ttbasic.c **** 
 4224              		.loc 1 455 2 view .LVU1329
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4225              		.loc 1 457 2 view .LVU1330
 4226              	.LVL397:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4227              		.loc 1 457 2 is_stmt 0 view .LVU1331
 4228 0136 0029     		cmp	r1, #0
 4229 0138 51D0     		beq	.L423
 4230              	.LVL398:
 4231              	.L421:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4232              		.loc 1 457 36 is_stmt 1 view .LVU1332
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4233              		.loc 1 457 29 is_stmt 0 view .LVU1333
 4234 013a 0B44     		add	r3, r3, r1
 4235              	.LVL399:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4236              		.loc 1 457 21 view .LVU1334
 4237 013c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4238              		.loc 1 457 2 view .LVU1335
 4239 013e 0029     		cmp	r1, #0
 4240 0140 FBD1     		bne	.L421
 4241 0142 2D48     		ldr	r0, .L434+20
 4242 0144 C01A     		subs	r0, r0, r3
 4243 0146 00B2     		sxth	r0, r0
 4244              	.LVL400:
 4245              	.L420:
 458:../USER/ttbasic.c **** }
 4246              		.loc 1 458 2 is_stmt 1 view .LVU1336
 458:../USER/ttbasic.c **** }
 4247              		.loc 1 458 2 is_stmt 0 view .LVU1337
 4248              	.LBE453:
 4249              	.LBE464:
 660:../USER/ttbasic.c **** 
 4250              		.loc 1 660 3 is_stmt 1 view .LVU1338
 4251 0148 00FB06F0 		mul	r0, r0, r6
 4252 014c 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 4253              		.loc 1 667 1 is_stmt 0 view .LVU1339
 4254 014e 70BD     		pop	{r4, r5, r6, pc}
 4255              	.L415:
 4256              	.LBB465:
 4257              	.LBB448:
 581:../USER/ttbasic.c **** 	value = iexp();
 4258              		.loc 1 581 2 is_stmt 1 view .LVU1340
 581:../USER/ttbasic.c **** 	value = iexp();
 4259              		.loc 1 581 5 is_stmt 0 view .LVU1341
 4260 0150 0232     		adds	r2, r2, #2
 4261 0152 2A60     		str	r2, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 4262              		.loc 1 582 2 is_stmt 1 view .LVU1342
 582:../USER/ttbasic.c **** 	if (err)
 4263              		.loc 1 582 10 is_stmt 0 view .LVU1343
 4264 0154 FFF7FEFF 		bl	iexp
 4265              	.LVL401:
 583:../USER/ttbasic.c **** 		return 0;
 4266              		.loc 1 583 6 view .LVU1344
 4267 0158 244B     		ldr	r3, .L434+8
 582:../USER/ttbasic.c **** 	if (err)
 4268              		.loc 1 582 10 view .LVU1345
 4269 015a 0446     		mov	r4, r0
 4270              	.LVL402:
 583:../USER/ttbasic.c **** 		return 0;
 4271              		.loc 1 583 2 is_stmt 1 view .LVU1346
 583:../USER/ttbasic.c **** 		return 0;
 4272              		.loc 1 583 5 is_stmt 0 view .LVU1347
 4273 015c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4274 015e 002A     		cmp	r2, #0
 4275 0160 9BD1     		bne	.L407
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4276              		.loc 1 586 2 is_stmt 1 view .LVU1348
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4277              		.loc 1 586 6 is_stmt 0 view .LVU1349
 4278 0162 2A68     		ldr	r2, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4279              		.loc 1 586 5 view .LVU1350
 4280 0164 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4281 0166 1B29     		cmp	r1, #27
 4282 0168 95D1     		bne	.L416
 590:../USER/ttbasic.c **** 
 4283              		.loc 1 590 2 is_stmt 1 view .LVU1351
 590:../USER/ttbasic.c **** 
 4284              		.loc 1 590 5 is_stmt 0 view .LVU1352
 4285 016a 0132     		adds	r2, r2, #1
 4286 016c 2A60     		str	r2, [r5]
 592:../USER/ttbasic.c **** }
 4287              		.loc 1 592 2 is_stmt 1 view .LVU1353
 4288              	.LVL403:
 592:../USER/ttbasic.c **** }
 4289              		.loc 1 592 2 is_stmt 0 view .LVU1354
 4290              	.LBE448:
 4291              	.LBE465:
 639:../USER/ttbasic.c **** 			break;
 4292              		.loc 1 639 3 is_stmt 1 view .LVU1355
 641:../USER/ttbasic.c **** 		}
 4293              		.loc 1 641 3 view .LVU1356
 4294              	.LBB466:
 4295              	.LBI466:
  59:../USER/ttbasic.c **** 	return (rand() % value) + 1;
 4296              		.loc 1 59 7 view .LVU1357
 4297              	.LBB467:
  60:../USER/ttbasic.c **** }
 4298              		.loc 1 60 2 view .LVU1358
  60:../USER/ttbasic.c **** }
 4299              		.loc 1 60 10 is_stmt 0 view .LVU1359
 4300 016e FFF7FEFF 		bl	rand
 4301              	.LVL404:
  60:../USER/ttbasic.c **** }
 4302              		.loc 1 60 17 view .LVU1360
 4303 0172 90FBF4F3 		sdiv	r3, r0, r4
 4304 0176 03FB1400 		mls	r0, r3, r4, r0
 4305              	.LVL405:
  60:../USER/ttbasic.c **** }
 4306              		.loc 1 60 17 view .LVU1361
 4307 017a 00FB0660 		mla	r0, r0, r6, r6
 4308 017e 00B2     		sxth	r0, r0
 4309              	.LBE467:
 4310              	.LBE466:
 667:../USER/ttbasic.c **** 
 4311              		.loc 1 667 1 view .LVU1362
 4312 0180 70BD     		pop	{r4, r5, r6, pc}
 4313              	.L428:
 4314              	.LBB468:
 4315              	.LBB443:
 581:../USER/ttbasic.c **** 	value = iexp();
 4316              		.loc 1 581 2 is_stmt 1 view .LVU1363
 581:../USER/ttbasic.c **** 	value = iexp();
 4317              		.loc 1 581 5 is_stmt 0 view .LVU1364
 4318 0182 0232     		adds	r2, r2, #2
 4319 0184 2A60     		str	r2, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 4320              		.loc 1 582 2 is_stmt 1 view .LVU1365
 582:../USER/ttbasic.c **** 	if (err)
 4321              		.loc 1 582 10 is_stmt 0 view .LVU1366
 4322 0186 FFF7FEFF 		bl	iexp
 4323              	.LVL406:
 583:../USER/ttbasic.c **** 		return 0;
 4324              		.loc 1 583 2 is_stmt 1 view .LVU1367
 583:../USER/ttbasic.c **** 		return 0;
 4325              		.loc 1 583 6 is_stmt 0 view .LVU1368
 4326 018a 184B     		ldr	r3, .L434+8
 583:../USER/ttbasic.c **** 		return 0;
 4327              		.loc 1 583 5 view .LVU1369
 4328 018c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4329 018e 002A     		cmp	r2, #0
 4330 0190 83D1     		bne	.L407
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4331              		.loc 1 586 2 is_stmt 1 view .LVU1370
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4332              		.loc 1 586 6 is_stmt 0 view .LVU1371
 4333 0192 2A68     		ldr	r2, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4334              		.loc 1 586 5 view .LVU1372
 4335 0194 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4336 0196 1B29     		cmp	r1, #27
 4337 0198 7FF473AF 		bne	.L413
 590:../USER/ttbasic.c **** 
 4338              		.loc 1 590 2 is_stmt 1 view .LVU1373
 590:../USER/ttbasic.c **** 
 4339              		.loc 1 590 5 is_stmt 0 view .LVU1374
 4340 019c 0132     		adds	r2, r2, #1
 4341              	.LBE443:
 4342              	.LBE468:
 630:../USER/ttbasic.c **** 			err = ERR_SOR;
 4343              		.loc 1 630 6 view .LVU1375
 4344 019e 3F28     		cmp	r0, #63
 4345              	.LBB469:
 4346              	.LBB444:
 590:../USER/ttbasic.c **** 
 4347              		.loc 1 590 5 view .LVU1376
 4348 01a0 2A60     		str	r2, [r5]
 592:../USER/ttbasic.c **** }
 4349              		.loc 1 592 2 is_stmt 1 view .LVU1377
 4350              	.LVL407:
 592:../USER/ttbasic.c **** }
 4351              		.loc 1 592 2 is_stmt 0 view .LVU1378
 4352              	.LBE444:
 4353              	.LBE469:
 628:../USER/ttbasic.c **** 			break;
 4354              		.loc 1 628 3 is_stmt 1 view .LVU1379
 630:../USER/ttbasic.c **** 			err = ERR_SOR;
 4355              		.loc 1 630 3 view .LVU1380
 630:../USER/ttbasic.c **** 			err = ERR_SOR;
 4356              		.loc 1 630 6 is_stmt 0 view .LVU1381
 4357 01a2 05DD     		ble	.L414
 631:../USER/ttbasic.c **** 			break;
 4358              		.loc 1 631 4 is_stmt 1 view .LVU1382
 631:../USER/ttbasic.c **** 			break;
 4359              		.loc 1 631 8 is_stmt 0 view .LVU1383
 4360 01a4 0322     		movs	r2, #3
 4361 01a6 00FB06F0 		mul	r0, r0, r6
 4362              	.LVL408:
 631:../USER/ttbasic.c **** 			break;
 4363              		.loc 1 631 8 view .LVU1384
 4364 01aa 1A70     		strb	r2, [r3]
 632:../USER/ttbasic.c **** 		}
 4365              		.loc 1 632 4 is_stmt 1 view .LVU1385
 4366 01ac 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 4367              		.loc 1 667 1 is_stmt 0 view .LVU1386
 4368 01ae 70BD     		pop	{r4, r5, r6, pc}
 4369              	.LVL409:
 4370              	.L414:
 634:../USER/ttbasic.c **** 		break;
 4371              		.loc 1 634 3 is_stmt 1 view .LVU1387
 635:../USER/ttbasic.c **** 	case I_RND:
 4372              		.loc 1 635 3 view .LVU1388
 634:../USER/ttbasic.c **** 		break;
 4373              		.loc 1 634 9 is_stmt 0 view .LVU1389
 4374 01b0 124B     		ldr	r3, .L434+24
 4375 01b2 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 4376              	.LVL410:
 634:../USER/ttbasic.c **** 		break;
 4377              		.loc 1 634 9 view .LVU1390
 4378 01b6 00FB06F0 		mul	r0, r0, r6
 4379 01ba 00B2     		sxth	r0, r0
 667:../USER/ttbasic.c **** 
 4380              		.loc 1 667 1 view .LVU1391
 4381 01bc 70BD     		pop	{r4, r5, r6, pc}
 4382              	.L410:
 4383              	.LBB470:
 4384              	.LBB461:
 581:../USER/ttbasic.c **** 	value = iexp();
 4385              		.loc 1 581 2 is_stmt 1 view .LVU1392
 581:../USER/ttbasic.c **** 	value = iexp();
 4386              		.loc 1 581 5 is_stmt 0 view .LVU1393
 4387 01be 0332     		adds	r2, r2, #3
 4388 01c0 2A60     		str	r2, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 4389              		.loc 1 582 2 is_stmt 1 view .LVU1394
 582:../USER/ttbasic.c **** 	if (err)
 4390              		.loc 1 582 10 is_stmt 0 view .LVU1395
 4391 01c2 FFF7FEFF 		bl	iexp
 4392              	.LVL411:
 583:../USER/ttbasic.c **** 		return 0;
 4393              		.loc 1 583 2 is_stmt 1 view .LVU1396
 583:../USER/ttbasic.c **** 		return 0;
 4394              		.loc 1 583 6 is_stmt 0 view .LVU1397
 4395 01c6 094B     		ldr	r3, .L434+8
 583:../USER/ttbasic.c **** 		return 0;
 4396              		.loc 1 583 5 view .LVU1398
 4397 01c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4398 01ca 32B9     		cbnz	r2, .L422
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4399              		.loc 1 586 2 is_stmt 1 view .LVU1399
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4400              		.loc 1 586 6 is_stmt 0 view .LVU1400
 4401 01cc 2A68     		ldr	r2, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 4402              		.loc 1 586 5 view .LVU1401
 4403 01ce 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4404 01d0 1B29     		cmp	r1, #27
 4405 01d2 9FD1     		bne	.L412
 590:../USER/ttbasic.c **** 
 4406              		.loc 1 590 2 is_stmt 1 view .LVU1402
 590:../USER/ttbasic.c **** 
 4407              		.loc 1 590 5 is_stmt 0 view .LVU1403
 4408 01d4 0132     		adds	r2, r2, #1
 4409 01d6 2A60     		str	r2, [r5]
 592:../USER/ttbasic.c **** }
 4410              		.loc 1 592 2 is_stmt 1 view .LVU1404
 4411 01d8 9FE7     		b	.L411
 4412              	.L422:
 583:../USER/ttbasic.c **** 		return 0;
 4413              		.loc 1 583 5 is_stmt 0 view .LVU1405
 4414 01da 0020     		movs	r0, #0
 4415              	.LVL412:
 583:../USER/ttbasic.c **** 		return 0;
 4416              		.loc 1 583 5 view .LVU1406
 4417 01dc 9DE7     		b	.L411
 4418              	.LVL413:
 4419              	.L423:
 583:../USER/ttbasic.c **** 		return 0;
 4420              		.loc 1 583 5 view .LVU1407
 4421              	.LBE461:
 4422              	.LBE470:
 4423              	.LBB471:
 4424              	.LBB454:
 457:../USER/ttbasic.c **** 	return listbuf + SIZE_LIST - lp - 1;
 4425              		.loc 1 457 2 view .LVU1408
 4426 01de 40F2FF70 		movw	r0, #2047
 4427 01e2 B1E7     		b	.L420
 4428              	.L435:
 4429              		.align	2
 4430              	.L434:
 4431 01e4 00000000 		.word	cip
 4432 01e8 00000000 		.word	var
 4433 01ec 00000000 		.word	err
 4434 01f0 00000000 		.word	aryex
 4435 01f4 00000000 		.word	listbuf
 4436 01f8 FF070000 		.word	listbuf+2047
 4437 01fc 00000000 		.word	arr
 4438              	.LBE454:
 4439              	.LBE471:
 4440              		.cfi_endproc
 4441              	.LFE25:
 4443              		.section	.text.imul,"ax",%progbits
 4444              		.align	1
 4445              		.p2align 2,,3
 4446              		.global	imul
 4447              		.syntax unified
 4448              		.thumb
 4449              		.thumb_func
 4450              		.fpu softvfp
 4452              	imul:
 4453              	.LFB26:
 670:../USER/ttbasic.c **** 	short value, tmp;
 4454              		.loc 1 670 14 is_stmt 1 view -0
 4455              		.cfi_startproc
 4456              		@ args = 0, pretend = 0, frame = 0
 4457              		@ frame_needed = 0, uses_anonymous_args = 0
 671:../USER/ttbasic.c **** 
 4458              		.loc 1 671 2 view .LVU1410
 673:../USER/ttbasic.c **** 	if (err)
 4459              		.loc 1 673 2 view .LVU1411
 670:../USER/ttbasic.c **** 	short value, tmp;
 4460              		.loc 1 670 14 is_stmt 0 view .LVU1412
 4461 0000 70B5     		push	{r4, r5, r6, lr}
 4462              		.cfi_def_cfa_offset 16
 4463              		.cfi_offset 4, -16
 4464              		.cfi_offset 5, -12
 4465              		.cfi_offset 6, -8
 4466              		.cfi_offset 14, -4
 674:../USER/ttbasic.c **** 		return -1;
 4467              		.loc 1 674 6 view .LVU1413
 4468 0002 134D     		ldr	r5, .L446
 673:../USER/ttbasic.c **** 	if (err)
 4469              		.loc 1 673 10 view .LVU1414
 4470 0004 FFF7FEFF 		bl	ivalue
 4471              	.LVL414:
 674:../USER/ttbasic.c **** 		return -1;
 4472              		.loc 1 674 2 is_stmt 1 view .LVU1415
 674:../USER/ttbasic.c **** 		return -1;
 4473              		.loc 1 674 5 is_stmt 0 view .LVU1416
 4474 0008 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4475 000a F3B9     		cbnz	r3, .L443
 4476 000c 0446     		mov	r4, r0
 4477 000e 114E     		ldr	r6, .L446+4
 4478              	.LVL415:
 4479              	.L438:
 677:../USER/ttbasic.c **** 		switch (*cip) {
 4480              		.loc 1 677 2 is_stmt 1 view .LVU1417
 678:../USER/ttbasic.c **** 		case I_MUL:
 4481              		.loc 1 678 3 view .LVU1418
 678:../USER/ttbasic.c **** 		case I_MUL:
 4482              		.loc 1 678 11 is_stmt 0 view .LVU1419
 4483 0010 3368     		ldr	r3, [r6]
 4484 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4485              		.loc 1 685 7 view .LVU1420
 4486 0014 0133     		adds	r3, r3, #1
 678:../USER/ttbasic.c **** 		case I_MUL:
 4487              		.loc 1 678 3 view .LVU1421
 4488 0016 182A     		cmp	r2, #24
 4489 0018 03D0     		beq	.L439
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4490              		.loc 1 685 4 is_stmt 1 view .LVU1422
 678:../USER/ttbasic.c **** 		case I_MUL:
 4491              		.loc 1 678 3 is_stmt 0 view .LVU1423
 4492 001a 192A     		cmp	r2, #25
 4493 001c 08D0     		beq	.L440
 4494              	.LVL416:
 4495              	.L437:
 696:../USER/ttbasic.c **** 
 4496              		.loc 1 696 1 view .LVU1424
 4497 001e 2046     		mov	r0, r4
 4498 0020 70BD     		pop	{r4, r5, r6, pc}
 4499              	.LVL417:
 4500              	.L439:
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4501              		.loc 1 680 4 is_stmt 1 view .LVU1425
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4502              		.loc 1 680 7 is_stmt 0 view .LVU1426
 4503 0022 3360     		str	r3, [r6]
 681:../USER/ttbasic.c **** 			value *= tmp;
 4504              		.loc 1 681 4 is_stmt 1 view .LVU1427
 681:../USER/ttbasic.c **** 			value *= tmp;
 4505              		.loc 1 681 10 is_stmt 0 view .LVU1428
 4506 0024 FFF7FEFF 		bl	ivalue
 4507              	.LVL418:
 682:../USER/ttbasic.c **** 			break;
 4508              		.loc 1 682 4 is_stmt 1 view .LVU1429
 682:../USER/ttbasic.c **** 			break;
 4509              		.loc 1 682 10 is_stmt 0 view .LVU1430
 4510 0028 04FB00F4 		mul	r4, r4, r0
 4511              	.LVL419:
 682:../USER/ttbasic.c **** 			break;
 4512              		.loc 1 682 10 view .LVU1431
 4513 002c 24B2     		sxth	r4, r4
 4514              	.LVL420:
 683:../USER/ttbasic.c **** 		case I_DIV:
 4515              		.loc 1 683 4 is_stmt 1 view .LVU1432
 4516 002e EFE7     		b	.L438
 4517              	.LVL421:
 4518              	.L440:
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4519              		.loc 1 685 7 is_stmt 0 view .LVU1433
 4520 0030 3360     		str	r3, [r6]
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4521              		.loc 1 686 4 is_stmt 1 view .LVU1434
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4522              		.loc 1 686 10 is_stmt 0 view .LVU1435
 4523 0032 FFF7FEFF 		bl	ivalue
 4524              	.LVL422:
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4525              		.loc 1 687 4 is_stmt 1 view .LVU1436
 691:../USER/ttbasic.c **** 			break;
 4526              		.loc 1 691 4 view .LVU1437
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4527              		.loc 1 687 7 is_stmt 0 view .LVU1438
 4528 0036 18B1     		cbz	r0, .L445
 691:../USER/ttbasic.c **** 			break;
 4529              		.loc 1 691 10 view .LVU1439
 4530 0038 94FBF0F4 		sdiv	r4, r4, r0
 4531              	.LVL423:
 691:../USER/ttbasic.c **** 			break;
 4532              		.loc 1 691 10 view .LVU1440
 4533 003c 24B2     		sxth	r4, r4
 4534              	.LVL424:
 692:../USER/ttbasic.c **** 		default:
 4535              		.loc 1 692 4 is_stmt 1 view .LVU1441
 4536 003e E7E7     		b	.L438
 4537              	.L445:
 688:../USER/ttbasic.c **** 				return -1;
 4538              		.loc 1 688 5 view .LVU1442
 688:../USER/ttbasic.c **** 				return -1;
 4539              		.loc 1 688 9 is_stmt 0 view .LVU1443
 4540 0040 0123     		movs	r3, #1
 689:../USER/ttbasic.c **** 			}
 4541              		.loc 1 689 12 view .LVU1444
 4542 0042 4FF0FF34 		mov	r4, #-1
 4543              	.LVL425:
 688:../USER/ttbasic.c **** 				return -1;
 4544              		.loc 1 688 9 view .LVU1445
 4545 0046 2B70     		strb	r3, [r5]
 689:../USER/ttbasic.c **** 			}
 4546              		.loc 1 689 5 is_stmt 1 view .LVU1446
 689:../USER/ttbasic.c **** 			}
 4547              		.loc 1 689 12 is_stmt 0 view .LVU1447
 4548 0048 E9E7     		b	.L437
 4549              	.LVL426:
 4550              	.L443:
 675:../USER/ttbasic.c **** 
 4551              		.loc 1 675 10 view .LVU1448
 4552 004a 4FF0FF34 		mov	r4, #-1
 4553 004e E6E7     		b	.L437
 4554              	.L447:
 4555              		.align	2
 4556              	.L446:
 4557 0050 00000000 		.word	err
 4558 0054 00000000 		.word	cip
 4559              		.cfi_endproc
 4560              	.LFE26:
 4562              		.section	.text.iplus,"ax",%progbits
 4563              		.align	1
 4564              		.p2align 2,,3
 4565              		.global	iplus
 4566              		.syntax unified
 4567              		.thumb
 4568              		.thumb_func
 4569              		.fpu softvfp
 4571              	iplus:
 4572              	.LFB27:
 699:../USER/ttbasic.c **** 	short value, tmp;
 4573              		.loc 1 699 15 is_stmt 1 view -0
 4574              		.cfi_startproc
 4575              		@ args = 0, pretend = 0, frame = 0
 4576              		@ frame_needed = 0, uses_anonymous_args = 0
 700:../USER/ttbasic.c **** 
 4577              		.loc 1 700 2 view .LVU1450
 702:../USER/ttbasic.c **** 	if (err)
 4578              		.loc 1 702 2 view .LVU1451
 4579              	.LBB478:
 4580              	.LBI478:
 670:../USER/ttbasic.c **** 	short value, tmp;
 4581              		.loc 1 670 7 view .LVU1452
 4582              	.LBB479:
 671:../USER/ttbasic.c **** 
 4583              		.loc 1 671 2 view .LVU1453
 673:../USER/ttbasic.c **** 	if (err)
 4584              		.loc 1 673 2 view .LVU1454
 4585              	.LBE479:
 4586              	.LBE478:
 699:../USER/ttbasic.c **** 	short value, tmp;
 4587              		.loc 1 699 15 is_stmt 0 view .LVU1455
 4588 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4589              		.cfi_def_cfa_offset 24
 4590              		.cfi_offset 4, -24
 4591              		.cfi_offset 5, -20
 4592              		.cfi_offset 6, -16
 4593              		.cfi_offset 7, -12
 4594              		.cfi_offset 8, -8
 4595              		.cfi_offset 14, -4
 4596              	.LBB483:
 4597              	.LBB480:
 674:../USER/ttbasic.c **** 		return -1;
 4598              		.loc 1 674 6 view .LVU1456
 4599 0004 4C4E     		ldr	r6, .L483
 673:../USER/ttbasic.c **** 	if (err)
 4600              		.loc 1 673 10 view .LVU1457
 4601 0006 FFF7FEFF 		bl	ivalue
 4602              	.LVL427:
 674:../USER/ttbasic.c **** 		return -1;
 4603              		.loc 1 674 2 is_stmt 1 view .LVU1458
 674:../USER/ttbasic.c **** 		return -1;
 4604              		.loc 1 674 5 is_stmt 0 view .LVU1459
 4605 000a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4606 000c 002B     		cmp	r3, #0
 4607 000e 3FD1     		bne	.L449
 4608 0010 8046     		mov	r8, r0
 4609 0012 4A4C     		ldr	r4, .L483+4
 4610              	.LVL428:
 4611              	.L450:
 677:../USER/ttbasic.c **** 		switch (*cip) {
 4612              		.loc 1 677 2 is_stmt 1 view .LVU1460
 678:../USER/ttbasic.c **** 		case I_MUL:
 4613              		.loc 1 678 3 view .LVU1461
 678:../USER/ttbasic.c **** 		case I_MUL:
 4614              		.loc 1 678 11 is_stmt 0 view .LVU1462
 4615 0014 2368     		ldr	r3, [r4]
 4616 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 678:../USER/ttbasic.c **** 		case I_MUL:
 4617              		.loc 1 678 3 view .LVU1463
 4618 0018 182A     		cmp	r2, #24
 4619 001a 4BD0     		beq	.L451
 4620              	.L479:
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4621              		.loc 1 685 4 is_stmt 1 view .LVU1464
 678:../USER/ttbasic.c **** 		case I_MUL:
 4622              		.loc 1 678 3 is_stmt 0 view .LVU1465
 4623 001c 192A     		cmp	r2, #25
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4624              		.loc 1 685 7 view .LVU1466
 4625 001e 03F10101 		add	r1, r3, #1
 678:../USER/ttbasic.c **** 		case I_MUL:
 4626              		.loc 1 678 3 view .LVU1467
 4627 0022 3AD0     		beq	.L452
 4628              	.LVL429:
 678:../USER/ttbasic.c **** 		case I_MUL:
 4629              		.loc 1 678 3 view .LVU1468
 4630              	.LBE480:
 4631              	.LBE483:
 703:../USER/ttbasic.c **** 		return -1;
 4632              		.loc 1 703 2 is_stmt 1 view .LVU1469
 703:../USER/ttbasic.c **** 		return -1;
 4633              		.loc 1 703 5 is_stmt 0 view .LVU1470
 4634 0024 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 4635 0026 0029     		cmp	r1, #0
 4636 0028 32D1     		bne	.L449
 4637              	.LBB484:
 4638              	.LBB485:
 688:../USER/ttbasic.c **** 				return -1;
 4639              		.loc 1 688 9 view .LVU1471
 4640 002a 0127     		movs	r7, #1
 4641              	.L456:
 688:../USER/ttbasic.c **** 				return -1;
 4642              		.loc 1 688 9 view .LVU1472
 4643              	.LBE485:
 4644              	.LBE484:
 706:../USER/ttbasic.c **** 		switch (*cip) {
 4645              		.loc 1 706 2 is_stmt 1 view .LVU1473
 707:../USER/ttbasic.c **** 		case I_PLUS:
 4646              		.loc 1 707 3 view .LVU1474
 4647 002c 162A     		cmp	r2, #22
 4648 002e 17D0     		beq	.L457
 4649              	.L477:
 707:../USER/ttbasic.c **** 		case I_PLUS:
 4650              		.loc 1 707 3 is_stmt 0 view .LVU1475
 4651 0030 172A     		cmp	r2, #23
 4652 0032 2FD1     		bne	.L474
 709:../USER/ttbasic.c **** 			tmp = imul();
 4653              		.loc 1 709 4 is_stmt 1 view .LVU1476
 709:../USER/ttbasic.c **** 			tmp = imul();
 4654              		.loc 1 709 7 is_stmt 0 view .LVU1477
 4655 0034 0133     		adds	r3, r3, #1
 4656 0036 2360     		str	r3, [r4]
 710:../USER/ttbasic.c **** 			value += tmp;
 4657              		.loc 1 710 4 is_stmt 1 view .LVU1478
 4658              	.LBB490:
 4659              	.LBI490:
 670:../USER/ttbasic.c **** 	short value, tmp;
 4660              		.loc 1 670 7 view .LVU1479
 4661              	.LBB491:
 671:../USER/ttbasic.c **** 
 4662              		.loc 1 671 2 view .LVU1480
 673:../USER/ttbasic.c **** 	if (err)
 4663              		.loc 1 673 2 view .LVU1481
 673:../USER/ttbasic.c **** 	if (err)
 4664              		.loc 1 673 10 is_stmt 0 view .LVU1482
 4665 0038 FFF7FEFF 		bl	ivalue
 4666              	.LVL430:
 674:../USER/ttbasic.c **** 		return -1;
 4667              		.loc 1 674 5 view .LVU1483
 4668 003c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 673:../USER/ttbasic.c **** 	if (err)
 4669              		.loc 1 673 10 view .LVU1484
 4670 003e 0546     		mov	r5, r0
 4671              	.LVL431:
 674:../USER/ttbasic.c **** 		return -1;
 4672              		.loc 1 674 2 is_stmt 1 view .LVU1485
 674:../USER/ttbasic.c **** 		return -1;
 4673              		.loc 1 674 5 is_stmt 0 view .LVU1486
 4674 0040 002B     		cmp	r3, #0
 4675 0042 6FD1     		bne	.L459
 4676              	.L460:
 677:../USER/ttbasic.c **** 		switch (*cip) {
 4677              		.loc 1 677 2 is_stmt 1 view .LVU1487
 678:../USER/ttbasic.c **** 		case I_MUL:
 4678              		.loc 1 678 3 view .LVU1488
 678:../USER/ttbasic.c **** 		case I_MUL:
 4679              		.loc 1 678 11 is_stmt 0 view .LVU1489
 4680 0044 2368     		ldr	r3, [r4]
 4681 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 678:../USER/ttbasic.c **** 		case I_MUL:
 4682              		.loc 1 678 3 view .LVU1490
 4683 0048 182A     		cmp	r2, #24
 4684 004a 3CD0     		beq	.L461
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4685              		.loc 1 685 4 is_stmt 1 view .LVU1491
 678:../USER/ttbasic.c **** 		case I_MUL:
 4686              		.loc 1 678 3 is_stmt 0 view .LVU1492
 4687 004c 192A     		cmp	r2, #25
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4688              		.loc 1 685 7 view .LVU1493
 4689 004e 03F10101 		add	r1, r3, #1
 678:../USER/ttbasic.c **** 		case I_MUL:
 4690              		.loc 1 678 3 view .LVU1494
 4691 0052 40D0     		beq	.L462
 4692 0054 A8B2     		uxth	r0, r5
 4693              	.L463:
 4694              	.LVL432:
 678:../USER/ttbasic.c **** 		case I_MUL:
 4695              		.loc 1 678 3 view .LVU1495
 4696              	.LBE491:
 4697              	.LBE490:
 711:../USER/ttbasic.c **** 			break;
 4698              		.loc 1 711 4 is_stmt 1 view .LVU1496
 711:../USER/ttbasic.c **** 			break;
 4699              		.loc 1 711 10 is_stmt 0 view .LVU1497
 4700 0056 4044     		add	r0, r0, r8
 707:../USER/ttbasic.c **** 		case I_PLUS:
 4701              		.loc 1 707 3 view .LVU1498
 4702 0058 162A     		cmp	r2, #22
 711:../USER/ttbasic.c **** 			break;
 4703              		.loc 1 711 10 view .LVU1499
 4704 005a 0FFA80F8 		sxth	r8, r0
 4705              	.LVL433:
 712:../USER/ttbasic.c **** 		case I_MINUS:
 4706              		.loc 1 712 4 is_stmt 1 view .LVU1500
 706:../USER/ttbasic.c **** 		switch (*cip) {
 4707              		.loc 1 706 2 view .LVU1501
 707:../USER/ttbasic.c **** 		case I_PLUS:
 4708              		.loc 1 707 3 view .LVU1502
 4709 005e E7D1     		bne	.L477
 4710              	.L457:
 714:../USER/ttbasic.c **** 			tmp = imul();
 4711              		.loc 1 714 4 view .LVU1503
 714:../USER/ttbasic.c **** 			tmp = imul();
 4712              		.loc 1 714 7 is_stmt 0 view .LVU1504
 4713 0060 0133     		adds	r3, r3, #1
 4714 0062 2360     		str	r3, [r4]
 715:../USER/ttbasic.c **** 			value -= tmp;
 4715              		.loc 1 715 4 is_stmt 1 view .LVU1505
 4716              	.LBB495:
 4717              	.LBI484:
 670:../USER/ttbasic.c **** 	short value, tmp;
 4718              		.loc 1 670 7 view .LVU1506
 4719              	.LBB486:
 671:../USER/ttbasic.c **** 
 4720              		.loc 1 671 2 view .LVU1507
 673:../USER/ttbasic.c **** 	if (err)
 4721              		.loc 1 673 2 view .LVU1508
 673:../USER/ttbasic.c **** 	if (err)
 4722              		.loc 1 673 10 is_stmt 0 view .LVU1509
 4723 0064 FFF7FEFF 		bl	ivalue
 4724              	.LVL434:
 674:../USER/ttbasic.c **** 		return -1;
 4725              		.loc 1 674 5 view .LVU1510
 4726 0068 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 673:../USER/ttbasic.c **** 	if (err)
 4727              		.loc 1 673 10 view .LVU1511
 4728 006a 0546     		mov	r5, r0
 4729              	.LVL435:
 674:../USER/ttbasic.c **** 		return -1;
 4730              		.loc 1 674 2 is_stmt 1 view .LVU1512
 674:../USER/ttbasic.c **** 		return -1;
 4731              		.loc 1 674 5 is_stmt 0 view .LVU1513
 4732 006c 002B     		cmp	r3, #0
 4733 006e 5ED1     		bne	.L467
 4734              	.L468:
 677:../USER/ttbasic.c **** 		switch (*cip) {
 4735              		.loc 1 677 2 is_stmt 1 view .LVU1514
 678:../USER/ttbasic.c **** 		case I_MUL:
 4736              		.loc 1 678 3 view .LVU1515
 678:../USER/ttbasic.c **** 		case I_MUL:
 4737              		.loc 1 678 11 is_stmt 0 view .LVU1516
 4738 0070 2368     		ldr	r3, [r4]
 4739 0072 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 678:../USER/ttbasic.c **** 		case I_MUL:
 4740              		.loc 1 678 3 view .LVU1517
 4741 0074 182A     		cmp	r2, #24
 4742 0076 41D0     		beq	.L469
 4743              	.L482:
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4744              		.loc 1 685 4 is_stmt 1 view .LVU1518
 678:../USER/ttbasic.c **** 		case I_MUL:
 4745              		.loc 1 678 3 is_stmt 0 view .LVU1519
 4746 0078 192A     		cmp	r2, #25
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4747              		.loc 1 685 7 view .LVU1520
 4748 007a 03F10101 		add	r1, r3, #1
 678:../USER/ttbasic.c **** 		case I_MUL:
 4749              		.loc 1 678 3 view .LVU1521
 4750 007e 32D0     		beq	.L470
 4751 0080 A8B2     		uxth	r0, r5
 4752              	.L471:
 4753              	.LVL436:
 678:../USER/ttbasic.c **** 		case I_MUL:
 4754              		.loc 1 678 3 view .LVU1522
 4755              	.LBE486:
 4756              	.LBE495:
 716:../USER/ttbasic.c **** 			break;
 4757              		.loc 1 716 4 is_stmt 1 view .LVU1523
 716:../USER/ttbasic.c **** 			break;
 4758              		.loc 1 716 10 is_stmt 0 view .LVU1524
 4759 0082 A8EB0000 		sub	r0, r8, r0
 4760 0086 0FFA80F8 		sxth	r8, r0
 4761              	.LVL437:
 717:../USER/ttbasic.c **** 		default:
 4762              		.loc 1 717 4 is_stmt 1 view .LVU1525
 4763 008a CFE7     		b	.L456
 4764              	.LVL438:
 4765              	.L478:
 4766              	.LBB496:
 4767              	.LBB481:
 688:../USER/ttbasic.c **** 				return -1;
 4768              		.loc 1 688 5 view .LVU1526
 688:../USER/ttbasic.c **** 				return -1;
 4769              		.loc 1 688 9 is_stmt 0 view .LVU1527
 4770 008c 0123     		movs	r3, #1
 4771 008e 3370     		strb	r3, [r6]
 689:../USER/ttbasic.c **** 			}
 4772              		.loc 1 689 5 is_stmt 1 view .LVU1528
 4773              	.LVL439:
 4774              	.L449:
 689:../USER/ttbasic.c **** 			}
 4775              		.loc 1 689 5 is_stmt 0 view .LVU1529
 4776              	.LBE481:
 4777              	.LBE496:
 703:../USER/ttbasic.c **** 		return -1;
 4778              		.loc 1 703 2 is_stmt 1 view .LVU1530
 704:../USER/ttbasic.c **** 
 4779              		.loc 1 704 10 is_stmt 0 view .LVU1531
 4780 0090 4FF0FF38 		mov	r8, #-1
 4781              	.LVL440:
 4782              	.L474:
 721:../USER/ttbasic.c **** 
 4783              		.loc 1 721 1 view .LVU1532
 4784 0094 4046     		mov	r0, r8
 4785 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4786              	.LVL441:
 4787              	.L452:
 4788              	.LBB497:
 4789              	.LBB482:
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4790              		.loc 1 685 7 view .LVU1533
 4791 009a 2160     		str	r1, [r4]
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4792              		.loc 1 686 4 is_stmt 1 view .LVU1534
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4793              		.loc 1 686 10 is_stmt 0 view .LVU1535
 4794 009c FFF7FEFF 		bl	ivalue
 4795              	.LVL442:
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4796              		.loc 1 687 4 is_stmt 1 view .LVU1536
 691:../USER/ttbasic.c **** 			break;
 4797              		.loc 1 691 4 view .LVU1537
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4798              		.loc 1 687 7 is_stmt 0 view .LVU1538
 4799 00a0 0028     		cmp	r0, #0
 4800 00a2 F3D0     		beq	.L478
 691:../USER/ttbasic.c **** 			break;
 4801              		.loc 1 691 10 view .LVU1539
 4802 00a4 98FBF0F0 		sdiv	r0, r8, r0
 4803              	.LVL443:
 678:../USER/ttbasic.c **** 		case I_MUL:
 4804              		.loc 1 678 11 view .LVU1540
 4805 00a8 2368     		ldr	r3, [r4]
 691:../USER/ttbasic.c **** 			break;
 4806              		.loc 1 691 10 view .LVU1541
 4807 00aa 0FFA80F8 		sxth	r8, r0
 4808              	.LVL444:
 692:../USER/ttbasic.c **** 		default:
 4809              		.loc 1 692 4 is_stmt 1 view .LVU1542
 677:../USER/ttbasic.c **** 		switch (*cip) {
 4810              		.loc 1 677 2 view .LVU1543
 678:../USER/ttbasic.c **** 		case I_MUL:
 4811              		.loc 1 678 3 view .LVU1544
 678:../USER/ttbasic.c **** 		case I_MUL:
 4812              		.loc 1 678 11 is_stmt 0 view .LVU1545
 4813 00ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 678:../USER/ttbasic.c **** 		case I_MUL:
 4814              		.loc 1 678 3 view .LVU1546
 4815 00b0 182A     		cmp	r2, #24
 4816 00b2 B3D1     		bne	.L479
 4817              	.L451:
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4818              		.loc 1 680 4 is_stmt 1 view .LVU1547
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4819              		.loc 1 680 7 is_stmt 0 view .LVU1548
 4820 00b4 0133     		adds	r3, r3, #1
 4821 00b6 2360     		str	r3, [r4]
 681:../USER/ttbasic.c **** 			value *= tmp;
 4822              		.loc 1 681 4 is_stmt 1 view .LVU1549
 681:../USER/ttbasic.c **** 			value *= tmp;
 4823              		.loc 1 681 10 is_stmt 0 view .LVU1550
 4824 00b8 FFF7FEFF 		bl	ivalue
 4825              	.LVL445:
 682:../USER/ttbasic.c **** 			break;
 4826              		.loc 1 682 4 is_stmt 1 view .LVU1551
 682:../USER/ttbasic.c **** 			break;
 4827              		.loc 1 682 10 is_stmt 0 view .LVU1552
 4828 00bc 08FB00F8 		mul	r8, r8, r0
 4829              	.LVL446:
 682:../USER/ttbasic.c **** 			break;
 4830              		.loc 1 682 10 view .LVU1553
 4831 00c0 0FFA88F8 		sxth	r8, r8
 4832              	.LVL447:
 683:../USER/ttbasic.c **** 		case I_DIV:
 4833              		.loc 1 683 4 is_stmt 1 view .LVU1554
 4834 00c4 A6E7     		b	.L450
 4835              	.LVL448:
 4836              	.L461:
 683:../USER/ttbasic.c **** 		case I_DIV:
 4837              		.loc 1 683 4 is_stmt 0 view .LVU1555
 4838              	.LBE482:
 4839              	.LBE497:
 4840              	.LBB498:
 4841              	.LBB492:
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4842              		.loc 1 680 4 is_stmt 1 view .LVU1556
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4843              		.loc 1 680 7 is_stmt 0 view .LVU1557
 4844 00c6 0133     		adds	r3, r3, #1
 4845 00c8 2360     		str	r3, [r4]
 681:../USER/ttbasic.c **** 			value *= tmp;
 4846              		.loc 1 681 4 is_stmt 1 view .LVU1558
 681:../USER/ttbasic.c **** 			value *= tmp;
 4847              		.loc 1 681 10 is_stmt 0 view .LVU1559
 4848 00ca FFF7FEFF 		bl	ivalue
 4849              	.LVL449:
 682:../USER/ttbasic.c **** 			break;
 4850              		.loc 1 682 4 is_stmt 1 view .LVU1560
 682:../USER/ttbasic.c **** 			break;
 4851              		.loc 1 682 10 is_stmt 0 view .LVU1561
 4852 00ce 05FB00F5 		mul	r5, r5, r0
 4853              	.LVL450:
 682:../USER/ttbasic.c **** 			break;
 4854              		.loc 1 682 10 view .LVU1562
 4855 00d2 2DB2     		sxth	r5, r5
 4856              	.LVL451:
 683:../USER/ttbasic.c **** 		case I_DIV:
 4857              		.loc 1 683 4 is_stmt 1 view .LVU1563
 4858 00d4 B6E7     		b	.L460
 4859              	.LVL452:
 4860              	.L462:
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4861              		.loc 1 685 7 is_stmt 0 view .LVU1564
 4862 00d6 2160     		str	r1, [r4]
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4863              		.loc 1 686 4 is_stmt 1 view .LVU1565
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4864              		.loc 1 686 10 is_stmt 0 view .LVU1566
 4865 00d8 FFF7FEFF 		bl	ivalue
 4866              	.LVL453:
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4867              		.loc 1 687 4 is_stmt 1 view .LVU1567
 691:../USER/ttbasic.c **** 			break;
 4868              		.loc 1 691 4 view .LVU1568
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4869              		.loc 1 687 7 is_stmt 0 view .LVU1569
 4870 00dc B0B1     		cbz	r0, .L480
 691:../USER/ttbasic.c **** 			break;
 4871              		.loc 1 691 10 view .LVU1570
 4872 00de 95FBF0F5 		sdiv	r5, r5, r0
 4873              	.LVL454:
 691:../USER/ttbasic.c **** 			break;
 4874              		.loc 1 691 10 view .LVU1571
 4875 00e2 2DB2     		sxth	r5, r5
 4876              	.LVL455:
 692:../USER/ttbasic.c **** 		default:
 4877              		.loc 1 692 4 is_stmt 1 view .LVU1572
 4878 00e4 AEE7     		b	.L460
 4879              	.LVL456:
 4880              	.L470:
 692:../USER/ttbasic.c **** 		default:
 4881              		.loc 1 692 4 is_stmt 0 view .LVU1573
 4882              	.LBE492:
 4883              	.LBE498:
 4884              	.LBB499:
 4885              	.LBB487:
 685:../USER/ttbasic.c **** 			tmp = ivalue();
 4886              		.loc 1 685 7 view .LVU1574
 4887 00e6 2160     		str	r1, [r4]
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4888              		.loc 1 686 4 is_stmt 1 view .LVU1575
 686:../USER/ttbasic.c **** 			if (tmp == 0) {
 4889              		.loc 1 686 10 is_stmt 0 view .LVU1576
 4890 00e8 FFF7FEFF 		bl	ivalue
 4891              	.LVL457:
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4892              		.loc 1 687 4 is_stmt 1 view .LVU1577
 691:../USER/ttbasic.c **** 			break;
 4893              		.loc 1 691 4 view .LVU1578
 687:../USER/ttbasic.c **** 				err = ERR_DIVBY0;
 4894              		.loc 1 687 7 is_stmt 0 view .LVU1579
 4895 00ec A0B1     		cbz	r0, .L481
 691:../USER/ttbasic.c **** 			break;
 4896              		.loc 1 691 10 view .LVU1580
 4897 00ee 95FBF0F5 		sdiv	r5, r5, r0
 4898              	.LVL458:
 678:../USER/ttbasic.c **** 		case I_MUL:
 4899              		.loc 1 678 11 view .LVU1581
 4900 00f2 2368     		ldr	r3, [r4]
 691:../USER/ttbasic.c **** 			break;
 4901              		.loc 1 691 10 view .LVU1582
 4902 00f4 2DB2     		sxth	r5, r5
 4903              	.LVL459:
 692:../USER/ttbasic.c **** 		default:
 4904              		.loc 1 692 4 is_stmt 1 view .LVU1583
 677:../USER/ttbasic.c **** 		switch (*cip) {
 4905              		.loc 1 677 2 view .LVU1584
 678:../USER/ttbasic.c **** 		case I_MUL:
 4906              		.loc 1 678 3 view .LVU1585
 678:../USER/ttbasic.c **** 		case I_MUL:
 4907              		.loc 1 678 11 is_stmt 0 view .LVU1586
 4908 00f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 678:../USER/ttbasic.c **** 		case I_MUL:
 4909              		.loc 1 678 3 view .LVU1587
 4910 00f8 182A     		cmp	r2, #24
 4911 00fa BDD1     		bne	.L482
 4912              	.LVL460:
 4913              	.L469:
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4914              		.loc 1 680 4 is_stmt 1 view .LVU1588
 680:../USER/ttbasic.c **** 			tmp = ivalue();
 4915              		.loc 1 680 7 is_stmt 0 view .LVU1589
 4916 00fc 0133     		adds	r3, r3, #1
 4917 00fe 2360     		str	r3, [r4]
 681:../USER/ttbasic.c **** 			value *= tmp;
 4918              		.loc 1 681 4 is_stmt 1 view .LVU1590
 681:../USER/ttbasic.c **** 			value *= tmp;
 4919              		.loc 1 681 10 is_stmt 0 view .LVU1591
 4920 0100 FFF7FEFF 		bl	ivalue
 4921              	.LVL461:
 682:../USER/ttbasic.c **** 			break;
 4922              		.loc 1 682 4 is_stmt 1 view .LVU1592
 682:../USER/ttbasic.c **** 			break;
 4923              		.loc 1 682 10 is_stmt 0 view .LVU1593
 4924 0104 05FB00F5 		mul	r5, r5, r0
 4925              	.LVL462:
 682:../USER/ttbasic.c **** 			break;
 4926              		.loc 1 682 10 view .LVU1594
 4927 0108 2DB2     		sxth	r5, r5
 4928              	.LVL463:
 683:../USER/ttbasic.c **** 		case I_DIV:
 4929              		.loc 1 683 4 is_stmt 1 view .LVU1595
 4930 010a B1E7     		b	.L468
 4931              	.LVL464:
 4932              	.L480:
 683:../USER/ttbasic.c **** 		case I_DIV:
 4933              		.loc 1 683 4 is_stmt 0 view .LVU1596
 4934              	.LBE487:
 4935              	.LBE499:
 4936              	.LBB500:
 4937              	.LBB493:
 688:../USER/ttbasic.c **** 				return -1;
 4938              		.loc 1 688 5 is_stmt 1 view .LVU1597
 4939 010c 2368     		ldr	r3, [r4]
 688:../USER/ttbasic.c **** 				return -1;
 4940              		.loc 1 688 9 is_stmt 0 view .LVU1598
 4941 010e 3770     		strb	r7, [r6]
 689:../USER/ttbasic.c **** 			}
 4942              		.loc 1 689 5 is_stmt 1 view .LVU1599
 4943 0110 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 688:../USER/ttbasic.c **** 				return -1;
 4944              		.loc 1 688 9 is_stmt 0 view .LVU1600
 4945 0112 4FF6FF70 		movw	r0, #65535
 4946              	.LVL465:
 688:../USER/ttbasic.c **** 				return -1;
 4947              		.loc 1 688 9 view .LVU1601
 4948 0116 9EE7     		b	.L463
 4949              	.LVL466:
 4950              	.L481:
 688:../USER/ttbasic.c **** 				return -1;
 4951              		.loc 1 688 9 view .LVU1602
 4952              	.LBE493:
 4953              	.LBE500:
 4954              	.LBB501:
 4955              	.LBB488:
 688:../USER/ttbasic.c **** 				return -1;
 4956              		.loc 1 688 5 is_stmt 1 view .LVU1603
 4957 0118 2368     		ldr	r3, [r4]
 688:../USER/ttbasic.c **** 				return -1;
 4958              		.loc 1 688 9 is_stmt 0 view .LVU1604
 4959 011a 3770     		strb	r7, [r6]
 689:../USER/ttbasic.c **** 			}
 4960              		.loc 1 689 5 is_stmt 1 view .LVU1605
 4961 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 688:../USER/ttbasic.c **** 				return -1;
 4962              		.loc 1 688 9 is_stmt 0 view .LVU1606
 4963 011e 4FF6FF70 		movw	r0, #65535
 4964              	.LVL467:
 688:../USER/ttbasic.c **** 				return -1;
 4965              		.loc 1 688 9 view .LVU1607
 4966 0122 AEE7     		b	.L471
 4967              	.LVL468:
 4968              	.L459:
 688:../USER/ttbasic.c **** 				return -1;
 4969              		.loc 1 688 9 view .LVU1608
 4970 0124 2368     		ldr	r3, [r4]
 4971              	.LBE488:
 4972              	.LBE501:
 4973              	.LBB502:
 4974              	.LBB494:
 674:../USER/ttbasic.c **** 		return -1;
 4975              		.loc 1 674 5 view .LVU1609
 4976 0126 4FF6FF70 		movw	r0, #65535
 4977 012a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4978 012c 93E7     		b	.L463
 4979              	.LVL469:
 4980              	.L467:
 674:../USER/ttbasic.c **** 		return -1;
 4981              		.loc 1 674 5 view .LVU1610
 4982 012e 2368     		ldr	r3, [r4]
 4983              	.LBE494:
 4984              	.LBE502:
 4985              	.LBB503:
 4986              	.LBB489:
 4987 0130 4FF6FF70 		movw	r0, #65535
 4988 0134 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4989 0136 A4E7     		b	.L471
 4990              	.L484:
 4991              		.align	2
 4992              	.L483:
 4993 0138 00000000 		.word	err
 4994 013c 00000000 		.word	cip
 4995              	.LBE489:
 4996              	.LBE503:
 4997              		.cfi_endproc
 4998              	.LFE27:
 5000              		.section	.text.iprint,"ax",%progbits
 5001              		.align	1
 5002              		.p2align 2,,3
 5003              		.global	iprint
 5004              		.syntax unified
 5005              		.thumb
 5006              		.thumb_func
 5007              		.fpu softvfp
 5009              	iprint:
 5010              	.LFB29:
 768:../USER/ttbasic.c **** 
 769:../USER/ttbasic.c **** // PRINT handler
 770:../USER/ttbasic.c **** void iprint() {
 5011              		.loc 1 770 15 is_stmt 1 view -0
 5012              		.cfi_startproc
 5013              		@ args = 0, pretend = 0, frame = 0
 5014              		@ frame_needed = 0, uses_anonymous_args = 0
 771:../USER/ttbasic.c **** 	short value;
 5015              		.loc 1 771 2 view .LVU1612
 772:../USER/ttbasic.c **** 	short len;
 5016              		.loc 1 772 2 view .LVU1613
 773:../USER/ttbasic.c **** 	unsigned char i;
 5017              		.loc 1 773 2 view .LVU1614
 774:../USER/ttbasic.c **** 
 775:../USER/ttbasic.c **** 	len = 0;
 5018              		.loc 1 775 2 view .LVU1615
 5019              	.LVL470:
 776:../USER/ttbasic.c **** 	while (*cip != I_SEMI && *cip != I_EOL) {
 5020              		.loc 1 776 2 view .LVU1616
 770:../USER/ttbasic.c **** 	short value;
 5021              		.loc 1 770 15 is_stmt 0 view .LVU1617
 5022 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5023              		.cfi_def_cfa_offset 24
 5024              		.cfi_offset 4, -24
 5025              		.cfi_offset 5, -20
 5026              		.cfi_offset 6, -16
 5027              		.cfi_offset 7, -12
 5028              		.cfi_offset 8, -8
 5029              		.cfi_offset 14, -4
 5030 0004 2E4D     		ldr	r5, .L522
 5031 0006 2A68     		ldr	r2, [r5]
 5032 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 5033              		.loc 1 776 8 view .LVU1618
 5034 000a 152B     		cmp	r3, #21
 5035 000c 25D0     		beq	.L486
 5036              		.loc 1 776 24 view .LVU1619
 5037 000e 2C2B     		cmp	r3, #44
 5038 0010 23D0     		beq	.L486
 775:../USER/ttbasic.c **** 	while (*cip != I_SEMI && *cip != I_EOL) {
 5039              		.loc 1 775 6 view .LVU1620
 5040 0012 4FF00008 		mov	r8, #0
 777:../USER/ttbasic.c **** 		switch (*cip) {
 778:../USER/ttbasic.c **** 		case I_STR:
 779:../USER/ttbasic.c **** 			cip++;
 780:../USER/ttbasic.c **** 			i = *cip++;
 781:../USER/ttbasic.c **** 			while (i--)
 782:../USER/ttbasic.c **** 				c_putch(*cip++);
 783:../USER/ttbasic.c **** 			break;
 784:../USER/ttbasic.c **** 		case I_SHARP:
 785:../USER/ttbasic.c **** 			cip++;
 786:../USER/ttbasic.c **** 			len = iexp();
 787:../USER/ttbasic.c **** 			if (err)
 5041              		.loc 1 787 8 view .LVU1621
 5042 0016 2B4F     		ldr	r7, .L522+4
 5043 0018 2B4E     		ldr	r6, .L522+8
 5044              	.LVL471:
 5045              	.L496:
 777:../USER/ttbasic.c **** 		switch (*cip) {
 5046              		.loc 1 777 3 is_stmt 1 view .LVU1622
 5047 001a 1D2B     		cmp	r3, #29
 5048 001c 37D0     		beq	.L487
 5049 001e 2B2B     		cmp	r3, #43
 5050 0020 3FD1     		bne	.L488
 779:../USER/ttbasic.c **** 			i = *cip++;
 5051              		.loc 1 779 4 view .LVU1623
 780:../USER/ttbasic.c **** 			while (i--)
 5052              		.loc 1 780 4 view .LVU1624
 780:../USER/ttbasic.c **** 			while (i--)
 5053              		.loc 1 780 12 is_stmt 0 view .LVU1625
 5054 0022 931C     		adds	r3, r2, #2
 5055 0024 2B60     		str	r3, [r5]
 780:../USER/ttbasic.c **** 			while (i--)
 5056              		.loc 1 780 6 view .LVU1626
 5057 0026 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 5058              	.LVL472:
 781:../USER/ttbasic.c **** 				c_putch(*cip++);
 5059              		.loc 1 781 4 is_stmt 1 view .LVU1627
 781:../USER/ttbasic.c **** 				c_putch(*cip++);
 5060              		.loc 1 781 12 is_stmt 0 view .LVU1628
 5061 0028 541E     		subs	r4, r2, #1
 5062 002a E4B2     		uxtb	r4, r4
 5063              	.LVL473:
 781:../USER/ttbasic.c **** 				c_putch(*cip++);
 5064              		.loc 1 781 10 view .LVU1629
 5065 002c 72B1     		cbz	r2, .L489
 5066              	.L491:
 782:../USER/ttbasic.c **** 			break;
 5067              		.loc 1 782 5 is_stmt 1 view .LVU1630
 5068 002e 5A1C     		adds	r2, r3, #1
 5069 0030 2A60     		str	r2, [r5]
 5070              	.LVL474:
 5071              	.LBB512:
 5072              	.LBI512:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5073              		.loc 1 35 6 view .LVU1631
 5074              	.LBB513:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5075              		.loc 1 35 22 view .LVU1632
 5076 0032 93F90000 		ldrsb	r0, [r3]
 5077 0036 FFF7FEFF 		bl	putch_uart
 5078              	.LVL475:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5079              		.loc 1 35 37 view .LVU1633
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5080              		.loc 1 35 44 is_stmt 0 view .LVU1634
 5081 003a 3368     		ldr	r3, [r6]
 5082              	.LBE513:
 5083              	.LBE512:
 781:../USER/ttbasic.c **** 				c_putch(*cip++);
 5084              		.loc 1 781 12 view .LVU1635
 5085 003c 013C     		subs	r4, r4, #1
 5086              	.LVL476:
 5087              	.LBB516:
 5088              	.LBB514:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5089              		.loc 1 35 37 view .LVU1636
 5090 003e 9868     		ldr	r0, [r3, #8]
 5091              	.LBE514:
 5092              	.LBE516:
 781:../USER/ttbasic.c **** 				c_putch(*cip++);
 5093              		.loc 1 781 12 view .LVU1637
 5094 0040 E4B2     		uxtb	r4, r4
 5095              	.LBB517:
 5096              	.LBB515:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5097              		.loc 1 35 37 view .LVU1638
 5098 0042 FFF7FEFF 		bl	fflush
 5099              	.LVL477:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5100              		.loc 1 35 37 view .LVU1639
 5101              	.LBE515:
 5102              	.LBE517:
 781:../USER/ttbasic.c **** 				c_putch(*cip++);
 5103              		.loc 1 781 10 view .LVU1640
 5104 0046 FF2C     		cmp	r4, #255
 5105 0048 2B68     		ldr	r3, [r5]
 5106 004a F0D1     		bne	.L491
 5107              	.LVL478:
 5108              	.L489:
 788:../USER/ttbasic.c **** 				return;
 789:../USER/ttbasic.c **** 			break;
 790:../USER/ttbasic.c **** 		default:
 791:../USER/ttbasic.c **** 			value = iexp();
 792:../USER/ttbasic.c **** 			if (err)
 793:../USER/ttbasic.c **** 				return;
 794:../USER/ttbasic.c **** 			putnum(value, len);
 795:../USER/ttbasic.c **** 			break;
 796:../USER/ttbasic.c **** 		}
 797:../USER/ttbasic.c **** 
 798:../USER/ttbasic.c **** 		if (*cip == I_COMMA) {
 5109              		.loc 1 798 3 is_stmt 1 view .LVU1641
 5110              		.loc 1 798 7 is_stmt 0 view .LVU1642
 5111 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5112              		.loc 1 798 6 view .LVU1643
 5113 004e 142A     		cmp	r2, #20
 5114 0050 14D0     		beq	.L520
 799:../USER/ttbasic.c **** 			cip++;
 800:../USER/ttbasic.c **** 			if (*cip == I_SEMI || *cip == I_EOL)
 801:../USER/ttbasic.c **** 				return;
 802:../USER/ttbasic.c **** 		}
 803:../USER/ttbasic.c **** 		else {
 804:../USER/ttbasic.c **** 			if (*cip != I_SEMI && *cip != I_EOL) {
 5115              		.loc 1 804 4 is_stmt 1 view .LVU1644
 5116              		.loc 1 804 7 is_stmt 0 view .LVU1645
 5117 0052 152A     		cmp	r2, #21
 5118 0054 01D0     		beq	.L486
 5119              		.loc 1 804 23 discriminator 1 view .LVU1646
 5120 0056 2C2A     		cmp	r2, #44
 5121 0058 2CD1     		bne	.L521
 5122              	.LVL479:
 5123              	.L486:
 805:../USER/ttbasic.c **** 				err = ERR_SYNTAX;
 806:../USER/ttbasic.c **** 				return;
 807:../USER/ttbasic.c **** 			}
 808:../USER/ttbasic.c **** 		}
 809:../USER/ttbasic.c **** 	}
 810:../USER/ttbasic.c **** 	newline();
 5124              		.loc 1 810 2 is_stmt 1 view .LVU1647
 5125              	.LBB518:
 5126              	.LBI518:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 5127              		.loc 1 53 6 view .LVU1648
 5128              	.LBE518:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 5129              		.loc 1 54 2 view .LVU1649
 5130              	.LBB525:
 5131              	.LBB519:
 5132              	.LBI519:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5133              		.loc 1 35 6 view .LVU1650
 5134              	.LBB520:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5135              		.loc 1 35 22 view .LVU1651
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5136              		.loc 1 35 44 is_stmt 0 view .LVU1652
 5137 005a 1B4C     		ldr	r4, .L522+8
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5138              		.loc 1 35 22 view .LVU1653
 5139 005c 0D20     		movs	r0, #13
 5140 005e FFF7FEFF 		bl	putch_uart
 5141              	.LVL480:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5142              		.loc 1 35 37 is_stmt 1 view .LVU1654
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5143              		.loc 1 35 44 is_stmt 0 view .LVU1655
 5144 0062 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5145              		.loc 1 35 37 view .LVU1656
 5146 0064 9868     		ldr	r0, [r3, #8]
 5147 0066 FFF7FEFF 		bl	fflush
 5148              	.LVL481:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5149              		.loc 1 35 37 view .LVU1657
 5150              	.LBE520:
 5151              	.LBE519:
 5152              	.LBE525:
  55:../USER/ttbasic.c **** }
 5153              		.loc 1 55 2 is_stmt 1 view .LVU1658
 5154              	.LBB526:
 5155              	.LBB521:
 5156              	.LBI521:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5157              		.loc 1 35 6 view .LVU1659
 5158              	.LBB522:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5159              		.loc 1 35 22 view .LVU1660
 5160 006a 0A20     		movs	r0, #10
 5161 006c FFF7FEFF 		bl	putch_uart
 5162              	.LVL482:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5163              		.loc 1 35 37 view .LVU1661
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5164              		.loc 1 35 44 is_stmt 0 view .LVU1662
 5165 0070 2368     		ldr	r3, [r4]
 5166              	.LBE522:
 5167              	.LBE521:
 5168              	.LBE526:
 811:../USER/ttbasic.c **** }
 5169              		.loc 1 811 1 view .LVU1663
 5170 0072 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 5171              		.cfi_remember_state
 5172              		.cfi_restore 14
 5173              		.cfi_restore 8
 5174              		.cfi_restore 7
 5175              		.cfi_restore 6
 5176              		.cfi_restore 5
 5177              		.cfi_restore 4
 5178              		.cfi_def_cfa_offset 0
 5179              	.LBB527:
 5180              	.LBB524:
 5181              	.LBB523:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5182              		.loc 1 35 37 view .LVU1664
 5183 0076 9868     		ldr	r0, [r3, #8]
 5184 0078 FFF7FEBF 		b	fflush
 5185              	.LVL483:
 5186              	.L520:
 5187              		.cfi_restore_state
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5188              		.loc 1 35 37 view .LVU1665
 5189              	.LBE523:
 5190              	.LBE524:
 5191              	.LBE527:
 799:../USER/ttbasic.c **** 			if (*cip == I_SEMI || *cip == I_EOL)
 5192              		.loc 1 799 4 is_stmt 1 view .LVU1666
 799:../USER/ttbasic.c **** 			if (*cip == I_SEMI || *cip == I_EOL)
 5193              		.loc 1 799 7 is_stmt 0 view .LVU1667
 5194 007c 5A1C     		adds	r2, r3, #1
 5195 007e 2A60     		str	r2, [r5]
 800:../USER/ttbasic.c **** 				return;
 5196              		.loc 1 800 4 is_stmt 1 view .LVU1668
 800:../USER/ttbasic.c **** 				return;
 5197              		.loc 1 800 8 is_stmt 0 view .LVU1669
 5198 0080 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 800:../USER/ttbasic.c **** 				return;
 5199              		.loc 1 800 7 view .LVU1670
 5200 0082 152B     		cmp	r3, #21
 5201 0084 01D0     		beq	.L485
 800:../USER/ttbasic.c **** 				return;
 5202              		.loc 1 800 23 discriminator 1 view .LVU1671
 5203 0086 2C2B     		cmp	r3, #44
 5204 0088 C7D1     		bne	.L496
 5205              	.L485:
 5206              		.loc 1 811 1 view .LVU1672
 5207 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5208              	.LVL484:
 5209              	.L487:
 785:../USER/ttbasic.c **** 			len = iexp();
 5210              		.loc 1 785 4 is_stmt 1 view .LVU1673
 785:../USER/ttbasic.c **** 			len = iexp();
 5211              		.loc 1 785 7 is_stmt 0 view .LVU1674
 5212 008e 0132     		adds	r2, r2, #1
 5213 0090 2A60     		str	r2, [r5]
 786:../USER/ttbasic.c **** 			if (err)
 5214              		.loc 1 786 4 is_stmt 1 view .LVU1675
 786:../USER/ttbasic.c **** 			if (err)
 5215              		.loc 1 786 10 is_stmt 0 view .LVU1676
 5216 0092 FFF7FEFF 		bl	iexp
 5217              	.LVL485:
 787:../USER/ttbasic.c **** 				return;
 5218              		.loc 1 787 7 view .LVU1677
 5219 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 786:../USER/ttbasic.c **** 			if (err)
 5220              		.loc 1 786 10 view .LVU1678
 5221 0098 8046     		mov	r8, r0
 5222              	.LVL486:
 787:../USER/ttbasic.c **** 				return;
 5223              		.loc 1 787 4 is_stmt 1 view .LVU1679
 787:../USER/ttbasic.c **** 				return;
 5224              		.loc 1 787 7 is_stmt 0 view .LVU1680
 5225 009a 002B     		cmp	r3, #0
 5226 009c F5D1     		bne	.L485
 5227              	.L519:
 795:../USER/ttbasic.c **** 		}
 5228              		.loc 1 795 4 is_stmt 1 view .LVU1681
 5229 009e 2B68     		ldr	r3, [r5]
 5230 00a0 D4E7     		b	.L489
 5231              	.L488:
 791:../USER/ttbasic.c **** 			if (err)
 5232              		.loc 1 791 4 view .LVU1682
 791:../USER/ttbasic.c **** 			if (err)
 5233              		.loc 1 791 12 is_stmt 0 view .LVU1683
 5234 00a2 FFF7FEFF 		bl	iexp
 5235              	.LVL487:
 792:../USER/ttbasic.c **** 				return;
 5236              		.loc 1 792 4 is_stmt 1 view .LVU1684
 792:../USER/ttbasic.c **** 				return;
 5237              		.loc 1 792 7 is_stmt 0 view .LVU1685
 5238 00a6 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5239 00a8 002B     		cmp	r3, #0
 5240 00aa EED1     		bne	.L485
 794:../USER/ttbasic.c **** 			break;
 5241              		.loc 1 794 4 is_stmt 1 view .LVU1686
 5242 00ac 4146     		mov	r1, r8
 5243 00ae FFF7FEFF 		bl	putnum
 5244              	.LVL488:
 794:../USER/ttbasic.c **** 			break;
 5245              		.loc 1 794 4 is_stmt 0 view .LVU1687
 5246 00b2 F4E7     		b	.L519
 5247              	.L521:
 805:../USER/ttbasic.c **** 				return;
 5248              		.loc 1 805 5 is_stmt 1 view .LVU1688
 805:../USER/ttbasic.c **** 				return;
 5249              		.loc 1 805 9 is_stmt 0 view .LVU1689
 5250 00b4 1422     		movs	r2, #20
 5251 00b6 034B     		ldr	r3, .L522+4
 5252 00b8 1A70     		strb	r2, [r3]
 806:../USER/ttbasic.c **** 			}
 5253              		.loc 1 806 5 is_stmt 1 view .LVU1690
 5254              		.loc 1 811 1 is_stmt 0 view .LVU1691
 5255 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5256              	.LVL489:
 5257              	.L523:
 5258              		.loc 1 811 1 view .LVU1692
 5259 00be 00BF     		.align	2
 5260              	.L522:
 5261 00c0 00000000 		.word	cip
 5262 00c4 00000000 		.word	err
 5263 00c8 00000000 		.word	_impure_ptr
 5264              		.cfi_endproc
 5265              	.LFE29:
 5267              		.section	.text.iinput,"ax",%progbits
 5268              		.align	1
 5269              		.p2align 2,,3
 5270              		.global	iinput
 5271              		.syntax unified
 5272              		.thumb
 5273              		.thumb_func
 5274              		.fpu softvfp
 5276              	iinput:
 5277              	.LFB30:
 812:../USER/ttbasic.c **** 
 813:../USER/ttbasic.c **** // INPUT handler
 814:../USER/ttbasic.c **** void iinput() {
 5278              		.loc 1 814 15 is_stmt 1 view -0
 5279              		.cfi_startproc
 5280              		@ args = 0, pretend = 0, frame = 0
 5281              		@ frame_needed = 0, uses_anonymous_args = 0
 5282 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5283              		.cfi_def_cfa_offset 32
 5284              		.cfi_offset 4, -32
 5285              		.cfi_offset 5, -28
 5286              		.cfi_offset 6, -24
 5287              		.cfi_offset 7, -20
 5288              		.cfi_offset 8, -16
 5289              		.cfi_offset 9, -12
 5290              		.cfi_offset 10, -8
 5291              		.cfi_offset 14, -4
 5292 0004 624D     		ldr	r5, .L572
 5293 0006 634F     		ldr	r7, .L572+4
 5294 0008 2B68     		ldr	r3, [r5]
 5295              	.LBB546:
 5296              	.LBB547:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5297              		.loc 1 35 44 is_stmt 0 view .LVU1694
 5298 000a 634E     		ldr	r6, .L572+8
 5299              	.LBE547:
 5300              	.LBE546:
 815:../USER/ttbasic.c **** 	short value;
 816:../USER/ttbasic.c **** 	short index;
 817:../USER/ttbasic.c **** 	unsigned char i;
 818:../USER/ttbasic.c **** 	unsigned char prompt;
 819:../USER/ttbasic.c **** 
 820:../USER/ttbasic.c **** 	while (1) {
 821:../USER/ttbasic.c **** 		prompt = 1;
 822:../USER/ttbasic.c **** 
 823:../USER/ttbasic.c **** 		if (*cip == I_STR) {
 824:../USER/ttbasic.c **** 			cip++;
 825:../USER/ttbasic.c **** 			i = *cip++;
 826:../USER/ttbasic.c **** 			while (i--)
 827:../USER/ttbasic.c **** 				c_putch(*cip++);
 828:../USER/ttbasic.c **** 			prompt = 0;
 829:../USER/ttbasic.c **** 		}
 830:../USER/ttbasic.c **** 
 831:../USER/ttbasic.c **** 		switch (*cip) {
 832:../USER/ttbasic.c **** 		case I_VAR:
 833:../USER/ttbasic.c **** 			cip++;
 834:../USER/ttbasic.c **** 			if (prompt) {
 835:../USER/ttbasic.c **** 				c_putch(*cip + 'A');
 836:../USER/ttbasic.c **** 				c_putch(':');
 837:../USER/ttbasic.c **** 			}
 838:../USER/ttbasic.c **** 			value = getnum();
 839:../USER/ttbasic.c **** 			if (err)
 840:../USER/ttbasic.c **** 				return;
 841:../USER/ttbasic.c **** 			var[*cip++] = value;
 842:../USER/ttbasic.c **** 			break;
 843:../USER/ttbasic.c **** 		case I_ARRAY:
 844:../USER/ttbasic.c **** 			cip++;
 845:../USER/ttbasic.c **** 			if(*cip==I_ARRAY) {
 846:../USER/ttbasic.c **** 				cip++;
 847:../USER/ttbasic.c **** 				index = getparam();
 848:../USER/ttbasic.c **** 				value = getnum();
 849:../USER/ttbasic.c **** 				arr[index] = value;
 850:../USER/ttbasic.c **** 			} else {
 851:../USER/ttbasic.c **** 			index = getparam();
 852:../USER/ttbasic.c **** 			if (err)
 853:../USER/ttbasic.c **** 				return;
 854:../USER/ttbasic.c **** 			if (index >= SIZE_ARRY) {
 855:../USER/ttbasic.c **** 				err = ERR_SOR;
 856:../USER/ttbasic.c **** 				return;
 857:../USER/ttbasic.c **** 			}
 858:../USER/ttbasic.c **** 			if (prompt) {
 859:../USER/ttbasic.c **** 				c_puts("@(");
 860:../USER/ttbasic.c **** 				putnum(index, 0);
 861:../USER/ttbasic.c **** 				c_puts("):");
 862:../USER/ttbasic.c **** 			}
 863:../USER/ttbasic.c **** 			value = getnum();
 864:../USER/ttbasic.c **** 			if (err)
 865:../USER/ttbasic.c **** 				return;
 866:../USER/ttbasic.c **** 			arr[index] = value;
 5301              		.loc 1 866 15 view .LVU1695
 5302 000c DFF88C91 		ldr	r9, .L572+12
 841:../USER/ttbasic.c **** 			break;
 5303              		.loc 1 841 16 view .LVU1696
 5304 0010 DFF88C81 		ldr	r8, .L572+16
 5305              	.L545:
 815:../USER/ttbasic.c **** 	short value;
 5306              		.loc 1 815 2 is_stmt 1 view .LVU1697
 816:../USER/ttbasic.c **** 	unsigned char i;
 5307              		.loc 1 816 2 view .LVU1698
 817:../USER/ttbasic.c **** 	unsigned char prompt;
 5308              		.loc 1 817 2 view .LVU1699
 818:../USER/ttbasic.c **** 
 5309              		.loc 1 818 2 view .LVU1700
 820:../USER/ttbasic.c **** 		prompt = 1;
 5310              		.loc 1 820 2 view .LVU1701
 821:../USER/ttbasic.c **** 
 5311              		.loc 1 821 3 view .LVU1702
 5312              	.LVL490:
 823:../USER/ttbasic.c **** 			cip++;
 5313              		.loc 1 823 3 view .LVU1703
 823:../USER/ttbasic.c **** 			cip++;
 5314              		.loc 1 823 7 is_stmt 0 view .LVU1704
 5315 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 823:../USER/ttbasic.c **** 			cip++;
 5316              		.loc 1 823 6 view .LVU1705
 5317 0016 2B2A     		cmp	r2, #43
 5318 0018 14D0     		beq	.L568
 831:../USER/ttbasic.c **** 		case I_VAR:
 5319              		.loc 1 831 3 is_stmt 1 view .LVU1706
 5320 001a 222A     		cmp	r2, #34
 5321 001c 05D0     		beq	.L553
 5322 001e 2A2A     		cmp	r2, #42
 5323 0020 6CD0     		beq	.L569
 5324              	.LVL491:
 5325              	.L544:
 867:../USER/ttbasic.c **** 			}
 868:../USER/ttbasic.c **** 			break;
 869:../USER/ttbasic.c **** 		default:
 870:../USER/ttbasic.c **** 			err = ERR_SYNTAX;
 5326              		.loc 1 870 4 view .LVU1707
 5327              		.loc 1 870 8 is_stmt 0 view .LVU1708
 5328 0022 1423     		movs	r3, #20
 5329 0024 3B70     		strb	r3, [r7]
 871:../USER/ttbasic.c **** 			return;
 5330              		.loc 1 871 4 is_stmt 1 view .LVU1709
 5331              	.L524:
 872:../USER/ttbasic.c **** 		}
 873:../USER/ttbasic.c **** 
 874:../USER/ttbasic.c **** 		switch (*cip) {
 875:../USER/ttbasic.c **** 		case I_COMMA:
 876:../USER/ttbasic.c **** 			cip++;
 877:../USER/ttbasic.c **** 			break;
 878:../USER/ttbasic.c **** 		case I_SEMI:
 879:../USER/ttbasic.c **** 		case I_EOL:
 880:../USER/ttbasic.c **** 			return;
 881:../USER/ttbasic.c **** 		default:
 882:../USER/ttbasic.c **** 			err = ERR_SYNTAX;
 883:../USER/ttbasic.c **** 			return;
 884:../USER/ttbasic.c **** 		}
 885:../USER/ttbasic.c **** 	}
 886:../USER/ttbasic.c **** }
 5332              		.loc 1 886 1 is_stmt 0 view .LVU1710
 5333 0026 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5334              	.LVL492:
 5335              	.L553:
 821:../USER/ttbasic.c **** 
 5336              		.loc 1 821 10 view .LVU1711
 5337 002a 4FF0010A 		mov	r10, #1
 5338              	.LVL493:
 5339              	.L547:
 844:../USER/ttbasic.c **** 			if(*cip==I_ARRAY) {
 5340              		.loc 1 844 4 is_stmt 1 view .LVU1712
 844:../USER/ttbasic.c **** 			if(*cip==I_ARRAY) {
 5341              		.loc 1 844 7 is_stmt 0 view .LVU1713
 5342 002e 5A1C     		adds	r2, r3, #1
 5343 0030 2A60     		str	r2, [r5]
 845:../USER/ttbasic.c **** 				cip++;
 5344              		.loc 1 845 4 is_stmt 1 view .LVU1714
 845:../USER/ttbasic.c **** 				cip++;
 5345              		.loc 1 845 7 is_stmt 0 view .LVU1715
 5346 0032 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 845:../USER/ttbasic.c **** 				cip++;
 5347              		.loc 1 845 6 view .LVU1716
 5348 0034 222A     		cmp	r2, #34
 5349 0036 53D0     		beq	.L570
 851:../USER/ttbasic.c **** 			if (err)
 5350              		.loc 1 851 4 is_stmt 1 view .LVU1717
 5351              	.LBB550:
 5352              	.LBI550:
 574:../USER/ttbasic.c **** 	short value;
 5353              		.loc 1 574 7 view .LVU1718
 5354              	.LBB551:
 575:../USER/ttbasic.c **** 
 5355              		.loc 1 575 2 view .LVU1719
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5356              		.loc 1 577 2 view .LVU1720
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5357              		.loc 1 577 5 is_stmt 0 view .LVU1721
 5358 0038 1A2A     		cmp	r2, #26
 5359 003a 35D0     		beq	.L536
 5360              	.L538:
 578:../USER/ttbasic.c **** 		return 0;
 5361              		.loc 1 578 3 is_stmt 1 view .LVU1722
 578:../USER/ttbasic.c **** 		return 0;
 5362              		.loc 1 578 7 is_stmt 0 view .LVU1723
 5363 003c 1123     		movs	r3, #17
 5364 003e 3B70     		strb	r3, [r7]
 579:../USER/ttbasic.c **** 	}
 5365              		.loc 1 579 3 is_stmt 1 view .LVU1724
 5366              	.LVL494:
 579:../USER/ttbasic.c **** 	}
 5367              		.loc 1 579 3 is_stmt 0 view .LVU1725
 5368              	.LBE551:
 5369              	.LBE550:
 852:../USER/ttbasic.c **** 				return;
 5370              		.loc 1 852 4 is_stmt 1 view .LVU1726
 5371              		.loc 1 886 1 is_stmt 0 view .LVU1727
 5372 0040 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5373              	.LVL495:
 5374              	.L568:
 824:../USER/ttbasic.c **** 			i = *cip++;
 5375              		.loc 1 824 4 is_stmt 1 view .LVU1728
 825:../USER/ttbasic.c **** 			while (i--)
 5376              		.loc 1 825 4 view .LVU1729
 825:../USER/ttbasic.c **** 			while (i--)
 5377              		.loc 1 825 12 is_stmt 0 view .LVU1730
 5378 0044 9A1C     		adds	r2, r3, #2
 5379 0046 2A60     		str	r2, [r5]
 825:../USER/ttbasic.c **** 			while (i--)
 5380              		.loc 1 825 6 view .LVU1731
 5381 0048 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5382              	.LVL496:
 826:../USER/ttbasic.c **** 				c_putch(*cip++);
 5383              		.loc 1 826 4 is_stmt 1 view .LVU1732
 826:../USER/ttbasic.c **** 				c_putch(*cip++);
 5384              		.loc 1 826 12 is_stmt 0 view .LVU1733
 5385 004a 5C1E     		subs	r4, r3, #1
 5386 004c E4B2     		uxtb	r4, r4
 5387              	.LVL497:
 826:../USER/ttbasic.c **** 				c_putch(*cip++);
 5388              		.loc 1 826 10 view .LVU1734
 5389 004e 73B1     		cbz	r3, .L526
 5390              	.L528:
 827:../USER/ttbasic.c **** 			prompt = 0;
 5391              		.loc 1 827 5 is_stmt 1 view .LVU1735
 5392 0050 531C     		adds	r3, r2, #1
 5393 0052 2B60     		str	r3, [r5]
 5394              	.LVL498:
 5395              	.LBB554:
 5396              	.LBI554:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5397              		.loc 1 35 6 view .LVU1736
 5398              	.LBB555:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5399              		.loc 1 35 22 view .LVU1737
 5400 0054 92F90000 		ldrsb	r0, [r2]
 5401 0058 FFF7FEFF 		bl	putch_uart
 5402              	.LVL499:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5403              		.loc 1 35 37 view .LVU1738
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5404              		.loc 1 35 44 is_stmt 0 view .LVU1739
 5405 005c 3368     		ldr	r3, [r6]
 5406              	.LBE555:
 5407              	.LBE554:
 826:../USER/ttbasic.c **** 				c_putch(*cip++);
 5408              		.loc 1 826 12 view .LVU1740
 5409 005e 013C     		subs	r4, r4, #1
 5410              	.LVL500:
 5411              	.LBB558:
 5412              	.LBB556:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5413              		.loc 1 35 37 view .LVU1741
 5414 0060 9868     		ldr	r0, [r3, #8]
 5415              	.LBE556:
 5416              	.LBE558:
 826:../USER/ttbasic.c **** 				c_putch(*cip++);
 5417              		.loc 1 826 12 view .LVU1742
 5418 0062 E4B2     		uxtb	r4, r4
 5419              	.LBB559:
 5420              	.LBB557:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5421              		.loc 1 35 37 view .LVU1743
 5422 0064 FFF7FEFF 		bl	fflush
 5423              	.LVL501:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5424              		.loc 1 35 37 view .LVU1744
 5425              	.LBE557:
 5426              	.LBE559:
 826:../USER/ttbasic.c **** 				c_putch(*cip++);
 5427              		.loc 1 826 10 view .LVU1745
 5428 0068 FF2C     		cmp	r4, #255
 5429 006a 2A68     		ldr	r2, [r5]
 5430 006c F0D1     		bne	.L528
 5431              	.L526:
 5432              	.LVL502:
 831:../USER/ttbasic.c **** 		case I_VAR:
 5433              		.loc 1 831 3 is_stmt 1 view .LVU1746
 831:../USER/ttbasic.c **** 		case I_VAR:
 5434              		.loc 1 831 11 is_stmt 0 view .LVU1747
 5435 006e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 831:../USER/ttbasic.c **** 		case I_VAR:
 5436              		.loc 1 831 3 view .LVU1748
 5437 0070 222B     		cmp	r3, #34
 5438 0072 00F08880 		beq	.L554
 5439 0076 2A2B     		cmp	r3, #42
 5440 0078 D3D1     		bne	.L544
 833:../USER/ttbasic.c **** 			if (prompt) {
 5441              		.loc 1 833 4 is_stmt 1 view .LVU1749
 833:../USER/ttbasic.c **** 			if (prompt) {
 5442              		.loc 1 833 7 is_stmt 0 view .LVU1750
 5443 007a 0132     		adds	r2, r2, #1
 5444 007c 2A60     		str	r2, [r5]
 834:../USER/ttbasic.c **** 				c_putch(*cip + 'A');
 5445              		.loc 1 834 4 is_stmt 1 view .LVU1751
 5446              	.LVL503:
 5447              	.L546:
 838:../USER/ttbasic.c **** 			if (err)
 5448              		.loc 1 838 4 view .LVU1752
 838:../USER/ttbasic.c **** 			if (err)
 5449              		.loc 1 838 12 is_stmt 0 view .LVU1753
 5450 007e FFF7FEFF 		bl	getnum
 5451              	.LVL504:
 839:../USER/ttbasic.c **** 				return;
 5452              		.loc 1 839 4 is_stmt 1 view .LVU1754
 839:../USER/ttbasic.c **** 				return;
 5453              		.loc 1 839 7 is_stmt 0 view .LVU1755
 5454 0082 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5455 0084 002B     		cmp	r3, #0
 5456 0086 CED1     		bne	.L524
 841:../USER/ttbasic.c **** 			break;
 5457              		.loc 1 841 4 is_stmt 1 view .LVU1756
 841:../USER/ttbasic.c **** 			break;
 5458              		.loc 1 841 12 is_stmt 0 view .LVU1757
 5459 0088 2A68     		ldr	r2, [r5]
 5460 008a 531C     		adds	r3, r2, #1
 5461 008c 2B60     		str	r3, [r5]
 841:../USER/ttbasic.c **** 			break;
 5462              		.loc 1 841 8 view .LVU1758
 5463 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 841:../USER/ttbasic.c **** 			break;
 5464              		.loc 1 841 16 view .LVU1759
 5465 0090 28F81200 		strh	r0, [r8, r2, lsl #1]	@ movhi
 842:../USER/ttbasic.c **** 		case I_ARRAY:
 5466              		.loc 1 842 4 is_stmt 1 view .LVU1760
 5467              	.L531:
 874:../USER/ttbasic.c **** 		case I_COMMA:
 5468              		.loc 1 874 3 view .LVU1761
 874:../USER/ttbasic.c **** 		case I_COMMA:
 5469              		.loc 1 874 11 is_stmt 0 view .LVU1762
 5470 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 874:../USER/ttbasic.c **** 		case I_COMMA:
 5471              		.loc 1 874 3 view .LVU1763
 5472 0096 152A     		cmp	r2, #21
 5473 0098 C5D0     		beq	.L524
 5474 009a 2C2A     		cmp	r2, #44
 5475 009c C3D0     		beq	.L524
 5476 009e 142A     		cmp	r2, #20
 5477 00a0 BFD1     		bne	.L544
 876:../USER/ttbasic.c **** 			break;
 5478              		.loc 1 876 4 is_stmt 1 view .LVU1764
 876:../USER/ttbasic.c **** 			break;
 5479              		.loc 1 876 7 is_stmt 0 view .LVU1765
 5480 00a2 0133     		adds	r3, r3, #1
 5481 00a4 2B60     		str	r3, [r5]
 877:../USER/ttbasic.c **** 		case I_SEMI:
 5482              		.loc 1 877 4 is_stmt 1 view .LVU1766
 821:../USER/ttbasic.c **** 
 5483              		.loc 1 821 10 is_stmt 0 view .LVU1767
 5484 00a6 B5E7     		b	.L545
 5485              	.LVL505:
 5486              	.L536:
 5487              	.LBB560:
 5488              	.LBB552:
 581:../USER/ttbasic.c **** 	value = iexp();
 5489              		.loc 1 581 2 is_stmt 1 view .LVU1768
 581:../USER/ttbasic.c **** 	value = iexp();
 5490              		.loc 1 581 5 is_stmt 0 view .LVU1769
 5491 00a8 0233     		adds	r3, r3, #2
 5492 00aa 2B60     		str	r3, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 5493              		.loc 1 582 2 is_stmt 1 view .LVU1770
 582:../USER/ttbasic.c **** 	if (err)
 5494              		.loc 1 582 10 is_stmt 0 view .LVU1771
 5495 00ac FFF7FEFF 		bl	iexp
 5496              	.LVL506:
 583:../USER/ttbasic.c **** 		return 0;
 5497              		.loc 1 583 5 view .LVU1772
 5498 00b0 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 582:../USER/ttbasic.c **** 	if (err)
 5499              		.loc 1 582 10 view .LVU1773
 5500 00b2 0446     		mov	r4, r0
 5501              	.LVL507:
 583:../USER/ttbasic.c **** 		return 0;
 5502              		.loc 1 583 2 is_stmt 1 view .LVU1774
 583:../USER/ttbasic.c **** 		return 0;
 5503              		.loc 1 583 5 is_stmt 0 view .LVU1775
 5504 00b4 002B     		cmp	r3, #0
 5505 00b6 B6D1     		bne	.L524
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5506              		.loc 1 586 2 is_stmt 1 view .LVU1776
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5507              		.loc 1 586 6 is_stmt 0 view .LVU1777
 5508 00b8 2B68     		ldr	r3, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5509              		.loc 1 586 5 view .LVU1778
 5510 00ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5511 00bc 1B2A     		cmp	r2, #27
 5512 00be BDD1     		bne	.L538
 590:../USER/ttbasic.c **** 
 5513              		.loc 1 590 2 is_stmt 1 view .LVU1779
 590:../USER/ttbasic.c **** 
 5514              		.loc 1 590 5 is_stmt 0 view .LVU1780
 5515 00c0 0133     		adds	r3, r3, #1
 5516              	.LBE552:
 5517              	.LBE560:
 854:../USER/ttbasic.c **** 				err = ERR_SOR;
 5518              		.loc 1 854 7 view .LVU1781
 5519 00c2 3F28     		cmp	r0, #63
 5520              	.LBB561:
 5521              	.LBB553:
 590:../USER/ttbasic.c **** 
 5522              		.loc 1 590 5 view .LVU1782
 5523 00c4 2B60     		str	r3, [r5]
 592:../USER/ttbasic.c **** }
 5524              		.loc 1 592 2 is_stmt 1 view .LVU1783
 5525              	.LVL508:
 592:../USER/ttbasic.c **** }
 5526              		.loc 1 592 2 is_stmt 0 view .LVU1784
 5527              	.LBE553:
 5528              	.LBE561:
 852:../USER/ttbasic.c **** 				return;
 5529              		.loc 1 852 4 is_stmt 1 view .LVU1785
 854:../USER/ttbasic.c **** 				err = ERR_SOR;
 5530              		.loc 1 854 4 view .LVU1786
 854:../USER/ttbasic.c **** 				err = ERR_SOR;
 5531              		.loc 1 854 7 is_stmt 0 view .LVU1787
 5532 00c6 5BDC     		bgt	.L571
 858:../USER/ttbasic.c **** 				c_puts("@(");
 5533              		.loc 1 858 4 is_stmt 1 view .LVU1788
 858:../USER/ttbasic.c **** 				c_puts("@(");
 5534              		.loc 1 858 7 is_stmt 0 view .LVU1789
 5535 00c8 BAF1000F 		cmp	r10, #0
 5536 00cc 29D1     		bne	.L552
 5537              	.LVL509:
 5538              	.L543:
 863:../USER/ttbasic.c **** 			if (err)
 5539              		.loc 1 863 4 is_stmt 1 view .LVU1790
 863:../USER/ttbasic.c **** 			if (err)
 5540              		.loc 1 863 12 is_stmt 0 view .LVU1791
 5541 00ce FFF7FEFF 		bl	getnum
 5542              	.LVL510:
 864:../USER/ttbasic.c **** 				return;
 5543              		.loc 1 864 4 is_stmt 1 view .LVU1792
 864:../USER/ttbasic.c **** 				return;
 5544              		.loc 1 864 7 is_stmt 0 view .LVU1793
 5545 00d2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5546 00d4 002B     		cmp	r3, #0
 5547 00d6 A6D1     		bne	.L524
 866:../USER/ttbasic.c **** 			}
 5548              		.loc 1 866 4 is_stmt 1 view .LVU1794
 866:../USER/ttbasic.c **** 			}
 5549              		.loc 1 866 15 is_stmt 0 view .LVU1795
 5550 00d8 29F81400 		strh	r0, [r9, r4, lsl #1]	@ movhi
 5551 00dc 2B68     		ldr	r3, [r5]
 5552 00de D9E7     		b	.L531
 5553              	.LVL511:
 5554              	.L570:
 846:../USER/ttbasic.c **** 				index = getparam();
 5555              		.loc 1 846 5 is_stmt 1 view .LVU1796
 846:../USER/ttbasic.c **** 				index = getparam();
 5556              		.loc 1 846 8 is_stmt 0 view .LVU1797
 5557 00e0 9A1C     		adds	r2, r3, #2
 5558 00e2 2A60     		str	r2, [r5]
 847:../USER/ttbasic.c **** 				value = getnum();
 5559              		.loc 1 847 5 is_stmt 1 view .LVU1798
 5560              	.LBB562:
 5561              	.LBI562:
 574:../USER/ttbasic.c **** 	short value;
 5562              		.loc 1 574 7 view .LVU1799
 5563              	.LBB563:
 575:../USER/ttbasic.c **** 
 5564              		.loc 1 575 2 view .LVU1800
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5565              		.loc 1 577 2 view .LVU1801
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5566              		.loc 1 577 5 is_stmt 0 view .LVU1802
 5567 00e4 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5568 00e6 1A2A     		cmp	r2, #26
 5569 00e8 3AD0     		beq	.L533
 5570              	.L535:
 578:../USER/ttbasic.c **** 		return 0;
 5571              		.loc 1 578 3 is_stmt 1 view .LVU1803
 578:../USER/ttbasic.c **** 		return 0;
 5572              		.loc 1 578 7 is_stmt 0 view .LVU1804
 5573 00ea 1123     		movs	r3, #17
 5574 00ec 0024     		movs	r4, #0
 5575 00ee 3B70     		strb	r3, [r7]
 579:../USER/ttbasic.c **** 	}
 5576              		.loc 1 579 3 is_stmt 1 view .LVU1805
 5577              	.L534:
 5578              	.LBE563:
 5579              	.LBE562:
 848:../USER/ttbasic.c **** 				arr[index] = value;
 5580              		.loc 1 848 5 view .LVU1806
 848:../USER/ttbasic.c **** 				arr[index] = value;
 5581              		.loc 1 848 13 is_stmt 0 view .LVU1807
 5582 00f0 FFF7FEFF 		bl	getnum
 5583              	.LVL512:
 849:../USER/ttbasic.c **** 			} else {
 5584              		.loc 1 849 5 is_stmt 1 view .LVU1808
 5585 00f4 2B68     		ldr	r3, [r5]
 849:../USER/ttbasic.c **** 			} else {
 5586              		.loc 1 849 16 is_stmt 0 view .LVU1809
 5587 00f6 29F81400 		strh	r0, [r9, r4, lsl #1]	@ movhi
 5588 00fa CBE7     		b	.L531
 5589              	.LVL513:
 5590              	.L569:
 833:../USER/ttbasic.c **** 			if (prompt) {
 5591              		.loc 1 833 4 is_stmt 1 view .LVU1810
 833:../USER/ttbasic.c **** 			if (prompt) {
 5592              		.loc 1 833 7 is_stmt 0 view .LVU1811
 5593 00fc 5A1C     		adds	r2, r3, #1
 5594 00fe 2A60     		str	r2, [r5]
 834:../USER/ttbasic.c **** 				c_putch(*cip + 'A');
 5595              		.loc 1 834 4 is_stmt 1 view .LVU1812
 835:../USER/ttbasic.c **** 				c_putch(':');
 5596              		.loc 1 835 5 view .LVU1813
 5597              	.LVL514:
 5598              	.LBB565:
 5599              	.LBI546:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5600              		.loc 1 35 6 view .LVU1814
 5601              	.LBB548:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5602              		.loc 1 35 22 view .LVU1815
 5603              	.LBE548:
 5604              	.LBE565:
 835:../USER/ttbasic.c **** 				c_putch(':');
 5605              		.loc 1 835 5 is_stmt 0 view .LVU1816
 5606 0100 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5607 0102 4130     		adds	r0, r0, #65
 5608              	.LBB566:
 5609              	.LBB549:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5610              		.loc 1 35 22 view .LVU1817
 5611 0104 40B2     		sxtb	r0, r0
 5612 0106 FFF7FEFF 		bl	putch_uart
 5613              	.LVL515:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5614              		.loc 1 35 37 is_stmt 1 view .LVU1818
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5615              		.loc 1 35 44 is_stmt 0 view .LVU1819
 5616 010a 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5617              		.loc 1 35 37 view .LVU1820
 5618 010c 9868     		ldr	r0, [r3, #8]
 5619 010e FFF7FEFF 		bl	fflush
 5620              	.LVL516:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5621              		.loc 1 35 37 view .LVU1821
 5622              	.LBE549:
 5623              	.LBE566:
 836:../USER/ttbasic.c **** 			}
 5624              		.loc 1 836 5 is_stmt 1 view .LVU1822
 5625              	.LBB567:
 5626              	.LBI567:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5627              		.loc 1 35 6 view .LVU1823
 5628              	.LBB568:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5629              		.loc 1 35 22 view .LVU1824
 5630 0112 3A20     		movs	r0, #58
 5631 0114 FFF7FEFF 		bl	putch_uart
 5632              	.LVL517:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5633              		.loc 1 35 37 view .LVU1825
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5634              		.loc 1 35 44 is_stmt 0 view .LVU1826
 5635 0118 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5636              		.loc 1 35 37 view .LVU1827
 5637 011a 9868     		ldr	r0, [r3, #8]
 5638 011c FFF7FEFF 		bl	fflush
 5639              	.LVL518:
 5640 0120 ADE7     		b	.L546
 5641              	.LVL519:
 5642              	.L552:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5643              		.loc 1 35 37 view .LVU1828
 5644              	.LBE568:
 5645              	.LBE567:
 5646              	.LBB569:
 5647              	.LBB570:
 194:../USER/ttbasic.c **** void c_gets() {
 5648              		.loc 1 194 37 view .LVU1829
 5649 0122 4020     		movs	r0, #64
 5650              	.LVL520:
 194:../USER/ttbasic.c **** void c_gets() {
 5651              		.loc 1 194 37 view .LVU1830
 5652              	.LBE570:
 5653              	.LBE569:
 5654 0124 DFF87CA0 		ldr	r10, .L572+20
 5655              	.L540:
 5656              	.LVL521:
 5657              	.LBB574:
 5658              	.LBB573:
 194:../USER/ttbasic.c **** void c_gets() {
 5659              		.loc 1 194 41 is_stmt 1 view .LVU1831
 5660              	.LBB571:
 5661              	.LBI571:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5662              		.loc 1 35 6 view .LVU1832
 5663              	.LBB572:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5664              		.loc 1 35 22 view .LVU1833
 5665 0128 FFF7FEFF 		bl	putch_uart
 5666              	.LVL522:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5667              		.loc 1 35 37 view .LVU1834
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5668              		.loc 1 35 44 is_stmt 0 view .LVU1835
 5669 012c 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5670              		.loc 1 35 37 view .LVU1836
 5671 012e 9868     		ldr	r0, [r3, #8]
 5672 0130 FFF7FEFF 		bl	fflush
 5673              	.LVL523:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5674              		.loc 1 35 37 view .LVU1837
 5675              	.LBE572:
 5676              	.LBE571:
 194:../USER/ttbasic.c **** void c_gets() {
 5677              		.loc 1 194 37 view .LVU1838
 5678 0134 1AF9010F 		ldrsb	r0, [r10, #1]!
 5679              	.LVL524:
 194:../USER/ttbasic.c **** void c_gets() {
 5680              		.loc 1 194 36 view .LVU1839
 5681 0138 0028     		cmp	r0, #0
 5682 013a F5D1     		bne	.L540
 5683              	.LVL525:
 194:../USER/ttbasic.c **** void c_gets() {
 5684              		.loc 1 194 36 view .LVU1840
 5685              	.LBE573:
 5686              	.LBE574:
 860:../USER/ttbasic.c **** 				c_puts("):");
 5687              		.loc 1 860 5 is_stmt 1 view .LVU1841
 5688 013c 0146     		mov	r1, r0
 5689 013e 2046     		mov	r0, r4
 5690 0140 FFF7FEFF 		bl	putnum
 5691              	.LVL526:
 861:../USER/ttbasic.c **** 			}
 5692              		.loc 1 861 5 view .LVU1842
 5693              	.LBB575:
 5694              	.LBI575:
 194:../USER/ttbasic.c **** void c_gets() {
 5695              		.loc 1 194 6 view .LVU1843
 5696              	.LBB576:
 194:../USER/ttbasic.c **** void c_gets() {
 5697              		.loc 1 194 37 is_stmt 0 view .LVU1844
 5698 0144 2920     		movs	r0, #41
 5699              	.LBE576:
 5700              	.LBE575:
 860:../USER/ttbasic.c **** 				c_puts("):");
 5701              		.loc 1 860 5 view .LVU1845
 5702 0146 DFF860A0 		ldr	r10, .L572+24
 5703              	.LVL527:
 5704              	.L542:
 5705              	.LBB580:
 5706              	.LBB579:
 194:../USER/ttbasic.c **** void c_gets() {
 5707              		.loc 1 194 41 is_stmt 1 view .LVU1846
 5708              	.LBB577:
 5709              	.LBI577:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5710              		.loc 1 35 6 view .LVU1847
 5711              	.LBB578:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5712              		.loc 1 35 22 view .LVU1848
 5713 014a FFF7FEFF 		bl	putch_uart
 5714              	.LVL528:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5715              		.loc 1 35 37 view .LVU1849
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5716              		.loc 1 35 44 is_stmt 0 view .LVU1850
 5717 014e 3368     		ldr	r3, [r6]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5718              		.loc 1 35 37 view .LVU1851
 5719 0150 9868     		ldr	r0, [r3, #8]
 5720 0152 FFF7FEFF 		bl	fflush
 5721              	.LVL529:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 5722              		.loc 1 35 37 view .LVU1852
 5723              	.LBE578:
 5724              	.LBE577:
 194:../USER/ttbasic.c **** void c_gets() {
 5725              		.loc 1 194 37 view .LVU1853
 5726 0156 1AF9010F 		ldrsb	r0, [r10, #1]!
 5727              	.LVL530:
 194:../USER/ttbasic.c **** void c_gets() {
 5728              		.loc 1 194 36 view .LVU1854
 5729 015a 0028     		cmp	r0, #0
 5730 015c F5D1     		bne	.L542
 5731 015e B6E7     		b	.L543
 5732              	.LVL531:
 5733              	.L533:
 194:../USER/ttbasic.c **** void c_gets() {
 5734              		.loc 1 194 36 view .LVU1855
 5735              	.LBE579:
 5736              	.LBE580:
 5737              	.LBB581:
 5738              	.LBB564:
 581:../USER/ttbasic.c **** 	value = iexp();
 5739              		.loc 1 581 2 is_stmt 1 view .LVU1856
 581:../USER/ttbasic.c **** 	value = iexp();
 5740              		.loc 1 581 5 is_stmt 0 view .LVU1857
 5741 0160 0333     		adds	r3, r3, #3
 5742 0162 2B60     		str	r3, [r5]
 582:../USER/ttbasic.c **** 	if (err)
 5743              		.loc 1 582 2 is_stmt 1 view .LVU1858
 582:../USER/ttbasic.c **** 	if (err)
 5744              		.loc 1 582 10 is_stmt 0 view .LVU1859
 5745 0164 FFF7FEFF 		bl	iexp
 5746              	.LVL532:
 583:../USER/ttbasic.c **** 		return 0;
 5747              		.loc 1 583 2 is_stmt 1 view .LVU1860
 583:../USER/ttbasic.c **** 		return 0;
 5748              		.loc 1 583 5 is_stmt 0 view .LVU1861
 5749 0168 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5750 016a 3BB9     		cbnz	r3, .L551
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5751              		.loc 1 586 2 is_stmt 1 view .LVU1862
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5752              		.loc 1 586 6 is_stmt 0 view .LVU1863
 5753 016c 2B68     		ldr	r3, [r5]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5754              		.loc 1 586 5 view .LVU1864
 5755 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5756 0170 1B2A     		cmp	r2, #27
 5757 0172 BAD1     		bne	.L535
 590:../USER/ttbasic.c **** 
 5758              		.loc 1 590 2 is_stmt 1 view .LVU1865
 590:../USER/ttbasic.c **** 
 5759              		.loc 1 590 5 is_stmt 0 view .LVU1866
 5760 0174 0133     		adds	r3, r3, #1
 5761 0176 2B60     		str	r3, [r5]
 592:../USER/ttbasic.c **** }
 5762              		.loc 1 592 2 is_stmt 1 view .LVU1867
 5763 0178 0446     		mov	r4, r0
 5764 017a B9E7     		b	.L534
 5765              	.L551:
 583:../USER/ttbasic.c **** 		return 0;
 5766              		.loc 1 583 5 is_stmt 0 view .LVU1868
 5767 017c 0024     		movs	r4, #0
 5768 017e B7E7     		b	.L534
 5769              	.LVL533:
 5770              	.L571:
 583:../USER/ttbasic.c **** 		return 0;
 5771              		.loc 1 583 5 view .LVU1869
 5772              	.LBE564:
 5773              	.LBE581:
 855:../USER/ttbasic.c **** 				return;
 5774              		.loc 1 855 5 is_stmt 1 view .LVU1870
 855:../USER/ttbasic.c **** 				return;
 5775              		.loc 1 855 9 is_stmt 0 view .LVU1871
 5776 0180 0323     		movs	r3, #3
 5777 0182 3B70     		strb	r3, [r7]
 856:../USER/ttbasic.c **** 			}
 5778              		.loc 1 856 5 is_stmt 1 view .LVU1872
 5779 0184 4FE7     		b	.L524
 5780              	.LVL534:
 5781              	.L554:
 831:../USER/ttbasic.c **** 		case I_VAR:
 5782              		.loc 1 831 3 is_stmt 0 view .LVU1873
 5783 0186 1346     		mov	r3, r2
 828:../USER/ttbasic.c **** 		}
 5784              		.loc 1 828 11 view .LVU1874
 5785 0188 4FF0000A 		mov	r10, #0
 5786 018c 4FE7     		b	.L547
 5787              	.L573:
 5788 018e 00BF     		.align	2
 5789              	.L572:
 5790 0190 00000000 		.word	cip
 5791 0194 00000000 		.word	err
 5792 0198 00000000 		.word	_impure_ptr
 5793 019c 00000000 		.word	arr
 5794 01a0 00000000 		.word	var
 5795 01a4 00000000 		.word	.LC0
 5796 01a8 04000000 		.word	.LC1
 5797              		.cfi_endproc
 5798              	.LFE30:
 5800              		.section	.text.ivar,"ax",%progbits
 5801              		.align	1
 5802              		.p2align 2,,3
 5803              		.global	ivar
 5804              		.syntax unified
 5805              		.thumb
 5806              		.thumb_func
 5807              		.fpu softvfp
 5809              	ivar:
 5810              	.LFB31:
 887:../USER/ttbasic.c **** 
 888:../USER/ttbasic.c **** // Variable assignment handler
 889:../USER/ttbasic.c **** void ivar() {
 5811              		.loc 1 889 13 is_stmt 1 view -0
 5812              		.cfi_startproc
 5813              		@ args = 0, pretend = 0, frame = 0
 5814              		@ frame_needed = 0, uses_anonymous_args = 0
 890:../USER/ttbasic.c **** 	short value;
 5815              		.loc 1 890 2 view .LVU1876
 891:../USER/ttbasic.c **** 	short index;
 5816              		.loc 1 891 2 view .LVU1877
 892:../USER/ttbasic.c **** 
 893:../USER/ttbasic.c **** 	index = *cip++;
 5817              		.loc 1 893 2 view .LVU1878
 5818              		.loc 1 893 14 is_stmt 0 view .LVU1879
 5819 0000 0B4A     		ldr	r2, .L580
 5820 0002 1368     		ldr	r3, [r2]
 5821 0004 591C     		adds	r1, r3, #1
 5822 0006 1160     		str	r1, [r2]
 5823              	.LVL535:
 894:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 5824              		.loc 1 894 2 is_stmt 1 view .LVU1880
 5825              		.loc 1 894 5 is_stmt 0 view .LVU1881
 5826 0008 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 5827 000a 1F29     		cmp	r1, #31
 5828 000c 03D0     		beq	.L575
 895:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 5829              		.loc 1 895 3 is_stmt 1 view .LVU1882
 5830              		.loc 1 895 7 is_stmt 0 view .LVU1883
 5831 000e 1222     		movs	r2, #18
 5832 0010 084B     		ldr	r3, .L580+4
 5833              	.LVL536:
 5834              		.loc 1 895 7 view .LVU1884
 5835 0012 1A70     		strb	r2, [r3]
 5836              	.LVL537:
 896:../USER/ttbasic.c **** 		return;
 5837              		.loc 1 896 3 is_stmt 1 view .LVU1885
 5838 0014 7047     		bx	lr
 5839              	.LVL538:
 5840              	.L575:
 889:../USER/ttbasic.c **** 	short value;
 5841              		.loc 1 889 13 is_stmt 0 view .LVU1886
 5842 0016 10B5     		push	{r4, lr}
 5843              		.cfi_def_cfa_offset 8
 5844              		.cfi_offset 4, -8
 5845              		.cfi_offset 14, -4
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 5846              		.loc 1 893 10 view .LVU1887
 5847 0018 13F8024B 		ldrb	r4, [r3], #2	@ zero_extendqisi2
 5848              	.LVL539:
 897:../USER/ttbasic.c **** 	}
 898:../USER/ttbasic.c **** 	cip++;
 5849              		.loc 1 898 2 is_stmt 1 view .LVU1888
 5850              		.loc 1 898 5 is_stmt 0 view .LVU1889
 5851 001c 1360     		str	r3, [r2]
 5852              	.LVL540:
 899:../USER/ttbasic.c **** 
 900:../USER/ttbasic.c **** 	value = iexp();
 5853              		.loc 1 900 2 is_stmt 1 view .LVU1890
 5854              		.loc 1 900 10 is_stmt 0 view .LVU1891
 5855 001e FFF7FEFF 		bl	iexp
 5856              	.LVL541:
 901:../USER/ttbasic.c **** 	if (err)
 5857              		.loc 1 901 2 is_stmt 1 view .LVU1892
 5858              		.loc 1 901 6 is_stmt 0 view .LVU1893
 5859 0022 044B     		ldr	r3, .L580+4
 5860              		.loc 1 901 5 view .LVU1894
 5861 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5862 0026 13B9     		cbnz	r3, .L574
 902:../USER/ttbasic.c **** 		return;
 903:../USER/ttbasic.c **** 
 904:../USER/ttbasic.c **** 	var[index] = value;
 5863              		.loc 1 904 2 is_stmt 1 view .LVU1895
 5864              		.loc 1 904 13 is_stmt 0 view .LVU1896
 5865 0028 034B     		ldr	r3, .L580+8
 5866 002a 23F81400 		strh	r0, [r3, r4, lsl #1]	@ movhi
 5867              	.L574:
 905:../USER/ttbasic.c **** }
 5868              		.loc 1 905 1 view .LVU1897
 5869 002e 10BD     		pop	{r4, pc}
 5870              	.L581:
 5871              		.align	2
 5872              	.L580:
 5873 0030 00000000 		.word	cip
 5874 0034 00000000 		.word	err
 5875 0038 00000000 		.word	var
 5876              		.cfi_endproc
 5877              	.LFE31:
 5879              		.section	.text.iarray,"ax",%progbits
 5880              		.align	1
 5881              		.p2align 2,,3
 5882              		.global	iarray
 5883              		.syntax unified
 5884              		.thumb
 5885              		.thumb_func
 5886              		.fpu softvfp
 5888              	iarray:
 5889              	.LFB32:
 906:../USER/ttbasic.c **** 
 907:../USER/ttbasic.c **** // Array assignment handler
 908:../USER/ttbasic.c **** void iarray() {
 5890              		.loc 1 908 15 is_stmt 1 view -0
 5891              		.cfi_startproc
 5892              		@ args = 0, pretend = 0, frame = 0
 5893              		@ frame_needed = 0, uses_anonymous_args = 0
 909:../USER/ttbasic.c **** 	short value;
 5894              		.loc 1 909 2 view .LVU1899
 910:../USER/ttbasic.c **** 	short index;
 5895              		.loc 1 910 2 view .LVU1900
 911:../USER/ttbasic.c **** 
 912:../USER/ttbasic.c **** 	if(*cip==I_ARRAY) {
 5896              		.loc 1 912 2 view .LVU1901
 908:../USER/ttbasic.c **** 	short value;
 5897              		.loc 1 908 15 is_stmt 0 view .LVU1902
 5898 0000 70B5     		push	{r4, r5, r6, lr}
 5899              		.cfi_def_cfa_offset 16
 5900              		.cfi_offset 4, -16
 5901              		.cfi_offset 5, -12
 5902              		.cfi_offset 6, -8
 5903              		.cfi_offset 14, -4
 5904              		.loc 1 912 5 view .LVU1903
 5905 0002 2B4C     		ldr	r4, .L598
 5906 0004 2368     		ldr	r3, [r4]
 5907 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5908              		.loc 1 912 4 view .LVU1904
 5909 0008 222A     		cmp	r2, #34
 5910 000a 18D0     		beq	.L596
 5911              	.LBB588:
 5912              	.LBI588:
 908:../USER/ttbasic.c **** 	short value;
 5913              		.loc 1 908 6 is_stmt 1 view .LVU1905
 5914              	.LBB589:
 913:../USER/ttbasic.c **** 		cip++;
 914:../USER/ttbasic.c **** 		index = getparam();
 915:../USER/ttbasic.c **** 		cip++;
 916:../USER/ttbasic.c **** 		value = iexp();
 917:../USER/ttbasic.c **** 		aryex[index] = value;
 918:../USER/ttbasic.c **** 	} else {
 919:../USER/ttbasic.c **** 
 920:../USER/ttbasic.c **** 	index = getparam();
 5915              		.loc 1 920 2 view .LVU1906
 5916              	.LBB590:
 5917              	.LBI590:
 574:../USER/ttbasic.c **** 	short value;
 5918              		.loc 1 574 7 view .LVU1907
 5919              	.LBB591:
 575:../USER/ttbasic.c **** 
 5920              		.loc 1 575 2 view .LVU1908
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5921              		.loc 1 577 2 view .LVU1909
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5922              		.loc 1 577 5 is_stmt 0 view .LVU1910
 5923 000c 1A2A     		cmp	r2, #26
 5924 000e 294D     		ldr	r5, .L598+4
 5925 0010 02D0     		beq	.L589
 5926              	.L591:
 578:../USER/ttbasic.c **** 		return 0;
 5927              		.loc 1 578 3 is_stmt 1 view .LVU1911
 578:../USER/ttbasic.c **** 		return 0;
 5928              		.loc 1 578 7 is_stmt 0 view .LVU1912
 5929 0012 1123     		movs	r3, #17
 5930 0014 2B70     		strb	r3, [r5]
 579:../USER/ttbasic.c **** 	}
 5931              		.loc 1 579 3 is_stmt 1 view .LVU1913
 5932              	.LVL542:
 579:../USER/ttbasic.c **** 	}
 5933              		.loc 1 579 3 is_stmt 0 view .LVU1914
 5934              	.LBE591:
 5935              	.LBE590:
 921:../USER/ttbasic.c **** 	if (err)
 5936              		.loc 1 921 2 is_stmt 1 view .LVU1915
 5937              	.L582:
 5938              		.loc 1 921 2 is_stmt 0 view .LVU1916
 5939              	.LBE589:
 5940              	.LBE588:
 922:../USER/ttbasic.c **** 		return;
 923:../USER/ttbasic.c **** 
 924:../USER/ttbasic.c **** 	if (index >= SIZE_ARRY) {
 925:../USER/ttbasic.c **** 		err = ERR_SOR;
 926:../USER/ttbasic.c **** 		return;
 927:../USER/ttbasic.c **** 	}
 928:../USER/ttbasic.c **** 
 929:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 930:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 931:../USER/ttbasic.c **** 		return;
 932:../USER/ttbasic.c **** 	}
 933:../USER/ttbasic.c **** 	cip++;
 934:../USER/ttbasic.c **** 
 935:../USER/ttbasic.c **** 	value = iexp();
 936:../USER/ttbasic.c **** 	if (err)
 937:../USER/ttbasic.c **** 		return;
 938:../USER/ttbasic.c **** 
 939:../USER/ttbasic.c **** 	arr[index] = value;
 940:../USER/ttbasic.c **** 	}
 941:../USER/ttbasic.c **** }
 5941              		.loc 1 941 1 view .LVU1917
 5942 0016 70BD     		pop	{r4, r5, r6, pc}
 5943              	.L589:
 5944              	.LBB599:
 5945              	.LBB596:
 5946              	.LBB594:
 5947              	.LBB592:
 581:../USER/ttbasic.c **** 	value = iexp();
 5948              		.loc 1 581 2 is_stmt 1 view .LVU1918
 581:../USER/ttbasic.c **** 	value = iexp();
 5949              		.loc 1 581 5 is_stmt 0 view .LVU1919
 5950 0018 0133     		adds	r3, r3, #1
 5951 001a 2360     		str	r3, [r4]
 582:../USER/ttbasic.c **** 	if (err)
 5952              		.loc 1 582 2 is_stmt 1 view .LVU1920
 582:../USER/ttbasic.c **** 	if (err)
 5953              		.loc 1 582 10 is_stmt 0 view .LVU1921
 5954 001c FFF7FEFF 		bl	iexp
 5955              	.LVL543:
 583:../USER/ttbasic.c **** 		return 0;
 5956              		.loc 1 583 5 view .LVU1922
 5957 0020 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 582:../USER/ttbasic.c **** 	if (err)
 5958              		.loc 1 582 10 view .LVU1923
 5959 0022 0646     		mov	r6, r0
 5960              	.LVL544:
 583:../USER/ttbasic.c **** 		return 0;
 5961              		.loc 1 583 2 is_stmt 1 view .LVU1924
 583:../USER/ttbasic.c **** 		return 0;
 5962              		.loc 1 583 5 is_stmt 0 view .LVU1925
 5963 0024 002B     		cmp	r3, #0
 5964 0026 F6D1     		bne	.L582
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5965              		.loc 1 586 2 is_stmt 1 view .LVU1926
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5966              		.loc 1 586 6 is_stmt 0 view .LVU1927
 5967 0028 2368     		ldr	r3, [r4]
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 5968              		.loc 1 586 5 view .LVU1928
 5969 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5970 002c 1B2A     		cmp	r2, #27
 5971 002e F0D1     		bne	.L591
 590:../USER/ttbasic.c **** 
 5972              		.loc 1 590 2 is_stmt 1 view .LVU1929
 590:../USER/ttbasic.c **** 
 5973              		.loc 1 590 5 is_stmt 0 view .LVU1930
 5974 0030 5A1C     		adds	r2, r3, #1
 5975              	.LBE592:
 5976              	.LBE594:
 924:../USER/ttbasic.c **** 		err = ERR_SOR;
 5977              		.loc 1 924 5 view .LVU1931
 5978 0032 3F28     		cmp	r0, #63
 5979              	.LBB595:
 5980              	.LBB593:
 590:../USER/ttbasic.c **** 
 5981              		.loc 1 590 5 view .LVU1932
 5982 0034 2260     		str	r2, [r4]
 592:../USER/ttbasic.c **** }
 5983              		.loc 1 592 2 is_stmt 1 view .LVU1933
 5984              	.LVL545:
 592:../USER/ttbasic.c **** }
 5985              		.loc 1 592 2 is_stmt 0 view .LVU1934
 5986              	.LBE593:
 5987              	.LBE595:
 921:../USER/ttbasic.c **** 		return;
 5988              		.loc 1 921 2 is_stmt 1 view .LVU1935
 924:../USER/ttbasic.c **** 		err = ERR_SOR;
 5989              		.loc 1 924 2 view .LVU1936
 924:../USER/ttbasic.c **** 		err = ERR_SOR;
 5990              		.loc 1 924 5 is_stmt 0 view .LVU1937
 5991 0036 13DD     		ble	.L592
 925:../USER/ttbasic.c **** 		return;
 5992              		.loc 1 925 3 is_stmt 1 view .LVU1938
 925:../USER/ttbasic.c **** 		return;
 5993              		.loc 1 925 7 is_stmt 0 view .LVU1939
 5994 0038 0323     		movs	r3, #3
 5995 003a 2B70     		strb	r3, [r5]
 926:../USER/ttbasic.c **** 	}
 5996              		.loc 1 926 3 is_stmt 1 view .LVU1940
 5997              	.LBE596:
 5998              	.LBE599:
 5999              		.loc 1 941 1 is_stmt 0 view .LVU1941
 6000 003c 70BD     		pop	{r4, r5, r6, pc}
 6001              	.LVL546:
 6002              	.L596:
 913:../USER/ttbasic.c **** 		index = getparam();
 6003              		.loc 1 913 3 is_stmt 1 view .LVU1942
 913:../USER/ttbasic.c **** 		index = getparam();
 6004              		.loc 1 913 6 is_stmt 0 view .LVU1943
 6005 003e 5A1C     		adds	r2, r3, #1
 6006 0040 2260     		str	r2, [r4]
 914:../USER/ttbasic.c **** 		cip++;
 6007              		.loc 1 914 3 is_stmt 1 view .LVU1944
 6008              	.LBB600:
 6009              	.LBI600:
 574:../USER/ttbasic.c **** 	short value;
 6010              		.loc 1 574 7 view .LVU1945
 6011              	.LBB601:
 575:../USER/ttbasic.c **** 
 6012              		.loc 1 575 2 view .LVU1946
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 6013              		.loc 1 577 2 view .LVU1947
 577:../USER/ttbasic.c **** 		err = ERR_PAREN;
 6014              		.loc 1 577 5 is_stmt 0 view .LVU1948
 6015 0042 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6016 0044 1A2A     		cmp	r2, #26
 6017 0046 11D0     		beq	.L584
 578:../USER/ttbasic.c **** 		return 0;
 6018              		.loc 1 578 3 is_stmt 1 view .LVU1949
 578:../USER/ttbasic.c **** 		return 0;
 6019              		.loc 1 578 7 is_stmt 0 view .LVU1950
 6020 0048 1121     		movs	r1, #17
 6021 004a 0025     		movs	r5, #0
 6022 004c 194A     		ldr	r2, .L598+4
 6023 004e 0233     		adds	r3, r3, #2
 6024 0050 1170     		strb	r1, [r2]
 579:../USER/ttbasic.c **** 	}
 6025              		.loc 1 579 3 is_stmt 1 view .LVU1951
 6026              	.L585:
 6027              	.LBE601:
 6028              	.LBE600:
 915:../USER/ttbasic.c **** 		value = iexp();
 6029              		.loc 1 915 3 view .LVU1952
 915:../USER/ttbasic.c **** 		value = iexp();
 6030              		.loc 1 915 6 is_stmt 0 view .LVU1953
 6031 0052 2360     		str	r3, [r4]
 916:../USER/ttbasic.c **** 		aryex[index] = value;
 6032              		.loc 1 916 3 is_stmt 1 view .LVU1954
 916:../USER/ttbasic.c **** 		aryex[index] = value;
 6033              		.loc 1 916 11 is_stmt 0 view .LVU1955
 6034 0054 FFF7FEFF 		bl	iexp
 6035              	.LVL547:
 917:../USER/ttbasic.c **** 	} else {
 6036              		.loc 1 917 3 is_stmt 1 view .LVU1956
 917:../USER/ttbasic.c **** 	} else {
 6037              		.loc 1 917 16 is_stmt 0 view .LVU1957
 6038 0058 174B     		ldr	r3, .L598+8
 6039 005a 23F81500 		strh	r0, [r3, r5, lsl #1]	@ movhi
 6040              		.loc 1 941 1 view .LVU1958
 6041 005e 70BD     		pop	{r4, r5, r6, pc}
 6042              	.LVL548:
 6043              	.L592:
 6044              	.LBB604:
 6045              	.LBB597:
 929:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 6046              		.loc 1 929 2 is_stmt 1 view .LVU1959
 929:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 6047              		.loc 1 929 5 is_stmt 0 view .LVU1960
 6048 0060 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6049 0062 1F2A     		cmp	r2, #31
 6050 0064 14D0     		beq	.L593
 930:../USER/ttbasic.c **** 		return;
 6051              		.loc 1 930 3 is_stmt 1 view .LVU1961
 930:../USER/ttbasic.c **** 		return;
 6052              		.loc 1 930 7 is_stmt 0 view .LVU1962
 6053 0066 1223     		movs	r3, #18
 6054 0068 2B70     		strb	r3, [r5]
 931:../USER/ttbasic.c **** 	}
 6055              		.loc 1 931 3 is_stmt 1 view .LVU1963
 6056              	.LBE597:
 6057              	.LBE604:
 6058              		.loc 1 941 1 is_stmt 0 view .LVU1964
 6059 006a 70BD     		pop	{r4, r5, r6, pc}
 6060              	.LVL549:
 6061              	.L584:
 6062              	.LBB605:
 6063              	.LBB602:
 581:../USER/ttbasic.c **** 	value = iexp();
 6064              		.loc 1 581 2 is_stmt 1 view .LVU1965
 581:../USER/ttbasic.c **** 	value = iexp();
 6065              		.loc 1 581 5 is_stmt 0 view .LVU1966
 6066 006c 0233     		adds	r3, r3, #2
 6067 006e 2360     		str	r3, [r4]
 582:../USER/ttbasic.c **** 	if (err)
 6068              		.loc 1 582 2 is_stmt 1 view .LVU1967
 582:../USER/ttbasic.c **** 	if (err)
 6069              		.loc 1 582 10 is_stmt 0 view .LVU1968
 6070 0070 FFF7FEFF 		bl	iexp
 6071              	.LVL550:
 583:../USER/ttbasic.c **** 		return 0;
 6072              		.loc 1 583 2 is_stmt 1 view .LVU1969
 583:../USER/ttbasic.c **** 		return 0;
 6073              		.loc 1 583 6 is_stmt 0 view .LVU1970
 6074 0074 0F4A     		ldr	r2, .L598+4
 583:../USER/ttbasic.c **** 		return 0;
 6075              		.loc 1 583 5 view .LVU1971
 6076 0076 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 6077 0078 ADB9     		cbnz	r5, .L597
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 6078              		.loc 1 586 2 is_stmt 1 view .LVU1972
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 6079              		.loc 1 586 6 is_stmt 0 view .LVU1973
 6080 007a 2168     		ldr	r1, [r4]
 6081 007c 0B46     		mov	r3, r1
 586:../USER/ttbasic.c **** 		err = ERR_PAREN;
 6082              		.loc 1 586 5 view .LVU1974
 6083 007e 13F8016B 		ldrb	r6, [r3], #1	@ zero_extendqisi2
 6084 0082 1B2E     		cmp	r6, #27
 587:../USER/ttbasic.c **** 		return 0;
 6085              		.loc 1 587 3 is_stmt 1 view .LVU1975
 587:../USER/ttbasic.c **** 		return 0;
 6086              		.loc 1 587 7 is_stmt 0 view .LVU1976
 6087 0084 15BF     		itete	ne
 6088 0086 1121     		movne	r1, #17
 6089 0088 0546     		moveq	r5, r0
 6090 008a 1170     		strbne	r1, [r2]
 588:../USER/ttbasic.c **** 	}
 6091              		.loc 1 588 3 is_stmt 1 view .LVU1977
 590:../USER/ttbasic.c **** 
 6092              		.loc 1 590 2 view .LVU1978
 592:../USER/ttbasic.c **** }
 6093              		.loc 1 592 2 view .LVU1979
 6094 008c 8B1C     		addeq	r3, r1, #2
 6095 008e E0E7     		b	.L585
 6096              	.LVL551:
 6097              	.L593:
 592:../USER/ttbasic.c **** }
 6098              		.loc 1 592 2 is_stmt 0 view .LVU1980
 6099              	.LBE602:
 6100              	.LBE605:
 6101              	.LBB606:
 6102              	.LBB598:
 933:../USER/ttbasic.c **** 
 6103              		.loc 1 933 2 is_stmt 1 view .LVU1981
 933:../USER/ttbasic.c **** 
 6104              		.loc 1 933 5 is_stmt 0 view .LVU1982
 6105 0090 0233     		adds	r3, r3, #2
 6106 0092 2360     		str	r3, [r4]
 935:../USER/ttbasic.c **** 	if (err)
 6107              		.loc 1 935 2 is_stmt 1 view .LVU1983
 935:../USER/ttbasic.c **** 	if (err)
 6108              		.loc 1 935 10 is_stmt 0 view .LVU1984
 6109 0094 FFF7FEFF 		bl	iexp
 6110              	.LVL552:
 936:../USER/ttbasic.c **** 		return;
 6111              		.loc 1 936 2 is_stmt 1 view .LVU1985
 936:../USER/ttbasic.c **** 		return;
 6112              		.loc 1 936 5 is_stmt 0 view .LVU1986
 6113 0098 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6114 009a 002B     		cmp	r3, #0
 6115 009c BBD1     		bne	.L582
 939:../USER/ttbasic.c **** 	}
 6116              		.loc 1 939 2 is_stmt 1 view .LVU1987
 939:../USER/ttbasic.c **** 	}
 6117              		.loc 1 939 13 is_stmt 0 view .LVU1988
 6118 009e 074B     		ldr	r3, .L598+12
 6119 00a0 23F81600 		strh	r0, [r3, r6, lsl #1]	@ movhi
 6120              	.LBE598:
 6121              	.LBE606:
 6122              		.loc 1 941 1 view .LVU1989
 6123 00a4 70BD     		pop	{r4, r5, r6, pc}
 6124              	.LVL553:
 6125              	.L597:
 6126              		.loc 1 941 1 view .LVU1990
 6127 00a6 2368     		ldr	r3, [r4]
 6128              	.LBB607:
 6129              	.LBB603:
 583:../USER/ttbasic.c **** 		return 0;
 6130              		.loc 1 583 5 view .LVU1991
 6131 00a8 0025     		movs	r5, #0
 6132 00aa 0133     		adds	r3, r3, #1
 6133 00ac D1E7     		b	.L585
 6134              	.L599:
 6135 00ae 00BF     		.align	2
 6136              	.L598:
 6137 00b0 00000000 		.word	cip
 6138 00b4 00000000 		.word	err
 6139 00b8 00000000 		.word	aryex
 6140 00bc 00000000 		.word	arr
 6141              	.LBE603:
 6142              	.LBE607:
 6143              		.cfi_endproc
 6144              	.LFE32:
 6146              		.section	.text.ilet,"ax",%progbits
 6147              		.align	1
 6148              		.p2align 2,,3
 6149              		.global	ilet
 6150              		.syntax unified
 6151              		.thumb
 6152              		.thumb_func
 6153              		.fpu softvfp
 6155              	ilet:
 6156              	.LFB33:
 942:../USER/ttbasic.c **** 
 943:../USER/ttbasic.c **** // LET handler
 944:../USER/ttbasic.c **** void ilet() {
 6157              		.loc 1 944 13 is_stmt 1 view -0
 6158              		.cfi_startproc
 6159              		@ args = 0, pretend = 0, frame = 0
 6160              		@ frame_needed = 0, uses_anonymous_args = 0
 945:../USER/ttbasic.c **** 	switch (*cip) {
 6161              		.loc 1 945 2 view .LVU1993
 6162              		.loc 1 945 10 is_stmt 0 view .LVU1994
 6163 0000 1249     		ldr	r1, .L608
 6164 0002 0B68     		ldr	r3, [r1]
 6165 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6166              		.loc 1 945 2 view .LVU1995
 6167 0006 222A     		cmp	r2, #34
 6168 0008 0AD0     		beq	.L601
 6169 000a 2A2A     		cmp	r2, #42
 6170 000c 0CD1     		bne	.L602
 946:../USER/ttbasic.c **** 	case I_VAR:
 947:../USER/ttbasic.c **** 		cip++;
 6171              		.loc 1 947 3 is_stmt 1 view .LVU1996
 948:../USER/ttbasic.c **** 		ivar(); // Variable assignment
 6172              		.loc 1 948 3 view .LVU1997
 6173              	.LBB610:
 6174              	.LBI610:
 889:../USER/ttbasic.c **** 	short value;
 6175              		.loc 1 889 6 view .LVU1998
 6176              	.LBB611:
 890:../USER/ttbasic.c **** 	short index;
 6177              		.loc 1 890 2 view .LVU1999
 891:../USER/ttbasic.c **** 
 6178              		.loc 1 891 2 view .LVU2000
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 6179              		.loc 1 893 2 view .LVU2001
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 6180              		.loc 1 893 14 is_stmt 0 view .LVU2002
 6181 000e 9A1C     		adds	r2, r3, #2
 6182 0010 0A60     		str	r2, [r1]
 6183              	.LVL554:
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 6184              		.loc 1 894 2 is_stmt 1 view .LVU2003
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 6185              		.loc 1 894 5 is_stmt 0 view .LVU2004
 6186 0012 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 6187 0014 1F2A     		cmp	r2, #31
 6188 0016 0BD0     		beq	.L603
 895:../USER/ttbasic.c **** 		return;
 6189              		.loc 1 895 3 is_stmt 1 view .LVU2005
 895:../USER/ttbasic.c **** 		return;
 6190              		.loc 1 895 7 is_stmt 0 view .LVU2006
 6191 0018 1222     		movs	r2, #18
 6192 001a 0D4B     		ldr	r3, .L608+4
 6193              	.LVL555:
 895:../USER/ttbasic.c **** 		return;
 6194              		.loc 1 895 7 view .LVU2007
 6195 001c 1A70     		strb	r2, [r3]
 896:../USER/ttbasic.c **** 	}
 6196              		.loc 1 896 3 is_stmt 1 view .LVU2008
 6197 001e 7047     		bx	lr
 6198              	.LVL556:
 6199              	.L601:
 896:../USER/ttbasic.c **** 	}
 6200              		.loc 1 896 3 is_stmt 0 view .LVU2009
 6201              	.LBE611:
 6202              	.LBE610:
 949:../USER/ttbasic.c **** 		break;
 950:../USER/ttbasic.c **** 	case I_ARRAY:
 951:../USER/ttbasic.c **** 		cip++;
 6203              		.loc 1 951 3 is_stmt 1 view .LVU2010
 6204              		.loc 1 951 6 is_stmt 0 view .LVU2011
 6205 0020 0133     		adds	r3, r3, #1
 6206 0022 0B60     		str	r3, [r1]
 952:../USER/ttbasic.c **** 		iarray(); // Array assignment
 6207              		.loc 1 952 3 is_stmt 1 view .LVU2012
 6208 0024 FFF7FEBF 		b	iarray
 6209              	.LVL557:
 6210              	.L602:
 953:../USER/ttbasic.c **** 		break;
 954:../USER/ttbasic.c **** 	default:
 955:../USER/ttbasic.c **** 		err = ERR_LETWOV;
 6211              		.loc 1 955 3 view .LVU2013
 6212              		.loc 1 955 7 is_stmt 0 view .LVU2014
 6213 0028 0E22     		movs	r2, #14
 6214 002a 094B     		ldr	r3, .L608+4
 6215 002c 1A70     		strb	r2, [r3]
 956:../USER/ttbasic.c **** 		break;
 6216              		.loc 1 956 3 is_stmt 1 view .LVU2015
 6217 002e 7047     		bx	lr
 6218              	.LVL558:
 6219              	.L603:
 944:../USER/ttbasic.c **** 	switch (*cip) {
 6220              		.loc 1 944 13 is_stmt 0 view .LVU2016
 6221 0030 10B5     		push	{r4, lr}
 6222              		.cfi_def_cfa_offset 8
 6223              		.cfi_offset 4, -8
 6224              		.cfi_offset 14, -4
 6225              	.LBB613:
 6226              	.LBB612:
 898:../USER/ttbasic.c **** 
 6227              		.loc 1 898 5 view .LVU2017
 6228 0032 DA1C     		adds	r2, r3, #3
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 6229              		.loc 1 893 10 view .LVU2018
 6230 0034 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
 898:../USER/ttbasic.c **** 
 6231              		.loc 1 898 2 is_stmt 1 view .LVU2019
 898:../USER/ttbasic.c **** 
 6232              		.loc 1 898 5 is_stmt 0 view .LVU2020
 6233 0036 0A60     		str	r2, [r1]
 6234              	.LVL559:
 900:../USER/ttbasic.c **** 	if (err)
 6235              		.loc 1 900 2 is_stmt 1 view .LVU2021
 900:../USER/ttbasic.c **** 	if (err)
 6236              		.loc 1 900 10 is_stmt 0 view .LVU2022
 6237 0038 FFF7FEFF 		bl	iexp
 6238              	.LVL560:
 901:../USER/ttbasic.c **** 		return;
 6239              		.loc 1 901 2 is_stmt 1 view .LVU2023
 901:../USER/ttbasic.c **** 		return;
 6240              		.loc 1 901 6 is_stmt 0 view .LVU2024
 6241 003c 044B     		ldr	r3, .L608+4
 901:../USER/ttbasic.c **** 		return;
 6242              		.loc 1 901 5 view .LVU2025
 6243 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6244 0040 13B9     		cbnz	r3, .L600
 904:../USER/ttbasic.c **** }
 6245              		.loc 1 904 2 is_stmt 1 view .LVU2026
 904:../USER/ttbasic.c **** }
 6246              		.loc 1 904 13 is_stmt 0 view .LVU2027
 6247 0042 044B     		ldr	r3, .L608+8
 6248 0044 23F81400 		strh	r0, [r3, r4, lsl #1]	@ movhi
 6249              	.L600:
 904:../USER/ttbasic.c **** }
 6250              		.loc 1 904 13 view .LVU2028
 6251              	.LBE612:
 6252              	.LBE613:
 957:../USER/ttbasic.c **** 	}
 958:../USER/ttbasic.c **** }
 6253              		.loc 1 958 1 view .LVU2029
 6254 0048 10BD     		pop	{r4, pc}
 6255              	.L609:
 6256 004a 00BF     		.align	2
 6257              	.L608:
 6258 004c 00000000 		.word	cip
 6259 0050 00000000 		.word	err
 6260 0054 00000000 		.word	var
 6261              		.cfi_endproc
 6262              	.LFE33:
 6264              		.section	.text.chk_sep,"ax",%progbits
 6265              		.align	1
 6266              		.p2align 2,,3
 6267              		.global	chk_sep
 6268              		.syntax unified
 6269              		.thumb
 6270              		.thumb_func
 6271              		.fpu softvfp
 6273              	chk_sep:
 6274              	.LVL561:
 6275              	.LFB34:
 959:../USER/ttbasic.c **** 
 960:../USER/ttbasic.c **** // Add new Cmd
 961:../USER/ttbasic.c **** void chk_sep(unsigned char sep){
 6276              		.loc 1 961 32 is_stmt 1 view -0
 6277              		.cfi_startproc
 6278              		@ args = 0, pretend = 0, frame = 0
 6279              		@ frame_needed = 0, uses_anonymous_args = 0
 6280              		@ link register save eliminated.
 962:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6281              		.loc 1 962 2 view .LVU2031
 6282              		.loc 1 962 4 is_stmt 0 view .LVU2032
 6283 0000 1428     		cmp	r0, #20
 6284 0002 02D0     		beq	.L610
 6285              		.loc 1 962 21 is_stmt 1 discriminator 1 view .LVU2033
 6286              		.loc 1 962 25 is_stmt 0 discriminator 1 view .LVU2034
 6287 0004 1422     		movs	r2, #20
 6288 0006 014B     		ldr	r3, .L615
 6289 0008 1A70     		strb	r2, [r3]
 6290              		.loc 1 962 39 is_stmt 1 discriminator 1 view .LVU2035
 6291              	.L610:
 963:../USER/ttbasic.c **** }
 6292              		.loc 1 963 1 is_stmt 0 view .LVU2036
 6293 000a 7047     		bx	lr
 6294              	.L616:
 6295              		.align	2
 6296              	.L615:
 6297 000c 00000000 		.word	err
 6298              		.cfi_endproc
 6299              	.LFE34:
 6301              		.section	.text.ipset,"ax",%progbits
 6302              		.align	1
 6303              		.p2align 2,,3
 6304              		.global	ipset
 6305              		.syntax unified
 6306              		.thumb
 6307              		.thumb_func
 6308              		.fpu softvfp
 6310              	ipset:
 6311              	.LFB35:
 964:../USER/ttbasic.c **** void ipset(){
 6312              		.loc 1 964 13 is_stmt 1 view -0
 6313              		.cfi_startproc
 6314              		@ args = 0, pretend = 0, frame = 0
 6315              		@ frame_needed = 0, uses_anonymous_args = 0
 965:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 6316              		.loc 1 965 2 view .LVU2038
 964:../USER/ttbasic.c **** void ipset(){
 6317              		.loc 1 964 13 is_stmt 0 view .LVU2039
 6318 0000 70B5     		push	{r4, r5, r6, lr}
 6319              		.cfi_def_cfa_offset 16
 6320              		.cfi_offset 4, -16
 6321              		.cfi_offset 5, -12
 6322              		.cfi_offset 6, -8
 6323              		.cfi_offset 14, -4
 6324              		.loc 1 965 13 view .LVU2040
 6325 0002 FFF7FEFF 		bl	iexp
 6326              	.LVL562:
 6327              		.loc 1 965 21 view .LVU2041
 6328 0006 104C     		ldr	r4, .L627
 6329              		.loc 1 965 13 view .LVU2042
 6330 0008 0546     		mov	r5, r0
 6331              	.LVL563:
 6332              		.loc 1 965 21 is_stmt 1 view .LVU2043
 6333 000a 2368     		ldr	r3, [r4]
 6334              	.LVL564:
 6335              	.LBB618:
 6336              	.LBI618:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6337              		.loc 1 961 6 view .LVU2044
 6338              	.LBB619:
 962:../USER/ttbasic.c **** }
 6339              		.loc 1 962 2 view .LVU2045
 962:../USER/ttbasic.c **** }
 6340              		.loc 1 962 4 is_stmt 0 view .LVU2046
 6341 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6342 000e 142A     		cmp	r2, #20
 6343 0010 02D0     		beq	.L618
 962:../USER/ttbasic.c **** }
 6344              		.loc 1 962 21 is_stmt 1 view .LVU2047
 962:../USER/ttbasic.c **** }
 6345              		.loc 1 962 25 is_stmt 0 view .LVU2048
 6346 0012 1421     		movs	r1, #20
 6347 0014 0D4A     		ldr	r2, .L627+4
 6348 0016 1170     		strb	r1, [r2]
 6349              	.LVL565:
 962:../USER/ttbasic.c **** }
 6350              		.loc 1 962 39 is_stmt 1 view .LVU2049
 6351              	.L618:
 962:../USER/ttbasic.c **** }
 6352              		.loc 1 962 39 is_stmt 0 view .LVU2050
 6353              	.LBE619:
 6354              	.LBE618:
 6355              		.loc 1 965 36 is_stmt 1 view .LVU2051
 6356              		.loc 1 965 39 is_stmt 0 view .LVU2052
 6357 0018 0133     		adds	r3, r3, #1
 6358 001a 2360     		str	r3, [r4]
 966:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 6359              		.loc 1 966 2 is_stmt 1 view .LVU2053
 6360              		.loc 1 966 13 is_stmt 0 view .LVU2054
 6361 001c FFF7FEFF 		bl	iexp
 6362              	.LVL566:
 6363              		.loc 1 966 21 view .LVU2055
 6364 0020 2368     		ldr	r3, [r4]
 6365              		.loc 1 966 13 view .LVU2056
 6366 0022 0646     		mov	r6, r0
 6367              	.LVL567:
 6368              		.loc 1 966 21 is_stmt 1 view .LVU2057
 6369              	.LBB620:
 6370              	.LBI620:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6371              		.loc 1 961 6 view .LVU2058
 6372              	.LBB621:
 962:../USER/ttbasic.c **** }
 6373              		.loc 1 962 2 view .LVU2059
 962:../USER/ttbasic.c **** }
 6374              		.loc 1 962 4 is_stmt 0 view .LVU2060
 6375 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6376 0026 142A     		cmp	r2, #20
 6377 0028 02D0     		beq	.L619
 962:../USER/ttbasic.c **** }
 6378              		.loc 1 962 21 is_stmt 1 view .LVU2061
 962:../USER/ttbasic.c **** }
 6379              		.loc 1 962 25 is_stmt 0 view .LVU2062
 6380 002a 1421     		movs	r1, #20
 6381 002c 074A     		ldr	r2, .L627+4
 6382 002e 1170     		strb	r1, [r2]
 6383              	.LVL568:
 962:../USER/ttbasic.c **** }
 6384              		.loc 1 962 39 is_stmt 1 view .LVU2063
 6385              	.L619:
 962:../USER/ttbasic.c **** }
 6386              		.loc 1 962 39 is_stmt 0 view .LVU2064
 6387              	.LBE621:
 6388              	.LBE620:
 6389              		.loc 1 966 36 is_stmt 1 view .LVU2065
 6390              		.loc 1 966 39 is_stmt 0 view .LVU2066
 6391 0030 0133     		adds	r3, r3, #1
 6392 0032 2360     		str	r3, [r4]
 967:../USER/ttbasic.c **** 	int val2 = iexp();
 6393              		.loc 1 967 2 is_stmt 1 view .LVU2067
 6394              		.loc 1 967 13 is_stmt 0 view .LVU2068
 6395 0034 FFF7FEFF 		bl	iexp
 6396              	.LVL569:
 968:../USER/ttbasic.c **** 	pset(val0,val1, val2);
 6397              		.loc 1 968 2 is_stmt 1 view .LVU2069
 6398 0038 B1B2     		uxth	r1, r6
 6399 003a 82B2     		uxth	r2, r0
 6400 003c A8B2     		uxth	r0, r5
 6401              	.LVL570:
 969:../USER/ttbasic.c **** }
 6402              		.loc 1 969 1 is_stmt 0 view .LVU2070
 6403 003e BDE87040 		pop	{r4, r5, r6, lr}
 6404              		.cfi_restore 14
 6405              		.cfi_restore 6
 6406              		.cfi_restore 5
 6407              		.cfi_restore 4
 6408              		.cfi_def_cfa_offset 0
 6409              	.LVL571:
 968:../USER/ttbasic.c **** 	pset(val0,val1, val2);
 6410              		.loc 1 968 2 view .LVU2071
 6411 0042 FFF7FEBF 		b	pset
 6412              	.LVL572:
 6413              	.L628:
 968:../USER/ttbasic.c **** 	pset(val0,val1, val2);
 6414              		.loc 1 968 2 view .LVU2072
 6415 0046 00BF     		.align	2
 6416              	.L627:
 6417 0048 00000000 		.word	cip
 6418 004c 00000000 		.word	err
 6419              		.cfi_endproc
 6420              	.LFE35:
 6422              		.section	.text.iline,"ax",%progbits
 6423              		.align	1
 6424              		.p2align 2,,3
 6425              		.global	iline
 6426              		.syntax unified
 6427              		.thumb
 6428              		.thumb_func
 6429              		.fpu softvfp
 6431              	iline:
 6432              	.LFB36:
 970:../USER/ttbasic.c **** void iline(){
 6433              		.loc 1 970 13 is_stmt 1 view -0
 6434              		.cfi_startproc
 6435              		@ args = 0, pretend = 0, frame = 0
 6436              		@ frame_needed = 0, uses_anonymous_args = 0
 971:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 6437              		.loc 1 971 2 view .LVU2074
 970:../USER/ttbasic.c **** void iline(){
 6438              		.loc 1 970 13 is_stmt 0 view .LVU2075
 6439 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6440              		.cfi_def_cfa_offset 24
 6441              		.cfi_offset 4, -24
 6442              		.cfi_offset 5, -20
 6443              		.cfi_offset 6, -16
 6444              		.cfi_offset 7, -12
 6445              		.cfi_offset 8, -8
 6446              		.cfi_offset 14, -4
 6447 0004 82B0     		sub	sp, sp, #8
 6448              		.cfi_def_cfa_offset 32
 6449              		.loc 1 971 13 view .LVU2076
 6450 0006 FFF7FEFF 		bl	iexp
 6451              	.LVL573:
 6452              		.loc 1 971 21 view .LVU2077
 6453 000a 1E4C     		ldr	r4, .L647
 6454              		.loc 1 971 13 view .LVU2078
 6455 000c 0546     		mov	r5, r0
 6456              	.LVL574:
 6457              		.loc 1 971 21 is_stmt 1 view .LVU2079
 6458 000e 2368     		ldr	r3, [r4]
 6459              	.LVL575:
 6460              	.LBB622:
 6461              	.LBI622:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6462              		.loc 1 961 6 view .LVU2080
 6463              	.LBB623:
 962:../USER/ttbasic.c **** }
 6464              		.loc 1 962 2 view .LVU2081
 962:../USER/ttbasic.c **** }
 6465              		.loc 1 962 4 is_stmt 0 view .LVU2082
 6466 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6467 0012 142A     		cmp	r2, #20
 6468 0014 02D0     		beq	.L630
 962:../USER/ttbasic.c **** }
 6469              		.loc 1 962 21 is_stmt 1 view .LVU2083
 962:../USER/ttbasic.c **** }
 6470              		.loc 1 962 25 is_stmt 0 view .LVU2084
 6471 0016 1421     		movs	r1, #20
 6472 0018 1B4A     		ldr	r2, .L647+4
 6473 001a 1170     		strb	r1, [r2]
 6474              	.LVL576:
 962:../USER/ttbasic.c **** }
 6475              		.loc 1 962 39 is_stmt 1 view .LVU2085
 6476              	.L630:
 962:../USER/ttbasic.c **** }
 6477              		.loc 1 962 39 is_stmt 0 view .LVU2086
 6478              	.LBE623:
 6479              	.LBE622:
 6480              		.loc 1 971 36 is_stmt 1 view .LVU2087
 6481              		.loc 1 971 39 is_stmt 0 view .LVU2088
 6482 001c 0133     		adds	r3, r3, #1
 6483 001e 2360     		str	r3, [r4]
 972:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 6484              		.loc 1 972 2 is_stmt 1 view .LVU2089
 6485              		.loc 1 972 13 is_stmt 0 view .LVU2090
 6486 0020 FFF7FEFF 		bl	iexp
 6487              	.LVL577:
 6488              		.loc 1 972 21 view .LVU2091
 6489 0024 2368     		ldr	r3, [r4]
 6490              		.loc 1 972 13 view .LVU2092
 6491 0026 0646     		mov	r6, r0
 6492              	.LVL578:
 6493              		.loc 1 972 21 is_stmt 1 view .LVU2093
 6494              	.LBB624:
 6495              	.LBI624:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6496              		.loc 1 961 6 view .LVU2094
 6497              	.LBB625:
 962:../USER/ttbasic.c **** }
 6498              		.loc 1 962 2 view .LVU2095
 962:../USER/ttbasic.c **** }
 6499              		.loc 1 962 4 is_stmt 0 view .LVU2096
 6500 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6501 002a 142A     		cmp	r2, #20
 6502 002c 02D0     		beq	.L631
 962:../USER/ttbasic.c **** }
 6503              		.loc 1 962 21 is_stmt 1 view .LVU2097
 962:../USER/ttbasic.c **** }
 6504              		.loc 1 962 25 is_stmt 0 view .LVU2098
 6505 002e 1421     		movs	r1, #20
 6506 0030 154A     		ldr	r2, .L647+4
 6507 0032 1170     		strb	r1, [r2]
 6508              	.LVL579:
 962:../USER/ttbasic.c **** }
 6509              		.loc 1 962 39 is_stmt 1 view .LVU2099
 6510              	.L631:
 962:../USER/ttbasic.c **** }
 6511              		.loc 1 962 39 is_stmt 0 view .LVU2100
 6512              	.LBE625:
 6513              	.LBE624:
 6514              		.loc 1 972 36 is_stmt 1 view .LVU2101
 6515              		.loc 1 972 39 is_stmt 0 view .LVU2102
 6516 0034 0133     		adds	r3, r3, #1
 6517 0036 2360     		str	r3, [r4]
 973:../USER/ttbasic.c **** 	int val2 = iexp(); chk_sep(*cip); cip++;
 6518              		.loc 1 973 2 is_stmt 1 view .LVU2103
 6519              		.loc 1 973 13 is_stmt 0 view .LVU2104
 6520 0038 FFF7FEFF 		bl	iexp
 6521              	.LVL580:
 6522              		.loc 1 973 21 view .LVU2105
 6523 003c 2368     		ldr	r3, [r4]
 6524              		.loc 1 973 13 view .LVU2106
 6525 003e 0746     		mov	r7, r0
 6526              	.LVL581:
 6527              		.loc 1 973 21 is_stmt 1 view .LVU2107
 6528              	.LBB626:
 6529              	.LBI626:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6530              		.loc 1 961 6 view .LVU2108
 6531              	.LBB627:
 962:../USER/ttbasic.c **** }
 6532              		.loc 1 962 2 view .LVU2109
 962:../USER/ttbasic.c **** }
 6533              		.loc 1 962 4 is_stmt 0 view .LVU2110
 6534 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6535 0042 142A     		cmp	r2, #20
 6536 0044 02D0     		beq	.L632
 962:../USER/ttbasic.c **** }
 6537              		.loc 1 962 21 is_stmt 1 view .LVU2111
 962:../USER/ttbasic.c **** }
 6538              		.loc 1 962 25 is_stmt 0 view .LVU2112
 6539 0046 1421     		movs	r1, #20
 6540 0048 0F4A     		ldr	r2, .L647+4
 6541 004a 1170     		strb	r1, [r2]
 6542              	.LVL582:
 962:../USER/ttbasic.c **** }
 6543              		.loc 1 962 39 is_stmt 1 view .LVU2113
 6544              	.L632:
 962:../USER/ttbasic.c **** }
 6545              		.loc 1 962 39 is_stmt 0 view .LVU2114
 6546              	.LBE627:
 6547              	.LBE626:
 6548              		.loc 1 973 36 is_stmt 1 view .LVU2115
 6549              		.loc 1 973 39 is_stmt 0 view .LVU2116
 6550 004c 0133     		adds	r3, r3, #1
 6551 004e 2360     		str	r3, [r4]
 974:../USER/ttbasic.c **** 	int val3 = iexp(); chk_sep(*cip); cip++;
 6552              		.loc 1 974 2 is_stmt 1 view .LVU2117
 6553              		.loc 1 974 13 is_stmt 0 view .LVU2118
 6554 0050 FFF7FEFF 		bl	iexp
 6555              	.LVL583:
 6556              		.loc 1 974 21 view .LVU2119
 6557 0054 2268     		ldr	r2, [r4]
 6558              		.loc 1 974 13 view .LVU2120
 6559 0056 8046     		mov	r8, r0
 6560              	.LVL584:
 6561              		.loc 1 974 21 is_stmt 1 view .LVU2121
 6562              	.LBB628:
 6563              	.LBI628:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6564              		.loc 1 961 6 view .LVU2122
 6565              	.LBB629:
 962:../USER/ttbasic.c **** }
 6566              		.loc 1 962 2 view .LVU2123
 962:../USER/ttbasic.c **** }
 6567              		.loc 1 962 4 is_stmt 0 view .LVU2124
 6568 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6569 005a 142B     		cmp	r3, #20
 6570 005c 02D0     		beq	.L633
 962:../USER/ttbasic.c **** }
 6571              		.loc 1 962 21 is_stmt 1 view .LVU2125
 962:../USER/ttbasic.c **** }
 6572              		.loc 1 962 25 is_stmt 0 view .LVU2126
 6573 005e 1421     		movs	r1, #20
 6574 0060 094B     		ldr	r3, .L647+4
 6575 0062 1970     		strb	r1, [r3]
 6576              	.LVL585:
 962:../USER/ttbasic.c **** }
 6577              		.loc 1 962 39 is_stmt 1 view .LVU2127
 6578              	.L633:
 962:../USER/ttbasic.c **** }
 6579              		.loc 1 962 39 is_stmt 0 view .LVU2128
 6580              	.LBE629:
 6581              	.LBE628:
 6582              		.loc 1 974 36 is_stmt 1 view .LVU2129
 6583              		.loc 1 974 39 is_stmt 0 view .LVU2130
 6584 0064 0132     		adds	r2, r2, #1
 6585 0066 2260     		str	r2, [r4]
 975:../USER/ttbasic.c **** 	int val4 = iexp();
 6586              		.loc 1 975 2 is_stmt 1 view .LVU2131
 6587              		.loc 1 975 13 is_stmt 0 view .LVU2132
 6588 0068 FFF7FEFF 		bl	iexp
 6589              	.LVL586:
 976:../USER/ttbasic.c **** 	DLine(val0,val1,val2,val3,val4);
 6590              		.loc 1 976 2 is_stmt 1 view .LVU2133
 6591 006c 80B2     		uxth	r0, r0
 6592              		.loc 1 976 2 is_stmt 0 view .LVU2134
 6593 006e 0090     		str	r0, [sp]
 6594 0070 1FFA88F3 		uxth	r3, r8
 6595 0074 BAB2     		uxth	r2, r7
 6596 0076 B1B2     		uxth	r1, r6
 6597 0078 A8B2     		uxth	r0, r5
 6598              	.LVL587:
 6599              		.loc 1 976 2 view .LVU2135
 6600 007a FFF7FEFF 		bl	DLine
 6601              	.LVL588:
 977:../USER/ttbasic.c **** }
 6602              		.loc 1 977 1 view .LVU2136
 6603 007e 02B0     		add	sp, sp, #8
 6604              		.cfi_def_cfa_offset 24
 6605              		@ sp needed
 6606 0080 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6607              	.LVL589:
 6608              	.L648:
 6609              		.loc 1 977 1 view .LVU2137
 6610              		.align	2
 6611              	.L647:
 6612 0084 00000000 		.word	cip
 6613 0088 00000000 		.word	err
 6614              		.cfi_endproc
 6615              	.LFE36:
 6617              		.section	.text.icircle,"ax",%progbits
 6618              		.align	1
 6619              		.p2align 2,,3
 6620              		.global	icircle
 6621              		.syntax unified
 6622              		.thumb
 6623              		.thumb_func
 6624              		.fpu softvfp
 6626              	icircle:
 6627              	.LFB37:
 978:../USER/ttbasic.c **** void icircle(){
 6628              		.loc 1 978 15 is_stmt 1 view -0
 6629              		.cfi_startproc
 6630              		@ args = 0, pretend = 0, frame = 0
 6631              		@ frame_needed = 0, uses_anonymous_args = 0
 979:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 6632              		.loc 1 979 2 view .LVU2139
 978:../USER/ttbasic.c **** void icircle(){
 6633              		.loc 1 978 15 is_stmt 0 view .LVU2140
 6634 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6635              		.cfi_def_cfa_offset 24
 6636              		.cfi_offset 4, -24
 6637              		.cfi_offset 5, -20
 6638              		.cfi_offset 6, -16
 6639              		.cfi_offset 7, -12
 6640              		.cfi_offset 8, -8
 6641              		.cfi_offset 14, -4
 6642              		.loc 1 979 13 view .LVU2141
 6643 0004 FFF7FEFF 		bl	iexp
 6644              	.LVL590:
 6645              		.loc 1 979 21 view .LVU2142
 6646 0008 164C     		ldr	r4, .L663
 6647              		.loc 1 979 13 view .LVU2143
 6648 000a 0546     		mov	r5, r0
 6649              	.LVL591:
 6650              		.loc 1 979 21 is_stmt 1 view .LVU2144
 6651 000c 2368     		ldr	r3, [r4]
 6652              	.LVL592:
 6653              	.LBB630:
 6654              	.LBI630:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6655              		.loc 1 961 6 view .LVU2145
 6656              	.LBB631:
 962:../USER/ttbasic.c **** }
 6657              		.loc 1 962 2 view .LVU2146
 962:../USER/ttbasic.c **** }
 6658              		.loc 1 962 4 is_stmt 0 view .LVU2147
 6659 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6660 0010 142A     		cmp	r2, #20
 6661 0012 02D0     		beq	.L650
 962:../USER/ttbasic.c **** }
 6662              		.loc 1 962 21 is_stmt 1 view .LVU2148
 962:../USER/ttbasic.c **** }
 6663              		.loc 1 962 25 is_stmt 0 view .LVU2149
 6664 0014 1421     		movs	r1, #20
 6665 0016 144A     		ldr	r2, .L663+4
 6666 0018 1170     		strb	r1, [r2]
 6667              	.LVL593:
 962:../USER/ttbasic.c **** }
 6668              		.loc 1 962 39 is_stmt 1 view .LVU2150
 6669              	.L650:
 962:../USER/ttbasic.c **** }
 6670              		.loc 1 962 39 is_stmt 0 view .LVU2151
 6671              	.LBE631:
 6672              	.LBE630:
 6673              		.loc 1 979 36 is_stmt 1 view .LVU2152
 6674              		.loc 1 979 39 is_stmt 0 view .LVU2153
 6675 001a 0133     		adds	r3, r3, #1
 6676 001c 2360     		str	r3, [r4]
 980:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 6677              		.loc 1 980 2 is_stmt 1 view .LVU2154
 6678              		.loc 1 980 13 is_stmt 0 view .LVU2155
 6679 001e FFF7FEFF 		bl	iexp
 6680              	.LVL594:
 6681              		.loc 1 980 21 view .LVU2156
 6682 0022 2368     		ldr	r3, [r4]
 6683              		.loc 1 980 13 view .LVU2157
 6684 0024 0646     		mov	r6, r0
 6685              	.LVL595:
 6686              		.loc 1 980 21 is_stmt 1 view .LVU2158
 6687              	.LBB632:
 6688              	.LBI632:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6689              		.loc 1 961 6 view .LVU2159
 6690              	.LBB633:
 962:../USER/ttbasic.c **** }
 6691              		.loc 1 962 2 view .LVU2160
 962:../USER/ttbasic.c **** }
 6692              		.loc 1 962 4 is_stmt 0 view .LVU2161
 6693 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6694 0028 142A     		cmp	r2, #20
 6695 002a 02D0     		beq	.L651
 962:../USER/ttbasic.c **** }
 6696              		.loc 1 962 21 is_stmt 1 view .LVU2162
 962:../USER/ttbasic.c **** }
 6697              		.loc 1 962 25 is_stmt 0 view .LVU2163
 6698 002c 1421     		movs	r1, #20
 6699 002e 0E4A     		ldr	r2, .L663+4
 6700 0030 1170     		strb	r1, [r2]
 6701              	.LVL596:
 962:../USER/ttbasic.c **** }
 6702              		.loc 1 962 39 is_stmt 1 view .LVU2164
 6703              	.L651:
 962:../USER/ttbasic.c **** }
 6704              		.loc 1 962 39 is_stmt 0 view .LVU2165
 6705              	.LBE633:
 6706              	.LBE632:
 6707              		.loc 1 980 36 is_stmt 1 view .LVU2166
 6708              		.loc 1 980 39 is_stmt 0 view .LVU2167
 6709 0032 0133     		adds	r3, r3, #1
 6710 0034 2360     		str	r3, [r4]
 981:../USER/ttbasic.c **** 	int val2 = iexp(); chk_sep(*cip); cip++;
 6711              		.loc 1 981 2 is_stmt 1 view .LVU2168
 6712              		.loc 1 981 13 is_stmt 0 view .LVU2169
 6713 0036 FFF7FEFF 		bl	iexp
 6714              	.LVL597:
 6715              		.loc 1 981 21 view .LVU2170
 6716 003a 2368     		ldr	r3, [r4]
 6717              		.loc 1 981 13 view .LVU2171
 6718 003c 0746     		mov	r7, r0
 6719              	.LVL598:
 6720              		.loc 1 981 21 is_stmt 1 view .LVU2172
 6721              	.LBB634:
 6722              	.LBI634:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6723              		.loc 1 961 6 view .LVU2173
 6724              	.LBB635:
 962:../USER/ttbasic.c **** }
 6725              		.loc 1 962 2 view .LVU2174
 962:../USER/ttbasic.c **** }
 6726              		.loc 1 962 4 is_stmt 0 view .LVU2175
 6727 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6728 0040 142A     		cmp	r2, #20
 6729 0042 02D0     		beq	.L652
 962:../USER/ttbasic.c **** }
 6730              		.loc 1 962 21 is_stmt 1 view .LVU2176
 962:../USER/ttbasic.c **** }
 6731              		.loc 1 962 25 is_stmt 0 view .LVU2177
 6732 0044 1421     		movs	r1, #20
 6733 0046 084A     		ldr	r2, .L663+4
 6734 0048 1170     		strb	r1, [r2]
 6735              	.LVL599:
 962:../USER/ttbasic.c **** }
 6736              		.loc 1 962 39 is_stmt 1 view .LVU2178
 6737              	.L652:
 962:../USER/ttbasic.c **** }
 6738              		.loc 1 962 39 is_stmt 0 view .LVU2179
 6739              	.LBE635:
 6740              	.LBE634:
 6741              		.loc 1 981 36 is_stmt 1 view .LVU2180
 6742              		.loc 1 981 39 is_stmt 0 view .LVU2181
 6743 004a 0133     		adds	r3, r3, #1
 6744 004c 2360     		str	r3, [r4]
 982:../USER/ttbasic.c **** 	int val3 = iexp();
 6745              		.loc 1 982 2 is_stmt 1 view .LVU2182
 6746              		.loc 1 982 13 is_stmt 0 view .LVU2183
 6747 004e FFF7FEFF 		bl	iexp
 6748              	.LVL600:
 983:../USER/ttbasic.c **** 	DCircle(val0,val1,val2,val3);
 6749              		.loc 1 983 2 is_stmt 1 view .LVU2184
 6750 0052 BAB2     		uxth	r2, r7
 6751 0054 83B2     		uxth	r3, r0
 6752 0056 B1B2     		uxth	r1, r6
 6753 0058 A8B2     		uxth	r0, r5
 6754              	.LVL601:
 984:../USER/ttbasic.c **** }
 6755              		.loc 1 984 1 is_stmt 0 view .LVU2185
 6756 005a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 6757              		.cfi_restore 14
 6758              		.cfi_restore 8
 6759              		.cfi_restore 7
 6760              		.cfi_restore 6
 6761              		.cfi_restore 5
 6762              		.cfi_restore 4
 6763              		.cfi_def_cfa_offset 0
 6764              	.LVL602:
 983:../USER/ttbasic.c **** 	DCircle(val0,val1,val2,val3);
 6765              		.loc 1 983 2 view .LVU2186
 6766 005e FFF7FEBF 		b	DCircle
 6767              	.LVL603:
 6768              	.L664:
 983:../USER/ttbasic.c **** 	DCircle(val0,val1,val2,val3);
 6769              		.loc 1 983 2 view .LVU2187
 6770 0062 00BF     		.align	2
 6771              	.L663:
 6772 0064 00000000 		.word	cip
 6773 0068 00000000 		.word	err
 6774              		.cfi_endproc
 6775              	.LFE37:
 6777              		.section	.text.ipaint,"ax",%progbits
 6778              		.align	1
 6779              		.p2align 2,,3
 6780              		.global	ipaint
 6781              		.syntax unified
 6782              		.thumb
 6783              		.thumb_func
 6784              		.fpu softvfp
 6786              	ipaint:
 6787              	.LFB38:
 985:../USER/ttbasic.c **** void ipaint(){
 6788              		.loc 1 985 14 is_stmt 1 view -0
 6789              		.cfi_startproc
 6790              		@ args = 0, pretend = 0, frame = 0
 6791              		@ frame_needed = 0, uses_anonymous_args = 0
 986:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 6792              		.loc 1 986 2 view .LVU2189
 985:../USER/ttbasic.c **** void ipaint(){
 6793              		.loc 1 985 14 is_stmt 0 view .LVU2190
 6794 0000 70B5     		push	{r4, r5, r6, lr}
 6795              		.cfi_def_cfa_offset 16
 6796              		.cfi_offset 4, -16
 6797              		.cfi_offset 5, -12
 6798              		.cfi_offset 6, -8
 6799              		.cfi_offset 14, -4
 6800              		.loc 1 986 13 view .LVU2191
 6801 0002 FFF7FEFF 		bl	iexp
 6802              	.LVL604:
 6803              		.loc 1 986 21 view .LVU2192
 6804 0006 104C     		ldr	r4, .L675
 6805              		.loc 1 986 13 view .LVU2193
 6806 0008 0546     		mov	r5, r0
 6807              	.LVL605:
 6808              		.loc 1 986 21 is_stmt 1 view .LVU2194
 6809 000a 2368     		ldr	r3, [r4]
 6810              	.LVL606:
 6811              	.LBB640:
 6812              	.LBI640:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6813              		.loc 1 961 6 view .LVU2195
 6814              	.LBB641:
 962:../USER/ttbasic.c **** }
 6815              		.loc 1 962 2 view .LVU2196
 962:../USER/ttbasic.c **** }
 6816              		.loc 1 962 4 is_stmt 0 view .LVU2197
 6817 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6818 000e 142A     		cmp	r2, #20
 6819 0010 02D0     		beq	.L666
 962:../USER/ttbasic.c **** }
 6820              		.loc 1 962 21 is_stmt 1 view .LVU2198
 962:../USER/ttbasic.c **** }
 6821              		.loc 1 962 25 is_stmt 0 view .LVU2199
 6822 0012 1421     		movs	r1, #20
 6823 0014 0D4A     		ldr	r2, .L675+4
 6824 0016 1170     		strb	r1, [r2]
 6825              	.LVL607:
 962:../USER/ttbasic.c **** }
 6826              		.loc 1 962 39 is_stmt 1 view .LVU2200
 6827              	.L666:
 962:../USER/ttbasic.c **** }
 6828              		.loc 1 962 39 is_stmt 0 view .LVU2201
 6829              	.LBE641:
 6830              	.LBE640:
 6831              		.loc 1 986 36 is_stmt 1 view .LVU2202
 6832              		.loc 1 986 39 is_stmt 0 view .LVU2203
 6833 0018 0133     		adds	r3, r3, #1
 6834 001a 2360     		str	r3, [r4]
 987:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 6835              		.loc 1 987 2 is_stmt 1 view .LVU2204
 6836              		.loc 1 987 13 is_stmt 0 view .LVU2205
 6837 001c FFF7FEFF 		bl	iexp
 6838              	.LVL608:
 6839              		.loc 1 987 21 view .LVU2206
 6840 0020 2368     		ldr	r3, [r4]
 6841              		.loc 1 987 13 view .LVU2207
 6842 0022 0646     		mov	r6, r0
 6843              	.LVL609:
 6844              		.loc 1 987 21 is_stmt 1 view .LVU2208
 6845              	.LBB642:
 6846              	.LBI642:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6847              		.loc 1 961 6 view .LVU2209
 6848              	.LBB643:
 962:../USER/ttbasic.c **** }
 6849              		.loc 1 962 2 view .LVU2210
 962:../USER/ttbasic.c **** }
 6850              		.loc 1 962 4 is_stmt 0 view .LVU2211
 6851 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6852 0026 142A     		cmp	r2, #20
 6853 0028 02D0     		beq	.L667
 962:../USER/ttbasic.c **** }
 6854              		.loc 1 962 21 is_stmt 1 view .LVU2212
 962:../USER/ttbasic.c **** }
 6855              		.loc 1 962 25 is_stmt 0 view .LVU2213
 6856 002a 1421     		movs	r1, #20
 6857 002c 074A     		ldr	r2, .L675+4
 6858 002e 1170     		strb	r1, [r2]
 6859              	.LVL610:
 962:../USER/ttbasic.c **** }
 6860              		.loc 1 962 39 is_stmt 1 view .LVU2214
 6861              	.L667:
 962:../USER/ttbasic.c **** }
 6862              		.loc 1 962 39 is_stmt 0 view .LVU2215
 6863              	.LBE643:
 6864              	.LBE642:
 6865              		.loc 1 987 36 is_stmt 1 view .LVU2216
 6866              		.loc 1 987 39 is_stmt 0 view .LVU2217
 6867 0030 0133     		adds	r3, r3, #1
 6868 0032 2360     		str	r3, [r4]
 988:../USER/ttbasic.c **** 	int val2 = iexp();
 6869              		.loc 1 988 2 is_stmt 1 view .LVU2218
 6870              		.loc 1 988 13 is_stmt 0 view .LVU2219
 6871 0034 FFF7FEFF 		bl	iexp
 6872              	.LVL611:
 989:../USER/ttbasic.c **** 	DPaint(val0,val1,val2);
 6873              		.loc 1 989 2 is_stmt 1 view .LVU2220
 6874 0038 B1B2     		uxth	r1, r6
 6875 003a 82B2     		uxth	r2, r0
 6876 003c A8B2     		uxth	r0, r5
 6877              	.LVL612:
 990:../USER/ttbasic.c **** }
 6878              		.loc 1 990 1 is_stmt 0 view .LVU2221
 6879 003e BDE87040 		pop	{r4, r5, r6, lr}
 6880              		.cfi_restore 14
 6881              		.cfi_restore 6
 6882              		.cfi_restore 5
 6883              		.cfi_restore 4
 6884              		.cfi_def_cfa_offset 0
 6885              	.LVL613:
 989:../USER/ttbasic.c **** 	DPaint(val0,val1,val2);
 6886              		.loc 1 989 2 view .LVU2222
 6887 0042 FFF7FEBF 		b	DPaint
 6888              	.LVL614:
 6889              	.L676:
 989:../USER/ttbasic.c **** 	DPaint(val0,val1,val2);
 6890              		.loc 1 989 2 view .LVU2223
 6891 0046 00BF     		.align	2
 6892              	.L675:
 6893 0048 00000000 		.word	cip
 6894 004c 00000000 		.word	err
 6895              		.cfi_endproc
 6896              	.LFE38:
 6898              		.section	.text.igotoxy,"ax",%progbits
 6899              		.align	1
 6900              		.p2align 2,,3
 6901              		.global	igotoxy
 6902              		.syntax unified
 6903              		.thumb
 6904              		.thumb_func
 6905              		.fpu softvfp
 6907              	igotoxy:
 6908              	.LFB39:
 991:../USER/ttbasic.c **** void igotoxy(){
 6909              		.loc 1 991 15 is_stmt 1 view -0
 6910              		.cfi_startproc
 6911              		@ args = 0, pretend = 0, frame = 0
 6912              		@ frame_needed = 0, uses_anonymous_args = 0
 992:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 6913              		.loc 1 992 2 view .LVU2225
 991:../USER/ttbasic.c **** void igotoxy(){
 6914              		.loc 1 991 15 is_stmt 0 view .LVU2226
 6915 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6916              		.cfi_def_cfa_offset 24
 6917              		.cfi_offset 4, -24
 6918              		.cfi_offset 5, -20
 6919              		.cfi_offset 6, -16
 6920              		.cfi_offset 7, -12
 6921              		.cfi_offset 8, -8
 6922              		.cfi_offset 14, -4
 6923              		.loc 1 992 13 view .LVU2227
 6924 0004 FFF7FEFF 		bl	iexp
 6925              	.LVL615:
 6926              		.loc 1 992 21 view .LVU2228
 6927 0008 194C     		ldr	r4, .L690
 6928              		.loc 1 992 13 view .LVU2229
 6929 000a 0546     		mov	r5, r0
 6930              	.LVL616:
 6931              		.loc 1 992 21 is_stmt 1 view .LVU2230
 6932 000c 2368     		ldr	r3, [r4]
 6933              	.LVL617:
 6934              	.LBB644:
 6935              	.LBI644:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 6936              		.loc 1 961 6 view .LVU2231
 6937              	.LBB645:
 962:../USER/ttbasic.c **** }
 6938              		.loc 1 962 2 view .LVU2232
 962:../USER/ttbasic.c **** }
 6939              		.loc 1 962 4 is_stmt 0 view .LVU2233
 6940 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6941 0010 142A     		cmp	r2, #20
 6942 0012 02D0     		beq	.L678
 962:../USER/ttbasic.c **** }
 6943              		.loc 1 962 21 is_stmt 1 view .LVU2234
 962:../USER/ttbasic.c **** }
 6944              		.loc 1 962 25 is_stmt 0 view .LVU2235
 6945 0014 1421     		movs	r1, #20
 6946 0016 174A     		ldr	r2, .L690+4
 6947 0018 1170     		strb	r1, [r2]
 6948              	.LVL618:
 962:../USER/ttbasic.c **** }
 6949              		.loc 1 962 39 is_stmt 1 view .LVU2236
 6950              	.L678:
 962:../USER/ttbasic.c **** }
 6951              		.loc 1 962 39 is_stmt 0 view .LVU2237
 6952              	.LBE645:
 6953              	.LBE644:
 6954              		.loc 1 992 36 is_stmt 1 view .LVU2238
 6955              		.loc 1 992 39 is_stmt 0 view .LVU2239
 6956 001a 0133     		adds	r3, r3, #1
 6957 001c 2360     		str	r3, [r4]
 993:../USER/ttbasic.c **** 	int val1 = iexp();
 6958              		.loc 1 993 2 is_stmt 1 view .LVU2240
 6959              		.loc 1 993 13 is_stmt 0 view .LVU2241
 6960 001e FFF7FEFF 		bl	iexp
 6961              	.LVL619:
 994:../USER/ttbasic.c **** 	int val2 = 0;
 995:../USER/ttbasic.c **** 	int val3 = 0;
 996:../USER/ttbasic.c **** 	if(*cip==I_COMMA) {
 6962              		.loc 1 996 5 view .LVU2242
 6963 0022 2368     		ldr	r3, [r4]
 993:../USER/ttbasic.c **** 	int val1 = iexp();
 6964              		.loc 1 993 13 view .LVU2243
 6965 0024 8046     		mov	r8, r0
 6966              	.LVL620:
 994:../USER/ttbasic.c **** 	int val2 = 0;
 6967              		.loc 1 994 2 is_stmt 1 view .LVU2244
 995:../USER/ttbasic.c **** 	if(*cip==I_COMMA) {
 6968              		.loc 1 995 2 view .LVU2245
 6969              		.loc 1 996 2 view .LVU2246
 6970              		.loc 1 996 4 is_stmt 0 view .LVU2247
 6971 0026 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 6972 0028 142F     		cmp	r7, #20
 6973 002a 08D0     		beq	.L689
 6974              	.LVL621:
 997:../USER/ttbasic.c **** 		chk_sep(*cip); cip++;
 998:../USER/ttbasic.c **** 		val2 = iexp(); chk_sep(*cip); cip++;
 999:../USER/ttbasic.c **** 		val3 = iexp();
1000:../USER/ttbasic.c **** 	}
1001:../USER/ttbasic.c **** 	gotoxy(val0,val1,val2,val3);
 6975              		.loc 1 1001 2 is_stmt 1 view .LVU2248
 6976 002c 0023     		movs	r3, #0
 6977 002e 1FFA88F1 		uxth	r1, r8
 6978 0032 A8B2     		uxth	r0, r5
 6979 0034 1A46     		mov	r2, r3
1002:../USER/ttbasic.c **** }
 6980              		.loc 1 1002 1 is_stmt 0 view .LVU2249
 6981 0036 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 6982              		.cfi_remember_state
 6983              		.cfi_restore 14
 6984              		.cfi_restore 8
 6985              		.cfi_restore 7
 6986              		.cfi_restore 6
 6987              		.cfi_restore 5
 6988              		.cfi_restore 4
 6989              		.cfi_def_cfa_offset 0
 6990              	.LVL622:
1001:../USER/ttbasic.c **** }
 6991              		.loc 1 1001 2 view .LVU2250
 6992 003a FFF7FEBF 		b	gotoxy
 6993              	.LVL623:
 6994              	.L689:
 6995              		.cfi_restore_state
 997:../USER/ttbasic.c **** 		chk_sep(*cip); cip++;
 6996              		.loc 1 997 3 is_stmt 1 view .LVU2251
 962:../USER/ttbasic.c **** }
 6997              		.loc 1 962 2 view .LVU2252
 997:../USER/ttbasic.c **** 		val2 = iexp(); chk_sep(*cip); cip++;
 6998              		.loc 1 997 18 view .LVU2253
 997:../USER/ttbasic.c **** 		val2 = iexp(); chk_sep(*cip); cip++;
 6999              		.loc 1 997 21 is_stmt 0 view .LVU2254
 7000 003e 0133     		adds	r3, r3, #1
 7001 0040 2360     		str	r3, [r4]
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7002              		.loc 1 998 3 is_stmt 1 view .LVU2255
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7003              		.loc 1 998 10 is_stmt 0 view .LVU2256
 7004 0042 FFF7FEFF 		bl	iexp
 7005              	.LVL624:
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7006              		.loc 1 998 18 view .LVU2257
 7007 0046 2368     		ldr	r3, [r4]
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7008              		.loc 1 998 10 view .LVU2258
 7009 0048 0646     		mov	r6, r0
 7010              	.LVL625:
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7011              		.loc 1 998 18 is_stmt 1 view .LVU2259
 7012              	.LBB646:
 7013              	.LBI646:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 7014              		.loc 1 961 6 view .LVU2260
 7015              	.LBB647:
 962:../USER/ttbasic.c **** }
 7016              		.loc 1 962 2 view .LVU2261
 962:../USER/ttbasic.c **** }
 7017              		.loc 1 962 4 is_stmt 0 view .LVU2262
 7018 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7019              	.LBE647:
 7020              	.LBE646:
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7021              		.loc 1 998 36 view .LVU2263
 7022 004c 0133     		adds	r3, r3, #1
 7023              	.LVL626:
 7024              	.LBB650:
 7025              	.LBB648:
 962:../USER/ttbasic.c **** }
 7026              		.loc 1 962 4 view .LVU2264
 7027 004e 142A     		cmp	r2, #20
 962:../USER/ttbasic.c **** }
 7028              		.loc 1 962 21 is_stmt 1 view .LVU2265
 962:../USER/ttbasic.c **** }
 7029              		.loc 1 962 25 is_stmt 0 view .LVU2266
 7030 0050 18BF     		it	ne
 7031 0052 084A     		ldrne	r2, .L690+4
 7032              	.LBE648:
 7033              	.LBE650:
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7034              		.loc 1 998 36 view .LVU2267
 7035 0054 2360     		str	r3, [r4]
 7036              	.LVL627:
 7037              	.LBB651:
 7038              	.LBB649:
 962:../USER/ttbasic.c **** }
 7039              		.loc 1 962 25 view .LVU2268
 7040 0056 18BF     		it	ne
 7041 0058 1770     		strbne	r7, [r2]
 962:../USER/ttbasic.c **** }
 7042              		.loc 1 962 39 is_stmt 1 view .LVU2269
 962:../USER/ttbasic.c **** }
 7043              		.loc 1 962 39 is_stmt 0 view .LVU2270
 7044              	.LBE649:
 7045              	.LBE651:
 998:../USER/ttbasic.c **** 		val3 = iexp();
 7046              		.loc 1 998 33 is_stmt 1 view .LVU2271
 999:../USER/ttbasic.c **** 	}
 7047              		.loc 1 999 3 view .LVU2272
 999:../USER/ttbasic.c **** 	}
 7048              		.loc 1 999 10 is_stmt 0 view .LVU2273
 7049 005a FFF7FEFF 		bl	iexp
 7050              	.LVL628:
 999:../USER/ttbasic.c **** 	}
 7051              		.loc 1 999 10 view .LVU2274
 7052 005e B2B2     		uxth	r2, r6
 7053 0060 83B2     		uxth	r3, r0
 7054              	.LVL629:
1001:../USER/ttbasic.c **** }
 7055              		.loc 1 1001 2 is_stmt 1 view .LVU2275
 7056 0062 1FFA88F1 		uxth	r1, r8
 7057 0066 A8B2     		uxth	r0, r5
 7058              		.loc 1 1002 1 is_stmt 0 view .LVU2276
 7059 0068 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 7060              		.cfi_restore 14
 7061              		.cfi_restore 8
 7062              		.cfi_restore 7
 7063              		.cfi_restore 6
 7064              		.cfi_restore 5
 7065              		.cfi_restore 4
 7066              		.cfi_def_cfa_offset 0
 7067              	.LVL630:
1001:../USER/ttbasic.c **** }
 7068              		.loc 1 1001 2 view .LVU2277
 7069 006c FFF7FEBF 		b	gotoxy
 7070              	.LVL631:
 7071              	.L691:
1001:../USER/ttbasic.c **** }
 7072              		.loc 1 1001 2 view .LVU2278
 7073              		.align	2
 7074              	.L690:
 7075 0070 00000000 		.word	cip
 7076 0074 00000000 		.word	err
 7077              		.cfi_endproc
 7078              	.LFE39:
 7080              		.section	.text.iexe,"ax",%progbits
 7081              		.align	1
 7082              		.p2align 2,,3
 7083              		.global	iexe
 7084              		.syntax unified
 7085              		.thumb
 7086              		.thumb_func
 7087              		.fpu softvfp
 7089              	iexe:
 7090              	.LFB40:
1003:../USER/ttbasic.c **** // Execute a series of i-code
1004:../USER/ttbasic.c **** unsigned char* iexe() {
 7091              		.loc 1 1004 23 is_stmt 1 view -0
 7092              		.cfi_startproc
 7093              		@ args = 0, pretend = 0, frame = 0
 7094              		@ frame_needed = 0, uses_anonymous_args = 0
1005:../USER/ttbasic.c **** 	short lineno; //line number
 7095              		.loc 1 1005 2 view .LVU2280
1006:../USER/ttbasic.c **** 	unsigned char* lp; //temporary line pointer
 7096              		.loc 1 1006 2 view .LVU2281
1007:../USER/ttbasic.c **** 	short index, vto, vstep; // FOR-NEXT items
 7097              		.loc 1 1007 2 view .LVU2282
1008:../USER/ttbasic.c **** 	short condition; //IF condition
 7098              		.loc 1 1008 2 view .LVU2283
1009:../USER/ttbasic.c **** 
1010:../USER/ttbasic.c **** 	while (*cip != I_EOL) {
 7099              		.loc 1 1010 2 view .LVU2284
1004:../USER/ttbasic.c **** 	short lineno; //line number
 7100              		.loc 1 1004 23 is_stmt 0 view .LVU2285
 7101 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7102              		.cfi_def_cfa_offset 40
 7103              		.cfi_offset 3, -40
 7104              		.cfi_offset 4, -36
 7105              		.cfi_offset 5, -32
 7106              		.cfi_offset 6, -28
 7107              		.cfi_offset 7, -24
 7108              		.cfi_offset 8, -20
 7109              		.cfi_offset 9, -16
 7110              		.cfi_offset 10, -12
 7111              		.cfi_offset 11, -8
 7112              		.cfi_offset 14, -4
 7113 0004 9E4C     		ldr	r4, .L799
 7114 0006 2368     		ldr	r3, [r4]
 7115 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7116              		.loc 1 1010 8 view .LVU2286
 7117 000a 2C2A     		cmp	r2, #44
 7118 000c 4ED0     		beq	.L693
 7119 000e 9D4D     		ldr	r5, .L799+4
 7120              	.LBB684:
 7121              	.LBB685:
 7122              	.LBB686:
 7123              	.LBB687:
 904:../USER/ttbasic.c **** }
 7124              		.loc 1 904 13 view .LVU2287
 7125 0010 DFF88CB2 		ldr	fp, .L799+32
 7126              	.LBE687:
 7127              	.LBE686:
 7128              	.LBE685:
 7129              	.LBE684:
1011:../USER/ttbasic.c **** 
1012:../USER/ttbasic.c **** 		if (c_kbhit()) // check keyin
1013:../USER/ttbasic.c ****             if (c_getch() == 27) { // ESC ?
1014:../USER/ttbasic.c **** 				err = ERR_ESC;
1015:../USER/ttbasic.c **** 				return NULL;
1016:../USER/ttbasic.c ****             }
1017:../USER/ttbasic.c **** 
1018:../USER/ttbasic.c **** 		switch (*cip) {
1019:../USER/ttbasic.c **** 
1020:../USER/ttbasic.c **** 		case I_GOTO:
1021:../USER/ttbasic.c **** 			cip++;
1022:../USER/ttbasic.c **** 			lineno = iexp(); // get line number
1023:../USER/ttbasic.c **** 			if (err)
1024:../USER/ttbasic.c **** 				break;
1025:../USER/ttbasic.c **** 			lp = getlp(lineno); // search line
1026:../USER/ttbasic.c **** 			if (lineno != getlineno(lp)) { // if not found
1027:../USER/ttbasic.c **** 				err = ERR_ULN;
1028:../USER/ttbasic.c **** 				break;
1029:../USER/ttbasic.c **** 			}
1030:../USER/ttbasic.c **** 
1031:../USER/ttbasic.c **** 			clp = lp; // update line pointer
1032:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
1033:../USER/ttbasic.c **** 			break;
1034:../USER/ttbasic.c **** 
1035:../USER/ttbasic.c **** 		case I_GOSUB:
1036:../USER/ttbasic.c **** 			cip++;
1037:../USER/ttbasic.c **** 			lineno = iexp(); // get line number
1038:../USER/ttbasic.c **** 			if (err)
1039:../USER/ttbasic.c **** 				break;
1040:../USER/ttbasic.c **** 			lp = getlp(lineno); // search line
1041:../USER/ttbasic.c **** 			if (lineno != getlineno(lp)) { // if not found
1042:../USER/ttbasic.c **** 				err = ERR_ULN;
1043:../USER/ttbasic.c **** 				break;
1044:../USER/ttbasic.c **** 			}
1045:../USER/ttbasic.c **** 
1046:../USER/ttbasic.c **** 			// push pointers
1047:../USER/ttbasic.c **** 			if (gstki > SIZE_GSTK - 2) { // stack overflow ?
1048:../USER/ttbasic.c **** 				err = ERR_GSTKOF;
1049:../USER/ttbasic.c **** 				break;
1050:../USER/ttbasic.c **** 			}
1051:../USER/ttbasic.c **** 			gstk[gstki++] = clp; // push line pointer
1052:../USER/ttbasic.c **** 			gstk[gstki++] = cip; // push i-code pointer
1053:../USER/ttbasic.c **** 
1054:../USER/ttbasic.c **** 			clp = lp; // update line pointer
1055:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
1056:../USER/ttbasic.c **** 			break;
1057:../USER/ttbasic.c **** 
1058:../USER/ttbasic.c **** 		case I_RETURN:
1059:../USER/ttbasic.c **** 			if (gstki < 2) { // stack empty ?
1060:../USER/ttbasic.c **** 				err = ERR_GSTKUF;
1061:../USER/ttbasic.c **** 				break;
1062:../USER/ttbasic.c **** 			}
1063:../USER/ttbasic.c **** 			cip = gstk[--gstki]; // pop line pointer
1064:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
1065:../USER/ttbasic.c **** 			break;
1066:../USER/ttbasic.c **** 
1067:../USER/ttbasic.c **** 		case I_FOR:
1068:../USER/ttbasic.c **** 			cip++;
1069:../USER/ttbasic.c **** 
1070:../USER/ttbasic.c **** 			if (*cip++ != I_VAR) { // no variable
1071:../USER/ttbasic.c **** 				err = ERR_FORWOV;
1072:../USER/ttbasic.c **** 				break;
1073:../USER/ttbasic.c **** 			}
1074:../USER/ttbasic.c **** 
1075:../USER/ttbasic.c **** 			index = *cip; // get variable index
1076:../USER/ttbasic.c **** 			ivar(); // var = value
1077:../USER/ttbasic.c **** 			if (err)
1078:../USER/ttbasic.c **** 				break;
1079:../USER/ttbasic.c **** 
1080:../USER/ttbasic.c **** 			if (*cip == I_TO) {
1081:../USER/ttbasic.c **** 				cip++;
1082:../USER/ttbasic.c **** 				vto = iexp(); // get TO value
1083:../USER/ttbasic.c **** 			}
1084:../USER/ttbasic.c **** 			else {
1085:../USER/ttbasic.c **** 				err = ERR_FORWOTO;
1086:../USER/ttbasic.c **** 				break;
1087:../USER/ttbasic.c **** 			}
1088:../USER/ttbasic.c **** 
1089:../USER/ttbasic.c **** 			if (*cip == I_STEP) {
1090:../USER/ttbasic.c **** 				cip++;
1091:../USER/ttbasic.c **** 				vstep = iexp(); // get STEP value
1092:../USER/ttbasic.c **** 			}
1093:../USER/ttbasic.c **** 			else
1094:../USER/ttbasic.c **** 				vstep = 1; // default STEP value
1095:../USER/ttbasic.c **** 
1096:../USER/ttbasic.c **** 						   // overflow check
1097:../USER/ttbasic.c **** 			if (((vstep < 0) && (-32767 - vstep > vto)) ||
1098:../USER/ttbasic.c **** 				((vstep > 0) && (32767 - vstep < vto))) {
1099:../USER/ttbasic.c **** 				err = ERR_VOF;
1100:../USER/ttbasic.c **** 				break;
1101:../USER/ttbasic.c **** 			}
1102:../USER/ttbasic.c **** 
1103:../USER/ttbasic.c **** 			// push pointers
1104:../USER/ttbasic.c **** 			if (lstki > SIZE_LSTK - 5) { // stack overflow ?
1105:../USER/ttbasic.c **** 				err = ERR_LSTKOF;
1106:../USER/ttbasic.c **** 				break;
1107:../USER/ttbasic.c **** 			}
1108:../USER/ttbasic.c **** 			lstk[lstki++] = clp; // push line pointer
1109:../USER/ttbasic.c **** 			lstk[lstki++] = cip; // push i-code pointer
1110:../USER/ttbasic.c **** 								 //Special thanks hardyboy
1111:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)vto; // push TO value
1112:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)vstep; // push STEP value
1113:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)index; // push variable index
1114:../USER/ttbasic.c **** 			break;
1115:../USER/ttbasic.c **** 
1116:../USER/ttbasic.c **** 		case I_NEXT:
1117:../USER/ttbasic.c **** 			cip++;
1118:../USER/ttbasic.c **** 
1119:../USER/ttbasic.c **** 			if (lstki < 5) { // stack empty ?
 7130              		.loc 1 1119 14 view .LVU2288
 7131 0014 9C4E     		ldr	r6, .L799+8
 7132              	.L762:
1012:../USER/ttbasic.c ****             if (c_getch() == 27) { // ESC ?
 7133              		.loc 1 1012 3 is_stmt 1 view .LVU2289
  37:../USER/ttbasic.c **** #define KEY_ENTER 13
 7134              		.loc 1 37 15 view .LVU2290
1018:../USER/ttbasic.c **** 
 7135              		.loc 1 1018 3 view .LVU2291
 7136 0016 2A2A     		cmp	r2, #42
 7137 0018 00F27B81 		bhi	.L694
 7138 001c DFE812F0 		tbh	[pc, r2, lsl #1]
 7139              	.L696:
 7140 0020 5C01     		.2byte	(.L715-.L696)/2
 7141 0022 1C01     		.2byte	(.L714-.L696)/2
 7142 0024 0801     		.2byte	(.L713-.L696)/2
 7143 0026 FE00     		.2byte	(.L712-.L696)/2
 7144 0028 7901     		.2byte	(.L694-.L696)/2
 7145 002a 7901     		.2byte	(.L694-.L696)/2
 7146 002c E900     		.2byte	(.L711-.L696)/2
 7147 002e D900     		.2byte	(.L710-.L696)/2
 7148 0030 D200     		.2byte	(.L709-.L696)/2
 7149 0032 C500     		.2byte	(.L708-.L696)/2
 7150 0034 BF00     		.2byte	(.L707-.L696)/2
 7151 0036 B900     		.2byte	(.L705-.L696)/2
 7152 0038 AC00     		.2byte	(.L706-.L696)/2
 7153 003a B900     		.2byte	(.L705-.L696)/2
 7154 003c 8700     		.2byte	(.L704-.L696)/2
 7155 003e 8100     		.2byte	(.L703-.L696)/2
 7156 0040 7B00     		.2byte	(.L702-.L696)/2
 7157 0042 5600     		.2byte	(.L701-.L696)/2
 7158 0044 5000     		.2byte	(.L700-.L696)/2
 7159 0046 7901     		.2byte	(.L694-.L696)/2
 7160 0048 7901     		.2byte	(.L694-.L696)/2
 7161 004a 4C00     		.2byte	(.L699-.L696)/2
 7162 004c 7901     		.2byte	(.L694-.L696)/2
 7163 004e 7901     		.2byte	(.L694-.L696)/2
 7164 0050 7901     		.2byte	(.L694-.L696)/2
 7165 0052 7901     		.2byte	(.L694-.L696)/2
 7166 0054 7901     		.2byte	(.L694-.L696)/2
 7167 0056 7901     		.2byte	(.L694-.L696)/2
 7168 0058 7901     		.2byte	(.L694-.L696)/2
 7169 005a 7901     		.2byte	(.L694-.L696)/2
 7170 005c 7901     		.2byte	(.L694-.L696)/2
 7171 005e 7901     		.2byte	(.L694-.L696)/2
 7172 0060 7901     		.2byte	(.L694-.L696)/2
 7173 0062 7901     		.2byte	(.L694-.L696)/2
 7174 0064 3B00     		.2byte	(.L698-.L696)/2
 7175 0066 7901     		.2byte	(.L694-.L696)/2
 7176 0068 7901     		.2byte	(.L694-.L696)/2
 7177 006a 7901     		.2byte	(.L694-.L696)/2
 7178 006c 3700     		.2byte	(.L697-.L696)/2
 7179 006e 3700     		.2byte	(.L697-.L696)/2
 7180 0070 3700     		.2byte	(.L697-.L696)/2
 7181 0072 7901     		.2byte	(.L694-.L696)/2
 7182 0074 2B00     		.2byte	(.L695-.L696)/2
 7183              		.p2align 1
 7184              	.L695:
1120:../USER/ttbasic.c **** 				err = ERR_LSTKUF;
1121:../USER/ttbasic.c **** 				break;
1122:../USER/ttbasic.c **** 			}
1123:../USER/ttbasic.c **** 
1124:../USER/ttbasic.c **** 			index = (short)(uintptr_t)lstk[lstki - 1]; // read variable index
1125:../USER/ttbasic.c **** 			if (*cip++ != I_VAR) { // no variable
1126:../USER/ttbasic.c **** 				err = ERR_NEXTWOV;
1127:../USER/ttbasic.c **** 				break;
1128:../USER/ttbasic.c **** 			}
1129:../USER/ttbasic.c **** 			if (*cip++ != index) { // not equal index
1130:../USER/ttbasic.c **** 				err = ERR_NEXTUM;
1131:../USER/ttbasic.c **** 				break;
1132:../USER/ttbasic.c **** 			}
1133:../USER/ttbasic.c **** 
1134:../USER/ttbasic.c **** 			vstep = (short)(uintptr_t)lstk[lstki - 2]; // read STEP value
1135:../USER/ttbasic.c **** 			var[index] += vstep; // update loop counter
1136:../USER/ttbasic.c **** 			vto = (short)(uintptr_t)lstk[lstki - 3]; // read TO value
1137:../USER/ttbasic.c **** 
1138:../USER/ttbasic.c **** 													 // loop end
1139:../USER/ttbasic.c **** 			if (((vstep < 0) && (var[index] < vto)) ||
1140:../USER/ttbasic.c **** 				((vstep > 0) && (var[index] > vto))) {
1141:../USER/ttbasic.c **** 				lstki -= 5; // resume stack
1142:../USER/ttbasic.c **** 				break;
1143:../USER/ttbasic.c **** 			}
1144:../USER/ttbasic.c **** 
1145:../USER/ttbasic.c **** 			// loop continue
1146:../USER/ttbasic.c **** 			cip = lstk[lstki - 4]; // read line pointer
1147:../USER/ttbasic.c **** 			clp = lstk[lstki - 5]; // read i-code pointer
1148:../USER/ttbasic.c **** 			break;
1149:../USER/ttbasic.c **** 
1150:../USER/ttbasic.c **** 		case I_IF:
1151:../USER/ttbasic.c **** 			cip++;
1152:../USER/ttbasic.c **** 			condition = iexp(); // get condition
1153:../USER/ttbasic.c **** 			if (err) {
1154:../USER/ttbasic.c **** 				err = ERR_IFWOC;
1155:../USER/ttbasic.c **** 				break;
1156:../USER/ttbasic.c **** 			}
1157:../USER/ttbasic.c **** 			if (condition) // if true continue
1158:../USER/ttbasic.c **** 				break;
1159:../USER/ttbasic.c **** 			// If false, same as REM
1160:../USER/ttbasic.c **** 
1161:../USER/ttbasic.c **** 		case I_REM:
1162:../USER/ttbasic.c **** 			// Seek pointer to I_EOL
1163:../USER/ttbasic.c **** 			// No problem even if it points not realy end of line
1164:../USER/ttbasic.c **** 			while (*cip != I_EOL)
1165:../USER/ttbasic.c **** 				cip++; // seek end of line
1166:../USER/ttbasic.c **** 			break;
1167:../USER/ttbasic.c **** 
1168:../USER/ttbasic.c **** 		case I_STOP:
1169:../USER/ttbasic.c **** 			while (*clp)
1170:../USER/ttbasic.c **** 				clp += *clp; // seek end
1171:../USER/ttbasic.c **** 			return clp;
1172:../USER/ttbasic.c **** 
1173:../USER/ttbasic.c **** 		case I_VAR:
1174:../USER/ttbasic.c **** 			cip++;
 7185              		.loc 1 1174 4 view .LVU2292
1175:../USER/ttbasic.c **** 			ivar();
 7186              		.loc 1 1175 4 view .LVU2293
 7187              	.LBB696:
 7188              	.LBI696:
 889:../USER/ttbasic.c **** 	short value;
 7189              		.loc 1 889 6 view .LVU2294
 7190              	.LBB697:
 890:../USER/ttbasic.c **** 	short index;
 7191              		.loc 1 890 2 view .LVU2295
 891:../USER/ttbasic.c **** 
 7192              		.loc 1 891 2 view .LVU2296
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 7193              		.loc 1 893 2 view .LVU2297
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 7194              		.loc 1 893 14 is_stmt 0 view .LVU2298
 7195 0076 9A1C     		adds	r2, r3, #2
 7196 0078 2260     		str	r2, [r4]
 7197              	.LVL632:
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 7198              		.loc 1 894 2 is_stmt 1 view .LVU2299
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 7199              		.loc 1 894 5 is_stmt 0 view .LVU2300
 7200 007a 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7201 007c 1F2A     		cmp	r2, #31
 7202 007e 00F06C81 		beq	.L754
 7203              	.LVL633:
 7204              	.L757:
 895:../USER/ttbasic.c **** 		return;
 7205              		.loc 1 895 3 is_stmt 1 view .LVU2301
 895:../USER/ttbasic.c **** 		return;
 7206              		.loc 1 895 7 is_stmt 0 view .LVU2302
 7207 0082 1222     		movs	r2, #18
 7208 0084 7F4B     		ldr	r3, .L799+4
 7209 0086 1A70     		strb	r2, [r3]
 896:../USER/ttbasic.c **** 	}
 7210              		.loc 1 896 3 is_stmt 1 view .LVU2303
 7211              	.L725:
 7212              	.LBE697:
 7213              	.LBE696:
1176:../USER/ttbasic.c **** 			break;
1177:../USER/ttbasic.c **** 		case I_ARRAY:
1178:../USER/ttbasic.c **** 			cip++;
1179:../USER/ttbasic.c **** 			iarray();
1180:../USER/ttbasic.c **** 			break;
1181:../USER/ttbasic.c **** 		case I_LET:
1182:../USER/ttbasic.c **** 			cip++;
1183:../USER/ttbasic.c **** 			ilet();
1184:../USER/ttbasic.c **** 			break;
1185:../USER/ttbasic.c **** 		case I_PRINT:
1186:../USER/ttbasic.c **** 		case I_PRT:
1187:../USER/ttbasic.c **** 			cip++;
1188:../USER/ttbasic.c **** 			iprint();
1189:../USER/ttbasic.c **** 			break;
1190:../USER/ttbasic.c **** 		case I_INPUT:
1191:../USER/ttbasic.c **** 			cip++;
1192:../USER/ttbasic.c **** 			iinput();
1193:../USER/ttbasic.c **** 			break;
1194:../USER/ttbasic.c **** 
1195:../USER/ttbasic.c **** 		case I_PSET:
1196:../USER/ttbasic.c **** 			cip++;
1197:../USER/ttbasic.c **** 			ipset();
1198:../USER/ttbasic.c **** 			break;
1199:../USER/ttbasic.c **** 		case I_LINE:
1200:../USER/ttbasic.c **** 			cip++;
1201:../USER/ttbasic.c **** 			iline();
1202:../USER/ttbasic.c **** 			break;
1203:../USER/ttbasic.c **** 		case I_CIRCLE:
1204:../USER/ttbasic.c **** 			cip++;
1205:../USER/ttbasic.c **** 			icircle();
1206:../USER/ttbasic.c **** 			break;
1207:../USER/ttbasic.c **** 		case I_PAINT:
1208:../USER/ttbasic.c **** 			cip++;
1209:../USER/ttbasic.c **** 			ipaint();
1210:../USER/ttbasic.c **** 			break;
1211:../USER/ttbasic.c **** 		case I_GOXY:
1212:../USER/ttbasic.c **** 			cip++;
1213:../USER/ttbasic.c **** 			igotoxy();
1214:../USER/ttbasic.c **** 			break;
1215:../USER/ttbasic.c **** 
1216:../USER/ttbasic.c **** 		case I_SEMI:
1217:../USER/ttbasic.c **** 			cip++;
1218:../USER/ttbasic.c **** 			break;
1219:../USER/ttbasic.c **** 
1220:../USER/ttbasic.c **** 		case I_LIST:
1221:../USER/ttbasic.c **** 		case I_NEW:
1222:../USER/ttbasic.c **** 		case I_RUN:
1223:../USER/ttbasic.c **** 			err = ERR_COM;
1224:../USER/ttbasic.c **** 			break;
1225:../USER/ttbasic.c **** 
1226:../USER/ttbasic.c **** 		default:
1227:../USER/ttbasic.c **** 			err = ERR_SYNTAX;
1228:../USER/ttbasic.c **** 			break;
1229:../USER/ttbasic.c **** 		}
1230:../USER/ttbasic.c **** 
1231:../USER/ttbasic.c **** 		if (err)
 7214              		.loc 1 1231 3 view .LVU2304
1232:../USER/ttbasic.c **** 			return NULL;
 7215              		.loc 1 1232 11 is_stmt 0 view .LVU2305
 7216 0088 0020     		movs	r0, #0
 7217              	.L692:
1233:../USER/ttbasic.c **** 	}
1234:../USER/ttbasic.c **** 	return clp + *clp;
1235:../USER/ttbasic.c **** }
 7218              		.loc 1 1235 1 view .LVU2306
 7219 008a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7220              	.L697:
1223:../USER/ttbasic.c **** 			break;
 7221              		.loc 1 1223 4 is_stmt 1 view .LVU2307
1223:../USER/ttbasic.c **** 			break;
 7222              		.loc 1 1223 8 is_stmt 0 view .LVU2308
 7223 008e 1322     		movs	r2, #19
 7224 0090 7C4B     		ldr	r3, .L799+4
 7225 0092 1A70     		strb	r2, [r3]
1224:../USER/ttbasic.c **** 
 7226              		.loc 1 1224 4 is_stmt 1 view .LVU2309
 7227 0094 F8E7     		b	.L725
 7228              	.L698:
1178:../USER/ttbasic.c **** 			iarray();
 7229              		.loc 1 1178 4 view .LVU2310
1178:../USER/ttbasic.c **** 			iarray();
 7230              		.loc 1 1178 7 is_stmt 0 view .LVU2311
 7231 0096 0133     		adds	r3, r3, #1
 7232 0098 2360     		str	r3, [r4]
1179:../USER/ttbasic.c **** 			break;
 7233              		.loc 1 1179 4 is_stmt 1 view .LVU2312
 7234 009a FFF7FEFF 		bl	iarray
 7235              	.LVL634:
1180:../USER/ttbasic.c **** 		case I_LET:
 7236              		.loc 1 1180 4 view .LVU2313
 7237 009e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7238              	.L734:
1231:../USER/ttbasic.c **** 			return NULL;
 7239              		.loc 1 1231 3 view .LVU2314
1231:../USER/ttbasic.c **** 			return NULL;
 7240              		.loc 1 1231 6 is_stmt 0 view .LVU2315
 7241 00a0 002A     		cmp	r2, #0
 7242 00a2 F1D1     		bne	.L725
 7243              	.L790:
 7244 00a4 2368     		ldr	r3, [r4]
 7245              	.L788:
 7246 00a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1010:../USER/ttbasic.c **** 
 7247              		.loc 1 1010 8 view .LVU2316
 7248 00a8 2C2A     		cmp	r2, #44
 7249 00aa B4D1     		bne	.L762
 7250              	.L693:
1234:../USER/ttbasic.c **** }
 7251              		.loc 1 1234 2 is_stmt 1 view .LVU2317
1234:../USER/ttbasic.c **** }
 7252              		.loc 1 1234 13 is_stmt 0 view .LVU2318
 7253 00ac 774B     		ldr	r3, .L799+12
 7254 00ae 1868     		ldr	r0, [r3]
1234:../USER/ttbasic.c **** }
 7255              		.loc 1 1234 15 view .LVU2319
 7256 00b0 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1234:../USER/ttbasic.c **** }
 7257              		.loc 1 1234 13 view .LVU2320
 7258 00b2 1844     		add	r0, r0, r3
 7259              		.loc 1 1235 1 view .LVU2321
 7260 00b4 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7261              	.L699:
1217:../USER/ttbasic.c **** 			break;
 7262              		.loc 1 1217 4 is_stmt 1 view .LVU2322
1217:../USER/ttbasic.c **** 			break;
 7263              		.loc 1 1217 7 is_stmt 0 view .LVU2323
 7264 00b8 0133     		adds	r3, r3, #1
 7265 00ba 2360     		str	r3, [r4]
1218:../USER/ttbasic.c **** 
 7266              		.loc 1 1218 4 is_stmt 1 view .LVU2324
 7267 00bc 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7268 00be EFE7     		b	.L734
 7269              	.L700:
1212:../USER/ttbasic.c **** 			igotoxy();
 7270              		.loc 1 1212 4 view .LVU2325
1212:../USER/ttbasic.c **** 			igotoxy();
 7271              		.loc 1 1212 7 is_stmt 0 view .LVU2326
 7272 00c0 0133     		adds	r3, r3, #1
 7273 00c2 2360     		str	r3, [r4]
1213:../USER/ttbasic.c **** 			break;
 7274              		.loc 1 1213 4 is_stmt 1 view .LVU2327
 7275 00c4 FFF7FEFF 		bl	igotoxy
 7276              	.LVL635:
1214:../USER/ttbasic.c **** 
 7277              		.loc 1 1214 4 view .LVU2328
 7278 00c8 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7279 00ca E9E7     		b	.L734
 7280              	.L701:
1208:../USER/ttbasic.c **** 			ipaint();
 7281              		.loc 1 1208 4 view .LVU2329
1208:../USER/ttbasic.c **** 			ipaint();
 7282              		.loc 1 1208 7 is_stmt 0 view .LVU2330
 7283 00cc 0133     		adds	r3, r3, #1
 7284 00ce 2360     		str	r3, [r4]
1209:../USER/ttbasic.c **** 			break;
 7285              		.loc 1 1209 4 is_stmt 1 view .LVU2331
 7286              	.LBB699:
 7287              	.LBI699:
 985:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 7288              		.loc 1 985 6 view .LVU2332
 7289              	.LBB700:
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7290              		.loc 1 986 2 view .LVU2333
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7291              		.loc 1 986 13 is_stmt 0 view .LVU2334
 7292 00d0 FFF7FEFF 		bl	iexp
 7293              	.LVL636:
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7294              		.loc 1 986 21 view .LVU2335
 7295 00d4 2368     		ldr	r3, [r4]
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7296              		.loc 1 986 13 view .LVU2336
 7297 00d6 8046     		mov	r8, r0
 7298              	.LVL637:
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7299              		.loc 1 986 21 is_stmt 1 view .LVU2337
 7300              	.LBB701:
 7301              	.LBI701:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 7302              		.loc 1 961 6 view .LVU2338
 7303              	.LBB702:
 962:../USER/ttbasic.c **** }
 7304              		.loc 1 962 2 view .LVU2339
 962:../USER/ttbasic.c **** }
 7305              		.loc 1 962 4 is_stmt 0 view .LVU2340
 7306 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7307              	.LBE702:
 7308              	.LBE701:
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7309              		.loc 1 986 39 view .LVU2341
 7310 00da 0133     		adds	r3, r3, #1
 7311              	.LVL638:
 7312              	.LBB705:
 7313              	.LBB703:
 962:../USER/ttbasic.c **** }
 7314              		.loc 1 962 4 view .LVU2342
 7315 00dc 142A     		cmp	r2, #20
 962:../USER/ttbasic.c **** }
 7316              		.loc 1 962 21 is_stmt 1 view .LVU2343
 962:../USER/ttbasic.c **** }
 7317              		.loc 1 962 25 is_stmt 0 view .LVU2344
 7318 00de 18BF     		it	ne
 7319 00e0 1422     		movne	r2, #20
 7320              	.LBE703:
 7321              	.LBE705:
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7322              		.loc 1 986 39 view .LVU2345
 7323 00e2 2360     		str	r3, [r4]
 7324              	.LVL639:
 7325              	.LBB706:
 7326              	.LBB704:
 962:../USER/ttbasic.c **** }
 7327              		.loc 1 962 25 view .LVU2346
 7328 00e4 18BF     		it	ne
 7329 00e6 2A70     		strbne	r2, [r5]
 962:../USER/ttbasic.c **** }
 7330              		.loc 1 962 39 is_stmt 1 view .LVU2347
 962:../USER/ttbasic.c **** }
 7331              		.loc 1 962 39 is_stmt 0 view .LVU2348
 7332              	.LBE704:
 7333              	.LBE706:
 986:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7334              		.loc 1 986 36 is_stmt 1 view .LVU2349
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7335              		.loc 1 987 2 view .LVU2350
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7336              		.loc 1 987 13 is_stmt 0 view .LVU2351
 7337 00e8 FFF7FEFF 		bl	iexp
 7338              	.LVL640:
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7339              		.loc 1 987 21 view .LVU2352
 7340 00ec 2368     		ldr	r3, [r4]
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7341              		.loc 1 987 13 view .LVU2353
 7342 00ee 8146     		mov	r9, r0
 7343              	.LVL641:
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7344              		.loc 1 987 21 is_stmt 1 view .LVU2354
 7345              	.LBB707:
 7346              	.LBI707:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 7347              		.loc 1 961 6 view .LVU2355
 7348              	.LBB708:
 962:../USER/ttbasic.c **** }
 7349              		.loc 1 962 2 view .LVU2356
 962:../USER/ttbasic.c **** }
 7350              		.loc 1 962 4 is_stmt 0 view .LVU2357
 7351 00f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7352              	.LBE708:
 7353              	.LBE707:
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7354              		.loc 1 987 39 view .LVU2358
 7355 00f2 0133     		adds	r3, r3, #1
 7356              	.LVL642:
 7357              	.LBB711:
 7358              	.LBB709:
 962:../USER/ttbasic.c **** }
 7359              		.loc 1 962 4 view .LVU2359
 7360 00f4 142A     		cmp	r2, #20
 962:../USER/ttbasic.c **** }
 7361              		.loc 1 962 21 is_stmt 1 view .LVU2360
 962:../USER/ttbasic.c **** }
 7362              		.loc 1 962 25 is_stmt 0 view .LVU2361
 7363 00f6 18BF     		it	ne
 7364 00f8 1422     		movne	r2, #20
 7365              	.LBE709:
 7366              	.LBE711:
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7367              		.loc 1 987 39 view .LVU2362
 7368 00fa 2360     		str	r3, [r4]
 7369              	.LVL643:
 7370              	.LBB712:
 7371              	.LBB710:
 962:../USER/ttbasic.c **** }
 7372              		.loc 1 962 25 view .LVU2363
 7373 00fc 18BF     		it	ne
 7374 00fe 2A70     		strbne	r2, [r5]
 962:../USER/ttbasic.c **** }
 7375              		.loc 1 962 39 is_stmt 1 view .LVU2364
 962:../USER/ttbasic.c **** }
 7376              		.loc 1 962 39 is_stmt 0 view .LVU2365
 7377              	.LBE710:
 7378              	.LBE712:
 987:../USER/ttbasic.c **** 	int val2 = iexp();
 7379              		.loc 1 987 36 is_stmt 1 view .LVU2366
 988:../USER/ttbasic.c **** 	DPaint(val0,val1,val2);
 7380              		.loc 1 988 2 view .LVU2367
 988:../USER/ttbasic.c **** 	DPaint(val0,val1,val2);
 7381              		.loc 1 988 13 is_stmt 0 view .LVU2368
 7382 0100 FFF7FEFF 		bl	iexp
 7383              	.LVL644:
 989:../USER/ttbasic.c **** }
 7384              		.loc 1 989 2 is_stmt 1 view .LVU2369
 7385 0104 1FFA89F1 		uxth	r1, r9
 7386 0108 82B2     		uxth	r2, r0
 7387 010a 1FFA88F0 		uxth	r0, r8
 7388              	.LVL645:
 989:../USER/ttbasic.c **** }
 7389              		.loc 1 989 2 is_stmt 0 view .LVU2370
 7390 010e FFF7FEFF 		bl	DPaint
 7391              	.LVL646:
 989:../USER/ttbasic.c **** }
 7392              		.loc 1 989 2 view .LVU2371
 7393 0112 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7394 0114 C4E7     		b	.L734
 7395              	.LVL647:
 7396              	.L702:
 989:../USER/ttbasic.c **** }
 7397              		.loc 1 989 2 view .LVU2372
 7398              	.LBE700:
 7399              	.LBE699:
1204:../USER/ttbasic.c **** 			icircle();
 7400              		.loc 1 1204 4 is_stmt 1 view .LVU2373
1204:../USER/ttbasic.c **** 			icircle();
 7401              		.loc 1 1204 7 is_stmt 0 view .LVU2374
 7402 0116 0133     		adds	r3, r3, #1
 7403 0118 2360     		str	r3, [r4]
1205:../USER/ttbasic.c **** 			break;
 7404              		.loc 1 1205 4 is_stmt 1 view .LVU2375
 7405 011a FFF7FEFF 		bl	icircle
 7406              	.LVL648:
1206:../USER/ttbasic.c **** 		case I_PAINT:
 7407              		.loc 1 1206 4 view .LVU2376
 7408 011e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7409 0120 BEE7     		b	.L734
 7410              	.L703:
1200:../USER/ttbasic.c **** 			iline();
 7411              		.loc 1 1200 4 view .LVU2377
1200:../USER/ttbasic.c **** 			iline();
 7412              		.loc 1 1200 7 is_stmt 0 view .LVU2378
 7413 0122 0133     		adds	r3, r3, #1
 7414 0124 2360     		str	r3, [r4]
1201:../USER/ttbasic.c **** 			break;
 7415              		.loc 1 1201 4 is_stmt 1 view .LVU2379
 7416 0126 FFF7FEFF 		bl	iline
 7417              	.LVL649:
1202:../USER/ttbasic.c **** 		case I_CIRCLE:
 7418              		.loc 1 1202 4 view .LVU2380
 7419 012a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7420 012c B8E7     		b	.L734
 7421              	.L704:
1196:../USER/ttbasic.c **** 			ipset();
 7422              		.loc 1 1196 4 view .LVU2381
1196:../USER/ttbasic.c **** 			ipset();
 7423              		.loc 1 1196 7 is_stmt 0 view .LVU2382
 7424 012e 0133     		adds	r3, r3, #1
 7425 0130 2360     		str	r3, [r4]
1197:../USER/ttbasic.c **** 			break;
 7426              		.loc 1 1197 4 is_stmt 1 view .LVU2383
 7427              	.LBB713:
 7428              	.LBI713:
 964:../USER/ttbasic.c **** 	int val0 = iexp(); chk_sep(*cip); cip++;
 7429              		.loc 1 964 6 view .LVU2384
 7430              	.LBB714:
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7431              		.loc 1 965 2 view .LVU2385
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7432              		.loc 1 965 13 is_stmt 0 view .LVU2386
 7433 0132 FFF7FEFF 		bl	iexp
 7434              	.LVL650:
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7435              		.loc 1 965 21 view .LVU2387
 7436 0136 2368     		ldr	r3, [r4]
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7437              		.loc 1 965 13 view .LVU2388
 7438 0138 8046     		mov	r8, r0
 7439              	.LVL651:
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7440              		.loc 1 965 21 is_stmt 1 view .LVU2389
 7441              	.LBB715:
 7442              	.LBI715:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 7443              		.loc 1 961 6 view .LVU2390
 7444              	.LBB716:
 962:../USER/ttbasic.c **** }
 7445              		.loc 1 962 2 view .LVU2391
 962:../USER/ttbasic.c **** }
 7446              		.loc 1 962 4 is_stmt 0 view .LVU2392
 7447 013a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7448              	.LBE716:
 7449              	.LBE715:
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7450              		.loc 1 965 39 view .LVU2393
 7451 013c 0133     		adds	r3, r3, #1
 7452              	.LVL652:
 7453              	.LBB719:
 7454              	.LBB717:
 962:../USER/ttbasic.c **** }
 7455              		.loc 1 962 4 view .LVU2394
 7456 013e 142A     		cmp	r2, #20
 962:../USER/ttbasic.c **** }
 7457              		.loc 1 962 21 is_stmt 1 view .LVU2395
 962:../USER/ttbasic.c **** }
 7458              		.loc 1 962 25 is_stmt 0 view .LVU2396
 7459 0140 18BF     		it	ne
 7460 0142 1422     		movne	r2, #20
 7461              	.LBE717:
 7462              	.LBE719:
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7463              		.loc 1 965 39 view .LVU2397
 7464 0144 2360     		str	r3, [r4]
 7465              	.LVL653:
 7466              	.LBB720:
 7467              	.LBB718:
 962:../USER/ttbasic.c **** }
 7468              		.loc 1 962 25 view .LVU2398
 7469 0146 18BF     		it	ne
 7470 0148 2A70     		strbne	r2, [r5]
 962:../USER/ttbasic.c **** }
 7471              		.loc 1 962 39 is_stmt 1 view .LVU2399
 962:../USER/ttbasic.c **** }
 7472              		.loc 1 962 39 is_stmt 0 view .LVU2400
 7473              	.LBE718:
 7474              	.LBE720:
 965:../USER/ttbasic.c **** 	int val1 = iexp(); chk_sep(*cip); cip++;
 7475              		.loc 1 965 36 is_stmt 1 view .LVU2401
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7476              		.loc 1 966 2 view .LVU2402
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7477              		.loc 1 966 13 is_stmt 0 view .LVU2403
 7478 014a FFF7FEFF 		bl	iexp
 7479              	.LVL654:
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7480              		.loc 1 966 21 view .LVU2404
 7481 014e 2368     		ldr	r3, [r4]
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7482              		.loc 1 966 13 view .LVU2405
 7483 0150 8146     		mov	r9, r0
 7484              	.LVL655:
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7485              		.loc 1 966 21 is_stmt 1 view .LVU2406
 7486              	.LBB721:
 7487              	.LBI721:
 961:../USER/ttbasic.c **** 	if(sep!=I_COMMA) { err = ERR_SYNTAX; return;}
 7488              		.loc 1 961 6 view .LVU2407
 7489              	.LBB722:
 962:../USER/ttbasic.c **** }
 7490              		.loc 1 962 2 view .LVU2408
 962:../USER/ttbasic.c **** }
 7491              		.loc 1 962 4 is_stmt 0 view .LVU2409
 7492 0152 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7493              	.LBE722:
 7494              	.LBE721:
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7495              		.loc 1 966 39 view .LVU2410
 7496 0154 0133     		adds	r3, r3, #1
 7497              	.LVL656:
 7498              	.LBB725:
 7499              	.LBB723:
 962:../USER/ttbasic.c **** }
 7500              		.loc 1 962 4 view .LVU2411
 7501 0156 142A     		cmp	r2, #20
 962:../USER/ttbasic.c **** }
 7502              		.loc 1 962 21 is_stmt 1 view .LVU2412
 962:../USER/ttbasic.c **** }
 7503              		.loc 1 962 25 is_stmt 0 view .LVU2413
 7504 0158 18BF     		it	ne
 7505 015a 1422     		movne	r2, #20
 7506              	.LBE723:
 7507              	.LBE725:
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7508              		.loc 1 966 39 view .LVU2414
 7509 015c 2360     		str	r3, [r4]
 7510              	.LVL657:
 7511              	.LBB726:
 7512              	.LBB724:
 962:../USER/ttbasic.c **** }
 7513              		.loc 1 962 25 view .LVU2415
 7514 015e 18BF     		it	ne
 7515 0160 2A70     		strbne	r2, [r5]
 962:../USER/ttbasic.c **** }
 7516              		.loc 1 962 39 is_stmt 1 view .LVU2416
 962:../USER/ttbasic.c **** }
 7517              		.loc 1 962 39 is_stmt 0 view .LVU2417
 7518              	.LBE724:
 7519              	.LBE726:
 966:../USER/ttbasic.c **** 	int val2 = iexp();
 7520              		.loc 1 966 36 is_stmt 1 view .LVU2418
 967:../USER/ttbasic.c **** 	pset(val0,val1, val2);
 7521              		.loc 1 967 2 view .LVU2419
 967:../USER/ttbasic.c **** 	pset(val0,val1, val2);
 7522              		.loc 1 967 13 is_stmt 0 view .LVU2420
 7523 0162 FFF7FEFF 		bl	iexp
 7524              	.LVL658:
 968:../USER/ttbasic.c **** }
 7525              		.loc 1 968 2 is_stmt 1 view .LVU2421
 7526 0166 1FFA89F1 		uxth	r1, r9
 7527 016a 82B2     		uxth	r2, r0
 7528 016c 1FFA88F0 		uxth	r0, r8
 7529              	.LVL659:
 968:../USER/ttbasic.c **** }
 7530              		.loc 1 968 2 is_stmt 0 view .LVU2422
 7531 0170 FFF7FEFF 		bl	pset
 7532              	.LVL660:
 968:../USER/ttbasic.c **** }
 7533              		.loc 1 968 2 view .LVU2423
 7534 0174 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7535 0176 93E7     		b	.L734
 7536              	.LVL661:
 7537              	.L706:
 968:../USER/ttbasic.c **** }
 7538              		.loc 1 968 2 view .LVU2424
 7539              	.LBE714:
 7540              	.LBE713:
1182:../USER/ttbasic.c **** 			ilet();
 7541              		.loc 1 1182 4 is_stmt 1 view .LVU2425
1182:../USER/ttbasic.c **** 			ilet();
 7542              		.loc 1 1182 7 is_stmt 0 view .LVU2426
 7543 0178 5A1C     		adds	r2, r3, #1
 7544 017a 2260     		str	r2, [r4]
1183:../USER/ttbasic.c **** 			break;
 7545              		.loc 1 1183 4 is_stmt 1 view .LVU2427
 7546              	.LBB727:
 7547              	.LBI684:
 944:../USER/ttbasic.c **** 	switch (*cip) {
 7548              		.loc 1 944 6 view .LVU2428
 7549              	.LBB692:
 945:../USER/ttbasic.c **** 	case I_VAR:
 7550              		.loc 1 945 2 view .LVU2429
 945:../USER/ttbasic.c **** 	case I_VAR:
 7551              		.loc 1 945 10 is_stmt 0 view .LVU2430
 7552 017c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 945:../USER/ttbasic.c **** 	case I_VAR:
 7553              		.loc 1 945 2 view .LVU2431
 7554 017e 222A     		cmp	r2, #34
 7555 0180 00F0E580 		beq	.L755
 7556 0184 2A2A     		cmp	r2, #42
 7557 0186 00F0CF80 		beq	.L791
 955:../USER/ttbasic.c **** 		break;
 7558              		.loc 1 955 3 is_stmt 1 view .LVU2432
 955:../USER/ttbasic.c **** 		break;
 7559              		.loc 1 955 7 is_stmt 0 view .LVU2433
 7560 018a 0E22     		movs	r2, #14
 7561 018c 3D4B     		ldr	r3, .L799+4
 7562 018e 1A70     		strb	r2, [r3]
 956:../USER/ttbasic.c **** 	}
 7563              		.loc 1 956 3 is_stmt 1 view .LVU2434
 7564 0190 7AE7     		b	.L725
 7565              	.L705:
 7566              	.LBE692:
 7567              	.LBE727:
1187:../USER/ttbasic.c **** 			iprint();
 7568              		.loc 1 1187 4 view .LVU2435
1187:../USER/ttbasic.c **** 			iprint();
 7569              		.loc 1 1187 7 is_stmt 0 view .LVU2436
 7570 0192 0133     		adds	r3, r3, #1
 7571 0194 2360     		str	r3, [r4]
1188:../USER/ttbasic.c **** 			break;
 7572              		.loc 1 1188 4 is_stmt 1 view .LVU2437
 7573 0196 FFF7FEFF 		bl	iprint
 7574              	.LVL662:
1189:../USER/ttbasic.c **** 		case I_INPUT:
 7575              		.loc 1 1189 4 view .LVU2438
 7576 019a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7577 019c 80E7     		b	.L734
 7578              	.L707:
1191:../USER/ttbasic.c **** 			iinput();
 7579              		.loc 1 1191 4 view .LVU2439
1191:../USER/ttbasic.c **** 			iinput();
 7580              		.loc 1 1191 7 is_stmt 0 view .LVU2440
 7581 019e 0133     		adds	r3, r3, #1
 7582 01a0 2360     		str	r3, [r4]
1192:../USER/ttbasic.c **** 			break;
 7583              		.loc 1 1192 4 is_stmt 1 view .LVU2441
 7584 01a2 FFF7FEFF 		bl	iinput
 7585              	.LVL663:
1193:../USER/ttbasic.c **** 
 7586              		.loc 1 1193 4 view .LVU2442
 7587 01a6 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7588 01a8 7AE7     		b	.L734
 7589              	.L708:
1169:../USER/ttbasic.c **** 				clp += *clp; // seek end
 7590              		.loc 1 1169 11 is_stmt 0 view .LVU2443
 7591 01aa 384A     		ldr	r2, .L799+12
 7592 01ac 1068     		ldr	r0, [r2]
 7593 01ae 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1169:../USER/ttbasic.c **** 				clp += *clp; // seek end
 7594              		.loc 1 1169 10 view .LVU2444
 7595 01b0 002B     		cmp	r3, #0
 7596 01b2 3FF46AAF 		beq	.L692
 7597              	.L717:
1170:../USER/ttbasic.c **** 			return clp;
 7598              		.loc 1 1170 5 is_stmt 1 view .LVU2445
1170:../USER/ttbasic.c **** 			return clp;
 7599              		.loc 1 1170 9 is_stmt 0 view .LVU2446
 7600 01b6 1844     		add	r0, r0, r3
 7601 01b8 1060     		str	r0, [r2]
1169:../USER/ttbasic.c **** 				clp += *clp; // seek end
 7602              		.loc 1 1169 11 view .LVU2447
 7603 01ba 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1169:../USER/ttbasic.c **** 				clp += *clp; // seek end
 7604              		.loc 1 1169 10 view .LVU2448
 7605 01bc 002B     		cmp	r3, #0
 7606 01be FAD1     		bne	.L717
 7607              		.loc 1 1235 1 view .LVU2449
 7608 01c0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7609              	.L709:
 7610 01c4 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7611              	.L753:
1165:../USER/ttbasic.c **** 			break;
 7612              		.loc 1 1165 5 is_stmt 1 view .LVU2450
1165:../USER/ttbasic.c **** 			break;
 7613              		.loc 1 1165 8 is_stmt 0 view .LVU2451
 7614 01c6 0133     		adds	r3, r3, #1
 7615 01c8 2360     		str	r3, [r4]
1164:../USER/ttbasic.c **** 				cip++; // seek end of line
 7616              		.loc 1 1164 10 view .LVU2452
 7617 01ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 7618 01cc 2C29     		cmp	r1, #44
 7619 01ce FAD1     		bne	.L753
 7620 01d0 66E7     		b	.L734
 7621              	.L710:
1151:../USER/ttbasic.c **** 			condition = iexp(); // get condition
 7622              		.loc 1 1151 4 is_stmt 1 view .LVU2453
1151:../USER/ttbasic.c **** 			condition = iexp(); // get condition
 7623              		.loc 1 1151 7 is_stmt 0 view .LVU2454
 7624 01d2 0133     		adds	r3, r3, #1
 7625 01d4 2360     		str	r3, [r4]
1152:../USER/ttbasic.c **** 			if (err) {
 7626              		.loc 1 1152 4 is_stmt 1 view .LVU2455
1152:../USER/ttbasic.c **** 			if (err) {
 7627              		.loc 1 1152 16 is_stmt 0 view .LVU2456
 7628 01d6 FFF7FEFF 		bl	iexp
 7629              	.LVL664:
1153:../USER/ttbasic.c **** 				err = ERR_IFWOC;
 7630              		.loc 1 1153 4 is_stmt 1 view .LVU2457
1153:../USER/ttbasic.c **** 				err = ERR_IFWOC;
 7631              		.loc 1 1153 8 is_stmt 0 view .LVU2458
 7632 01da 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
1153:../USER/ttbasic.c **** 				err = ERR_IFWOC;
 7633              		.loc 1 1153 7 view .LVU2459
 7634 01dc 002A     		cmp	r2, #0
 7635 01de 40F0A080 		bne	.L792
1157:../USER/ttbasic.c **** 				break;
 7636              		.loc 1 1157 4 is_stmt 1 view .LVU2460
1157:../USER/ttbasic.c **** 				break;
 7637              		.loc 1 1157 7 is_stmt 0 view .LVU2461
 7638 01e2 0028     		cmp	r0, #0
 7639 01e4 7FF45EAF 		bne	.L790
1164:../USER/ttbasic.c **** 				cip++; // seek end of line
 7640              		.loc 1 1164 11 view .LVU2462
 7641 01e8 2368     		ldr	r3, [r4]
1164:../USER/ttbasic.c **** 				cip++; // seek end of line
 7642              		.loc 1 1164 10 view .LVU2463
 7643 01ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 7644 01ec 2C29     		cmp	r1, #44
 7645 01ee EAD1     		bne	.L753
 7646 01f0 5CE7     		b	.L693
 7647              	.LVL665:
 7648              	.L711:
1117:../USER/ttbasic.c **** 
 7649              		.loc 1 1117 4 is_stmt 1 view .LVU2464
1119:../USER/ttbasic.c **** 				err = ERR_LSTKUF;
 7650              		.loc 1 1119 14 is_stmt 0 view .LVU2465
 7651 01f2 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
1117:../USER/ttbasic.c **** 
 7652              		.loc 1 1117 7 view .LVU2466
 7653 01f4 591C     		adds	r1, r3, #1
1119:../USER/ttbasic.c **** 				err = ERR_LSTKUF;
 7654              		.loc 1 1119 7 view .LVU2467
 7655 01f6 042A     		cmp	r2, #4
1117:../USER/ttbasic.c **** 
 7656              		.loc 1 1117 7 view .LVU2468
 7657 01f8 2160     		str	r1, [r4]
1119:../USER/ttbasic.c **** 				err = ERR_LSTKUF;
 7658              		.loc 1 1119 4 is_stmt 1 view .LVU2469
1119:../USER/ttbasic.c **** 				err = ERR_LSTKUF;
 7659              		.loc 1 1119 7 is_stmt 0 view .LVU2470
 7660 01fa 40F28E80 		bls	.L793
1124:../USER/ttbasic.c **** 			if (*cip++ != I_VAR) { // no variable
 7661              		.loc 1 1124 4 is_stmt 1 view .LVU2471
1125:../USER/ttbasic.c **** 				err = ERR_NEXTWOV;
 7662              		.loc 1 1125 12 is_stmt 0 view .LVU2472
 7663 01fe 991C     		adds	r1, r3, #2
 7664 0200 2160     		str	r1, [r4]
1125:../USER/ttbasic.c **** 				err = ERR_NEXTWOV;
 7665              		.loc 1 1125 7 view .LVU2473
 7666 0202 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
1124:../USER/ttbasic.c **** 			if (*cip++ != I_VAR) { // no variable
 7667              		.loc 1 1124 34 view .LVU2474
 7668 0204 2249     		ldr	r1, .L799+16
 7669 0206 02F1FF3C 		add	ip, r2, #-1
1125:../USER/ttbasic.c **** 				err = ERR_NEXTWOV;
 7670              		.loc 1 1125 7 view .LVU2475
 7671 020a 2A28     		cmp	r0, #42
1124:../USER/ttbasic.c **** 			if (*cip++ != I_VAR) { // no variable
 7672              		.loc 1 1124 34 view .LVU2476
 7673 020c 51F82CC0 		ldr	ip, [r1, ip, lsl #2]
 7674              	.LVL666:
1125:../USER/ttbasic.c **** 				err = ERR_NEXTWOV;
 7675              		.loc 1 1125 4 is_stmt 1 view .LVU2477
1125:../USER/ttbasic.c **** 				err = ERR_NEXTWOV;
 7676              		.loc 1 1125 7 is_stmt 0 view .LVU2478
 7677 0210 00F0CC80 		beq	.L745
1126:../USER/ttbasic.c **** 				break;
 7678              		.loc 1 1126 5 is_stmt 1 view .LVU2479
1126:../USER/ttbasic.c **** 				break;
 7679              		.loc 1 1126 9 is_stmt 0 view .LVU2480
 7680 0214 0A22     		movs	r2, #10
 7681 0216 1B4B     		ldr	r3, .L799+4
 7682 0218 1A70     		strb	r2, [r3]
1127:../USER/ttbasic.c **** 			}
 7683              		.loc 1 1127 5 is_stmt 1 view .LVU2481
 7684 021a 35E7     		b	.L725
 7685              	.LVL667:
 7686              	.L712:
1068:../USER/ttbasic.c **** 
 7687              		.loc 1 1068 4 view .LVU2482
1070:../USER/ttbasic.c **** 				err = ERR_FORWOV;
 7688              		.loc 1 1070 4 view .LVU2483
1070:../USER/ttbasic.c **** 				err = ERR_FORWOV;
 7689              		.loc 1 1070 12 is_stmt 0 view .LVU2484
 7690 021c 9A1C     		adds	r2, r3, #2
 7691 021e 2260     		str	r2, [r4]
1070:../USER/ttbasic.c **** 				err = ERR_FORWOV;
 7692              		.loc 1 1070 7 view .LVU2485
 7693 0220 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7694 0222 2A2A     		cmp	r2, #42
 7695 0224 00F0A780 		beq	.L735
1071:../USER/ttbasic.c **** 				break;
 7696              		.loc 1 1071 5 is_stmt 1 view .LVU2486
1071:../USER/ttbasic.c **** 				break;
 7697              		.loc 1 1071 9 is_stmt 0 view .LVU2487
 7698 0228 0C22     		movs	r2, #12
 7699 022a 164B     		ldr	r3, .L799+4
 7700 022c 1A70     		strb	r2, [r3]
1072:../USER/ttbasic.c **** 			}
 7701              		.loc 1 1072 5 is_stmt 1 view .LVU2488
 7702 022e 2BE7     		b	.L725
 7703              	.L713:
1059:../USER/ttbasic.c **** 				err = ERR_GSTKUF;
 7704              		.loc 1 1059 4 view .LVU2489
1059:../USER/ttbasic.c **** 				err = ERR_GSTKUF;
 7705              		.loc 1 1059 14 is_stmt 0 view .LVU2490
 7706 0230 184A     		ldr	r2, .L799+20
 7707 0232 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
1059:../USER/ttbasic.c **** 				err = ERR_GSTKUF;
 7708              		.loc 1 1059 7 view .LVU2491
 7709 0234 012B     		cmp	r3, #1
 7710 0236 40F28680 		bls	.L794
1063:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
 7711              		.loc 1 1063 4 is_stmt 1 view .LVU2492
1063:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
 7712              		.loc 1 1063 15 is_stmt 0 view .LVU2493
 7713 023a 591E     		subs	r1, r3, #1
1063:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
 7714              		.loc 1 1063 14 view .LVU2494
 7715 023c 1648     		ldr	r0, .L799+24
1064:../USER/ttbasic.c **** 			break;
 7716              		.loc 1 1064 15 view .LVU2495
 7717 023e 023B     		subs	r3, r3, #2
 7718 0240 DBB2     		uxtb	r3, r3
1063:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
 7719              		.loc 1 1063 15 view .LVU2496
 7720 0242 C9B2     		uxtb	r1, r1
1063:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
 7721              		.loc 1 1063 8 view .LVU2497
 7722 0244 50F82110 		ldr	r1, [r0, r1, lsl #2]
1064:../USER/ttbasic.c **** 			break;
 7723              		.loc 1 1064 8 view .LVU2498
 7724 0248 1370     		strb	r3, [r2]
 7725 024a 50F82300 		ldr	r0, [r0, r3, lsl #2]
 7726 024e 0F4B     		ldr	r3, .L799+12
1063:../USER/ttbasic.c **** 			clp = gstk[--gstki]; // pop i-code pointer
 7727              		.loc 1 1063 8 view .LVU2499
 7728 0250 2160     		str	r1, [r4]
1064:../USER/ttbasic.c **** 			break;
 7729              		.loc 1 1064 4 is_stmt 1 view .LVU2500
1064:../USER/ttbasic.c **** 			break;
 7730              		.loc 1 1064 8 is_stmt 0 view .LVU2501
 7731 0252 1860     		str	r0, [r3]
1065:../USER/ttbasic.c **** 
 7732              		.loc 1 1065 4 is_stmt 1 view .LVU2502
 7733 0254 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 7734 0256 23E7     		b	.L734
 7735              	.L714:
1036:../USER/ttbasic.c **** 			lineno = iexp(); // get line number
 7736              		.loc 1 1036 4 view .LVU2503
1036:../USER/ttbasic.c **** 			lineno = iexp(); // get line number
 7737              		.loc 1 1036 7 is_stmt 0 view .LVU2504
 7738 0258 0133     		adds	r3, r3, #1
 7739 025a 2360     		str	r3, [r4]
1037:../USER/ttbasic.c **** 			if (err)
 7740              		.loc 1 1037 4 is_stmt 1 view .LVU2505
1037:../USER/ttbasic.c **** 			if (err)
 7741              		.loc 1 1037 13 is_stmt 0 view .LVU2506
 7742 025c FFF7FEFF 		bl	iexp
 7743              	.LVL668:
1038:../USER/ttbasic.c **** 				break;
 7744              		.loc 1 1038 4 is_stmt 1 view .LVU2507
1038:../USER/ttbasic.c **** 				break;
 7745              		.loc 1 1038 7 is_stmt 0 view .LVU2508
 7746 0260 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7747 0262 002B     		cmp	r3, #0
 7748 0264 7FF410AF 		bne	.L725
 7749              	.LVL669:
 7750              	.LBB728:
 7751              	.LBB729:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7752              		.loc 1 447 21 view .LVU2509
 7753 0268 0C49     		ldr	r1, .L799+28
 7754 026a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7755              		.loc 1 447 2 view .LVU2510
 7756 026c 33B3     		cbz	r3, .L766
 448:../USER/ttbasic.c **** 			break;
 7757              		.loc 1 448 3 is_stmt 1 view .LVU2511
 7758              	.LVL670:
 7759              	.LBB730:
 7760              	.LBI730:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 7761              		.loc 1 437 7 view .LVU2512
 7762              	.LBB731:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 7763              		.loc 1 438 2 view .LVU2513
 440:../USER/ttbasic.c **** }
 7764              		.loc 1 440 2 view .LVU2514
 440:../USER/ttbasic.c **** }
 7765              		.loc 1 440 21 is_stmt 0 view .LVU2515
 7766 026e 91F802C0 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 7767              		.loc 1 440 9 view .LVU2516
 7768 0272 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 7769              		.loc 1 440 19 view .LVU2517
 7770 0274 42EA0C22 		orr	r2, r2, ip, lsl #8
 7771 0278 12B2     		sxth	r2, r2
 7772              	.LVL671:
 440:../USER/ttbasic.c **** }
 7773              		.loc 1 440 19 view .LVU2518
 7774              	.LBE731:
 7775              	.LBE730:
 448:../USER/ttbasic.c **** 			break;
 7776              		.loc 1 448 6 view .LVU2519
 7777 027a 8242     		cmp	r2, r0
 7778 027c 1ADB     		blt	.L729
 7779 027e 1FE0     		b	.L727
 7780              	.L800:
 7781              		.align	2
 7782              	.L799:
 7783 0280 00000000 		.word	cip
 7784 0284 00000000 		.word	err
 7785 0288 00000000 		.word	lstki
 7786 028c 00000000 		.word	clp
 7787 0290 00000000 		.word	lstk
 7788 0294 00000000 		.word	gstki
 7789 0298 00000000 		.word	gstk
 7790 029c 00000000 		.word	listbuf
 7791 02a0 00000000 		.word	var
 7792              	.LVL672:
 7793              	.L730:
 7794              	.LBB734:
 7795              	.LBB732:
 440:../USER/ttbasic.c **** }
 7796              		.loc 1 440 21 view .LVU2520
 7797 02a4 91F802C0 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 7798              		.loc 1 440 9 view .LVU2521
 7799 02a8 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 7800              		.loc 1 440 19 view .LVU2522
 7801 02aa 42EA0C22 		orr	r2, r2, ip, lsl #8
 7802 02ae 12B2     		sxth	r2, r2
 7803              	.LVL673:
 440:../USER/ttbasic.c **** }
 7804              		.loc 1 440 19 view .LVU2523
 7805              	.LBE732:
 7806              	.LBE734:
 448:../USER/ttbasic.c **** 			break;
 7807              		.loc 1 448 6 view .LVU2524
 7808 02b0 9042     		cmp	r0, r2
 7809 02b2 05DD     		ble	.L727
 7810              	.LVL674:
 7811              	.L729:
 448:../USER/ttbasic.c **** 			break;
 7812              		.loc 1 448 3 is_stmt 1 view .LVU2525
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7813              		.loc 1 447 29 is_stmt 0 view .LVU2526
 7814 02b4 1944     		add	r1, r1, r3
 7815              	.LVL675:
 7816              	.LBB735:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 7817              		.loc 1 437 7 is_stmt 1 view .LVU2527
 7818              	.LBB733:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 7819              		.loc 1 438 2 view .LVU2528
 440:../USER/ttbasic.c **** }
 7820              		.loc 1 440 2 view .LVU2529
 440:../USER/ttbasic.c **** }
 7821              		.loc 1 440 2 is_stmt 0 view .LVU2530
 7822              	.LBE733:
 7823              	.LBE735:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7824              		.loc 1 447 21 view .LVU2531
 7825 02b6 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7826              		.loc 1 447 2 view .LVU2532
 7827 02b8 002B     		cmp	r3, #0
 7828 02ba F3D1     		bne	.L730
 7829              	.LVL676:
 7830              	.L766:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7831              		.loc 1 447 2 view .LVU2533
 7832              	.LBE729:
 7833              	.LBE728:
 7834              	.LBB736:
 7835              	.LBB737:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 7836              		.loc 1 439 10 view .LVU2534
 7837 02bc 47F6FF72 		movw	r2, #32767
 7838              	.L727:
 7839              	.LBE737:
 7840              	.LBE736:
1041:../USER/ttbasic.c **** 				err = ERR_ULN;
 7841              		.loc 1 1041 7 view .LVU2535
 7842 02c0 9042     		cmp	r0, r2
 7843 02c2 23D1     		bne	.L731
1047:../USER/ttbasic.c **** 				err = ERR_GSTKOF;
 7844              		.loc 1 1047 4 is_stmt 1 view .LVU2536
1047:../USER/ttbasic.c **** 				err = ERR_GSTKOF;
 7845              		.loc 1 1047 14 is_stmt 0 view .LVU2537
 7846 02c4 DFF824C2 		ldr	ip, .L801+24
 7847 02c8 9CF80020 		ldrb	r2, [ip]	@ zero_extendqisi2
1047:../USER/ttbasic.c **** 				err = ERR_GSTKOF;
 7848              		.loc 1 1047 7 view .LVU2538
 7849 02cc 042A     		cmp	r2, #4
 7850 02ce 40F29980 		bls	.L732
1048:../USER/ttbasic.c **** 				break;
 7851              		.loc 1 1048 5 is_stmt 1 view .LVU2539
1048:../USER/ttbasic.c **** 				break;
 7852              		.loc 1 1048 9 is_stmt 0 view .LVU2540
 7853 02d2 0623     		movs	r3, #6
 7854 02d4 2B70     		strb	r3, [r5]
1049:../USER/ttbasic.c **** 			}
 7855              		.loc 1 1049 5 is_stmt 1 view .LVU2541
 7856 02d6 D7E6     		b	.L725
 7857              	.LVL677:
 7858              	.L715:
1021:../USER/ttbasic.c **** 			lineno = iexp(); // get line number
 7859              		.loc 1 1021 4 view .LVU2542
1021:../USER/ttbasic.c **** 			lineno = iexp(); // get line number
 7860              		.loc 1 1021 7 is_stmt 0 view .LVU2543
 7861 02d8 0133     		adds	r3, r3, #1
 7862 02da 2360     		str	r3, [r4]
1022:../USER/ttbasic.c **** 			if (err)
 7863              		.loc 1 1022 4 is_stmt 1 view .LVU2544
1022:../USER/ttbasic.c **** 			if (err)
 7864              		.loc 1 1022 13 is_stmt 0 view .LVU2545
 7865 02dc FFF7FEFF 		bl	iexp
 7866              	.LVL678:
1023:../USER/ttbasic.c **** 				break;
 7867              		.loc 1 1023 4 is_stmt 1 view .LVU2546
1023:../USER/ttbasic.c **** 				break;
 7868              		.loc 1 1023 7 is_stmt 0 view .LVU2547
 7869 02e0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7870 02e2 002B     		cmp	r3, #0
 7871 02e4 7FF4D0AE 		bne	.L725
 7872              	.LVL679:
 7873              	.LBB738:
 7874              	.LBB739:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7875              		.loc 1 447 21 view .LVU2548
 7876 02e8 7A49     		ldr	r1, .L801
 7877 02ea 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7878              		.loc 1 447 2 view .LVU2549
 7879 02ec 23B9     		cbnz	r3, .L723
 7880 02ee 68E0     		b	.L764
 7881              	.LVL680:
 7882              	.L795:
 448:../USER/ttbasic.c **** 			break;
 7883              		.loc 1 448 3 is_stmt 1 view .LVU2550
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7884              		.loc 1 447 29 is_stmt 0 view .LVU2551
 7885 02f0 1944     		add	r1, r1, r3
 7886              	.LVL681:
 7887              	.LBB740:
 7888              	.LBI740:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 7889              		.loc 1 437 7 is_stmt 1 view .LVU2552
 7890              	.LBB741:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 7891              		.loc 1 438 2 view .LVU2553
 440:../USER/ttbasic.c **** }
 7892              		.loc 1 440 2 view .LVU2554
 440:../USER/ttbasic.c **** }
 7893              		.loc 1 440 2 is_stmt 0 view .LVU2555
 7894              	.LBE741:
 7895              	.LBE740:
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7896              		.loc 1 447 21 view .LVU2556
 7897 02f2 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 447:../USER/ttbasic.c **** 		if (getlineno(lp) >= lineno)
 7898              		.loc 1 447 2 view .LVU2557
 7899 02f4 002B     		cmp	r3, #0
 7900 02f6 64D0     		beq	.L764
 7901              	.LVL682:
 7902              	.L723:
 7903              	.LBB743:
 7904              	.LBB742:
 440:../USER/ttbasic.c **** }
 7905              		.loc 1 440 21 view .LVU2558
 7906 02f8 91F802C0 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 7907              		.loc 1 440 9 view .LVU2559
 7908 02fc 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 7909              		.loc 1 440 19 view .LVU2560
 7910 02fe 42EA0C22 		orr	r2, r2, ip, lsl #8
 7911 0302 12B2     		sxth	r2, r2
 7912              	.LBE742:
 7913              	.LBE743:
 448:../USER/ttbasic.c **** 			break;
 7914              		.loc 1 448 6 view .LVU2561
 7915 0304 9042     		cmp	r0, r2
 7916 0306 F3DC     		bgt	.L795
 7917              	.L720:
 7918              	.LBE739:
 7919              	.LBE738:
1026:../USER/ttbasic.c **** 				err = ERR_ULN;
 7920              		.loc 1 1026 7 view .LVU2562
 7921 0308 9042     		cmp	r0, r2
 7922 030a 76D0     		beq	.L724
 7923              	.L731:
1027:../USER/ttbasic.c **** 				break;
 7924              		.loc 1 1027 5 is_stmt 1 view .LVU2563
1027:../USER/ttbasic.c **** 				break;
 7925              		.loc 1 1027 9 is_stmt 0 view .LVU2564
 7926 030c 1023     		movs	r3, #16
 7927 030e 2B70     		strb	r3, [r5]
1028:../USER/ttbasic.c **** 			}
 7928              		.loc 1 1028 5 is_stmt 1 view .LVU2565
 7929 0310 BAE6     		b	.L725
 7930              	.LVL683:
 7931              	.L694:
1227:../USER/ttbasic.c **** 			break;
 7932              		.loc 1 1227 4 view .LVU2566
1227:../USER/ttbasic.c **** 			break;
 7933              		.loc 1 1227 8 is_stmt 0 view .LVU2567
 7934 0312 1422     		movs	r2, #20
 7935 0314 704B     		ldr	r3, .L801+4
 7936 0316 1A70     		strb	r2, [r3]
1228:../USER/ttbasic.c **** 		}
 7937              		.loc 1 1228 4 is_stmt 1 view .LVU2568
 7938 0318 B6E6     		b	.L725
 7939              	.L793:
1120:../USER/ttbasic.c **** 				break;
 7940              		.loc 1 1120 5 view .LVU2569
1120:../USER/ttbasic.c **** 				break;
 7941              		.loc 1 1120 9 is_stmt 0 view .LVU2570
 7942 031a 0922     		movs	r2, #9
 7943 031c 6E4B     		ldr	r3, .L801+4
 7944 031e 1A70     		strb	r2, [r3]
1121:../USER/ttbasic.c **** 			}
 7945              		.loc 1 1121 5 is_stmt 1 view .LVU2571
 7946 0320 B2E6     		b	.L725
 7947              	.LVL684:
 7948              	.L792:
1154:../USER/ttbasic.c **** 				break;
 7949              		.loc 1 1154 5 view .LVU2572
1154:../USER/ttbasic.c **** 				break;
 7950              		.loc 1 1154 9 is_stmt 0 view .LVU2573
 7951 0322 0F23     		movs	r3, #15
 7952 0324 2B70     		strb	r3, [r5]
1155:../USER/ttbasic.c **** 			}
 7953              		.loc 1 1155 5 is_stmt 1 view .LVU2574
 7954 0326 AFE6     		b	.L725
 7955              	.LVL685:
 7956              	.L791:
 7957              	.LBB744:
 7958              	.LBB693:
 947:../USER/ttbasic.c **** 		ivar(); // Variable assignment
 7959              		.loc 1 947 3 view .LVU2575
 948:../USER/ttbasic.c **** 		break;
 7960              		.loc 1 948 3 view .LVU2576
 7961              	.LBB690:
 7962              	.LBI686:
 889:../USER/ttbasic.c **** 	short value;
 7963              		.loc 1 889 6 view .LVU2577
 7964              	.LBB688:
 890:../USER/ttbasic.c **** 	short index;
 7965              		.loc 1 890 2 view .LVU2578
 891:../USER/ttbasic.c **** 
 7966              		.loc 1 891 2 view .LVU2579
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 7967              		.loc 1 893 2 view .LVU2580
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 7968              		.loc 1 893 14 is_stmt 0 view .LVU2581
 7969 0328 DA1C     		adds	r2, r3, #3
 7970 032a 2260     		str	r2, [r4]
 7971              	.LVL686:
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 7972              		.loc 1 894 2 is_stmt 1 view .LVU2582
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 7973              		.loc 1 894 5 is_stmt 0 view .LVU2583
 7974 032c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7975 032e 1F2A     		cmp	r2, #31
 7976 0330 7FF4A7AE 		bne	.L757
 898:../USER/ttbasic.c **** 
 7977              		.loc 1 898 5 view .LVU2584
 7978 0334 1A1D     		adds	r2, r3, #4
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 7979              		.loc 1 893 10 view .LVU2585
 7980 0336 93F80280 		ldrb	r8, [r3, #2]	@ zero_extendqisi2
 898:../USER/ttbasic.c **** 
 7981              		.loc 1 898 2 is_stmt 1 view .LVU2586
 898:../USER/ttbasic.c **** 
 7982              		.loc 1 898 5 is_stmt 0 view .LVU2587
 7983 033a 2260     		str	r2, [r4]
 7984              	.LVL687:
 900:../USER/ttbasic.c **** 	if (err)
 7985              		.loc 1 900 2 is_stmt 1 view .LVU2588
 900:../USER/ttbasic.c **** 	if (err)
 7986              		.loc 1 900 10 is_stmt 0 view .LVU2589
 7987 033c FFF7FEFF 		bl	iexp
 7988              	.LVL688:
 901:../USER/ttbasic.c **** 		return;
 7989              		.loc 1 901 2 is_stmt 1 view .LVU2590
 901:../USER/ttbasic.c **** 		return;
 7990              		.loc 1 901 5 is_stmt 0 view .LVU2591
 7991 0340 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7992 0342 A3B1     		cbz	r3, .L789
 7993 0344 A0E6     		b	.L725
 7994              	.LVL689:
 7995              	.L794:
 901:../USER/ttbasic.c **** 		return;
 7996              		.loc 1 901 5 view .LVU2592
 7997              	.LBE688:
 7998              	.LBE690:
 7999              	.LBE693:
 8000              	.LBE744:
1060:../USER/ttbasic.c **** 				break;
 8001              		.loc 1 1060 5 is_stmt 1 view .LVU2593
1060:../USER/ttbasic.c **** 				break;
 8002              		.loc 1 1060 9 is_stmt 0 view .LVU2594
 8003 0346 0722     		movs	r2, #7
 8004 0348 634B     		ldr	r3, .L801+4
 8005 034a 1A70     		strb	r2, [r3]
1061:../USER/ttbasic.c **** 			}
 8006              		.loc 1 1061 5 is_stmt 1 view .LVU2595
 8007 034c 9CE6     		b	.L725
 8008              	.L755:
 8009              	.LBB745:
 8010              	.LBB694:
 951:../USER/ttbasic.c **** 		iarray(); // Array assignment
 8011              		.loc 1 951 3 view .LVU2596
 951:../USER/ttbasic.c **** 		iarray(); // Array assignment
 8012              		.loc 1 951 6 is_stmt 0 view .LVU2597
 8013 034e 0233     		adds	r3, r3, #2
 8014 0350 2360     		str	r3, [r4]
 952:../USER/ttbasic.c **** 		break;
 8015              		.loc 1 952 3 is_stmt 1 view .LVU2598
 8016 0352 FFF7FEFF 		bl	iarray
 8017              	.LVL690:
 953:../USER/ttbasic.c **** 	default:
 8018              		.loc 1 953 3 view .LVU2599
 8019 0356 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 8020 0358 A2E6     		b	.L734
 8021              	.LVL691:
 8022              	.L754:
 953:../USER/ttbasic.c **** 	default:
 8023              		.loc 1 953 3 is_stmt 0 view .LVU2600
 8024              	.LBE694:
 8025              	.LBE745:
 8026              	.LBB746:
 8027              	.LBB698:
 898:../USER/ttbasic.c **** 
 8028              		.loc 1 898 5 view .LVU2601
 8029 035a DA1C     		adds	r2, r3, #3
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 8030              		.loc 1 893 10 view .LVU2602
 8031 035c 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
 898:../USER/ttbasic.c **** 
 8032              		.loc 1 898 2 is_stmt 1 view .LVU2603
 898:../USER/ttbasic.c **** 
 8033              		.loc 1 898 5 is_stmt 0 view .LVU2604
 8034 0360 2260     		str	r2, [r4]
 8035              	.LVL692:
 900:../USER/ttbasic.c **** 	if (err)
 8036              		.loc 1 900 2 is_stmt 1 view .LVU2605
 900:../USER/ttbasic.c **** 	if (err)
 8037              		.loc 1 900 10 is_stmt 0 view .LVU2606
 8038 0362 FFF7FEFF 		bl	iexp
 8039              	.LVL693:
 901:../USER/ttbasic.c **** 		return;
 8040              		.loc 1 901 2 is_stmt 1 view .LVU2607
 901:../USER/ttbasic.c **** 		return;
 8041              		.loc 1 901 5 is_stmt 0 view .LVU2608
 8042 0366 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8043 0368 002B     		cmp	r3, #0
 8044 036a 7FF48DAE 		bne	.L725
 8045              	.LVL694:
 8046              	.L789:
 901:../USER/ttbasic.c **** 		return;
 8047              		.loc 1 901 5 view .LVU2609
 8048              	.LBE698:
 8049              	.LBE746:
 8050              	.LBB747:
 8051              	.LBB695:
 8052              	.LBB691:
 8053              	.LBB689:
 904:../USER/ttbasic.c **** }
 8054              		.loc 1 904 2 is_stmt 1 view .LVU2610
 904:../USER/ttbasic.c **** }
 8055              		.loc 1 904 13 is_stmt 0 view .LVU2611
 8056 036e 2BF81800 		strh	r0, [fp, r8, lsl #1]	@ movhi
 8057 0372 2368     		ldr	r3, [r4]
 8058 0374 97E6     		b	.L788
 8059              	.L735:
 8060              	.LBE689:
 8061              	.LBE691:
 8062              	.LBE695:
 8063              	.LBE747:
1075:../USER/ttbasic.c **** 			ivar(); // var = value
 8064              		.loc 1 1075 4 is_stmt 1 view .LVU2612
 8065              	.LBB748:
 8066              	.LBB749:
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 8067              		.loc 1 893 14 is_stmt 0 view .LVU2613
 8068 0376 DA1C     		adds	r2, r3, #3
 8069              	.LBE749:
 8070              	.LBE748:
1075:../USER/ttbasic.c **** 			ivar(); // var = value
 8071              		.loc 1 1075 12 view .LVU2614
 8072 0378 93F80280 		ldrb	r8, [r3, #2]	@ zero_extendqisi2
 8073              	.LVL695:
1076:../USER/ttbasic.c **** 			if (err)
 8074              		.loc 1 1076 4 is_stmt 1 view .LVU2615
 8075              	.LBB752:
 8076              	.LBI748:
 889:../USER/ttbasic.c **** 	short value;
 8077              		.loc 1 889 6 view .LVU2616
 8078              	.LBB750:
 890:../USER/ttbasic.c **** 	short index;
 8079              		.loc 1 890 2 view .LVU2617
 891:../USER/ttbasic.c **** 
 8080              		.loc 1 891 2 view .LVU2618
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 8081              		.loc 1 893 2 view .LVU2619
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 8082              		.loc 1 893 14 is_stmt 0 view .LVU2620
 8083 037c 2260     		str	r2, [r4]
 8084              	.LVL696:
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 8085              		.loc 1 894 2 is_stmt 1 view .LVU2621
 894:../USER/ttbasic.c **** 		err = ERR_VWOEQ;
 8086              		.loc 1 894 5 is_stmt 0 view .LVU2622
 8087 037e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 8088 0380 1F2A     		cmp	r2, #31
 8089 0382 7FF47EAE 		bne	.L757
 898:../USER/ttbasic.c **** 
 8090              		.loc 1 898 5 view .LVU2623
 8091 0386 1A1D     		adds	r2, r3, #4
 893:../USER/ttbasic.c **** 	if (*cip != I_EQ) {
 8092              		.loc 1 893 10 view .LVU2624
 8093 0388 93F80290 		ldrb	r9, [r3, #2]	@ zero_extendqisi2
 898:../USER/ttbasic.c **** 
 8094              		.loc 1 898 2 is_stmt 1 view .LVU2625
 898:../USER/ttbasic.c **** 
 8095              		.loc 1 898 5 is_stmt 0 view .LVU2626
 8096 038c 2260     		str	r2, [r4]
 8097              	.LVL697:
 900:../USER/ttbasic.c **** 	if (err)
 8098              		.loc 1 900 2 is_stmt 1 view .LVU2627
 900:../USER/ttbasic.c **** 	if (err)
 8099              		.loc 1 900 10 is_stmt 0 view .LVU2628
 8100 038e FFF7FEFF 		bl	iexp
 8101              	.LVL698:
 901:../USER/ttbasic.c **** 		return;
 8102              		.loc 1 901 2 is_stmt 1 view .LVU2629
 901:../USER/ttbasic.c **** 		return;
 8103              		.loc 1 901 5 is_stmt 0 view .LVU2630
 8104 0392 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8105 0394 002B     		cmp	r3, #0
 8106 0396 7FF477AE 		bne	.L725
 904:../USER/ttbasic.c **** }
 8107              		.loc 1 904 2 is_stmt 1 view .LVU2631
 8108              	.LBE750:
 8109              	.LBE752:
1080:../USER/ttbasic.c **** 				cip++;
 8110              		.loc 1 1080 8 is_stmt 0 view .LVU2632
 8111 039a 2368     		ldr	r3, [r4]
 8112              	.LBB753:
 8113              	.LBB751:
 904:../USER/ttbasic.c **** }
 8114              		.loc 1 904 13 view .LVU2633
 8115 039c 2BF81900 		strh	r0, [fp, r9, lsl #1]	@ movhi
 8116              	.LVL699:
 904:../USER/ttbasic.c **** }
 8117              		.loc 1 904 13 view .LVU2634
 8118              	.LBE751:
 8119              	.LBE753:
1077:../USER/ttbasic.c **** 				break;
 8120              		.loc 1 1077 4 is_stmt 1 view .LVU2635
1080:../USER/ttbasic.c **** 				cip++;
 8121              		.loc 1 1080 4 view .LVU2636
1080:../USER/ttbasic.c **** 				cip++;
 8122              		.loc 1 1080 7 is_stmt 0 view .LVU2637
 8123 03a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8124 03a2 042A     		cmp	r2, #4
 8125 03a4 4ED0     		beq	.L796
1085:../USER/ttbasic.c **** 				break;
 8126              		.loc 1 1085 5 is_stmt 1 view .LVU2638
1085:../USER/ttbasic.c **** 				break;
 8127              		.loc 1 1085 9 is_stmt 0 view .LVU2639
 8128 03a6 0D23     		movs	r3, #13
 8129 03a8 2B70     		strb	r3, [r5]
1086:../USER/ttbasic.c **** 			}
 8130              		.loc 1 1086 5 is_stmt 1 view .LVU2640
 8131 03aa 6DE6     		b	.L725
 8132              	.LVL700:
 8133              	.L745:
1129:../USER/ttbasic.c **** 				err = ERR_NEXTUM;
 8134              		.loc 1 1129 4 view .LVU2641
1129:../USER/ttbasic.c **** 				err = ERR_NEXTUM;
 8135              		.loc 1 1129 12 is_stmt 0 view .LVU2642
 8136 03ac D81C     		adds	r0, r3, #3
 8137 03ae 2060     		str	r0, [r4]
1129:../USER/ttbasic.c **** 				err = ERR_NEXTUM;
 8138              		.loc 1 1129 8 view .LVU2643
 8139 03b0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
1129:../USER/ttbasic.c **** 				err = ERR_NEXTUM;
 8140              		.loc 1 1129 15 view .LVU2644
 8141 03b2 0FFA8CFC 		sxth	ip, ip
 8142              	.LVL701:
1129:../USER/ttbasic.c **** 				err = ERR_NEXTUM;
 8143              		.loc 1 1129 7 view .LVU2645
 8144 03b6 6345     		cmp	r3, ip
 8145 03b8 06D0     		beq	.L746
1130:../USER/ttbasic.c **** 				break;
 8146              		.loc 1 1130 5 is_stmt 1 view .LVU2646
1130:../USER/ttbasic.c **** 				break;
 8147              		.loc 1 1130 9 is_stmt 0 view .LVU2647
 8148 03ba 0B22     		movs	r2, #11
 8149              	.LVL702:
1130:../USER/ttbasic.c **** 				break;
 8150              		.loc 1 1130 9 view .LVU2648
 8151 03bc 464B     		ldr	r3, .L801+4
 8152 03be 1A70     		strb	r2, [r3]
1131:../USER/ttbasic.c **** 			}
 8153              		.loc 1 1131 5 is_stmt 1 view .LVU2649
 8154 03c0 62E6     		b	.L725
 8155              	.LVL703:
 8156              	.L764:
 8157              	.LBB754:
 8158              	.LBB755:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 8159              		.loc 1 439 10 is_stmt 0 view .LVU2650
 8160 03c2 47F6FF72 		movw	r2, #32767
 8161 03c6 9FE7     		b	.L720
 8162              	.LVL704:
 8163              	.L746:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 8164              		.loc 1 439 10 view .LVU2651
 8165              	.LBE755:
 8166              	.LBE754:
1134:../USER/ttbasic.c **** 			var[index] += vstep; // update loop counter
 8167              		.loc 1 1134 4 is_stmt 1 view .LVU2652
1134:../USER/ttbasic.c **** 			var[index] += vstep; // update loop counter
 8168              		.loc 1 1134 34 is_stmt 0 view .LVU2653
 8169 03c8 901E     		subs	r0, r2, #2
1135:../USER/ttbasic.c **** 			vto = (short)(uintptr_t)lstk[lstki - 3]; // read TO value
 8170              		.loc 1 1135 15 view .LVU2654
 8171 03ca 3BF813C0 		ldrh	ip, [fp, r3, lsl #1]
1134:../USER/ttbasic.c **** 			var[index] += vstep; // update loop counter
 8172              		.loc 1 1134 12 view .LVU2655
 8173 03ce 51F82000 		ldr	r0, [r1, r0, lsl #2]
1134:../USER/ttbasic.c **** 			var[index] += vstep; // update loop counter
 8174              		.loc 1 1134 10 view .LVU2656
 8175 03d2 0FFA80FE 		sxth	lr, r0
 8176              	.LVL705:
1135:../USER/ttbasic.c **** 			vto = (short)(uintptr_t)lstk[lstki - 3]; // read TO value
 8177              		.loc 1 1135 4 is_stmt 1 view .LVU2657
1135:../USER/ttbasic.c **** 			vto = (short)(uintptr_t)lstk[lstki - 3]; // read TO value
 8178              		.loc 1 1135 15 is_stmt 0 view .LVU2658
 8179 03d6 6044     		add	r0, r0, ip
 8180 03d8 00B2     		sxth	r0, r0
1136:../USER/ttbasic.c **** 
 8181              		.loc 1 1136 32 view .LVU2659
 8182 03da A2F1030C 		sub	ip, r2, #3
1139:../USER/ttbasic.c **** 				((vstep > 0) && (var[index] > vto))) {
 8183              		.loc 1 1139 7 view .LVU2660
 8184 03de BEF1000F 		cmp	lr, #0
1135:../USER/ttbasic.c **** 			vto = (short)(uintptr_t)lstk[lstki - 3]; // read TO value
 8185              		.loc 1 1135 15 view .LVU2661
 8186 03e2 2BF81300 		strh	r0, [fp, r3, lsl #1]	@ movhi
1136:../USER/ttbasic.c **** 
 8187              		.loc 1 1136 4 is_stmt 1 view .LVU2662
1136:../USER/ttbasic.c **** 
 8188              		.loc 1 1136 8 is_stmt 0 view .LVU2663
 8189 03e6 31F92C30 		ldrsh	r3, [r1, ip, lsl #2]
 8190              	.LVL706:
1139:../USER/ttbasic.c **** 				((vstep > 0) && (var[index] > vto))) {
 8191              		.loc 1 1139 4 is_stmt 1 view .LVU2664
1139:../USER/ttbasic.c **** 				((vstep > 0) && (var[index] > vto))) {
 8192              		.loc 1 1139 7 is_stmt 0 view .LVU2665
 8193 03ea 1EDB     		blt	.L797
1139:../USER/ttbasic.c **** 				((vstep > 0) && (var[index] > vto))) {
 8194              		.loc 1 1139 44 discriminator 3 view .LVU2666
 8195 03ec 1FD0     		beq	.L749
1140:../USER/ttbasic.c **** 				lstki -= 5; // resume stack
 8196              		.loc 1 1140 18 view .LVU2667
 8197 03ee 9842     		cmp	r0, r3
 8198 03f0 1DDD     		ble	.L749
 8199              	.L748:
1141:../USER/ttbasic.c **** 				break;
 8200              		.loc 1 1141 5 is_stmt 1 view .LVU2668
1141:../USER/ttbasic.c **** 				break;
 8201              		.loc 1 1141 11 is_stmt 0 view .LVU2669
 8202 03f2 053A     		subs	r2, r2, #5
 8203              	.LVL707:
1141:../USER/ttbasic.c **** 				break;
 8204              		.loc 1 1141 11 view .LVU2670
 8205 03f4 3270     		strb	r2, [r6]
1142:../USER/ttbasic.c **** 			}
 8206              		.loc 1 1142 5 is_stmt 1 view .LVU2671
 8207 03f6 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 8208 03f8 52E6     		b	.L734
 8209              	.LVL708:
 8210              	.L724:
1031:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
 8211              		.loc 1 1031 4 view .LVU2672
1031:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
 8212              		.loc 1 1031 8 is_stmt 0 view .LVU2673
 8213 03fa 384A     		ldr	r2, .L801+8
1032:../USER/ttbasic.c **** 			break;
 8214              		.loc 1 1032 14 view .LVU2674
 8215 03fc CB1C     		adds	r3, r1, #3
1031:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
 8216              		.loc 1 1031 8 view .LVU2675
 8217 03fe 1160     		str	r1, [r2]
1032:../USER/ttbasic.c **** 			break;
 8218              		.loc 1 1032 4 is_stmt 1 view .LVU2676
1032:../USER/ttbasic.c **** 			break;
 8219              		.loc 1 1032 8 is_stmt 0 view .LVU2677
 8220 0400 2360     		str	r3, [r4]
1033:../USER/ttbasic.c **** 
 8221              		.loc 1 1033 4 is_stmt 1 view .LVU2678
 8222 0402 50E6     		b	.L788
 8223              	.L732:
1051:../USER/ttbasic.c **** 			gstk[gstki++] = cip; // push i-code pointer
 8224              		.loc 1 1051 4 view .LVU2679
1052:../USER/ttbasic.c **** 
 8225              		.loc 1 1052 4 view .LVU2680
1051:../USER/ttbasic.c **** 			gstk[gstki++] = cip; // push i-code pointer
 8226              		.loc 1 1051 18 is_stmt 0 view .LVU2681
 8227 0404 354B     		ldr	r3, .L801+8
 8228 0406 3648     		ldr	r0, .L801+12
 8229              	.LVL709:
1051:../USER/ttbasic.c **** 			gstk[gstki++] = cip; // push i-code pointer
 8230              		.loc 1 1051 18 view .LVU2682
 8231 0408 1F68     		ldr	r7, [r3]
1051:../USER/ttbasic.c **** 			gstk[gstki++] = cip; // push i-code pointer
 8232              		.loc 1 1051 14 view .LVU2683
 8233 040a 02F1010E 		add	lr, r2, #1
1054:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
 8234              		.loc 1 1054 8 view .LVU2684
 8235 040e 1960     		str	r1, [r3]
1055:../USER/ttbasic.c **** 			break;
 8236              		.loc 1 1055 14 view .LVU2685
 8237 0410 CB1C     		adds	r3, r1, #3
1052:../USER/ttbasic.c **** 
 8238              		.loc 1 1052 18 view .LVU2686
 8239 0412 2168     		ldr	r1, [r4]
1051:../USER/ttbasic.c **** 			gstk[gstki++] = cip; // push i-code pointer
 8240              		.loc 1 1051 18 view .LVU2687
 8241 0414 40F82270 		str	r7, [r0, r2, lsl #2]
1052:../USER/ttbasic.c **** 
 8242              		.loc 1 1052 14 view .LVU2688
 8243 0418 5FFA8EFE 		uxtb	lr, lr
 8244 041c 0232     		adds	r2, r2, #2
 8245 041e 8CF80020 		strb	r2, [ip]
1052:../USER/ttbasic.c **** 
 8246              		.loc 1 1052 18 view .LVU2689
 8247 0422 40F82E10 		str	r1, [r0, lr, lsl #2]
1054:../USER/ttbasic.c **** 			cip = clp + 3; // update i-code pointer
 8248              		.loc 1 1054 4 is_stmt 1 view .LVU2690
1055:../USER/ttbasic.c **** 			break;
 8249              		.loc 1 1055 4 view .LVU2691
1055:../USER/ttbasic.c **** 			break;
 8250              		.loc 1 1055 8 is_stmt 0 view .LVU2692
 8251 0426 2360     		str	r3, [r4]
1056:../USER/ttbasic.c **** 
 8252              		.loc 1 1056 4 is_stmt 1 view .LVU2693
 8253 0428 3DE6     		b	.L788
 8254              	.LVL710:
 8255              	.L797:
1139:../USER/ttbasic.c **** 				((vstep > 0) && (var[index] > vto))) {
 8256              		.loc 1 1139 21 is_stmt 0 discriminator 1 view .LVU2694
 8257 042a 9842     		cmp	r0, r3
 8258 042c E1DB     		blt	.L748
 8259              	.L749:
1146:../USER/ttbasic.c **** 			clp = lstk[lstki - 5]; // read i-code pointer
 8260              		.loc 1 1146 4 is_stmt 1 view .LVU2695
1146:../USER/ttbasic.c **** 			clp = lstk[lstki - 5]; // read i-code pointer
 8261              		.loc 1 1146 14 is_stmt 0 view .LVU2696
 8262 042e 131F     		subs	r3, r2, #4
 8263              	.LVL711:
1147:../USER/ttbasic.c **** 			break;
 8264              		.loc 1 1147 14 view .LVU2697
 8265 0430 053A     		subs	r2, r2, #5
 8266              	.LVL712:
1146:../USER/ttbasic.c **** 			clp = lstk[lstki - 5]; // read i-code pointer
 8267              		.loc 1 1146 8 view .LVU2698
 8268 0432 51F82300 		ldr	r0, [r1, r3, lsl #2]
1147:../USER/ttbasic.c **** 			break;
 8269              		.loc 1 1147 8 view .LVU2699
 8270 0436 51F82220 		ldr	r2, [r1, r2, lsl #2]
 8271 043a 284B     		ldr	r3, .L801+8
1146:../USER/ttbasic.c **** 			clp = lstk[lstki - 5]; // read i-code pointer
 8272              		.loc 1 1146 8 view .LVU2700
 8273 043c 2060     		str	r0, [r4]
1147:../USER/ttbasic.c **** 			break;
 8274              		.loc 1 1147 4 is_stmt 1 view .LVU2701
1147:../USER/ttbasic.c **** 			break;
 8275              		.loc 1 1147 8 is_stmt 0 view .LVU2702
 8276 043e 1A60     		str	r2, [r3]
1148:../USER/ttbasic.c **** 
 8277              		.loc 1 1148 4 is_stmt 1 view .LVU2703
 8278 0440 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 8279 0442 2DE6     		b	.L734
 8280              	.LVL713:
 8281              	.L796:
1081:../USER/ttbasic.c **** 				vto = iexp(); // get TO value
 8282              		.loc 1 1081 5 view .LVU2704
1081:../USER/ttbasic.c **** 				vto = iexp(); // get TO value
 8283              		.loc 1 1081 8 is_stmt 0 view .LVU2705
 8284 0444 0133     		adds	r3, r3, #1
 8285 0446 2360     		str	r3, [r4]
1082:../USER/ttbasic.c **** 			}
 8286              		.loc 1 1082 5 is_stmt 1 view .LVU2706
1082:../USER/ttbasic.c **** 			}
 8287              		.loc 1 1082 11 is_stmt 0 view .LVU2707
 8288 0448 FFF7FEFF 		bl	iexp
 8289              	.LVL714:
1089:../USER/ttbasic.c **** 				cip++;
 8290              		.loc 1 1089 8 view .LVU2708
 8291 044c 2368     		ldr	r3, [r4]
1082:../USER/ttbasic.c **** 			}
 8292              		.loc 1 1082 11 view .LVU2709
 8293 044e 8146     		mov	r9, r0
 8294              	.LVL715:
1089:../USER/ttbasic.c **** 				cip++;
 8295              		.loc 1 1089 4 is_stmt 1 view .LVU2710
1089:../USER/ttbasic.c **** 				cip++;
 8296              		.loc 1 1089 7 is_stmt 0 view .LVU2711
 8297 0450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8298 0452 052A     		cmp	r2, #5
 8299 0454 31D0     		beq	.L738
 8300 0456 47F6FE73 		movw	r3, #32766
1094:../USER/ttbasic.c **** 
 8301              		.loc 1 1094 11 view .LVU2712
 8302 045a 4FF0010C 		mov	ip, #1
 8303              	.L739:
1098:../USER/ttbasic.c **** 				err = ERR_VOF;
 8304              		.loc 1 1098 18 view .LVU2713
 8305 045e 9945     		cmp	r9, r3
 8306 0460 07DD     		ble	.L741
 8307              	.L742:
1099:../USER/ttbasic.c **** 				break;
 8308              		.loc 1 1099 5 is_stmt 1 view .LVU2714
1099:../USER/ttbasic.c **** 				break;
 8309              		.loc 1 1099 9 is_stmt 0 view .LVU2715
 8310 0462 0223     		movs	r3, #2
 8311 0464 2B70     		strb	r3, [r5]
1100:../USER/ttbasic.c **** 			}
 8312              		.loc 1 1100 5 is_stmt 1 view .LVU2716
 8313 0466 0FE6     		b	.L725
 8314              	.LVL716:
 8315              	.L798:
1097:../USER/ttbasic.c **** 				((vstep > 0) && (32767 - vstep < vto))) {
 8316              		.loc 1 1097 32 is_stmt 0 discriminator 1 view .LVU2717
 8317 0468 1E4B     		ldr	r3, .L801+16
 8318 046a A3EB0C03 		sub	r3, r3, ip
1097:../USER/ttbasic.c **** 				((vstep > 0) && (32767 - vstep < vto))) {
 8319              		.loc 1 1097 21 discriminator 1 view .LVU2718
 8320 046e 4B45     		cmp	r3, r9
 8321 0470 F7DC     		bgt	.L742
 8322              	.LVL717:
 8323              	.L741:
1104:../USER/ttbasic.c **** 				err = ERR_LSTKOF;
 8324              		.loc 1 1104 4 is_stmt 1 view .LVU2719
1104:../USER/ttbasic.c **** 				err = ERR_LSTKOF;
 8325              		.loc 1 1104 14 is_stmt 0 view .LVU2720
 8326 0472 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
1104:../USER/ttbasic.c **** 				err = ERR_LSTKOF;
 8327              		.loc 1 1104 7 view .LVU2721
 8328 0474 0A2B     		cmp	r3, #10
 8329 0476 02D9     		bls	.L743
1105:../USER/ttbasic.c **** 				break;
 8330              		.loc 1 1105 5 is_stmt 1 view .LVU2722
1105:../USER/ttbasic.c **** 				break;
 8331              		.loc 1 1105 9 is_stmt 0 view .LVU2723
 8332 0478 0823     		movs	r3, #8
 8333 047a 2B70     		strb	r3, [r5]
1106:../USER/ttbasic.c **** 			}
 8334              		.loc 1 1106 5 is_stmt 1 view .LVU2724
 8335 047c 04E6     		b	.L725
 8336              	.L743:
1108:../USER/ttbasic.c **** 			lstk[lstki++] = cip; // push i-code pointer
 8337              		.loc 1 1108 4 view .LVU2725
1108:../USER/ttbasic.c **** 			lstk[lstki++] = cip; // push i-code pointer
 8338              		.loc 1 1108 18 is_stmt 0 view .LVU2726
 8339 047e 174A     		ldr	r2, .L801+8
 8340 0480 1948     		ldr	r0, .L801+20
 8341 0482 1168     		ldr	r1, [r2]
1108:../USER/ttbasic.c **** 			lstk[lstki++] = cip; // push i-code pointer
 8342              		.loc 1 1108 14 view .LVU2727
 8343 0484 03F1010A 		add	r10, r3, #1
1109:../USER/ttbasic.c **** 								 //Special thanks hardyboy
 8344              		.loc 1 1109 18 view .LVU2728
 8345 0488 2268     		ldr	r2, [r4]
1109:../USER/ttbasic.c **** 								 //Special thanks hardyboy
 8346              		.loc 1 1109 14 view .LVU2729
 8347 048a 5FFA8AFA 		uxtb	r10, r10
1108:../USER/ttbasic.c **** 			lstk[lstki++] = cip; // push i-code pointer
 8348              		.loc 1 1108 18 view .LVU2730
 8349 048e 40F82310 		str	r1, [r0, r3, lsl #2]
1109:../USER/ttbasic.c **** 								 //Special thanks hardyboy
 8350              		.loc 1 1109 4 is_stmt 1 view .LVU2731
1109:../USER/ttbasic.c **** 								 //Special thanks hardyboy
 8351              		.loc 1 1109 14 is_stmt 0 view .LVU2732
 8352 0492 03F1020E 		add	lr, r3, #2
1109:../USER/ttbasic.c **** 								 //Special thanks hardyboy
 8353              		.loc 1 1109 18 view .LVU2733
 8354 0496 40F82A20 		str	r2, [r0, r10, lsl #2]
1111:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)vstep; // push STEP value
 8355              		.loc 1 1111 4 is_stmt 1 view .LVU2734
1112:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)index; // push variable index
 8356              		.loc 1 1112 14 is_stmt 0 view .LVU2735
 8357 049a 191D     		adds	r1, r3, #4
1111:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)vstep; // push STEP value
 8358              		.loc 1 1111 14 view .LVU2736
 8359 049c DA1C     		adds	r2, r3, #3
1112:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)index; // push variable index
 8360              		.loc 1 1112 14 view .LVU2737
 8361 049e D2B2     		uxtb	r2, r2
1111:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)vstep; // push STEP value
 8362              		.loc 1 1111 14 view .LVU2738
 8363 04a0 5FFA8EFE 		uxtb	lr, lr
1113:../USER/ttbasic.c **** 			break;
 8364              		.loc 1 1113 14 view .LVU2739
 8365 04a4 C9B2     		uxtb	r1, r1
 8366 04a6 0533     		adds	r3, r3, #5
1111:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)vstep; // push STEP value
 8367              		.loc 1 1111 36 view .LVU2740
 8368 04a8 40F82E90 		str	r9, [r0, lr, lsl #2]
1112:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)index; // push variable index
 8369              		.loc 1 1112 4 is_stmt 1 view .LVU2741
1113:../USER/ttbasic.c **** 			break;
 8370              		.loc 1 1113 14 is_stmt 0 view .LVU2742
 8371 04ac 3370     		strb	r3, [r6]
1112:../USER/ttbasic.c **** 			lstk[lstki++] = (unsigned char*)(uintptr_t)index; // push variable index
 8372              		.loc 1 1112 36 view .LVU2743
 8373 04ae 40F822C0 		str	ip, [r0, r2, lsl #2]
1113:../USER/ttbasic.c **** 			break;
 8374              		.loc 1 1113 4 is_stmt 1 view .LVU2744
 8375 04b2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
1113:../USER/ttbasic.c **** 			break;
 8376              		.loc 1 1113 36 is_stmt 0 view .LVU2745
 8377 04b4 40F82180 		str	r8, [r0, r1, lsl #2]
1114:../USER/ttbasic.c **** 
 8378              		.loc 1 1114 4 is_stmt 1 view .LVU2746
 8379 04b8 F2E5     		b	.L734
 8380              	.L738:
1090:../USER/ttbasic.c **** 				vstep = iexp(); // get STEP value
 8381              		.loc 1 1090 5 view .LVU2747
1090:../USER/ttbasic.c **** 				vstep = iexp(); // get STEP value
 8382              		.loc 1 1090 8 is_stmt 0 view .LVU2748
 8383 04ba 0133     		adds	r3, r3, #1
 8384 04bc 2360     		str	r3, [r4]
1091:../USER/ttbasic.c **** 			}
 8385              		.loc 1 1091 5 is_stmt 1 view .LVU2749
1091:../USER/ttbasic.c **** 			}
 8386              		.loc 1 1091 13 is_stmt 0 view .LVU2750
 8387 04be FFF7FEFF 		bl	iexp
 8388              	.LVL718:
1097:../USER/ttbasic.c **** 				((vstep > 0) && (32767 - vstep < vto))) {
 8389              		.loc 1 1097 4 is_stmt 1 view .LVU2751
1097:../USER/ttbasic.c **** 				((vstep > 0) && (32767 - vstep < vto))) {
 8390              		.loc 1 1097 7 is_stmt 0 view .LVU2752
 8391 04c2 B0F1000C 		subs	ip, r0, #0
 8392 04c6 CFDB     		blt	.L798
1097:../USER/ttbasic.c **** 				((vstep > 0) && (32767 - vstep < vto))) {
 8393              		.loc 1 1097 48 discriminator 3 view .LVU2753
 8394 04c8 D3D0     		beq	.L741
 8395 04ca CCF5FF43 		rsb	r3, ip, #32640
 8396 04ce 7F33     		adds	r3, r3, #127
 8397 04d0 C5E7     		b	.L739
 8398              	.L802:
 8399 04d2 00BF     		.align	2
 8400              	.L801:
 8401 04d4 00000000 		.word	listbuf
 8402 04d8 00000000 		.word	err
 8403 04dc 00000000 		.word	clp
 8404 04e0 00000000 		.word	gstk
 8405 04e4 0180FFFF 		.word	-32767
 8406 04e8 00000000 		.word	lstk
 8407 04ec 00000000 		.word	gstki
 8408              		.cfi_endproc
 8409              	.LFE40:
 8411              		.section	.text.irun,"ax",%progbits
 8412              		.align	1
 8413              		.p2align 2,,3
 8414              		.global	irun
 8415              		.syntax unified
 8416              		.thumb
 8417              		.thumb_func
 8418              		.fpu softvfp
 8420              	irun:
 8421              	.LFB41:
1236:../USER/ttbasic.c **** 
1237:../USER/ttbasic.c **** // RUN command handler
1238:../USER/ttbasic.c **** void irun() {
 8422              		.loc 1 1238 13 is_stmt 1 view -0
 8423              		.cfi_startproc
 8424              		@ args = 0, pretend = 0, frame = 0
 8425              		@ frame_needed = 0, uses_anonymous_args = 0
1239:../USER/ttbasic.c **** 	unsigned char* lp;
 8426              		.loc 1 1239 2 view .LVU2755
1240:../USER/ttbasic.c **** 
1241:../USER/ttbasic.c **** 	gstki = 0;
 8427              		.loc 1 1241 2 view .LVU2756
 8428              		.loc 1 1241 8 is_stmt 0 view .LVU2757
 8429 0000 0023     		movs	r3, #0
1238:../USER/ttbasic.c **** 	unsigned char* lp;
 8430              		.loc 1 1238 13 view .LVU2758
 8431 0002 70B5     		push	{r4, r5, r6, lr}
 8432              		.cfi_def_cfa_offset 16
 8433              		.cfi_offset 4, -16
 8434              		.cfi_offset 5, -12
 8435              		.cfi_offset 6, -8
 8436              		.cfi_offset 14, -4
1242:../USER/ttbasic.c **** 	lstki = 0;
1243:../USER/ttbasic.c **** 	clp = listbuf;
 8437              		.loc 1 1243 6 view .LVU2759
 8438 0004 0B48     		ldr	r0, .L812
1241:../USER/ttbasic.c **** 	lstki = 0;
 8439              		.loc 1 1241 8 view .LVU2760
 8440 0006 0C4D     		ldr	r5, .L812+4
1242:../USER/ttbasic.c **** 	lstki = 0;
 8441              		.loc 1 1242 8 view .LVU2761
 8442 0008 0C49     		ldr	r1, .L812+8
 8443              		.loc 1 1243 6 view .LVU2762
 8444 000a 0D4C     		ldr	r4, .L812+12
1244:../USER/ttbasic.c **** 
1245:../USER/ttbasic.c **** 	while (*clp) {
 8445              		.loc 1 1245 8 view .LVU2763
 8446 000c 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
1241:../USER/ttbasic.c **** 	lstki = 0;
 8447              		.loc 1 1241 8 view .LVU2764
 8448 000e 2B70     		strb	r3, [r5]
1242:../USER/ttbasic.c **** 	clp = listbuf;
 8449              		.loc 1 1242 2 is_stmt 1 view .LVU2765
1242:../USER/ttbasic.c **** 	clp = listbuf;
 8450              		.loc 1 1242 8 is_stmt 0 view .LVU2766
 8451 0010 0B70     		strb	r3, [r1]
1243:../USER/ttbasic.c **** 
 8452              		.loc 1 1243 2 is_stmt 1 view .LVU2767
1243:../USER/ttbasic.c **** 
 8453              		.loc 1 1243 6 is_stmt 0 view .LVU2768
 8454 0012 2060     		str	r0, [r4]
 8455              		.loc 1 1245 2 is_stmt 1 view .LVU2769
 8456              		.loc 1 1245 8 is_stmt 0 view .LVU2770
 8457 0014 62B1     		cbz	r2, .L803
 8458 0016 0B4E     		ldr	r6, .L812+16
 8459 0018 0B4D     		ldr	r5, .L812+20
 8460 001a 02E0     		b	.L805
 8461              	.LVL719:
 8462              	.L811:
1246:../USER/ttbasic.c **** 		cip = clp + 3;
1247:../USER/ttbasic.c **** 		lp = iexe();
1248:../USER/ttbasic.c **** 		if (err)
1249:../USER/ttbasic.c **** 			return;
1250:../USER/ttbasic.c **** 		clp = lp;
 8463              		.loc 1 1250 7 view .LVU2771
 8464 001c 2060     		str	r0, [r4]
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 8465              		.loc 1 1245 9 view .LVU2772
 8466 001e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 8467              		.loc 1 1245 8 view .LVU2773
 8468 0020 33B1     		cbz	r3, .L803
 8469              	.LVL720:
 8470              	.L805:
1246:../USER/ttbasic.c **** 		cip = clp + 3;
 8471              		.loc 1 1246 3 is_stmt 1 view .LVU2774
1246:../USER/ttbasic.c **** 		cip = clp + 3;
 8472              		.loc 1 1246 13 is_stmt 0 view .LVU2775
 8473 0022 0330     		adds	r0, r0, #3
1246:../USER/ttbasic.c **** 		cip = clp + 3;
 8474              		.loc 1 1246 7 view .LVU2776
 8475 0024 3060     		str	r0, [r6]
1247:../USER/ttbasic.c **** 		if (err)
 8476              		.loc 1 1247 3 is_stmt 1 view .LVU2777
1247:../USER/ttbasic.c **** 		if (err)
 8477              		.loc 1 1247 8 is_stmt 0 view .LVU2778
 8478 0026 FFF7FEFF 		bl	iexe
 8479              	.LVL721:
 8480              		.loc 1 1250 3 is_stmt 1 view .LVU2779
1248:../USER/ttbasic.c **** 			return;
 8481              		.loc 1 1248 3 view .LVU2780
1248:../USER/ttbasic.c **** 			return;
 8482              		.loc 1 1248 6 is_stmt 0 view .LVU2781
 8483 002a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8484 002c 002B     		cmp	r3, #0
 8485 002e F5D0     		beq	.L811
 8486              	.LVL722:
 8487              	.L803:
1251:../USER/ttbasic.c **** 	}
1252:../USER/ttbasic.c **** }
 8488              		.loc 1 1252 1 view .LVU2782
 8489 0030 70BD     		pop	{r4, r5, r6, pc}
 8490              	.L813:
 8491 0032 00BF     		.align	2
 8492              	.L812:
 8493 0034 00000000 		.word	listbuf
 8494 0038 00000000 		.word	gstki
 8495 003c 00000000 		.word	lstki
 8496 0040 00000000 		.word	clp
 8497 0044 00000000 		.word	cip
 8498 0048 00000000 		.word	err
 8499              		.cfi_endproc
 8500              	.LFE41:
 8502              		.section	.text.ilist,"ax",%progbits
 8503              		.align	1
 8504              		.p2align 2,,3
 8505              		.global	ilist
 8506              		.syntax unified
 8507              		.thumb
 8508              		.thumb_func
 8509              		.fpu softvfp
 8511              	ilist:
 8512              	.LFB42:
1253:../USER/ttbasic.c **** 
1254:../USER/ttbasic.c **** // LIST command handler
1255:../USER/ttbasic.c **** void ilist() {
 8513              		.loc 1 1255 14 is_stmt 1 view -0
 8514              		.cfi_startproc
 8515              		@ args = 0, pretend = 0, frame = 0
 8516              		@ frame_needed = 0, uses_anonymous_args = 0
1256:../USER/ttbasic.c **** 	short lineno;
 8517              		.loc 1 1256 2 view .LVU2784
1257:../USER/ttbasic.c **** 
1258:../USER/ttbasic.c **** 	lineno = (*cip == I_NUM) ? getlineno(cip) : 0;
 8518              		.loc 1 1258 2 view .LVU2785
1255:../USER/ttbasic.c **** 	short lineno;
 8519              		.loc 1 1255 14 is_stmt 0 view .LVU2786
 8520 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8521              		.cfi_def_cfa_offset 40
 8522              		.cfi_offset 3, -40
 8523              		.cfi_offset 4, -36
 8524              		.cfi_offset 5, -32
 8525              		.cfi_offset 6, -28
 8526              		.cfi_offset 7, -24
 8527              		.cfi_offset 8, -20
 8528              		.cfi_offset 9, -16
 8529              		.cfi_offset 10, -12
 8530              		.cfi_offset 11, -8
 8531              		.cfi_offset 14, -4
 8532              		.loc 1 1258 12 view .LVU2787
 8533 0004 554B     		ldr	r3, .L852
 8534 0006 1B68     		ldr	r3, [r3]
 8535              		.loc 1 1258 9 view .LVU2788
 8536 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8537 000a 292A     		cmp	r2, #41
 8538 000c 00F0A080 		beq	.L849
 8539 0010 0024     		movs	r4, #0
 8540              	.L815:
 8541              	.LVL723:
1259:../USER/ttbasic.c **** 
1260:../USER/ttbasic.c **** 	for (clp = listbuf;
 8542              		.loc 1 1260 2 is_stmt 1 discriminator 4 view .LVU2789
 8543              		.loc 1 1260 11 is_stmt 0 discriminator 4 view .LVU2790
 8544 0012 534A     		ldr	r2, .L852+4
 8545 0014 534E     		ldr	r6, .L852+8
1261:../USER/ttbasic.c **** 	*clp && (getlineno(clp) < lineno);
 8546              		.loc 1 1261 2 discriminator 4 view .LVU2791
 8547 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
1260:../USER/ttbasic.c **** 	*clp && (getlineno(clp) < lineno);
 8548              		.loc 1 1260 11 discriminator 4 view .LVU2792
 8549 0018 3260     		str	r2, [r6]
1260:../USER/ttbasic.c **** 	*clp && (getlineno(clp) < lineno);
 8550              		.loc 1 1260 2 discriminator 4 view .LVU2793
 8551 001a B8B1     		cbz	r0, .L814
 8552              	.LVL724:
 8553              	.LBB778:
 8554              	.LBI778:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 8555              		.loc 1 437 7 is_stmt 1 view .LVU2794
 8556              	.LBB779:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 8557              		.loc 1 438 2 view .LVU2795
 440:../USER/ttbasic.c **** }
 8558              		.loc 1 440 2 view .LVU2796
 440:../USER/ttbasic.c **** }
 8559              		.loc 1 440 21 is_stmt 0 view .LVU2797
 8560 001c 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 8561              	.LVL725:
 440:../USER/ttbasic.c **** }
 8562              		.loc 1 440 9 view .LVU2798
 8563 001e 92F801C0 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 8564              		.loc 1 440 31 view .LVU2799
 8565 0022 1B02     		lsls	r3, r3, #8
 440:../USER/ttbasic.c **** }
 8566              		.loc 1 440 19 view .LVU2800
 8567 0024 43EA0C01 		orr	r1, r3, ip
 8568              	.LBE779:
 8569              	.LBE778:
 8570              		.loc 1 1261 7 view .LVU2801
 8571 0028 09B2     		sxth	r1, r1
 8572 002a 8C42     		cmp	r4, r1
 8573 002c 09DC     		bgt	.L819
 8574 002e 10E0     		b	.L817
 8575              	.LVL726:
 8576              	.L851:
 8577              	.LBB782:
 8578              	.LBB780:
 440:../USER/ttbasic.c **** }
 8579              		.loc 1 440 21 view .LVU2802
 8580 0030 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 8581              	.LVL727:
 440:../USER/ttbasic.c **** }
 8582              		.loc 1 440 9 view .LVU2803
 8583 0032 92F801C0 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 8584              		.loc 1 440 31 view .LVU2804
 8585 0036 1B02     		lsls	r3, r3, #8
 440:../USER/ttbasic.c **** }
 8586              		.loc 1 440 19 view .LVU2805
 8587 0038 43EA0C01 		orr	r1, r3, ip
 8588              	.LBE780:
 8589              	.LBE782:
 8590              		.loc 1 1261 7 view .LVU2806
 8591 003c 09B2     		sxth	r1, r1
 8592 003e 8C42     		cmp	r4, r1
 8593 0040 06DD     		ble	.L850
 8594              	.L819:
1262:../USER/ttbasic.c **** 		clp += *clp);
 8595              		.loc 1 1262 15 is_stmt 1 view .LVU2807
 8596              		.loc 1 1262 7 is_stmt 0 view .LVU2808
 8597 0042 0244     		add	r2, r2, r0
 8598              	.LVL728:
 8599              	.LBB783:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 8600              		.loc 1 437 7 is_stmt 1 view .LVU2809
 8601              	.LBB781:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 8602              		.loc 1 438 2 view .LVU2810
 440:../USER/ttbasic.c **** }
 8603              		.loc 1 440 2 view .LVU2811
 8604              	.LBE781:
 8605              	.LBE783:
1261:../USER/ttbasic.c **** 		clp += *clp);
 8606              		.loc 1 1261 2 is_stmt 0 view .LVU2812
 8607 0044 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
1260:../USER/ttbasic.c **** 	*clp && (getlineno(clp) < lineno);
 8608              		.loc 1 1260 2 view .LVU2813
 8609 0046 0028     		cmp	r0, #0
 8610 0048 F2D1     		bne	.L851
 8611 004a 3260     		str	r2, [r6]
 8612              	.LVL729:
 8613              	.L814:
1263:../USER/ttbasic.c **** 
1264:../USER/ttbasic.c **** 		while (*clp) {
1265:../USER/ttbasic.c **** 			putnum(getlineno(clp), 0);
1266:../USER/ttbasic.c **** 			c_putch(' ');
1267:../USER/ttbasic.c **** 			putlist(clp + 3);
1268:../USER/ttbasic.c **** 			if (err)
1269:../USER/ttbasic.c **** 				break;
1270:../USER/ttbasic.c **** 			newline();
1271:../USER/ttbasic.c **** 			clp += *clp;
1272:../USER/ttbasic.c **** 		}
1273:../USER/ttbasic.c **** }
 8614              		.loc 1 1273 1 view .LVU2814
 8615 004c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8616              	.LVL730:
 8617              	.L850:
 8618              		.loc 1 1273 1 view .LVU2815
 8619 0050 3260     		str	r2, [r6]
 8620              	.L817:
 8621              	.LBB784:
 8622              	.LBB785:
 233:../USER/ttbasic.c **** 	}
 8623              		.loc 1 233 8 view .LVU2816
 8624 0052 4FF00008 		mov	r8, #0
 8625 0056 444D     		ldr	r5, .L852+12
 8626 0058 444C     		ldr	r4, .L852+16
 8627              	.LVL731:
 239:../USER/ttbasic.c **** 		value /= 10;
 8628              		.loc 1 239 30 view .LVU2817
 8629 005a 454F     		ldr	r7, .L852+20
 8630              	.L834:
 8631              	.LBE785:
 8632              	.LBE784:
1265:../USER/ttbasic.c **** 			c_putch(' ');
 8633              		.loc 1 1265 4 is_stmt 1 view .LVU2818
 8634              	.LBB795:
 8635              	.LBI795:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 8636              		.loc 1 437 7 view .LVU2819
 8637              	.LBB796:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 8638              		.loc 1 438 2 view .LVU2820
 440:../USER/ttbasic.c **** }
 8639              		.loc 1 440 2 view .LVU2821
 440:../USER/ttbasic.c **** }
 8640              		.loc 1 440 19 is_stmt 0 view .LVU2822
 8641 005c 43EA0C03 		orr	r3, r3, ip
 8642 0060 1BB2     		sxth	r3, r3
 8643              	.LVL732:
 440:../USER/ttbasic.c **** }
 8644              		.loc 1 440 19 view .LVU2823
 8645              	.LBE796:
 8646              	.LBE795:
 8647              	.LBB797:
 8648              	.LBI784:
 224:../USER/ttbasic.c **** 	unsigned char dig;
 8649              		.loc 1 224 6 is_stmt 1 view .LVU2824
 8650              	.LBB793:
 225:../USER/ttbasic.c **** 	unsigned char sign;
 8651              		.loc 1 225 2 view .LVU2825
 226:../USER/ttbasic.c **** 
 8652              		.loc 1 226 2 view .LVU2826
 228:../USER/ttbasic.c **** 		sign = 1;
 8653              		.loc 1 228 2 view .LVU2827
 228:../USER/ttbasic.c **** 		sign = 1;
 8654              		.loc 1 228 5 is_stmt 0 view .LVU2828
 8655 0062 002B     		cmp	r3, #0
 229:../USER/ttbasic.c **** 		value = -value;
 8656              		.loc 1 229 3 is_stmt 1 view .LVU2829
 8657              	.LVL733:
 230:../USER/ttbasic.c **** 	}
 8658              		.loc 1 230 3 view .LVU2830
 230:../USER/ttbasic.c **** 	}
 8659              		.loc 1 230 9 is_stmt 0 view .LVU2831
 8660 0064 BDBF     		ittte	lt
 8661 0066 5B42     		rsblt	r3, r3, #0
 8662              	.LVL734:
 230:../USER/ttbasic.c **** 	}
 8663              		.loc 1 230 9 view .LVU2832
 8664 0068 1BB2     		sxthlt	r3, r3
 8665              	.LVL735:
 229:../USER/ttbasic.c **** 		value = -value;
 8666              		.loc 1 229 8 view .LVU2833
 8667 006a 4FF0010E 		movlt	lr, #1
 233:../USER/ttbasic.c **** 	}
 8668              		.loc 1 233 8 view .LVU2834
 8669 006e 4FF0000E 		movge	lr, #0
 8670              	.LVL736:
 236:../USER/ttbasic.c **** 	dig = 6;
 8671              		.loc 1 236 2 is_stmt 1 view .LVU2835
 236:../USER/ttbasic.c **** 	dig = 6;
 8672              		.loc 1 236 10 is_stmt 0 view .LVU2836
 8673 0072 85F80680 		strb	r8, [r5, #6]
 237:../USER/ttbasic.c **** 	do {
 8674              		.loc 1 237 2 is_stmt 1 view .LVU2837
 8675              	.LVL737:
 237:../USER/ttbasic.c **** 	do {
 8676              		.loc 1 237 6 is_stmt 0 view .LVU2838
 8677 0076 4FF0060C 		mov	ip, #6
 8678 007a 01E0     		b	.L822
 8679              	.LVL738:
 8680              	.L837:
 239:../USER/ttbasic.c **** 		value /= 10;
 8681              		.loc 1 239 15 view .LVU2839
 8682 007c 9446     		mov	ip, r2
 240:../USER/ttbasic.c **** 	} while (value > 0);
 8683              		.loc 1 240 9 view .LVU2840
 8684 007e 0B46     		mov	r3, r1
 8685              	.LVL739:
 8686              	.L822:
 238:../USER/ttbasic.c **** 		lbuf[--dig] = (value % 10) + '0';
 8687              		.loc 1 238 2 is_stmt 1 view .LVU2841
 239:../USER/ttbasic.c **** 		value /= 10;
 8688              		.loc 1 239 3 view .LVU2842
 239:../USER/ttbasic.c **** 		value /= 10;
 8689              		.loc 1 239 30 is_stmt 0 view .LVU2843
 8690 0080 87FB0312 		smull	r1, r2, r7, r3
 8691 0084 D917     		asrs	r1, r3, #31
 8692 0086 C1EBA201 		rsb	r1, r1, r2, asr #2
 8693 008a 01EB8100 		add	r0, r1, r1, lsl #2
 8694 008e A3EB4000 		sub	r0, r3, r0, lsl #1
 8695 0092 3030     		adds	r0, r0, #48
 239:../USER/ttbasic.c **** 		value /= 10;
 8696              		.loc 1 239 15 view .LVU2844
 8697 0094 0CF1FF32 		add	r2, ip, #-1
 8698 0098 D2B2     		uxtb	r2, r2
 8699              	.LVL740:
 239:../USER/ttbasic.c **** 		value /= 10;
 8700              		.loc 1 239 30 view .LVU2845
 8701 009a 40B2     		sxtb	r0, r0
 241:../USER/ttbasic.c **** 
 8702              		.loc 1 241 2 view .LVU2846
 8703 009c 092B     		cmp	r3, #9
 240:../USER/ttbasic.c **** 	} while (value > 0);
 8704              		.loc 1 240 9 view .LVU2847
 8705 009e 09B2     		sxth	r1, r1
 239:../USER/ttbasic.c **** 		value /= 10;
 8706              		.loc 1 239 15 view .LVU2848
 8707 00a0 A854     		strb	r0, [r5, r2]
 240:../USER/ttbasic.c **** 	} while (value > 0);
 8708              		.loc 1 240 3 is_stmt 1 view .LVU2849
 8709              	.LVL741:
 239:../USER/ttbasic.c **** 		value /= 10;
 8710              		.loc 1 239 8 is_stmt 0 view .LVU2850
 8711 00a2 9346     		mov	fp, r2
 241:../USER/ttbasic.c **** 
 8712              		.loc 1 241 2 view .LVU2851
 8713 00a4 EADC     		bgt	.L837
 243:../USER/ttbasic.c **** 		lbuf[--dig] = '-';
 8714              		.loc 1 243 2 is_stmt 1 view .LVU2852
 243:../USER/ttbasic.c **** 		lbuf[--dig] = '-';
 8715              		.loc 1 243 5 is_stmt 0 view .LVU2853
 8716 00a6 BEF1000F 		cmp	lr, #0
 8717 00aa 05D0     		beq	.L848
 244:../USER/ttbasic.c **** 
 8718              		.loc 1 244 3 is_stmt 1 view .LVU2854
 244:../USER/ttbasic.c **** 
 8719              		.loc 1 244 15 is_stmt 0 view .LVU2855
 8720 00ac ACF10202 		sub	r2, ip, #2
 8721              	.LVL742:
 244:../USER/ttbasic.c **** 
 8722              		.loc 1 244 15 view .LVU2856
 8723 00b0 D2B2     		uxtb	r2, r2
 8724              	.LVL743:
 244:../USER/ttbasic.c **** 
 8725              		.loc 1 244 15 view .LVU2857
 8726 00b2 2D20     		movs	r0, #45
 244:../USER/ttbasic.c **** 
 8727              		.loc 1 244 8 view .LVU2858
 8728 00b4 9346     		mov	fp, r2
 244:../USER/ttbasic.c **** 
 8729              		.loc 1 244 15 view .LVU2859
 8730 00b6 A854     		strb	r0, [r5, r2]
 8731              	.L848:
 8732              	.LVL744:
 246:../USER/ttbasic.c **** 		c_putch(' '); // Fill space
 8733              		.loc 1 246 8 view .LVU2860
 8734 00b8 D2F1060A 		rsbs	r10, r2, #6
 8735 00bc 45D5     		bpl	.L845
 240:../USER/ttbasic.c **** 	} while (value > 0);
 8736              		.loc 1 240 9 view .LVU2861
 8737 00be 4FF00009 		mov	r9, #0
 8738              	.LVL745:
 8739              	.L825:
 247:../USER/ttbasic.c **** 		d--;
 8740              		.loc 1 247 3 is_stmt 1 view .LVU2862
 8741              	.LBB786:
 8742              	.LBI786:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8743              		.loc 1 35 6 view .LVU2863
 8744              	.LBB787:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8745              		.loc 1 35 22 view .LVU2864
 8746 00c2 2020     		movs	r0, #32
 8747 00c4 FFF7FEFF 		bl	putch_uart
 8748              	.LVL746:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8749              		.loc 1 35 37 view .LVU2865
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8750              		.loc 1 35 44 is_stmt 0 view .LVU2866
 8751 00c8 2268     		ldr	r2, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8752              		.loc 1 35 37 view .LVU2867
 8753 00ca 9068     		ldr	r0, [r2, #8]
 8754 00cc FFF7FEFF 		bl	fflush
 8755              	.LVL747:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8756              		.loc 1 35 37 view .LVU2868
 8757              	.LBE787:
 8758              	.LBE786:
 248:../USER/ttbasic.c **** 	}
 8759              		.loc 1 248 3 is_stmt 1 view .LVU2869
 8760 00d0 09F1FF33 		add	r3, r9, #-1
 8761 00d4 0FFA83F9 		sxth	r9, r3
 8762              	.LVL748:
 246:../USER/ttbasic.c **** 		c_putch(' '); // Fill space
 8763              		.loc 1 246 8 is_stmt 0 view .LVU2870
 8764 00d8 D145     		cmp	r9, r10
 8765 00da F2DC     		bgt	.L825
 8766 00dc 15F90B00 		ldrsb	r0, [r5, fp]
 250:../USER/ttbasic.c **** }
 8767              		.loc 1 250 2 is_stmt 1 view .LVU2871
 250:../USER/ttbasic.c **** }
 8768              		.loc 1 250 9 is_stmt 0 view .LVU2872
 8769 00e0 AB44     		add	fp, fp, r5
 8770              	.LVL749:
 8771              	.LBB788:
 8772              	.LBI788:
 194:../USER/ttbasic.c **** void c_gets() {
 8773              		.loc 1 194 6 is_stmt 1 view .LVU2873
 8774              	.LBB789:
 194:../USER/ttbasic.c **** void c_gets() {
 8775              		.loc 1 194 36 is_stmt 0 view .LVU2874
 8776 00e2 48B1     		cbz	r0, .L827
 8777              	.LVL750:
 8778              	.L832:
 194:../USER/ttbasic.c **** void c_gets() {
 8779              		.loc 1 194 41 is_stmt 1 view .LVU2875
 8780              	.LBB790:
 8781              	.LBI790:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8782              		.loc 1 35 6 view .LVU2876
 8783              	.LBB791:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8784              		.loc 1 35 22 view .LVU2877
 8785 00e4 FFF7FEFF 		bl	putch_uart
 8786              	.LVL751:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8787              		.loc 1 35 37 view .LVU2878
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8788              		.loc 1 35 44 is_stmt 0 view .LVU2879
 8789 00e8 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8790              		.loc 1 35 37 view .LVU2880
 8791 00ea 9868     		ldr	r0, [r3, #8]
 8792 00ec FFF7FEFF 		bl	fflush
 8793              	.LVL752:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8794              		.loc 1 35 37 view .LVU2881
 8795              	.LBE791:
 8796              	.LBE790:
 194:../USER/ttbasic.c **** void c_gets() {
 8797              		.loc 1 194 37 view .LVU2882
 8798 00f0 1BF9010F 		ldrsb	r0, [fp, #1]!
 8799              	.LVL753:
 194:../USER/ttbasic.c **** void c_gets() {
 8800              		.loc 1 194 36 view .LVU2883
 8801 00f4 0028     		cmp	r0, #0
 8802 00f6 F5D1     		bne	.L832
 8803              	.LVL754:
 8804              	.L827:
 194:../USER/ttbasic.c **** void c_gets() {
 8805              		.loc 1 194 36 view .LVU2884
 8806              	.LBE789:
 8807              	.LBE788:
 8808              	.LBE793:
 8809              	.LBE797:
1266:../USER/ttbasic.c **** 			putlist(clp + 3);
 8810              		.loc 1 1266 4 is_stmt 1 view .LVU2885
 8811              	.LBB798:
 8812              	.LBI798:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8813              		.loc 1 35 6 view .LVU2886
 8814              	.LBB799:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8815              		.loc 1 35 22 view .LVU2887
 8816 00f8 2020     		movs	r0, #32
 8817 00fa FFF7FEFF 		bl	putch_uart
 8818              	.LVL755:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8819              		.loc 1 35 37 view .LVU2888
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8820              		.loc 1 35 44 is_stmt 0 view .LVU2889
 8821 00fe 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8822              		.loc 1 35 37 view .LVU2890
 8823 0100 9868     		ldr	r0, [r3, #8]
 8824 0102 FFF7FEFF 		bl	fflush
 8825              	.LVL756:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8826              		.loc 1 35 37 view .LVU2891
 8827              	.LBE799:
 8828              	.LBE798:
1267:../USER/ttbasic.c **** 			if (err)
 8829              		.loc 1 1267 4 is_stmt 1 view .LVU2892
 8830 0106 3068     		ldr	r0, [r6]
 8831 0108 0330     		adds	r0, r0, #3
 8832 010a FFF7FEFF 		bl	putlist
 8833              	.LVL757:
1268:../USER/ttbasic.c **** 				break;
 8834              		.loc 1 1268 4 view .LVU2893
1268:../USER/ttbasic.c **** 				break;
 8835              		.loc 1 1268 7 is_stmt 0 view .LVU2894
 8836 010e 194B     		ldr	r3, .L852+24
 8837 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8838 0112 002B     		cmp	r3, #0
 8839 0114 9AD1     		bne	.L814
1270:../USER/ttbasic.c **** 			clp += *clp;
 8840              		.loc 1 1270 4 is_stmt 1 view .LVU2895
 8841              	.LBB800:
 8842              	.LBI800:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 8843              		.loc 1 53 6 view .LVU2896
 8844              	.LBE800:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 8845              		.loc 1 54 2 view .LVU2897
 8846              	.LVL758:
 8847              	.LBB805:
 8848              	.LBB801:
 8849              	.LBI801:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8850              		.loc 1 35 6 view .LVU2898
 8851              	.LBB802:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8852              		.loc 1 35 22 view .LVU2899
 8853 0116 0D20     		movs	r0, #13
 8854 0118 FFF7FEFF 		bl	putch_uart
 8855              	.LVL759:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8856              		.loc 1 35 37 view .LVU2900
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8857              		.loc 1 35 44 is_stmt 0 view .LVU2901
 8858 011c 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8859              		.loc 1 35 37 view .LVU2902
 8860 011e 9868     		ldr	r0, [r3, #8]
 8861 0120 FFF7FEFF 		bl	fflush
 8862              	.LVL760:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8863              		.loc 1 35 37 view .LVU2903
 8864              	.LBE802:
 8865              	.LBE801:
 8866              	.LBE805:
  55:../USER/ttbasic.c **** }
 8867              		.loc 1 55 2 is_stmt 1 view .LVU2904
 8868              	.LBB806:
 8869              	.LBB803:
 8870              	.LBI803:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8871              		.loc 1 35 6 view .LVU2905
 8872              	.LBB804:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8873              		.loc 1 35 22 view .LVU2906
 8874 0124 0A20     		movs	r0, #10
 8875 0126 FFF7FEFF 		bl	putch_uart
 8876              	.LVL761:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8877              		.loc 1 35 37 view .LVU2907
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8878              		.loc 1 35 44 is_stmt 0 view .LVU2908
 8879 012a 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8880              		.loc 1 35 37 view .LVU2909
 8881 012c 9868     		ldr	r0, [r3, #8]
 8882 012e FFF7FEFF 		bl	fflush
 8883              	.LVL762:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 8884              		.loc 1 35 37 view .LVU2910
 8885              	.LBE804:
 8886              	.LBE803:
 8887              	.LBE806:
1271:../USER/ttbasic.c **** 		}
 8888              		.loc 1 1271 4 is_stmt 1 view .LVU2911
1271:../USER/ttbasic.c **** 		}
 8889              		.loc 1 1271 8 is_stmt 0 view .LVU2912
 8890 0132 3368     		ldr	r3, [r6]
1271:../USER/ttbasic.c **** 		}
 8891              		.loc 1 1271 11 view .LVU2913
 8892 0134 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
1271:../USER/ttbasic.c **** 		}
 8893              		.loc 1 1271 8 view .LVU2914
 8894 0136 5A18     		adds	r2, r3, r1
 8895 0138 3260     		str	r2, [r6]
1264:../USER/ttbasic.c **** 			putnum(getlineno(clp), 0);
 8896              		.loc 1 1264 9 view .LVU2915
 8897 013a 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 8898 013c 002B     		cmp	r3, #0
 8899 013e 85D0     		beq	.L814
 8900 0140 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 8901 0142 92F801C0 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 8902 0146 1B02     		lsls	r3, r3, #8
 8903 0148 88E7     		b	.L834
 8904              	.LVL763:
 8905              	.L845:
 8906              	.LBB807:
 8907              	.LBB794:
 250:../USER/ttbasic.c **** }
 8908              		.loc 1 250 2 is_stmt 1 view .LVU2916
 250:../USER/ttbasic.c **** }
 8909              		.loc 1 250 9 is_stmt 0 view .LVU2917
 8910 014a 05EB020B 		add	fp, r5, r2
 8911              	.LVL764:
 8912              	.LBB792:
 194:../USER/ttbasic.c **** void c_gets() {
 8913              		.loc 1 194 6 is_stmt 1 view .LVU2918
 194:../USER/ttbasic.c **** void c_gets() {
 8914              		.loc 1 194 6 is_stmt 0 view .LVU2919
 8915 014e C9E7     		b	.L832
 8916              	.LVL765:
 8917              	.L849:
 194:../USER/ttbasic.c **** void c_gets() {
 8918              		.loc 1 194 6 view .LVU2920
 8919              	.LBE792:
 8920              	.LBE794:
 8921              	.LBE807:
 8922              	.LBB808:
 8923              	.LBI808:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 8924              		.loc 1 437 7 is_stmt 1 view .LVU2921
 8925              	.LBB809:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 8926              		.loc 1 438 2 view .LVU2922
 440:../USER/ttbasic.c **** }
 8927              		.loc 1 440 2 view .LVU2923
 440:../USER/ttbasic.c **** }
 8928              		.loc 1 440 21 is_stmt 0 view .LVU2924
 8929 0150 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 8930              		.loc 1 440 9 view .LVU2925
 8931 0152 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 8932              		.loc 1 440 19 view .LVU2926
 8933 0154 44EA0224 		orr	r4, r4, r2, lsl #8
 8934 0158 24B2     		sxth	r4, r4
 8935              	.LVL766:
 440:../USER/ttbasic.c **** }
 8936              		.loc 1 440 19 view .LVU2927
 8937              	.LBE809:
 8938              	.LBE808:
 8939 015a 5AE7     		b	.L815
 8940              	.L853:
 8941              		.align	2
 8942              	.L852:
 8943 015c 00000000 		.word	cip
 8944 0160 00000000 		.word	listbuf
 8945 0164 00000000 		.word	clp
 8946 0168 00000000 		.word	lbuf
 8947 016c 00000000 		.word	_impure_ptr
 8948 0170 67666666 		.word	1717986919
 8949 0174 00000000 		.word	err
 8950              		.cfi_endproc
 8951              	.LFE42:
 8953              		.section	.text.inew,"ax",%progbits
 8954              		.align	1
 8955              		.p2align 2,,3
 8956              		.global	inew
 8957              		.syntax unified
 8958              		.thumb
 8959              		.thumb_func
 8960              		.fpu softvfp
 8962              	inew:
 8963              	.LFB43:
1274:../USER/ttbasic.c **** 
1275:../USER/ttbasic.c **** //NEW command handler
1276:../USER/ttbasic.c **** void inew(void) {
 8964              		.loc 1 1276 17 is_stmt 1 view -0
 8965              		.cfi_startproc
 8966              		@ args = 0, pretend = 0, frame = 0
 8967              		@ frame_needed = 0, uses_anonymous_args = 0
1277:../USER/ttbasic.c **** 	unsigned char i;
 8968              		.loc 1 1277 2 view .LVU2929
1278:../USER/ttbasic.c **** 
1279:../USER/ttbasic.c **** 	for (i = 0; i < 26; i++)
 8969              		.loc 1 1279 2 view .LVU2930
 8970              	.LVL767:
1276:../USER/ttbasic.c **** 	unsigned char i;
 8971              		.loc 1 1276 17 is_stmt 0 view .LVU2931
 8972 0000 10B5     		push	{r4, lr}
 8973              		.cfi_def_cfa_offset 8
 8974              		.cfi_offset 4, -8
 8975              		.cfi_offset 14, -4
 8976 0002 3422     		movs	r2, #52
 8977 0004 0021     		movs	r1, #0
 8978 0006 0948     		ldr	r0, .L856
 8979 0008 FFF7FEFF 		bl	memset
 8980              	.LVL768:
 8981 000c 8022     		movs	r2, #128
 8982 000e 0021     		movs	r1, #0
 8983 0010 0748     		ldr	r0, .L856+4
 8984 0012 FFF7FEFF 		bl	memset
 8985              	.LVL769:
1280:../USER/ttbasic.c **** 		var[i] = 0;
1281:../USER/ttbasic.c **** 	for (i = 0; i < SIZE_ARRY; i++)
1282:../USER/ttbasic.c **** 		arr[i] = 0;
1283:../USER/ttbasic.c **** 	gstki = 0;
 8986              		.loc 1 1283 2 is_stmt 1 view .LVU2932
 8987              		.loc 1 1283 8 is_stmt 0 view .LVU2933
 8988 0016 0023     		movs	r3, #0
1284:../USER/ttbasic.c **** 	lstki = 0;
1285:../USER/ttbasic.c **** 	*listbuf = 0;
 8989              		.loc 1 1285 11 view .LVU2934
 8990 0018 064A     		ldr	r2, .L856+8
1284:../USER/ttbasic.c **** 	lstki = 0;
 8991              		.loc 1 1284 8 view .LVU2935
 8992 001a 0748     		ldr	r0, .L856+12
1283:../USER/ttbasic.c **** 	lstki = 0;
 8993              		.loc 1 1283 8 view .LVU2936
 8994 001c 074C     		ldr	r4, .L856+16
1286:../USER/ttbasic.c **** 	clp = listbuf;
 8995              		.loc 1 1286 6 view .LVU2937
 8996 001e 0849     		ldr	r1, .L856+20
1284:../USER/ttbasic.c **** 	lstki = 0;
 8997              		.loc 1 1284 8 view .LVU2938
 8998 0020 0370     		strb	r3, [r0]
1285:../USER/ttbasic.c **** 	clp = listbuf;
 8999              		.loc 1 1285 11 view .LVU2939
 9000 0022 1370     		strb	r3, [r2]
1283:../USER/ttbasic.c **** 	lstki = 0;
 9001              		.loc 1 1283 8 view .LVU2940
 9002 0024 2370     		strb	r3, [r4]
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9003              		.loc 1 1284 2 is_stmt 1 view .LVU2941
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9004              		.loc 1 1285 2 view .LVU2942
 9005              		.loc 1 1286 2 view .LVU2943
 9006              		.loc 1 1286 6 is_stmt 0 view .LVU2944
 9007 0026 0A60     		str	r2, [r1]
1287:../USER/ttbasic.c **** }
 9008              		.loc 1 1287 1 view .LVU2945
 9009 0028 10BD     		pop	{r4, pc}
 9010              	.L857:
 9011 002a 00BF     		.align	2
 9012              	.L856:
 9013 002c 00000000 		.word	var
 9014 0030 00000000 		.word	arr
 9015 0034 00000000 		.word	listbuf
 9016 0038 00000000 		.word	lstki
 9017 003c 00000000 		.word	gstki
 9018 0040 00000000 		.word	clp
 9019              		.cfi_endproc
 9020              	.LFE43:
 9022              		.section	.text.icom,"ax",%progbits
 9023              		.align	1
 9024              		.p2align 2,,3
 9025              		.global	icom
 9026              		.syntax unified
 9027              		.thumb
 9028              		.thumb_func
 9029              		.fpu softvfp
 9031              	icom:
 9032              	.LFB44:
1288:../USER/ttbasic.c **** 
1289:../USER/ttbasic.c **** //Command precessor
1290:../USER/ttbasic.c **** void icom() {
 9033              		.loc 1 1290 13 is_stmt 1 view -0
 9034              		.cfi_startproc
 9035              		@ args = 0, pretend = 0, frame = 0
 9036              		@ frame_needed = 0, uses_anonymous_args = 0
1291:../USER/ttbasic.c **** 	cip = ibuf;
 9037              		.loc 1 1291 2 view .LVU2947
1290:../USER/ttbasic.c **** 	cip = ibuf;
 9038              		.loc 1 1290 13 is_stmt 0 view .LVU2948
 9039 0000 70B5     		push	{r4, r5, r6, lr}
 9040              		.cfi_def_cfa_offset 16
 9041              		.cfi_offset 4, -16
 9042              		.cfi_offset 5, -12
 9043              		.cfi_offset 6, -8
 9044              		.cfi_offset 14, -4
 9045              		.loc 1 1291 6 view .LVU2949
 9046 0002 284B     		ldr	r3, .L878
 9047 0004 284C     		ldr	r4, .L878+4
1292:../USER/ttbasic.c **** 	switch (*cip) {
 9048              		.loc 1 1292 10 view .LVU2950
 9049 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1291:../USER/ttbasic.c **** 	cip = ibuf;
 9050              		.loc 1 1291 6 view .LVU2951
 9051 0008 2360     		str	r3, [r4]
 9052              		.loc 1 1292 2 is_stmt 1 view .LVU2952
 9053 000a 272A     		cmp	r2, #39
 9054 000c 07D0     		beq	.L859
 9055 000e 282A     		cmp	r2, #40
 9056 0010 2AD0     		beq	.L860
 9057 0012 262A     		cmp	r2, #38
 9058 0014 1CD0     		beq	.L875
1293:../USER/ttbasic.c **** 	case I_NEW:
1294:../USER/ttbasic.c **** 		cip++;
1295:../USER/ttbasic.c **** 		if (*cip == I_EOL)
1296:../USER/ttbasic.c **** 			inew();
1297:../USER/ttbasic.c **** 		else
1298:../USER/ttbasic.c **** 			err = ERR_SYNTAX;
1299:../USER/ttbasic.c **** 		break;
1300:../USER/ttbasic.c **** 	case I_LIST:
1301:../USER/ttbasic.c **** 		cip++;
1302:../USER/ttbasic.c **** 		if (*cip == I_EOL || *(cip + 3) == I_EOL)
1303:../USER/ttbasic.c **** 			ilist();
1304:../USER/ttbasic.c **** 		else
1305:../USER/ttbasic.c **** 			err = ERR_SYNTAX;
1306:../USER/ttbasic.c **** 		break;
1307:../USER/ttbasic.c **** 	case I_RUN:
1308:../USER/ttbasic.c **** 		cip++;
1309:../USER/ttbasic.c **** 		irun();
1310:../USER/ttbasic.c **** 		break;
1311:../USER/ttbasic.c **** 	default:
1312:../USER/ttbasic.c **** 		iexe();
 9059              		.loc 1 1312 3 view .LVU2953
1313:../USER/ttbasic.c **** 		break;
1314:../USER/ttbasic.c **** 	}
1315:../USER/ttbasic.c **** }
 9060              		.loc 1 1315 1 is_stmt 0 view .LVU2954
 9061 0016 BDE87040 		pop	{r4, r5, r6, lr}
 9062              		.cfi_remember_state
 9063              		.cfi_restore 14
 9064              		.cfi_restore 6
 9065              		.cfi_restore 5
 9066              		.cfi_restore 4
 9067              		.cfi_def_cfa_offset 0
1312:../USER/ttbasic.c **** 		break;
 9068              		.loc 1 1312 3 view .LVU2955
 9069 001a FFF7FEBF 		b	iexe
 9070              	.LVL770:
 9071              	.L859:
 9072              		.cfi_restore_state
1308:../USER/ttbasic.c **** 		irun();
 9073              		.loc 1 1308 3 is_stmt 1 view .LVU2956
 9074              	.LBB818:
 9075              	.LBB819:
1241:../USER/ttbasic.c **** 	lstki = 0;
 9076              		.loc 1 1241 8 is_stmt 0 view .LVU2957
 9077 001e 0022     		movs	r2, #0
1243:../USER/ttbasic.c **** 
 9078              		.loc 1 1243 6 view .LVU2958
 9079 0020 2248     		ldr	r0, .L878+8
1241:../USER/ttbasic.c **** 	lstki = 0;
 9080              		.loc 1 1241 8 view .LVU2959
 9081 0022 234D     		ldr	r5, .L878+12
 9082              	.LBE819:
 9083              	.LBE818:
1308:../USER/ttbasic.c **** 		irun();
 9084              		.loc 1 1308 6 view .LVU2960
 9085 0024 0133     		adds	r3, r3, #1
 9086              	.LBB822:
 9087              	.LBB820:
1241:../USER/ttbasic.c **** 	lstki = 0;
 9088              		.loc 1 1241 8 view .LVU2961
 9089 0026 2A70     		strb	r2, [r5]
1242:../USER/ttbasic.c **** 	clp = listbuf;
 9090              		.loc 1 1242 8 view .LVU2962
 9091 0028 2249     		ldr	r1, .L878+16
 9092              	.LBE820:
 9093              	.LBE822:
1308:../USER/ttbasic.c **** 		irun();
 9094              		.loc 1 1308 6 view .LVU2963
 9095 002a 2360     		str	r3, [r4]
1309:../USER/ttbasic.c **** 		break;
 9096              		.loc 1 1309 3 is_stmt 1 view .LVU2964
 9097              	.LBB823:
 9098              	.LBI818:
1238:../USER/ttbasic.c **** 	unsigned char* lp;
 9099              		.loc 1 1238 6 view .LVU2965
 9100              	.LBB821:
1239:../USER/ttbasic.c **** 
 9101              		.loc 1 1239 2 view .LVU2966
1241:../USER/ttbasic.c **** 	lstki = 0;
 9102              		.loc 1 1241 2 view .LVU2967
1242:../USER/ttbasic.c **** 	clp = listbuf;
 9103              		.loc 1 1242 2 view .LVU2968
1243:../USER/ttbasic.c **** 
 9104              		.loc 1 1243 6 is_stmt 0 view .LVU2969
 9105 002c 224D     		ldr	r5, .L878+20
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 9106              		.loc 1 1245 8 view .LVU2970
 9107 002e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1242:../USER/ttbasic.c **** 	clp = listbuf;
 9108              		.loc 1 1242 8 view .LVU2971
 9109 0030 0A70     		strb	r2, [r1]
1243:../USER/ttbasic.c **** 
 9110              		.loc 1 1243 2 is_stmt 1 view .LVU2972
1243:../USER/ttbasic.c **** 
 9111              		.loc 1 1243 6 is_stmt 0 view .LVU2973
 9112 0032 2860     		str	r0, [r5]
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 9113              		.loc 1 1245 2 is_stmt 1 view .LVU2974
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 9114              		.loc 1 1245 8 is_stmt 0 view .LVU2975
 9115 0034 5BB1     		cbz	r3, .L858
 9116 0036 214E     		ldr	r6, .L878+24
 9117 0038 02E0     		b	.L866
 9118              	.LVL771:
 9119              	.L876:
1250:../USER/ttbasic.c **** 	}
 9120              		.loc 1 1250 7 view .LVU2976
 9121 003a 2860     		str	r0, [r5]
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 9122              		.loc 1 1245 9 view .LVU2977
 9123 003c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1245:../USER/ttbasic.c **** 		cip = clp + 3;
 9124              		.loc 1 1245 8 view .LVU2978
 9125 003e 33B1     		cbz	r3, .L858
 9126              	.LVL772:
 9127              	.L866:
1246:../USER/ttbasic.c **** 		lp = iexe();
 9128              		.loc 1 1246 3 is_stmt 1 view .LVU2979
1246:../USER/ttbasic.c **** 		lp = iexe();
 9129              		.loc 1 1246 13 is_stmt 0 view .LVU2980
 9130 0040 0330     		adds	r0, r0, #3
1246:../USER/ttbasic.c **** 		lp = iexe();
 9131              		.loc 1 1246 7 view .LVU2981
 9132 0042 2060     		str	r0, [r4]
1247:../USER/ttbasic.c **** 		if (err)
 9133              		.loc 1 1247 3 is_stmt 1 view .LVU2982
1247:../USER/ttbasic.c **** 		if (err)
 9134              		.loc 1 1247 8 is_stmt 0 view .LVU2983
 9135 0044 FFF7FEFF 		bl	iexe
 9136              	.LVL773:
1250:../USER/ttbasic.c **** 	}
 9137              		.loc 1 1250 3 is_stmt 1 view .LVU2984
1248:../USER/ttbasic.c **** 			return;
 9138              		.loc 1 1248 3 view .LVU2985
1248:../USER/ttbasic.c **** 			return;
 9139              		.loc 1 1248 6 is_stmt 0 view .LVU2986
 9140 0048 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 9141 004a 002B     		cmp	r3, #0
 9142 004c F5D0     		beq	.L876
 9143              	.LVL774:
 9144              	.L858:
1248:../USER/ttbasic.c **** 			return;
 9145              		.loc 1 1248 6 view .LVU2987
 9146              	.LBE821:
 9147              	.LBE823:
 9148              		.loc 1 1315 1 view .LVU2988
 9149 004e 70BD     		pop	{r4, r5, r6, pc}
 9150              	.L875:
1301:../USER/ttbasic.c **** 		if (*cip == I_EOL || *(cip + 3) == I_EOL)
 9151              		.loc 1 1301 3 is_stmt 1 view .LVU2989
1302:../USER/ttbasic.c **** 			ilist();
 9152              		.loc 1 1302 6 is_stmt 0 view .LVU2990
 9153 0050 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1301:../USER/ttbasic.c **** 		if (*cip == I_EOL || *(cip + 3) == I_EOL)
 9154              		.loc 1 1301 6 view .LVU2991
 9155 0052 591C     		adds	r1, r3, #1
1302:../USER/ttbasic.c **** 			ilist();
 9156              		.loc 1 1302 6 view .LVU2992
 9157 0054 2C2A     		cmp	r2, #44
1301:../USER/ttbasic.c **** 		if (*cip == I_EOL || *(cip + 3) == I_EOL)
 9158              		.loc 1 1301 6 view .LVU2993
 9159 0056 2160     		str	r1, [r4]
1302:../USER/ttbasic.c **** 			ilist();
 9160              		.loc 1 1302 3 is_stmt 1 view .LVU2994
1302:../USER/ttbasic.c **** 			ilist();
 9161              		.loc 1 1302 6 is_stmt 0 view .LVU2995
 9162 0058 02D0     		beq	.L865
1302:../USER/ttbasic.c **** 			ilist();
 9163              		.loc 1 1302 21 discriminator 1 view .LVU2996
 9164 005a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9165 005c 2C2B     		cmp	r3, #44
 9166 005e 08D1     		bne	.L863
 9167              	.L865:
1303:../USER/ttbasic.c **** 		else
 9168              		.loc 1 1303 4 is_stmt 1 view .LVU2997
 9169              		.loc 1 1315 1 is_stmt 0 view .LVU2998
 9170 0060 BDE87040 		pop	{r4, r5, r6, lr}
 9171              		.cfi_remember_state
 9172              		.cfi_restore 14
 9173              		.cfi_restore 6
 9174              		.cfi_restore 5
 9175              		.cfi_restore 4
 9176              		.cfi_def_cfa_offset 0
1303:../USER/ttbasic.c **** 		else
 9177              		.loc 1 1303 4 view .LVU2999
 9178 0064 FFF7FEBF 		b	ilist
 9179              	.LVL775:
 9180              	.L860:
 9181              		.cfi_restore_state
1294:../USER/ttbasic.c **** 		if (*cip == I_EOL)
 9182              		.loc 1 1294 3 is_stmt 1 view .LVU3000
1295:../USER/ttbasic.c **** 			inew();
 9183              		.loc 1 1295 6 is_stmt 0 view .LVU3001
 9184 0068 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1294:../USER/ttbasic.c **** 		if (*cip == I_EOL)
 9185              		.loc 1 1294 6 view .LVU3002
 9186 006a 0133     		adds	r3, r3, #1
1295:../USER/ttbasic.c **** 			inew();
 9187              		.loc 1 1295 6 view .LVU3003
 9188 006c 2C2A     		cmp	r2, #44
1294:../USER/ttbasic.c **** 		if (*cip == I_EOL)
 9189              		.loc 1 1294 6 view .LVU3004
 9190 006e 2360     		str	r3, [r4]
1295:../USER/ttbasic.c **** 			inew();
 9191              		.loc 1 1295 3 is_stmt 1 view .LVU3005
1295:../USER/ttbasic.c **** 			inew();
 9192              		.loc 1 1295 6 is_stmt 0 view .LVU3006
 9193 0070 03D0     		beq	.L877
 9194              	.L863:
1298:../USER/ttbasic.c **** 		break;
 9195              		.loc 1 1298 4 is_stmt 1 view .LVU3007
1298:../USER/ttbasic.c **** 		break;
 9196              		.loc 1 1298 8 is_stmt 0 view .LVU3008
 9197 0072 1422     		movs	r2, #20
 9198 0074 114B     		ldr	r3, .L878+24
 9199 0076 1A70     		strb	r2, [r3]
 9200              		.loc 1 1315 1 view .LVU3009
 9201 0078 70BD     		pop	{r4, r5, r6, pc}
 9202              	.L877:
 9203 007a 3422     		movs	r2, #52
 9204 007c 0021     		movs	r1, #0
 9205 007e 1048     		ldr	r0, .L878+28
 9206 0080 FFF7FEFF 		bl	memset
 9207              	.LVL776:
 9208 0084 8022     		movs	r2, #128
 9209 0086 0021     		movs	r1, #0
 9210 0088 0E48     		ldr	r0, .L878+32
 9211 008a FFF7FEFF 		bl	memset
 9212              	.LVL777:
 9213              	.LBB824:
 9214              	.LBI824:
1290:../USER/ttbasic.c **** 	cip = ibuf;
 9215              		.loc 1 1290 6 is_stmt 1 view .LVU3010
 9216              	.LBB825:
 9217              	.LBB826:
1283:../USER/ttbasic.c **** 	lstki = 0;
 9218              		.loc 1 1283 2 view .LVU3011
1283:../USER/ttbasic.c **** 	lstki = 0;
 9219              		.loc 1 1283 8 is_stmt 0 view .LVU3012
 9220 008e 0023     		movs	r3, #0
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9221              		.loc 1 1285 11 view .LVU3013
 9222 0090 064A     		ldr	r2, .L878+8
1283:../USER/ttbasic.c **** 	lstki = 0;
 9223              		.loc 1 1283 8 view .LVU3014
 9224 0092 074C     		ldr	r4, .L878+12
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9225              		.loc 1 1284 8 view .LVU3015
 9226 0094 0748     		ldr	r0, .L878+16
1286:../USER/ttbasic.c **** }
 9227              		.loc 1 1286 6 view .LVU3016
 9228 0096 0849     		ldr	r1, .L878+20
1283:../USER/ttbasic.c **** 	lstki = 0;
 9229              		.loc 1 1283 8 view .LVU3017
 9230 0098 2370     		strb	r3, [r4]
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9231              		.loc 1 1284 2 is_stmt 1 view .LVU3018
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9232              		.loc 1 1284 8 is_stmt 0 view .LVU3019
 9233 009a 0370     		strb	r3, [r0]
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9234              		.loc 1 1285 2 is_stmt 1 view .LVU3020
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9235              		.loc 1 1285 11 is_stmt 0 view .LVU3021
 9236 009c 1370     		strb	r3, [r2]
1286:../USER/ttbasic.c **** }
 9237              		.loc 1 1286 2 is_stmt 1 view .LVU3022
1286:../USER/ttbasic.c **** }
 9238              		.loc 1 1286 6 is_stmt 0 view .LVU3023
 9239 009e 0A60     		str	r2, [r1]
 9240              	.LBE826:
 9241              	.LBE825:
 9242              	.LBE824:
 9243              		.loc 1 1315 1 view .LVU3024
 9244 00a0 70BD     		pop	{r4, r5, r6, pc}
 9245              	.L879:
 9246 00a2 00BF     		.align	2
 9247              	.L878:
 9248 00a4 00000000 		.word	ibuf
 9249 00a8 00000000 		.word	cip
 9250 00ac 00000000 		.word	listbuf
 9251 00b0 00000000 		.word	gstki
 9252 00b4 00000000 		.word	lstki
 9253 00b8 00000000 		.word	clp
 9254 00bc 00000000 		.word	err
 9255 00c0 00000000 		.word	var
 9256 00c4 00000000 		.word	arr
 9257              		.cfi_endproc
 9258              	.LFE44:
 9260              		.section	.text.error,"ax",%progbits
 9261              		.align	1
 9262              		.p2align 2,,3
 9263              		.global	error
 9264              		.syntax unified
 9265              		.thumb
 9266              		.thumb_func
 9267              		.fpu softvfp
 9269              	error:
 9270              	.LFB45:
1316:../USER/ttbasic.c **** 
1317:../USER/ttbasic.c **** // Print OK or error message
1318:../USER/ttbasic.c **** void error() {
 9271              		.loc 1 1318 14 is_stmt 1 view -0
 9272              		.cfi_startproc
 9273              		@ args = 0, pretend = 0, frame = 0
 9274              		@ frame_needed = 0, uses_anonymous_args = 0
1319:../USER/ttbasic.c **** 	if (err) {
 9275              		.loc 1 1319 2 view .LVU3026
1318:../USER/ttbasic.c **** 	if (err) {
 9276              		.loc 1 1318 14 is_stmt 0 view .LVU3027
 9277 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9278              		.cfi_def_cfa_offset 24
 9279              		.cfi_offset 3, -24
 9280              		.cfi_offset 4, -20
 9281              		.cfi_offset 5, -16
 9282              		.cfi_offset 6, -12
 9283              		.cfi_offset 7, -8
 9284              		.cfi_offset 14, -4
 9285              		.loc 1 1319 6 view .LVU3028
 9286 0002 524D     		ldr	r5, .L908
 9287              		.loc 1 1319 5 view .LVU3029
 9288 0004 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 9289 0006 83BB     		cbnz	r3, .L906
 9290 0008 514C     		ldr	r4, .L908+4
 9291              	.L885:
1320:../USER/ttbasic.c **** 		if (cip >= listbuf && cip < listbuf + SIZE_LIST && *clp)
1321:../USER/ttbasic.c **** 		{
1322:../USER/ttbasic.c **** 			newline();
1323:../USER/ttbasic.c **** 			c_puts("LINE:");
1324:../USER/ttbasic.c **** 			putnum(getlineno(clp), 0);
1325:../USER/ttbasic.c **** 			c_putch(' ');
1326:../USER/ttbasic.c **** 			putlist(clp + 3);
1327:../USER/ttbasic.c **** 		}
1328:../USER/ttbasic.c **** 		else
1329:../USER/ttbasic.c **** 		{
1330:../USER/ttbasic.c **** 			newline();
1331:../USER/ttbasic.c **** 			c_puts("YOU TYPE: ");
1332:../USER/ttbasic.c **** 			c_puts(lbuf);
1333:../USER/ttbasic.c **** 		}
1334:../USER/ttbasic.c **** 	}
1335:../USER/ttbasic.c **** 
1336:../USER/ttbasic.c **** 	newline();
 9292              		.loc 1 1336 2 is_stmt 1 view .LVU3030
 9293              	.LBB871:
 9294              	.LBI871:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 9295              		.loc 1 53 6 view .LVU3031
 9296              	.LBE871:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 9297              		.loc 1 54 2 view .LVU3032
 9298              	.LVL778:
 9299              	.LBB876:
 9300              	.LBB872:
 9301              	.LBI872:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9302              		.loc 1 35 6 view .LVU3033
 9303              	.LBB873:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9304              		.loc 1 35 22 view .LVU3034
 9305 000a 0D20     		movs	r0, #13
 9306 000c FFF7FEFF 		bl	putch_uart
 9307              	.LVL779:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9308              		.loc 1 35 37 view .LVU3035
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9309              		.loc 1 35 44 is_stmt 0 view .LVU3036
 9310 0010 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9311              		.loc 1 35 37 view .LVU3037
 9312 0012 9868     		ldr	r0, [r3, #8]
 9313 0014 FFF7FEFF 		bl	fflush
 9314              	.LVL780:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9315              		.loc 1 35 37 view .LVU3038
 9316              	.LBE873:
 9317              	.LBE872:
 9318              	.LBE876:
  55:../USER/ttbasic.c **** }
 9319              		.loc 1 55 2 is_stmt 1 view .LVU3039
 9320              	.LBB877:
 9321              	.LBB874:
 9322              	.LBI874:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9323              		.loc 1 35 6 view .LVU3040
 9324              	.LBB875:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9325              		.loc 1 35 22 view .LVU3041
 9326 0018 0A20     		movs	r0, #10
 9327 001a FFF7FEFF 		bl	putch_uart
 9328              	.LVL781:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9329              		.loc 1 35 37 view .LVU3042
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9330              		.loc 1 35 44 is_stmt 0 view .LVU3043
 9331 001e 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9332              		.loc 1 35 37 view .LVU3044
 9333 0020 9868     		ldr	r0, [r3, #8]
 9334 0022 FFF7FEFF 		bl	fflush
 9335              	.LVL782:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9336              		.loc 1 35 37 view .LVU3045
 9337              	.LBE875:
 9338              	.LBE874:
 9339              	.LBE877:
1337:../USER/ttbasic.c **** 	c_puts(errmsg[err]);
 9340              		.loc 1 1337 2 is_stmt 1 view .LVU3046
 9341 0026 4B4B     		ldr	r3, .L908+8
 9342 0028 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 9343 002a 53F82260 		ldr	r6, [r3, r2, lsl #2]
 9344              	.LVL783:
 9345              	.LBB878:
 9346              	.LBI878:
 194:../USER/ttbasic.c **** void c_gets() {
 9347              		.loc 1 194 6 view .LVU3047
 9348              	.LBB879:
 194:../USER/ttbasic.c **** void c_gets() {
 9349              		.loc 1 194 37 is_stmt 0 view .LVU3048
 9350 002e 96F90000 		ldrsb	r0, [r6]
 194:../USER/ttbasic.c **** void c_gets() {
 9351              		.loc 1 194 36 view .LVU3049
 9352 0032 48B1     		cbz	r0, .L888
 9353              	.LVL784:
 9354              	.L889:
 194:../USER/ttbasic.c **** void c_gets() {
 9355              		.loc 1 194 41 is_stmt 1 view .LVU3050
 9356              	.LBB880:
 9357              	.LBI880:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9358              		.loc 1 35 6 view .LVU3051
 9359              	.LBB881:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9360              		.loc 1 35 22 view .LVU3052
 9361 0034 FFF7FEFF 		bl	putch_uart
 9362              	.LVL785:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9363              		.loc 1 35 37 view .LVU3053
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9364              		.loc 1 35 44 is_stmt 0 view .LVU3054
 9365 0038 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9366              		.loc 1 35 37 view .LVU3055
 9367 003a 9868     		ldr	r0, [r3, #8]
 9368 003c FFF7FEFF 		bl	fflush
 9369              	.LVL786:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9370              		.loc 1 35 37 view .LVU3056
 9371              	.LBE881:
 9372              	.LBE880:
 194:../USER/ttbasic.c **** void c_gets() {
 9373              		.loc 1 194 37 view .LVU3057
 9374 0040 16F9010F 		ldrsb	r0, [r6, #1]!
 9375              	.LVL787:
 194:../USER/ttbasic.c **** void c_gets() {
 9376              		.loc 1 194 36 view .LVU3058
 9377 0044 0028     		cmp	r0, #0
 9378 0046 F5D1     		bne	.L889
 9379              	.LVL788:
 9380              	.L888:
 194:../USER/ttbasic.c **** void c_gets() {
 9381              		.loc 1 194 36 view .LVU3059
 9382              	.LBE879:
 9383              	.LBE878:
1338:../USER/ttbasic.c **** 	newline();
 9384              		.loc 1 1338 2 is_stmt 1 view .LVU3060
 9385              	.LBB882:
 9386              	.LBI882:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 9387              		.loc 1 53 6 view .LVU3061
 9388              	.LBE882:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 9389              		.loc 1 54 2 view .LVU3062
 9390              	.LBB887:
 9391              	.LBB883:
 9392              	.LBI883:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9393              		.loc 1 35 6 view .LVU3063
 9394              	.LBB884:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9395              		.loc 1 35 22 view .LVU3064
 9396 0048 0D20     		movs	r0, #13
 9397 004a FFF7FEFF 		bl	putch_uart
 9398              	.LVL789:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9399              		.loc 1 35 37 view .LVU3065
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9400              		.loc 1 35 44 is_stmt 0 view .LVU3066
 9401 004e 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9402              		.loc 1 35 37 view .LVU3067
 9403 0050 9868     		ldr	r0, [r3, #8]
 9404 0052 FFF7FEFF 		bl	fflush
 9405              	.LVL790:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9406              		.loc 1 35 37 view .LVU3068
 9407              	.LBE884:
 9408              	.LBE883:
 9409              	.LBE887:
  55:../USER/ttbasic.c **** }
 9410              		.loc 1 55 2 is_stmt 1 view .LVU3069
 9411              	.LBB888:
 9412              	.LBB885:
 9413              	.LBI885:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9414              		.loc 1 35 6 view .LVU3070
 9415              	.LBB886:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9416              		.loc 1 35 22 view .LVU3071
 9417 0056 0A20     		movs	r0, #10
 9418 0058 FFF7FEFF 		bl	putch_uart
 9419              	.LVL791:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9420              		.loc 1 35 37 view .LVU3072
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9421              		.loc 1 35 44 is_stmt 0 view .LVU3073
 9422 005c 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9423              		.loc 1 35 37 view .LVU3074
 9424 005e 9868     		ldr	r0, [r3, #8]
 9425 0060 FFF7FEFF 		bl	fflush
 9426              	.LVL792:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9427              		.loc 1 35 37 view .LVU3075
 9428              	.LBE886:
 9429              	.LBE885:
 9430              	.LBE888:
1339:../USER/ttbasic.c **** 	err = 0;
 9431              		.loc 1 1339 2 is_stmt 1 view .LVU3076
 9432              		.loc 1 1339 6 is_stmt 0 view .LVU3077
 9433 0064 0023     		movs	r3, #0
 9434 0066 2B70     		strb	r3, [r5]
1340:../USER/ttbasic.c **** }
 9435              		.loc 1 1340 1 view .LVU3078
 9436 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9437              	.L906:
1320:../USER/ttbasic.c **** 		{
 9438              		.loc 1 1320 3 is_stmt 1 view .LVU3079
1320:../USER/ttbasic.c **** 		{
 9439              		.loc 1 1320 11 is_stmt 0 view .LVU3080
 9440 006a 3B4A     		ldr	r2, .L908+12
1320:../USER/ttbasic.c **** 		{
 9441              		.loc 1 1320 6 view .LVU3081
 9442 006c 3B4B     		ldr	r3, .L908+16
1320:../USER/ttbasic.c **** 		{
 9443              		.loc 1 1320 11 view .LVU3082
 9444 006e 1268     		ldr	r2, [r2]
1320:../USER/ttbasic.c **** 		{
 9445              		.loc 1 1320 6 view .LVU3083
 9446 0070 9A42     		cmp	r2, r3
 9447 0072 3BD3     		bcc	.L882
1320:../USER/ttbasic.c **** 		{
 9448              		.loc 1 1320 22 discriminator 1 view .LVU3084
 9449 0074 03F50063 		add	r3, r3, #2048
 9450 0078 9A42     		cmp	r2, r3
 9451 007a 37D2     		bcs	.L882
1320:../USER/ttbasic.c **** 		{
 9452              		.loc 1 1320 54 discriminator 2 view .LVU3085
 9453 007c 384F     		ldr	r7, .L908+20
 9454 007e 3B68     		ldr	r3, [r7]
1320:../USER/ttbasic.c **** 		{
 9455              		.loc 1 1320 51 discriminator 2 view .LVU3086
 9456 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9457 0082 002B     		cmp	r3, #0
 9458 0084 32D0     		beq	.L882
1322:../USER/ttbasic.c **** 			c_puts("LINE:");
 9459              		.loc 1 1322 4 is_stmt 1 view .LVU3087
 9460              	.LBB889:
 9461              	.LBI889:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 9462              		.loc 1 53 6 view .LVU3088
 9463              	.LBE889:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 9464              		.loc 1 54 2 view .LVU3089
 9465              	.LVL793:
 9466              	.LBB898:
 9467              	.LBB890:
 9468              	.LBI890:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9469              		.loc 1 35 6 view .LVU3090
 9470              	.LBB891:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9471              		.loc 1 35 22 view .LVU3091
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9472              		.loc 1 35 44 is_stmt 0 view .LVU3092
 9473 0086 324C     		ldr	r4, .L908+4
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9474              		.loc 1 35 22 view .LVU3093
 9475 0088 0D20     		movs	r0, #13
 9476 008a FFF7FEFF 		bl	putch_uart
 9477              	.LVL794:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9478              		.loc 1 35 37 is_stmt 1 view .LVU3094
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9479              		.loc 1 35 44 is_stmt 0 view .LVU3095
 9480 008e 2368     		ldr	r3, [r4]
 9481              	.LBE891:
 9482              	.LBE890:
 9483              	.LBB893:
 9484              	.LBB894:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9485              		.loc 1 35 37 view .LVU3096
 9486 0090 344E     		ldr	r6, .L908+24
 9487              	.LBE894:
 9488              	.LBE893:
 9489              	.LBB896:
 9490              	.LBB892:
 9491 0092 9868     		ldr	r0, [r3, #8]
 9492 0094 FFF7FEFF 		bl	fflush
 9493              	.LVL795:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9494              		.loc 1 35 37 view .LVU3097
 9495              	.LBE892:
 9496              	.LBE896:
 9497              	.LBE898:
  55:../USER/ttbasic.c **** }
 9498              		.loc 1 55 2 is_stmt 1 view .LVU3098
 9499              	.LBB899:
 9500              	.LBB897:
 9501              	.LBI893:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9502              		.loc 1 35 6 view .LVU3099
 9503              	.LBB895:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9504              		.loc 1 35 22 view .LVU3100
 9505 0098 0A20     		movs	r0, #10
 9506 009a FFF7FEFF 		bl	putch_uart
 9507              	.LVL796:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9508              		.loc 1 35 37 view .LVU3101
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9509              		.loc 1 35 44 is_stmt 0 view .LVU3102
 9510 009e 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9511              		.loc 1 35 37 view .LVU3103
 9512 00a0 9868     		ldr	r0, [r3, #8]
 9513 00a2 FFF7FEFF 		bl	fflush
 9514              	.LVL797:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9515              		.loc 1 35 37 view .LVU3104
 9516              	.LBE895:
 9517              	.LBE897:
 9518              	.LBE899:
 9519              	.LBB900:
 9520              	.LBB901:
 194:../USER/ttbasic.c **** void c_gets() {
 9521              		.loc 1 194 37 view .LVU3105
 9522 00a6 4C20     		movs	r0, #76
 9523              	.LVL798:
 9524              	.L883:
 194:../USER/ttbasic.c **** void c_gets() {
 9525              		.loc 1 194 41 is_stmt 1 view .LVU3106
 9526              	.LBB902:
 9527              	.LBI902:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9528              		.loc 1 35 6 view .LVU3107
 9529              	.LBB903:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9530              		.loc 1 35 22 view .LVU3108
 9531 00a8 FFF7FEFF 		bl	putch_uart
 9532              	.LVL799:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9533              		.loc 1 35 37 view .LVU3109
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9534              		.loc 1 35 44 is_stmt 0 view .LVU3110
 9535 00ac 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9536              		.loc 1 35 37 view .LVU3111
 9537 00ae 9868     		ldr	r0, [r3, #8]
 9538 00b0 FFF7FEFF 		bl	fflush
 9539              	.LVL800:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9540              		.loc 1 35 37 view .LVU3112
 9541              	.LBE903:
 9542              	.LBE902:
 194:../USER/ttbasic.c **** void c_gets() {
 9543              		.loc 1 194 37 view .LVU3113
 9544 00b4 16F9010F 		ldrsb	r0, [r6, #1]!
 9545              	.LVL801:
 194:../USER/ttbasic.c **** void c_gets() {
 9546              		.loc 1 194 36 view .LVU3114
 9547 00b8 0028     		cmp	r0, #0
 9548 00ba F5D1     		bne	.L883
 9549              	.LVL802:
 194:../USER/ttbasic.c **** void c_gets() {
 9550              		.loc 1 194 36 view .LVU3115
 9551              	.LBE901:
 9552              	.LBE900:
1324:../USER/ttbasic.c **** 			c_putch(' ');
 9553              		.loc 1 1324 4 is_stmt 1 view .LVU3116
 9554 00bc 3B68     		ldr	r3, [r7]
 9555              	.LVL803:
 9556              	.LBB904:
 9557              	.LBI904:
 437:../USER/ttbasic.c **** 	if (*lp == 0) //end of list
 9558              		.loc 1 437 7 view .LVU3117
 9559              	.LBB905:
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 9560              		.loc 1 438 2 view .LVU3118
 438:../USER/ttbasic.c **** 		return 32767;// max line bumber
 9561              		.loc 1 438 5 is_stmt 0 view .LVU3119
 9562 00be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9563 00c0 002A     		cmp	r2, #0
 9564 00c2 3FD0     		beq	.L890
 440:../USER/ttbasic.c **** }
 9565              		.loc 1 440 2 is_stmt 1 view .LVU3120
 440:../USER/ttbasic.c **** }
 9566              		.loc 1 440 21 is_stmt 0 view .LVU3121
 9567 00c4 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 9568              		.loc 1 440 9 view .LVU3122
 9569 00c6 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 440:../USER/ttbasic.c **** }
 9570              		.loc 1 440 19 view .LVU3123
 9571 00c8 40EA0220 		orr	r0, r0, r2, lsl #8
 9572 00cc 00B2     		sxth	r0, r0
 9573              	.L884:
 9574              	.LVL804:
 440:../USER/ttbasic.c **** }
 9575              		.loc 1 440 19 view .LVU3124
 9576              	.LBE905:
 9577              	.LBE904:
1324:../USER/ttbasic.c **** 			c_putch(' ');
 9578              		.loc 1 1324 4 view .LVU3125
 9579 00ce 0021     		movs	r1, #0
 9580 00d0 FFF7FEFF 		bl	putnum
 9581              	.LVL805:
1325:../USER/ttbasic.c **** 			putlist(clp + 3);
 9582              		.loc 1 1325 4 is_stmt 1 view .LVU3126
 9583              	.LBB907:
 9584              	.LBI907:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9585              		.loc 1 35 6 view .LVU3127
 9586              	.LBB908:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9587              		.loc 1 35 22 view .LVU3128
 9588 00d4 2020     		movs	r0, #32
 9589 00d6 FFF7FEFF 		bl	putch_uart
 9590              	.LVL806:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9591              		.loc 1 35 37 view .LVU3129
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9592              		.loc 1 35 44 is_stmt 0 view .LVU3130
 9593 00da 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9594              		.loc 1 35 37 view .LVU3131
 9595 00dc 9868     		ldr	r0, [r3, #8]
 9596 00de FFF7FEFF 		bl	fflush
 9597              	.LVL807:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9598              		.loc 1 35 37 view .LVU3132
 9599              	.LBE908:
 9600              	.LBE907:
1326:../USER/ttbasic.c **** 		}
 9601              		.loc 1 1326 4 is_stmt 1 view .LVU3133
 9602 00e2 3868     		ldr	r0, [r7]
 9603 00e4 0330     		adds	r0, r0, #3
 9604 00e6 FFF7FEFF 		bl	putlist
 9605              	.LVL808:
 9606 00ea 8EE7     		b	.L885
 9607              	.L882:
1330:../USER/ttbasic.c **** 			c_puts("YOU TYPE: ");
 9608              		.loc 1 1330 4 view .LVU3134
 9609              	.LBB909:
 9610              	.LBI909:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 9611              		.loc 1 53 6 view .LVU3135
 9612              	.LBE909:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 9613              		.loc 1 54 2 view .LVU3136
 9614              	.LVL809:
 9615              	.LBB918:
 9616              	.LBB910:
 9617              	.LBI910:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9618              		.loc 1 35 6 view .LVU3137
 9619              	.LBB911:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9620              		.loc 1 35 22 view .LVU3138
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9621              		.loc 1 35 44 is_stmt 0 view .LVU3139
 9622 00ec 184C     		ldr	r4, .L908+4
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9623              		.loc 1 35 22 view .LVU3140
 9624 00ee 0D20     		movs	r0, #13
 9625 00f0 FFF7FEFF 		bl	putch_uart
 9626              	.LVL810:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9627              		.loc 1 35 37 is_stmt 1 view .LVU3141
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9628              		.loc 1 35 44 is_stmt 0 view .LVU3142
 9629 00f4 2368     		ldr	r3, [r4]
 9630              	.LBE911:
 9631              	.LBE910:
 9632              	.LBB913:
 9633              	.LBB914:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9634              		.loc 1 35 37 view .LVU3143
 9635 00f6 1C4E     		ldr	r6, .L908+28
 9636              	.LBE914:
 9637              	.LBE913:
 9638              	.LBB916:
 9639              	.LBB912:
 9640 00f8 9868     		ldr	r0, [r3, #8]
 9641 00fa FFF7FEFF 		bl	fflush
 9642              	.LVL811:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9643              		.loc 1 35 37 view .LVU3144
 9644              	.LBE912:
 9645              	.LBE916:
 9646              	.LBE918:
  55:../USER/ttbasic.c **** }
 9647              		.loc 1 55 2 is_stmt 1 view .LVU3145
 9648              	.LBB919:
 9649              	.LBB917:
 9650              	.LBI913:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9651              		.loc 1 35 6 view .LVU3146
 9652              	.LBB915:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9653              		.loc 1 35 22 view .LVU3147
 9654 00fe 0A20     		movs	r0, #10
 9655 0100 FFF7FEFF 		bl	putch_uart
 9656              	.LVL812:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9657              		.loc 1 35 37 view .LVU3148
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9658              		.loc 1 35 44 is_stmt 0 view .LVU3149
 9659 0104 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9660              		.loc 1 35 37 view .LVU3150
 9661 0106 9868     		ldr	r0, [r3, #8]
 9662 0108 FFF7FEFF 		bl	fflush
 9663              	.LVL813:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9664              		.loc 1 35 37 view .LVU3151
 9665              	.LBE915:
 9666              	.LBE917:
 9667              	.LBE919:
 9668              	.LBB920:
 9669              	.LBB921:
 194:../USER/ttbasic.c **** void c_gets() {
 9670              		.loc 1 194 37 view .LVU3152
 9671 010c 5920     		movs	r0, #89
 9672              	.LVL814:
 9673              	.L886:
 194:../USER/ttbasic.c **** void c_gets() {
 9674              		.loc 1 194 41 is_stmt 1 view .LVU3153
 9675              	.LBB922:
 9676              	.LBI922:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9677              		.loc 1 35 6 view .LVU3154
 9678              	.LBB923:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9679              		.loc 1 35 22 view .LVU3155
 9680 010e FFF7FEFF 		bl	putch_uart
 9681              	.LVL815:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9682              		.loc 1 35 37 view .LVU3156
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9683              		.loc 1 35 44 is_stmt 0 view .LVU3157
 9684 0112 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9685              		.loc 1 35 37 view .LVU3158
 9686 0114 9868     		ldr	r0, [r3, #8]
 9687 0116 FFF7FEFF 		bl	fflush
 9688              	.LVL816:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9689              		.loc 1 35 37 view .LVU3159
 9690              	.LBE923:
 9691              	.LBE922:
 194:../USER/ttbasic.c **** void c_gets() {
 9692              		.loc 1 194 37 view .LVU3160
 9693 011a 16F9010F 		ldrsb	r0, [r6, #1]!
 9694              	.LVL817:
 194:../USER/ttbasic.c **** void c_gets() {
 9695              		.loc 1 194 36 view .LVU3161
 9696 011e 0028     		cmp	r0, #0
 9697 0120 F5D1     		bne	.L886
 9698              	.LVL818:
 194:../USER/ttbasic.c **** void c_gets() {
 9699              		.loc 1 194 36 view .LVU3162
 9700              	.LBE921:
 9701              	.LBE920:
 9702              	.LBB924:
 9703              	.LBB925:
 194:../USER/ttbasic.c **** void c_gets() {
 9704              		.loc 1 194 37 view .LVU3163
 9705 0122 124E     		ldr	r6, .L908+32
 9706              	.LVL819:
 194:../USER/ttbasic.c **** void c_gets() {
 9707              		.loc 1 194 37 view .LVU3164
 9708 0124 96F90000 		ldrsb	r0, [r6]
 194:../USER/ttbasic.c **** void c_gets() {
 9709              		.loc 1 194 36 view .LVU3165
 9710 0128 0028     		cmp	r0, #0
 9711 012a 3FF46EAF 		beq	.L885
 9712              	.LVL820:
 9713              	.L887:
 194:../USER/ttbasic.c **** void c_gets() {
 9714              		.loc 1 194 41 is_stmt 1 view .LVU3166
 9715              	.LBB926:
 9716              	.LBI926:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9717              		.loc 1 35 6 view .LVU3167
 9718              	.LBB927:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9719              		.loc 1 35 22 view .LVU3168
 9720 012e FFF7FEFF 		bl	putch_uart
 9721              	.LVL821:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9722              		.loc 1 35 37 view .LVU3169
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9723              		.loc 1 35 44 is_stmt 0 view .LVU3170
 9724 0132 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9725              		.loc 1 35 37 view .LVU3171
 9726 0134 9868     		ldr	r0, [r3, #8]
 9727 0136 FFF7FEFF 		bl	fflush
 9728              	.LVL822:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9729              		.loc 1 35 37 view .LVU3172
 9730              	.LBE927:
 9731              	.LBE926:
 194:../USER/ttbasic.c **** void c_gets() {
 9732              		.loc 1 194 37 view .LVU3173
 9733 013a 16F9010F 		ldrsb	r0, [r6, #1]!
 9734              	.LVL823:
 194:../USER/ttbasic.c **** void c_gets() {
 9735              		.loc 1 194 36 view .LVU3174
 9736 013e 0028     		cmp	r0, #0
 9737 0140 F5D1     		bne	.L887
 9738 0142 62E7     		b	.L885
 9739              	.LVL824:
 9740              	.L890:
 194:../USER/ttbasic.c **** void c_gets() {
 9741              		.loc 1 194 36 view .LVU3175
 9742              	.LBE925:
 9743              	.LBE924:
 9744              	.LBB928:
 9745              	.LBB906:
 439:../USER/ttbasic.c **** 	return *(lp + 1) | *(lp + 2) << 8;
 9746              		.loc 1 439 10 view .LVU3176
 9747 0144 47F6FF70 		movw	r0, #32767
 9748 0148 C1E7     		b	.L884
 9749              	.L909:
 9750 014a 00BF     		.align	2
 9751              	.L908:
 9752 014c 00000000 		.word	err
 9753 0150 00000000 		.word	_impure_ptr
 9754 0154 00000000 		.word	.LANCHOR2
 9755 0158 00000000 		.word	cip
 9756 015c 00000000 		.word	listbuf
 9757 0160 00000000 		.word	clp
 9758 0164 00000000 		.word	.LC2
 9759 0168 08000000 		.word	.LC3
 9760 016c 00000000 		.word	lbuf
 9761              	.LBE906:
 9762              	.LBE928:
 9763              		.cfi_endproc
 9764              	.LFE45:
 9766              		.section	.text.basic,"ax",%progbits
 9767              		.align	1
 9768              		.p2align 2,,3
 9769              		.global	basic
 9770              		.syntax unified
 9771              		.thumb
 9772              		.thumb_func
 9773              		.fpu softvfp
 9775              	basic:
 9776              	.LFB46:
1341:../USER/ttbasic.c **** 
1342:../USER/ttbasic.c **** /*
1343:../USER/ttbasic.c **** TOYOSHIKI Tiny BASIC
1344:../USER/ttbasic.c **** The BASIC entry point
1345:../USER/ttbasic.c **** */
1346:../USER/ttbasic.c **** void basic() {
 9777              		.loc 1 1346 14 is_stmt 1 view -0
 9778              		.cfi_startproc
 9779              		@ args = 0, pretend = 0, frame = 0
 9780              		@ frame_needed = 0, uses_anonymous_args = 0
1347:../USER/ttbasic.c **** //int main() {
1348:../USER/ttbasic.c **** 	unsigned char len;
 9781              		.loc 1 1348 2 view .LVU3178
1349:../USER/ttbasic.c **** 
1350:../USER/ttbasic.c **** 	inew();
 9782              		.loc 1 1350 2 view .LVU3179
 9783              	.LBB963:
 9784              	.LBI963:
1276:../USER/ttbasic.c **** 	unsigned char i;
 9785              		.loc 1 1276 6 view .LVU3180
 9786              	.LBB964:
1277:../USER/ttbasic.c **** 
 9787              		.loc 1 1277 2 view .LVU3181
1279:../USER/ttbasic.c **** 		var[i] = 0;
 9788              		.loc 1 1279 2 view .LVU3182
 9789              	.LVL825:
1279:../USER/ttbasic.c **** 		var[i] = 0;
 9790              		.loc 1 1279 2 is_stmt 0 view .LVU3183
 9791              	.LBE964:
 9792              	.LBE963:
1346:../USER/ttbasic.c **** //int main() {
 9793              		.loc 1 1346 14 view .LVU3184
 9794 0000 70B5     		push	{r4, r5, r6, lr}
 9795              		.cfi_def_cfa_offset 16
 9796              		.cfi_offset 4, -16
 9797              		.cfi_offset 5, -12
 9798              		.cfi_offset 6, -8
 9799              		.cfi_offset 14, -4
 9800 0002 3422     		movs	r2, #52
 9801 0004 0021     		movs	r1, #0
 9802 0006 4448     		ldr	r0, .L930
 9803 0008 FFF7FEFF 		bl	memset
 9804              	.LVL826:
 9805 000c 8022     		movs	r2, #128
 9806 000e 0021     		movs	r1, #0
 9807 0010 4248     		ldr	r0, .L930+4
 9808 0012 FFF7FEFF 		bl	memset
 9809              	.LVL827:
 9810              	.LBB967:
 9811              	.LBB965:
1283:../USER/ttbasic.c **** 	lstki = 0;
 9812              		.loc 1 1283 2 is_stmt 1 view .LVU3185
1283:../USER/ttbasic.c **** 	lstki = 0;
 9813              		.loc 1 1283 8 is_stmt 0 view .LVU3186
 9814 0016 0023     		movs	r3, #0
 9815              	.LBE965:
 9816              	.LBE967:
 9817              	.LBB968:
 9818              	.LBB969:
 194:../USER/ttbasic.c **** void c_gets() {
 9819              		.loc 1 194 37 view .LVU3187
 9820 0018 5420     		movs	r0, #84
 9821              	.LBE969:
 9822              	.LBE968:
 9823              	.LBB973:
 9824              	.LBB966:
1283:../USER/ttbasic.c **** 	lstki = 0;
 9825              		.loc 1 1283 8 view .LVU3188
 9826 001a 414D     		ldr	r5, .L930+8
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9827              		.loc 1 1284 8 view .LVU3189
 9828 001c 414C     		ldr	r4, .L930+12
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9829              		.loc 1 1285 11 view .LVU3190
 9830 001e 424A     		ldr	r2, .L930+16
1286:../USER/ttbasic.c **** }
 9831              		.loc 1 1286 6 view .LVU3191
 9832 0020 4249     		ldr	r1, .L930+20
1283:../USER/ttbasic.c **** 	lstki = 0;
 9833              		.loc 1 1283 8 view .LVU3192
 9834 0022 2B70     		strb	r3, [r5]
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9835              		.loc 1 1284 2 is_stmt 1 view .LVU3193
1284:../USER/ttbasic.c **** 	*listbuf = 0;
 9836              		.loc 1 1284 8 is_stmt 0 view .LVU3194
 9837 0024 2370     		strb	r3, [r4]
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9838              		.loc 1 1285 2 is_stmt 1 view .LVU3195
1286:../USER/ttbasic.c **** }
 9839              		.loc 1 1286 6 is_stmt 0 view .LVU3196
 9840 0026 424D     		ldr	r5, .L930+24
 9841 0028 424C     		ldr	r4, .L930+28
1285:../USER/ttbasic.c **** 	clp = listbuf;
 9842              		.loc 1 1285 11 view .LVU3197
 9843 002a 1370     		strb	r3, [r2]
1286:../USER/ttbasic.c **** }
 9844              		.loc 1 1286 2 is_stmt 1 view .LVU3198
1286:../USER/ttbasic.c **** }
 9845              		.loc 1 1286 6 is_stmt 0 view .LVU3199
 9846 002c 0A60     		str	r2, [r1]
 9847              	.LVL828:
1286:../USER/ttbasic.c **** }
 9848              		.loc 1 1286 6 view .LVU3200
 9849              	.LBE966:
 9850              	.LBE973:
1351:../USER/ttbasic.c **** 	c_puts("TOYOSHIKI TINY BASIC"); newline();
 9851              		.loc 1 1351 2 is_stmt 1 view .LVU3201
 9852              	.LBB974:
 9853              	.LBI968:
 194:../USER/ttbasic.c **** void c_gets() {
 9854              		.loc 1 194 6 view .LVU3202
 9855              	.L911:
 9856              	.LBB972:
 194:../USER/ttbasic.c **** void c_gets() {
 9857              		.loc 1 194 41 view .LVU3203
 9858              	.LBB970:
 9859              	.LBI970:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9860              		.loc 1 35 6 view .LVU3204
 9861              	.LBB971:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9862              		.loc 1 35 22 view .LVU3205
 9863 002e FFF7FEFF 		bl	putch_uart
 9864              	.LVL829:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9865              		.loc 1 35 37 view .LVU3206
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9866              		.loc 1 35 44 is_stmt 0 view .LVU3207
 9867 0032 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9868              		.loc 1 35 37 view .LVU3208
 9869 0034 9868     		ldr	r0, [r3, #8]
 9870 0036 FFF7FEFF 		bl	fflush
 9871              	.LVL830:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9872              		.loc 1 35 37 view .LVU3209
 9873              	.LBE971:
 9874              	.LBE970:
 194:../USER/ttbasic.c **** void c_gets() {
 9875              		.loc 1 194 37 view .LVU3210
 9876 003a 15F9010F 		ldrsb	r0, [r5, #1]!
 9877              	.LVL831:
 194:../USER/ttbasic.c **** void c_gets() {
 9878              		.loc 1 194 36 view .LVU3211
 9879 003e 0028     		cmp	r0, #0
 9880 0040 F5D1     		bne	.L911
 9881              	.LVL832:
 194:../USER/ttbasic.c **** void c_gets() {
 9882              		.loc 1 194 36 view .LVU3212
 9883              	.LBE972:
 9884              	.LBE974:
 9885              		.loc 1 1351 34 is_stmt 1 view .LVU3213
 9886              	.LBB975:
 9887              	.LBI975:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 9888              		.loc 1 53 6 view .LVU3214
 9889              	.LBE975:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 9890              		.loc 1 54 2 view .LVU3215
 9891              	.LBB984:
 9892              	.LBB976:
 9893              	.LBI976:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9894              		.loc 1 35 6 view .LVU3216
 9895              	.LBB977:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9896              		.loc 1 35 22 view .LVU3217
 9897 0042 0D20     		movs	r0, #13
 9898 0044 FFF7FEFF 		bl	putch_uart
 9899              	.LVL833:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9900              		.loc 1 35 37 view .LVU3218
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9901              		.loc 1 35 44 is_stmt 0 view .LVU3219
 9902 0048 2368     		ldr	r3, [r4]
 9903              	.LBE977:
 9904              	.LBE976:
 9905              	.LBB979:
 9906              	.LBB980:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9907              		.loc 1 35 37 view .LVU3220
 9908 004a 3B4D     		ldr	r5, .L930+32
 9909              	.LBE980:
 9910              	.LBE979:
 9911              	.LBB982:
 9912              	.LBB978:
 9913 004c 9868     		ldr	r0, [r3, #8]
 9914 004e FFF7FEFF 		bl	fflush
 9915              	.LVL834:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9916              		.loc 1 35 37 view .LVU3221
 9917              	.LBE978:
 9918              	.LBE982:
 9919              	.LBE984:
  55:../USER/ttbasic.c **** }
 9920              		.loc 1 55 2 is_stmt 1 view .LVU3222
 9921              	.LBB985:
 9922              	.LBB983:
 9923              	.LBI979:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9924              		.loc 1 35 6 view .LVU3223
 9925              	.LBB981:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9926              		.loc 1 35 22 view .LVU3224
 9927 0052 0A20     		movs	r0, #10
 9928 0054 FFF7FEFF 		bl	putch_uart
 9929              	.LVL835:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9930              		.loc 1 35 37 view .LVU3225
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9931              		.loc 1 35 44 is_stmt 0 view .LVU3226
 9932 0058 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9933              		.loc 1 35 37 view .LVU3227
 9934 005a 9868     		ldr	r0, [r3, #8]
 9935 005c FFF7FEFF 		bl	fflush
 9936              	.LVL836:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9937              		.loc 1 35 37 view .LVU3228
 9938              	.LBE981:
 9939              	.LBE983:
 9940              	.LBE985:
 9941              	.LBB986:
 9942              	.LBB987:
 194:../USER/ttbasic.c **** void c_gets() {
 9943              		.loc 1 194 37 view .LVU3229
 9944 0060 5420     		movs	r0, #84
 9945              	.LVL837:
 9946              	.L912:
 194:../USER/ttbasic.c **** void c_gets() {
 9947              		.loc 1 194 41 is_stmt 1 view .LVU3230
 9948              	.LBB988:
 9949              	.LBI988:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9950              		.loc 1 35 6 view .LVU3231
 9951              	.LBB989:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9952              		.loc 1 35 22 view .LVU3232
 9953 0062 FFF7FEFF 		bl	putch_uart
 9954              	.LVL838:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9955              		.loc 1 35 37 view .LVU3233
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9956              		.loc 1 35 44 is_stmt 0 view .LVU3234
 9957 0066 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9958              		.loc 1 35 37 view .LVU3235
 9959 0068 9868     		ldr	r0, [r3, #8]
 9960 006a FFF7FEFF 		bl	fflush
 9961              	.LVL839:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9962              		.loc 1 35 37 view .LVU3236
 9963              	.LBE989:
 9964              	.LBE988:
 194:../USER/ttbasic.c **** void c_gets() {
 9965              		.loc 1 194 37 view .LVU3237
 9966 006e 15F9010F 		ldrsb	r0, [r5, #1]!
 9967              	.LVL840:
 194:../USER/ttbasic.c **** void c_gets() {
 9968              		.loc 1 194 36 view .LVU3238
 9969 0072 0028     		cmp	r0, #0
 9970 0074 F5D1     		bne	.L912
 9971              	.LBE987:
 9972              	.LBE986:
 9973              	.LBB991:
 9974              	.LBB992:
 194:../USER/ttbasic.c **** void c_gets() {
 9975              		.loc 1 194 37 view .LVU3239
 9976 0076 2020     		movs	r0, #32
 9977              	.LBE992:
 9978              	.LBE991:
 9979              	.LBB996:
 9980              	.LBB990:
 194:../USER/ttbasic.c **** void c_gets() {
 9981              		.loc 1 194 36 view .LVU3240
 9982 0078 304D     		ldr	r5, .L930+36
 9983              	.LVL841:
 9984              	.L913:
 194:../USER/ttbasic.c **** void c_gets() {
 9985              		.loc 1 194 36 view .LVU3241
 9986              	.LBE990:
 9987              	.LBE996:
 9988              	.LBB997:
 9989              	.LBB995:
 194:../USER/ttbasic.c **** void c_gets() {
 9990              		.loc 1 194 41 is_stmt 1 view .LVU3242
 9991              	.LBB993:
 9992              	.LBI993:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9993              		.loc 1 35 6 view .LVU3243
 9994              	.LBB994:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9995              		.loc 1 35 22 view .LVU3244
 9996 007a FFF7FEFF 		bl	putch_uart
 9997              	.LVL842:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9998              		.loc 1 35 37 view .LVU3245
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 9999              		.loc 1 35 44 is_stmt 0 view .LVU3246
 10000 007e 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10001              		.loc 1 35 37 view .LVU3247
 10002 0080 9868     		ldr	r0, [r3, #8]
 10003 0082 FFF7FEFF 		bl	fflush
 10004              	.LVL843:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10005              		.loc 1 35 37 view .LVU3248
 10006              	.LBE994:
 10007              	.LBE993:
 194:../USER/ttbasic.c **** void c_gets() {
 10008              		.loc 1 194 37 view .LVU3249
 10009 0086 15F9010F 		ldrsb	r0, [r5, #1]!
 10010              	.LVL844:
 194:../USER/ttbasic.c **** void c_gets() {
 10011              		.loc 1 194 36 view .LVU3250
 10012 008a 0028     		cmp	r0, #0
 10013 008c F5D1     		bne	.L913
 10014              	.LVL845:
 194:../USER/ttbasic.c **** void c_gets() {
 10015              		.loc 1 194 36 view .LVU3251
 10016              	.LBE995:
 10017              	.LBE997:
1352:../USER/ttbasic.c **** 	c_puts(STR_EDITION);
1353:../USER/ttbasic.c **** 	c_puts(" EDITION"); newline();
 10018              		.loc 1 1353 22 is_stmt 1 view .LVU3252
 10019              	.LBB998:
 10020              	.LBI998:
  53:../USER/ttbasic.c **** 	c_putch(13); //CR
 10021              		.loc 1 53 6 view .LVU3253
 10022              	.LBE998:
  54:../USER/ttbasic.c **** 	c_putch(10); //LF
 10023              		.loc 1 54 2 view .LVU3254
 10024              	.LBB1003:
 10025              	.LBB999:
 10026              	.LBI999:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10027              		.loc 1 35 6 view .LVU3255
 10028              	.LBB1000:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10029              		.loc 1 35 22 view .LVU3256
 10030 008e 0D20     		movs	r0, #13
 10031 0090 FFF7FEFF 		bl	putch_uart
 10032              	.LVL846:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10033              		.loc 1 35 37 view .LVU3257
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10034              		.loc 1 35 44 is_stmt 0 view .LVU3258
 10035 0094 2368     		ldr	r3, [r4]
 10036 0096 2A4D     		ldr	r5, .L930+40
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10037              		.loc 1 35 37 view .LVU3259
 10038 0098 9868     		ldr	r0, [r3, #8]
 10039 009a FFF7FEFF 		bl	fflush
 10040              	.LVL847:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10041              		.loc 1 35 37 view .LVU3260
 10042              	.LBE1000:
 10043              	.LBE999:
 10044              	.LBE1003:
  55:../USER/ttbasic.c **** }
 10045              		.loc 1 55 2 is_stmt 1 view .LVU3261
 10046              	.LBB1004:
 10047              	.LBB1001:
 10048              	.LBI1001:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10049              		.loc 1 35 6 view .LVU3262
 10050              	.LBB1002:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10051              		.loc 1 35 22 view .LVU3263
 10052 009e 0A20     		movs	r0, #10
 10053 00a0 FFF7FEFF 		bl	putch_uart
 10054              	.LVL848:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10055              		.loc 1 35 37 view .LVU3264
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10056              		.loc 1 35 44 is_stmt 0 view .LVU3265
 10057 00a4 2368     		ldr	r3, [r4]
 10058 00a6 274E     		ldr	r6, .L930+44
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10059              		.loc 1 35 37 view .LVU3266
 10060 00a8 9868     		ldr	r0, [r3, #8]
 10061 00aa FFF7FEFF 		bl	fflush
 10062              	.LVL849:
 10063              	.L927:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10064              		.loc 1 35 37 view .LVU3267
 10065              	.LBE1002:
 10066              	.LBE1001:
 10067              	.LBE1004:
1354:../USER/ttbasic.c **** 	error(); // Print OK, and Clear error flag
 10068              		.loc 1 1354 2 is_stmt 1 view .LVU3268
 10069 00ae FFF7FEFF 		bl	error
 10070              	.LVL850:
 10071              	.L914:
1355:../USER/ttbasic.c **** 
1356:../USER/ttbasic.c **** 	// Input 1 line and execute
1357:../USER/ttbasic.c **** 	while (1) {
 10072              		.loc 1 1357 2 view .LVU3269
1358:../USER/ttbasic.c **** 		c_putch('>'); c_putch('>');// Promptx2
 10073              		.loc 1 1358 3 view .LVU3270
 10074              	.LBB1005:
 10075              	.LBI1005:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10076              		.loc 1 35 6 view .LVU3271
 10077              	.LBB1006:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10078              		.loc 1 35 22 view .LVU3272
 10079 00b2 3E20     		movs	r0, #62
 10080 00b4 FFF7FEFF 		bl	putch_uart
 10081              	.LVL851:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10082              		.loc 1 35 37 view .LVU3273
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10083              		.loc 1 35 44 is_stmt 0 view .LVU3274
 10084 00b8 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10085              		.loc 1 35 37 view .LVU3275
 10086 00ba 9868     		ldr	r0, [r3, #8]
 10087 00bc FFF7FEFF 		bl	fflush
 10088              	.LVL852:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10089              		.loc 1 35 37 view .LVU3276
 10090              	.LBE1006:
 10091              	.LBE1005:
 10092              		.loc 1 1358 17 is_stmt 1 view .LVU3277
 10093              	.LBB1007:
 10094              	.LBI1007:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10095              		.loc 1 35 6 view .LVU3278
 10096              	.LBB1008:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10097              		.loc 1 35 22 view .LVU3279
 10098 00c0 3E20     		movs	r0, #62
 10099 00c2 FFF7FEFF 		bl	putch_uart
 10100              	.LVL853:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10101              		.loc 1 35 37 view .LVU3280
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10102              		.loc 1 35 44 is_stmt 0 view .LVU3281
 10103 00c6 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10104              		.loc 1 35 37 view .LVU3282
 10105 00c8 9868     		ldr	r0, [r3, #8]
 10106 00ca FFF7FEFF 		bl	fflush
 10107              	.LVL854:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10108              		.loc 1 35 37 view .LVU3283
 10109              	.LBE1008:
 10110              	.LBE1007:
1359:../USER/ttbasic.c **** 		c_gets(); // Input 1 line
 10111              		.loc 1 1359 3 is_stmt 1 view .LVU3284
 10112 00ce FFF7FEFF 		bl	c_gets
 10113              	.LVL855:
1360:../USER/ttbasic.c **** 
1361:../USER/ttbasic.c **** 		len = toktoi(); // Convert token to i-code
 10114              		.loc 1 1361 3 view .LVU3285
 10115              		.loc 1 1361 9 is_stmt 0 view .LVU3286
 10116 00d2 FFF7FEFF 		bl	toktoi
 10117              	.LVL856:
1362:../USER/ttbasic.c **** 		if (err) { // Error
1363:../USER/ttbasic.c **** 			error(); // Print error message
1364:../USER/ttbasic.c **** 			continue;
1365:../USER/ttbasic.c **** 		}
1366:../USER/ttbasic.c **** 
1367:../USER/ttbasic.c **** 		if (*ibuf == I_NUM) { // Case the top includes line number
 10118              		.loc 1 1367 3 is_stmt 1 view .LVU3287
1368:../USER/ttbasic.c **** 			*ibuf = len; // Change I_NUM to byte length
1369:../USER/ttbasic.c **** 			inslist(); // Insert list
1370:../USER/ttbasic.c **** 			if (err) // Error
1371:../USER/ttbasic.c **** 				error();  // Print error message
1372:../USER/ttbasic.c **** 			continue;
1373:../USER/ttbasic.c **** 		}
1374:../USER/ttbasic.c **** 		if (*ibuf == I_BYE) { c_puts("Return to Mon"); break; }
 10119              		.loc 1 1374 3 view .LVU3288
1375:../USER/ttbasic.c **** 
1376:../USER/ttbasic.c **** 		icom(); // Execute direct
 10120              		.loc 1 1376 3 view .LVU3289
1362:../USER/ttbasic.c **** 			error(); // Print error message
 10121              		.loc 1 1362 3 view .LVU3290
1362:../USER/ttbasic.c **** 			error(); // Print error message
 10122              		.loc 1 1362 6 is_stmt 0 view .LVU3291
 10123 00d6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 10124 00d8 002B     		cmp	r3, #0
 10125 00da E8D1     		bne	.L927
1367:../USER/ttbasic.c **** 			*ibuf = len; // Change I_NUM to byte length
 10126              		.loc 1 1367 7 view .LVU3292
 10127 00dc 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
1367:../USER/ttbasic.c **** 			*ibuf = len; // Change I_NUM to byte length
 10128              		.loc 1 1367 6 view .LVU3293
 10129 00de 292B     		cmp	r3, #41
 10130 00e0 06D0     		beq	.L928
1374:../USER/ttbasic.c **** 
 10131              		.loc 1 1374 6 view .LVU3294
 10132 00e2 132B     		cmp	r3, #19
 10133 00e4 0BD0     		beq	.L929
 10134              		.loc 1 1376 3 view .LVU3295
 10135 00e6 FFF7FEFF 		bl	icom
 10136              	.LVL857:
1377:../USER/ttbasic.c **** 		error(); // Print OK, and Clear error flag
 10137              		.loc 1 1377 3 is_stmt 1 view .LVU3296
 10138 00ea FFF7FEFF 		bl	error
 10139              	.LVL858:
 10140 00ee E0E7     		b	.L914
 10141              	.LVL859:
 10142              	.L928:
1368:../USER/ttbasic.c **** 			inslist(); // Insert list
 10143              		.loc 1 1368 4 view .LVU3297
1368:../USER/ttbasic.c **** 			inslist(); // Insert list
 10144              		.loc 1 1368 10 is_stmt 0 view .LVU3298
 10145 00f0 3070     		strb	r0, [r6]
1369:../USER/ttbasic.c **** 			if (err) // Error
 10146              		.loc 1 1369 4 is_stmt 1 view .LVU3299
 10147 00f2 FFF7FEFF 		bl	inslist
 10148              	.LVL860:
1370:../USER/ttbasic.c **** 				error();  // Print error message
 10149              		.loc 1 1370 4 view .LVU3300
1370:../USER/ttbasic.c **** 				error();  // Print error message
 10150              		.loc 1 1370 7 is_stmt 0 view .LVU3301
 10151 00f6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 10152 00f8 002B     		cmp	r3, #0
 10153 00fa DAD0     		beq	.L914
 10154 00fc D7E7     		b	.L927
 10155              	.LVL861:
 10156              	.L929:
 10157              	.LBB1009:
 10158              	.LBB1010:
 194:../USER/ttbasic.c **** void c_gets() {
 10159              		.loc 1 194 37 view .LVU3302
 10160 00fe 5220     		movs	r0, #82
 10161              	.LVL862:
 194:../USER/ttbasic.c **** void c_gets() {
 10162              		.loc 1 194 37 view .LVU3303
 10163              	.LBE1010:
 10164              	.LBE1009:
 10165 0100 114D     		ldr	r5, .L930+48
 10166              	.L920:
 10167              	.LVL863:
 10168              	.LBB1014:
 10169              	.LBB1013:
 194:../USER/ttbasic.c **** void c_gets() {
 10170              		.loc 1 194 41 is_stmt 1 view .LVU3304
 10171              	.LBB1011:
 10172              	.LBI1011:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10173              		.loc 1 35 6 view .LVU3305
 10174              	.LBB1012:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10175              		.loc 1 35 22 view .LVU3306
 10176 0102 FFF7FEFF 		bl	putch_uart
 10177              	.LVL864:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10178              		.loc 1 35 37 view .LVU3307
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10179              		.loc 1 35 44 is_stmt 0 view .LVU3308
 10180 0106 2368     		ldr	r3, [r4]
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10181              		.loc 1 35 37 view .LVU3309
 10182 0108 9868     		ldr	r0, [r3, #8]
 10183 010a FFF7FEFF 		bl	fflush
 10184              	.LVL865:
  35:../USER/ttbasic.c **** int _getch(){ return getch_uart();}
 10185              		.loc 1 35 37 view .LVU3310
 10186              	.LBE1012:
 10187              	.LBE1011:
 194:../USER/ttbasic.c **** void c_gets() {
 10188              		.loc 1 194 37 view .LVU3311
 10189 010e 15F9010F 		ldrsb	r0, [r5, #1]!
 10190              	.LVL866:
 194:../USER/ttbasic.c **** void c_gets() {
 10191              		.loc 1 194 36 view .LVU3312
 10192 0112 0028     		cmp	r0, #0
 10193 0114 F5D1     		bne	.L920
 10194              	.LBE1013:
 10195              	.LBE1014:
1378:../USER/ttbasic.c **** 	}
1379:../USER/ttbasic.c **** }
 10196              		.loc 1 1379 1 view .LVU3313
 10197 0116 70BD     		pop	{r4, r5, r6, pc}
 10198              	.LVL867:
 10199              	.L931:
 10200              		.loc 1 1379 1 view .LVU3314
 10201              		.align	2
 10202              	.L930:
 10203 0118 00000000 		.word	var
 10204 011c 00000000 		.word	arr
 10205 0120 00000000 		.word	gstki
 10206 0124 00000000 		.word	lstki
 10207 0128 00000000 		.word	listbuf
 10208 012c 00000000 		.word	clp
 10209 0130 00000000 		.word	.LC4
 10210 0134 00000000 		.word	_impure_ptr
 10211 0138 18000000 		.word	.LC5
 10212 013c 28000000 		.word	.LC6
 10213 0140 00000000 		.word	err
 10214 0144 00000000 		.word	ibuf
 10215 0148 34000000 		.word	.LC7
 10216              		.cfi_endproc
 10217              	.LFE46:
 10219              		.comm	err,1,1
 10220              		.comm	lstki,1,1
 10221              		.comm	lstk,60,4
 10222              		.comm	gstki,1,1
 10223              		.comm	gstk,24,4
 10224              		.comm	cip,4,4
 10225              		.comm	clp,4,4
 10226              		.comm	listbuf,2048,4
 10227              		.comm	arr,128,4
 10228              		.comm	var,52,4
 10229              		.comm	ibuf,80,4
 10230              		.comm	lbuf,80,4
 10231              		.global	errmsg
 10232              		.global	i_nsb
 10233              		.global	i_nsa
 10234              		.global	kwtbl
 10235              		.section	.data.errmsg,"aw"
 10236              		.align	2
 10237              		.set	.LANCHOR2,. + 0
 10240              	errmsg:
 10241 0000 00000000 		.word	.LC8
 10242 0004 04000000 		.word	.LC9
 10243 0008 18000000 		.word	.LC10
 10244 000c 24000000 		.word	.LC11
 10245 0010 3C000000 		.word	.LC12
 10246 0014 50000000 		.word	.LC13
 10247 0018 5C000000 		.word	.LC14
 10248 001c 74000000 		.word	.LC15
 10249 0020 8C000000 		.word	.LC16
 10250 0024 A0000000 		.word	.LC17
 10251 0028 B4000000 		.word	.LC18
 10252 002c CC000000 		.word	.LC19
 10253 0030 E0000000 		.word	.LC20
 10254 0034 F8000000 		.word	.LC21
 10255 0038 08010000 		.word	.LC22
 10256 003c 20010000 		.word	.LC23
 10257 0040 38010000 		.word	.LC24
 10258 0044 50010000 		.word	.LC25
 10259 0048 64010000 		.word	.LC26
 10260 004c 74010000 		.word	.LC27
 10261 0050 84010000 		.word	.LC28
 10262 0054 94010000 		.word	.LC29
 10263 0058 A4010000 		.word	.LC30
 10264              		.section	.data.kwtbl,"aw"
 10265              		.align	2
 10266              		.set	.LANCHOR0,. + 0
 10269              	kwtbl:
 10270 0000 B4010000 		.word	.LC31
 10271 0004 BC010000 		.word	.LC32
 10272 0008 C4010000 		.word	.LC33
 10273 000c CC010000 		.word	.LC34
 10274 0010 D0010000 		.word	.LC35
 10275 0014 D4010000 		.word	.LC36
 10276 0018 DC010000 		.word	.LC37
 10277 001c E4010000 		.word	.LC38
 10278 0020 E8010000 		.word	.LC39
 10279 0024 EC010000 		.word	.LC40
 10280 0028 F4010000 		.word	.LC41
 10281 002c FC010000 		.word	.LC42
 10282 0030 04020000 		.word	.LC43
 10283 0034 08020000 		.word	.LC44
 10284 0038 0C020000 		.word	.LC45
 10285 003c 14020000 		.word	.LC46
 10286 0040 1C020000 		.word	.LC47
 10287 0044 24020000 		.word	.LC48
 10288 0048 2C020000 		.word	.LC49
 10289 004c 34020000 		.word	.LC50
 10290 0050 38020000 		.word	.LC51
 10291 0054 3C020000 		.word	.LC52
 10292 0058 40020000 		.word	.LC53
 10293 005c 44020000 		.word	.LC54
 10294 0060 48020000 		.word	.LC55
 10295 0064 4C020000 		.word	.LC56
 10296 0068 50020000 		.word	.LC57
 10297 006c 54020000 		.word	.LC58
 10298 0070 58020000 		.word	.LC59
 10299 0074 5C020000 		.word	.LC60
 10300 0078 60020000 		.word	.LC61
 10301 007c 64020000 		.word	.LC62
 10302 0080 68020000 		.word	.LC63
 10303 0084 6C020000 		.word	.LC64
 10304 0088 70020000 		.word	.LC65
 10305 008c 74020000 		.word	.LC66
 10306 0090 78020000 		.word	.LC67
 10307 0094 7C020000 		.word	.LC68
 10308 0098 84020000 		.word	.LC69
 10309 009c 8C020000 		.word	.LC70
 10310 00a0 90020000 		.word	.LC71
 10311              		.section	.rodata.basic.str1.4,"aMS",%progbits,1
 10312              		.align	2
 10313              	.LC4:
 10314 0000 544F594F 		.ascii	"TOYOSHIKI TINY BASIC\000"
 10314      5348494B 
 10314      49205449 
 10314      4E592042 
 10314      41534943 
 10315 0015 000000   		.space	3
 10316              	.LC5:
 10317 0018 54616E67 		.ascii	"Tang-Nano-4K\000"
 10317      2D4E616E 
 10317      6F2D344B 
 10317      00
 10318 0025 000000   		.space	3
 10319              	.LC6:
 10320 0028 20454449 		.ascii	" EDITION\000"
 10320      54494F4E 
 10320      00
 10321 0031 000000   		.space	3
 10322              	.LC7:
 10323 0034 52657475 		.ascii	"Return to Mon\000"
 10323      726E2074 
 10323      6F204D6F 
 10323      6E00
 10324              		.section	.rodata.error.str1.4,"aMS",%progbits,1
 10325              		.align	2
 10326              	.LC2:
 10327 0000 4C494E45 		.ascii	"LINE:\000"
 10327      3A00
 10328 0006 0000     		.space	2
 10329              	.LC3:
 10330 0008 594F5520 		.ascii	"YOU TYPE: \000"
 10330      54595045 
 10330      3A2000
 10331              		.section	.rodata.i_nsa,"a"
 10332              		.align	2
 10333              		.set	.LANCHOR1,. + 0
 10336              	i_nsa:
 10337 0000 02       		.byte	2
 10338 0001 09       		.byte	9
 10339 0002 14       		.byte	20
 10340 0003 16       		.byte	22
 10341 0004 17       		.byte	23
 10342 0005 18       		.byte	24
 10343 0006 19       		.byte	25
 10344 0007 1A       		.byte	26
 10345 0008 1B       		.byte	27
 10346 0009 1C       		.byte	28
 10347 000a 1D       		.byte	29
 10348 000b 1E       		.byte	30
 10349 000c 1F       		.byte	31
 10350 000d 20       		.byte	32
 10351 000e 21       		.byte	33
 10352 000f 22       		.byte	34
 10353 0010 23       		.byte	35
 10354 0011 24       		.byte	36
 10355 0012 25       		.byte	37
 10356              		.section	.rodata.i_nsb,"a"
 10357              		.align	2
 10360              	i_nsb:
 10361 0000 16       		.byte	22
 10362 0001 17       		.byte	23
 10363 0002 18       		.byte	24
 10364 0003 19       		.byte	25
 10365 0004 1A       		.byte	26
 10366 0005 1B       		.byte	27
 10367 0006 1C       		.byte	28
 10368 0007 1D       		.byte	29
 10369 0008 1E       		.byte	30
 10370 0009 1F       		.byte	31
 10371 000a 20       		.byte	32
 10372 000b 21       		.byte	33
 10373 000c 14       		.byte	20
 10374 000d 15       		.byte	21
 10375 000e 2C       		.byte	44
 10376              		.section	.rodata.iinput.str1.4,"aMS",%progbits,1
 10377              		.align	2
 10378              	.LC0:
 10379 0000 402800   		.ascii	"@(\000"
 10380 0003 00       		.space	1
 10381              	.LC1:
 10382 0004 293A00   		.ascii	"):\000"
 10383              		.section	.rodata.str1.4,"aMS",%progbits,1
 10384              		.align	2
 10385              	.LC8:
 10386 0000 4F4B00   		.ascii	"OK\000"
 10387 0003 00       		.space	1
 10388              	.LC9:
 10389 0004 44657669 		.ascii	"Devision by zero\000"
 10389      73696F6E 
 10389      20627920 
 10389      7A65726F 
 10389      00
 10390 0015 000000   		.space	3
 10391              	.LC10:
 10392 0018 4F766572 		.ascii	"Overflow\000"
 10392      666C6F77 
 10392      00
 10393 0021 000000   		.space	3
 10394              	.LC11:
 10395 0024 53756273 		.ascii	"Subscript out of range\000"
 10395      63726970 
 10395      74206F75 
 10395      74206F66 
 10395      2072616E 
 10396 003b 00       		.space	1
 10397              	.LC12:
 10398 003c 49636F64 		.ascii	"Icode buffer full\000"
 10398      65206275 
 10398      66666572 
 10398      2066756C 
 10398      6C00
 10399 004e 0000     		.space	2
 10400              	.LC13:
 10401 0050 4C697374 		.ascii	"List full\000"
 10401      2066756C 
 10401      6C00
 10402 005a 0000     		.space	2
 10403              	.LC14:
 10404 005c 474F5355 		.ascii	"GOSUB too many nested\000"
 10404      4220746F 
 10404      6F206D61 
 10404      6E79206E 
 10404      65737465 
 10405 0072 0000     		.space	2
 10406              	.LC15:
 10407 0074 52455455 		.ascii	"RETURN stack underflow\000"
 10407      524E2073 
 10407      7461636B 
 10407      20756E64 
 10407      6572666C 
 10408 008b 00       		.space	1
 10409              	.LC16:
 10410 008c 464F5220 		.ascii	"FOR too many nested\000"
 10410      746F6F20 
 10410      6D616E79 
 10410      206E6573 
 10410      74656400 
 10411              	.LC17:
 10412 00a0 4E455854 		.ascii	"NEXT without FOR\000"
 10412      20776974 
 10412      686F7574 
 10412      20464F52 
 10412      00
 10413 00b1 000000   		.space	3
 10414              	.LC18:
 10415 00b4 4E455854 		.ascii	"NEXT without counter\000"
 10415      20776974 
 10415      686F7574 
 10415      20636F75 
 10415      6E746572 
 10416 00c9 000000   		.space	3
 10417              	.LC19:
 10418 00cc 4E455854 		.ascii	"NEXT mismatch FOR\000"
 10418      206D6973 
 10418      6D617463 
 10418      6820464F 
 10418      5200
 10419 00de 0000     		.space	2
 10420              	.LC20:
 10421 00e0 464F5220 		.ascii	"FOR without variable\000"
 10421      77697468 
 10421      6F757420 
 10421      76617269 
 10421      61626C65 
 10422 00f5 000000   		.space	3
 10423              	.LC21:
 10424 00f8 464F5220 		.ascii	"FOR without TO\000"
 10424      77697468 
 10424      6F757420 
 10424      544F00
 10425 0107 00       		.space	1
 10426              	.LC22:
 10427 0108 4C455420 		.ascii	"LET without variable\000"
 10427      77697468 
 10427      6F757420 
 10427      76617269 
 10427      61626C65 
 10428 011d 000000   		.space	3
 10429              	.LC23:
 10430 0120 49462077 		.ascii	"IF without condition\000"
 10430      6974686F 
 10430      75742063 
 10430      6F6E6469 
 10430      74696F6E 
 10431 0135 000000   		.space	3
 10432              	.LC24:
 10433 0138 556E6465 		.ascii	"Undefined line number\000"
 10433      66696E65 
 10433      64206C69 
 10433      6E65206E 
 10433      756D6265 
 10434 014e 0000     		.space	2
 10435              	.LC25:
 10436 0150 27282720 		.ascii	"'(' or ')' expected\000"
 10436      6F722027 
 10436      29272065 
 10436      78706563 
 10436      74656400 
 10437              	.LC26:
 10438 0164 273D2720 		.ascii	"'=' expected\000"
 10438      65787065 
 10438      63746564 
 10438      00
 10439 0171 000000   		.space	3
 10440              	.LC27:
 10441 0174 496C6C65 		.ascii	"Illegal command\000"
 10441      67616C20 
 10441      636F6D6D 
 10441      616E6400 
 10442              	.LC28:
 10443 0184 53796E74 		.ascii	"Syntax error\000"
 10443      61782065 
 10443      72726F72 
 10443      00
 10444 0191 000000   		.space	3
 10445              	.LC29:
 10446 0194 496E7465 		.ascii	"Internal error\000"
 10446      726E616C 
 10446      20657272 
 10446      6F7200
 10447 01a3 00       		.space	1
 10448              	.LC30:
 10449 01a4 41626F72 		.ascii	"Abort by [ESC]\000"
 10449      74206279 
 10449      205B4553 
 10449      435D00
 10450 01b3 00       		.space	1
 10451              	.LC31:
 10452 01b4 474F544F 		.ascii	"GOTO\000"
 10452      00
 10453 01b9 000000   		.space	3
 10454              	.LC32:
 10455 01bc 474F5355 		.ascii	"GOSUB\000"
 10455      4200
 10456 01c2 0000     		.space	2
 10457              	.LC33:
 10458 01c4 52455455 		.ascii	"RETURN\000"
 10458      524E00
 10459 01cb 00       		.space	1
 10460              	.LC34:
 10461 01cc 464F5200 		.ascii	"FOR\000"
 10462              	.LC35:
 10463 01d0 544F00   		.ascii	"TO\000"
 10464 01d3 00       		.space	1
 10465              	.LC36:
 10466 01d4 53544550 		.ascii	"STEP\000"
 10466      00
 10467 01d9 000000   		.space	3
 10468              	.LC37:
 10469 01dc 4E455854 		.ascii	"NEXT\000"
 10469      00
 10470 01e1 000000   		.space	3
 10471              	.LC38:
 10472 01e4 494600   		.ascii	"IF\000"
 10473 01e7 00       		.space	1
 10474              	.LC39:
 10475 01e8 52454D00 		.ascii	"REM\000"
 10476              	.LC40:
 10477 01ec 53544F50 		.ascii	"STOP\000"
 10477      00
 10478 01f1 000000   		.space	3
 10479              	.LC41:
 10480 01f4 494E5055 		.ascii	"INPUT\000"
 10480      5400
 10481 01fa 0000     		.space	2
 10482              	.LC42:
 10483 01fc 5052494E 		.ascii	"PRINT\000"
 10483      5400
 10484 0202 0000     		.space	2
 10485              	.LC43:
 10486 0204 4C455400 		.ascii	"LET\000"
 10487              	.LC44:
 10488 0208 3F00     		.ascii	"?\000"
 10489 020a 0000     		.space	2
 10490              	.LC45:
 10491 020c 50534554 		.ascii	"PSET\000"
 10491      00
 10492 0211 000000   		.space	3
 10493              	.LC46:
 10494 0214 4C494E45 		.ascii	"LINE\000"
 10494      00
 10495 0219 000000   		.space	3
 10496              	.LC47:
 10497 021c 43495243 		.ascii	"CIRCLE\000"
 10497      4C4500
 10498 0223 00       		.space	1
 10499              	.LC48:
 10500 0224 5041494E 		.ascii	"PAINT\000"
 10500      5400
 10501 022a 0000     		.space	2
 10502              	.LC49:
 10503 022c 474F5859 		.ascii	"GOXY\000"
 10503      00
 10504 0231 000000   		.space	3
 10505              	.LC50:
 10506 0234 42594500 		.ascii	"BYE\000"
 10507              	.LC51:
 10508 0238 2C00     		.ascii	",\000"
 10509 023a 0000     		.space	2
 10510              	.LC52:
 10511 023c 3B00     		.ascii	";\000"
 10512 023e 0000     		.space	2
 10513              	.LC53:
 10514 0240 2D00     		.ascii	"-\000"
 10515 0242 0000     		.space	2
 10516              	.LC54:
 10517 0244 2B00     		.ascii	"+\000"
 10518 0246 0000     		.space	2
 10519              	.LC55:
 10520 0248 2A00     		.ascii	"*\000"
 10521 024a 0000     		.space	2
 10522              	.LC56:
 10523 024c 2F00     		.ascii	"/\000"
 10524 024e 0000     		.space	2
 10525              	.LC57:
 10526 0250 2800     		.ascii	"(\000"
 10527 0252 0000     		.space	2
 10528              	.LC58:
 10529 0254 2900     		.ascii	")\000"
 10530 0256 0000     		.space	2
 10531              	.LC59:
 10532 0258 3E3D00   		.ascii	">=\000"
 10533 025b 00       		.space	1
 10534              	.LC60:
 10535 025c 2300     		.ascii	"#\000"
 10536 025e 0000     		.space	2
 10537              	.LC61:
 10538 0260 3E00     		.ascii	">\000"
 10539 0262 0000     		.space	2
 10540              	.LC62:
 10541 0264 3D00     		.ascii	"=\000"
 10542 0266 0000     		.space	2
 10543              	.LC63:
 10544 0268 3C3D00   		.ascii	"<=\000"
 10545 026b 00       		.space	1
 10546              	.LC64:
 10547 026c 3C00     		.ascii	"<\000"
 10548 026e 0000     		.space	2
 10549              	.LC65:
 10550 0270 4000     		.ascii	"@\000"
 10551 0272 0000     		.space	2
 10552              	.LC66:
 10553 0274 524E4400 		.ascii	"RND\000"
 10554              	.LC67:
 10555 0278 41425300 		.ascii	"ABS\000"
 10556              	.LC68:
 10557 027c 53495A45 		.ascii	"SIZE\000"
 10557      00
 10558 0281 000000   		.space	3
 10559              	.LC69:
 10560 0284 4C495354 		.ascii	"LIST\000"
 10560      00
 10561 0289 000000   		.space	3
 10562              	.LC70:
 10563 028c 52554E00 		.ascii	"RUN\000"
 10564              	.LC71:
 10565 0290 4E455700 		.ascii	"NEW\000"
 10566              		.text
 10567              	.Letext0:
 10568              		.file 2 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\machine\\_default_
 10569              		.file 3 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\lib\\gcc\\arm-none-eabi\\8.3.1\\include\\s
 10570              		.file 4 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 10571              		.file 5 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 10572              		.file 6 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 10573              		.file 7 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 10574              		.file 8 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\stdlib.h"
 10575              		.file 9 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\stdio.h"
 10576              		.file 10 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 ttbasic.c
d:\wintmp\cc3Znodm.s:16     .text._putch:00000000 $t
d:\wintmp\cc3Znodm.s:25     .text._putch:00000000 _putch
d:\wintmp\cc3Znodm.s:59     .text._putch:00000014 $d
d:\wintmp\cc3Znodm.s:64     .text._getch:00000000 $t
d:\wintmp\cc3Znodm.s:72     .text._getch:00000000 _getch
d:\wintmp\cc3Znodm.s:87     .text._kbhit:00000000 $t
d:\wintmp\cc3Znodm.s:95     .text._kbhit:00000000 _kbhit
d:\wintmp\cc3Znodm.s:110    .text.newline:00000000 $t
d:\wintmp\cc3Znodm.s:118    .text.newline:00000000 newline
d:\wintmp\cc3Znodm.s:184    .text.newline:00000024 $d
d:\wintmp\cc3Znodm.s:191    .text.getrnd:00000000 $t
d:\wintmp\cc3Znodm.s:199    .text.getrnd:00000000 getrnd
d:\wintmp\cc3Znodm.s:229    .text.sstyle:00000000 $t
d:\wintmp\cc3Znodm.s:237    .text.sstyle:00000000 sstyle
d:\wintmp\cc3Znodm.s:313    .text.c_toupper:00000000 $t
d:\wintmp\cc3Znodm.s:321    .text.c_toupper:00000000 c_toupper
d:\wintmp\cc3Znodm.s:347    .text.c_isprint:00000000 $t
d:\wintmp\cc3Znodm.s:355    .text.c_isprint:00000000 c_isprint
d:\wintmp\cc3Znodm.s:379    .text.c_isspace:00000000 $t
d:\wintmp\cc3Znodm.s:387    .text.c_isspace:00000000 c_isspace
d:\wintmp\cc3Znodm.s:420    .text.c_isdigit:00000000 $t
d:\wintmp\cc3Znodm.s:428    .text.c_isdigit:00000000 c_isdigit
d:\wintmp\cc3Znodm.s:452    .text.c_isalpha:00000000 $t
d:\wintmp\cc3Znodm.s:460    .text.c_isalpha:00000000 c_isalpha
d:\wintmp\cc3Znodm.s:485    .text.c_puts:00000000 $t
d:\wintmp\cc3Znodm.s:493    .text.c_puts:00000000 c_puts
d:\wintmp\cc3Znodm.s:549    .text.c_puts:00000024 $d
d:\wintmp\cc3Znodm.s:554    .text.c_gets:00000000 $t
d:\wintmp\cc3Znodm.s:562    .text.c_gets:00000000 c_gets
d:\wintmp\cc3Znodm.s:873    .text.c_gets:000000c8 $d
                            *COM*:00000050 lbuf
d:\wintmp\cc3Znodm.s:879    .text.putnum:00000000 $t
d:\wintmp\cc3Znodm.s:887    .text.putnum:00000000 putnum
d:\wintmp\cc3Znodm.s:1102   .text.putnum:000000b0 $d
d:\wintmp\cc3Znodm.s:1110   .text.getnum:00000000 $t
d:\wintmp\cc3Znodm.s:1118   .text.getnum:00000000 getnum
d:\wintmp\cc3Znodm.s:1503   .text.getnum:0000011c $d
                            *COM*:00000001 err
d:\wintmp\cc3Znodm.s:1510   .text.toktoi:00000000 $t
d:\wintmp\cc3Znodm.s:1518   .text.toktoi:00000000 toktoi
d:\wintmp\cc3Znodm.s:2250   .text.toktoi:000002dc $d
                            *COM*:00000050 ibuf
d:\wintmp\cc3Znodm.s:2258   .text.getlineno:00000000 $t
d:\wintmp\cc3Znodm.s:2266   .text.getlineno:00000000 getlineno
d:\wintmp\cc3Znodm.s:2299   .text.getlp:00000000 $t
d:\wintmp\cc3Znodm.s:2307   .text.getlp:00000000 getlp
d:\wintmp\cc3Znodm.s:2381   .text.getlp:00000028 $d
                            *COM*:00000800 listbuf
d:\wintmp\cc3Znodm.s:2386   .text.getsize:00000000 $t
d:\wintmp\cc3Znodm.s:2394   .text.getsize:00000000 getsize
d:\wintmp\cc3Znodm.s:2436   .text.getsize:0000001c $d
d:\wintmp\cc3Znodm.s:2442   .text.inslist:00000000 $t
d:\wintmp\cc3Znodm.s:2450   .text.inslist:00000000 inslist
d:\wintmp\cc3Znodm.s:2906   .text.inslist:0000017c $d
d:\wintmp\cc3Znodm.s:2916   .text.putlist:00000000 $t
d:\wintmp\cc3Znodm.s:2924   .text.putlist:00000000 putlist
d:\wintmp\cc3Znodm.s:3533   .text.putlist:000001d8 $d
d:\wintmp\cc3Znodm.s:3541   .text.iexp:00000000 $t
d:\wintmp\cc3Znodm.s:3549   .text.iexp:00000000 iexp
d:\wintmp\cc3Znodm.s:4571   .text.iplus:00000000 iplus
d:\wintmp\cc3Znodm.s:3589   .text.iexp:00000020 $d
d:\wintmp\cc3Znodm.s:3595   .text.iexp:00000026 $t
d:\wintmp\cc3Znodm.s:3731   .text.iexp:00000098 $d
                            *COM*:00000004 cip
d:\wintmp\cc3Znodm.s:3737   .text.getparam:00000000 $t
d:\wintmp\cc3Znodm.s:3745   .text.getparam:00000000 getparam
d:\wintmp\cc3Znodm.s:3814   .text.getparam:00000038 $d
d:\wintmp\cc3Znodm.s:3820   .text.ivalue:00000000 $t
d:\wintmp\cc3Znodm.s:3828   .text.ivalue:00000000 ivalue
d:\wintmp\cc3Znodm.s:3855   .text.ivalue:00000014 $d
d:\wintmp\cc3Znodm.s:4431   .text.ivalue:000001e4 $d
                            *COM*:00000034 var
                            *COM*:00000080 arr
d:\wintmp\cc3Znodm.s:4444   .text.imul:00000000 $t
d:\wintmp\cc3Znodm.s:4452   .text.imul:00000000 imul
d:\wintmp\cc3Znodm.s:4557   .text.imul:00000050 $d
d:\wintmp\cc3Znodm.s:4563   .text.iplus:00000000 $t
d:\wintmp\cc3Znodm.s:4993   .text.iplus:00000138 $d
d:\wintmp\cc3Znodm.s:5001   .text.iprint:00000000 $t
d:\wintmp\cc3Znodm.s:5009   .text.iprint:00000000 iprint
d:\wintmp\cc3Znodm.s:5261   .text.iprint:000000c0 $d
d:\wintmp\cc3Znodm.s:5268   .text.iinput:00000000 $t
d:\wintmp\cc3Znodm.s:5276   .text.iinput:00000000 iinput
d:\wintmp\cc3Znodm.s:5790   .text.iinput:00000190 $d
d:\wintmp\cc3Znodm.s:5801   .text.ivar:00000000 $t
d:\wintmp\cc3Znodm.s:5809   .text.ivar:00000000 ivar
d:\wintmp\cc3Znodm.s:5873   .text.ivar:00000030 $d
d:\wintmp\cc3Znodm.s:5880   .text.iarray:00000000 $t
d:\wintmp\cc3Znodm.s:5888   .text.iarray:00000000 iarray
d:\wintmp\cc3Znodm.s:6137   .text.iarray:000000b0 $d
d:\wintmp\cc3Znodm.s:6147   .text.ilet:00000000 $t
d:\wintmp\cc3Znodm.s:6155   .text.ilet:00000000 ilet
d:\wintmp\cc3Znodm.s:6258   .text.ilet:0000004c $d
d:\wintmp\cc3Znodm.s:6265   .text.chk_sep:00000000 $t
d:\wintmp\cc3Znodm.s:6273   .text.chk_sep:00000000 chk_sep
d:\wintmp\cc3Znodm.s:6297   .text.chk_sep:0000000c $d
d:\wintmp\cc3Znodm.s:6302   .text.ipset:00000000 $t
d:\wintmp\cc3Znodm.s:6310   .text.ipset:00000000 ipset
d:\wintmp\cc3Znodm.s:6417   .text.ipset:00000048 $d
d:\wintmp\cc3Znodm.s:6423   .text.iline:00000000 $t
d:\wintmp\cc3Znodm.s:6431   .text.iline:00000000 iline
d:\wintmp\cc3Znodm.s:6612   .text.iline:00000084 $d
d:\wintmp\cc3Znodm.s:6618   .text.icircle:00000000 $t
d:\wintmp\cc3Znodm.s:6626   .text.icircle:00000000 icircle
d:\wintmp\cc3Znodm.s:6772   .text.icircle:00000064 $d
d:\wintmp\cc3Znodm.s:6778   .text.ipaint:00000000 $t
d:\wintmp\cc3Znodm.s:6786   .text.ipaint:00000000 ipaint
d:\wintmp\cc3Znodm.s:6893   .text.ipaint:00000048 $d
d:\wintmp\cc3Znodm.s:6899   .text.igotoxy:00000000 $t
d:\wintmp\cc3Znodm.s:6907   .text.igotoxy:00000000 igotoxy
d:\wintmp\cc3Znodm.s:7075   .text.igotoxy:00000070 $d
d:\wintmp\cc3Znodm.s:7081   .text.iexe:00000000 $t
d:\wintmp\cc3Znodm.s:7089   .text.iexe:00000000 iexe
d:\wintmp\cc3Znodm.s:7140   .text.iexe:00000020 $d
d:\wintmp\cc3Znodm.s:7183   .text.iexe:00000076 $t
d:\wintmp\cc3Znodm.s:7783   .text.iexe:00000280 $d
                            *COM*:00000001 lstki
                            *COM*:00000004 clp
                            *COM*:0000003c lstk
                            *COM*:00000001 gstki
                            *COM*:00000018 gstk
d:\wintmp\cc3Znodm.s:7797   .text.iexe:000002a4 $t
d:\wintmp\cc3Znodm.s:8401   .text.iexe:000004d4 $d
d:\wintmp\cc3Znodm.s:8412   .text.irun:00000000 $t
d:\wintmp\cc3Znodm.s:8420   .text.irun:00000000 irun
d:\wintmp\cc3Znodm.s:8493   .text.irun:00000034 $d
d:\wintmp\cc3Znodm.s:8503   .text.ilist:00000000 $t
d:\wintmp\cc3Znodm.s:8511   .text.ilist:00000000 ilist
d:\wintmp\cc3Znodm.s:8943   .text.ilist:0000015c $d
d:\wintmp\cc3Znodm.s:8954   .text.inew:00000000 $t
d:\wintmp\cc3Znodm.s:8962   .text.inew:00000000 inew
d:\wintmp\cc3Znodm.s:9013   .text.inew:0000002c $d
d:\wintmp\cc3Znodm.s:9023   .text.icom:00000000 $t
d:\wintmp\cc3Znodm.s:9031   .text.icom:00000000 icom
d:\wintmp\cc3Znodm.s:9248   .text.icom:000000a4 $d
d:\wintmp\cc3Znodm.s:9261   .text.error:00000000 $t
d:\wintmp\cc3Znodm.s:9269   .text.error:00000000 error
d:\wintmp\cc3Znodm.s:9752   .text.error:0000014c $d
d:\wintmp\cc3Znodm.s:9767   .text.basic:00000000 $t
d:\wintmp\cc3Znodm.s:9775   .text.basic:00000000 basic
d:\wintmp\cc3Znodm.s:10203  .text.basic:00000118 $d
d:\wintmp\cc3Znodm.s:10240  .data.errmsg:00000000 errmsg
d:\wintmp\cc3Znodm.s:10360  .rodata.i_nsb:00000000 i_nsb
d:\wintmp\cc3Znodm.s:10336  .rodata.i_nsa:00000000 i_nsa
d:\wintmp\cc3Znodm.s:10269  .data.kwtbl:00000000 kwtbl
d:\wintmp\cc3Znodm.s:10236  .data.errmsg:00000000 $d
d:\wintmp\cc3Znodm.s:10265  .data.kwtbl:00000000 $d
d:\wintmp\cc3Znodm.s:10312  .rodata.basic.str1.4:00000000 $d
d:\wintmp\cc3Znodm.s:10325  .rodata.error.str1.4:00000000 $d
d:\wintmp\cc3Znodm.s:10332  .rodata.i_nsa:00000000 $d
d:\wintmp\cc3Znodm.s:10357  .rodata.i_nsb:00000000 $d
d:\wintmp\cc3Znodm.s:10377  .rodata.iinput.str1.4:00000000 $d
d:\wintmp\cc3Znodm.s:10384  .rodata.str1.4:00000000 $d
d:\wintmp\cc3Znodm.s:3876   .text.ivalue:00000029 $d
d:\wintmp\cc3Znodm.s:3876   .text.ivalue:0000002a $t
                           .group:00000000 wm4.0.881e6aea30f26d002fa34da4862e4bcf
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:00000000 wm4.ieeefp.h.77.5499ed899a78229fbaf6d102924f4714
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18

UNDEFINED SYMBOLS
putch_uart
fflush
_impure_ptr
getch_uart
rand
memcpy
aryex
pset
DLine
DCircle
DPaint
gotoxy
memset
