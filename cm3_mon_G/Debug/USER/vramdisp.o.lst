   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"vramdisp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.set_vramdata_f6.constprop.1,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	set_vramdata_f6.constprop.1:
  25              	.LFB52:
  26              		.file 1 "../USER/vramdisp.c"
   1:../USER/vramdisp.c **** #include "gw1ns4c.h"
   2:../USER/vramdisp.c **** const unsigned char FONT_8x8[];
   3:../USER/vramdisp.c **** 
   4:../USER/vramdisp.c **** extern void putchuart();
   5:../USER/vramdisp.c **** extern void puth2();
   6:../USER/vramdisp.c **** 
   7:../USER/vramdisp.c **** volatile unsigned char pd;
   8:../USER/vramdisp.c **** short aryex[512];
   9:../USER/vramdisp.c **** //unsigned char wddt[37];
  10:../USER/vramdisp.c **** union wddt_t {
  11:../USER/vramdisp.c **** 	unsigned char b[37];
  12:../USER/vramdisp.c **** 	short         s[18];
  13:../USER/vramdisp.c **** 	unsigned int  i[9];
  14:../USER/vramdisp.c **** } wddt;
  15:../USER/vramdisp.c **** #define u16 unsigned short
  16:../USER/vramdisp.c **** 
  17:../USER/vramdisp.c **** void set_vramadr(int adry, int adrx){
  18:../USER/vramdisp.c **** 	int adr;
  19:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
  20:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
  21:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
  22:../USER/vramdisp.c **** 	wddt.i[0] = adr;
  23:../USER/vramdisp.c **** }
  24:../USER/vramdisp.c **** void get_vramdata(int dl){
  25:../USER/vramdisp.c **** 	unsigned char i,dt;
  26:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
  27:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
  28:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
  29:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
  30:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
  31:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
  32:../USER/vramdisp.c **** 	}
  33:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
  34:../USER/vramdisp.c **** 
  35:../USER/vramdisp.c **** }
  36:../USER/vramdisp.c **** void get_vram(int adry, int adrx){
  37:../USER/vramdisp.c **** 	unsigned char i,dt;
  38:../USER/vramdisp.c **** 	if(adry==-1) { adry=0; adrx=0;}
  39:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
  40:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
  41:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
  42:../USER/vramdisp.c **** 		dt = wddt.b[i];
  43:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
  44:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
  45:../USER/vramdisp.c **** 	}
  46:../USER/vramdisp.c **** 	get_vramdata(32);
  47:../USER/vramdisp.c **** }
  48:../USER/vramdisp.c **** 
  49:../USER/vramdisp.c **** void set_vramdata(int dl){
  50:../USER/vramdisp.c **** 	unsigned char i, dt;
  51:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
  52:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
  53:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
  54:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
  55:../USER/vramdisp.c **** 		dt = wddt.b[i];
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
  57:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
  58:../USER/vramdisp.c **** 	}
  59:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
  60:../USER/vramdisp.c **** }
  61:../USER/vramdisp.c **** 
  62:../USER/vramdisp.c **** void set_vramdata_f6(int dl){	// Fast(oney 6byte)
  27              		.loc 1 62 6 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  63:../USER/vramdisp.c **** 	unsigned char i, dt;
  32              		.loc 1 63 2 view .LVU1
  64:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
  33              		.loc 1 64 2 view .LVU2
  62:../USER/vramdisp.c **** 	unsigned char i, dt;
  34              		.loc 1 62 6 is_stmt 0 view .LVU3
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 64 2 view .LVU4
  42 0002 274C     		ldr	r4, .L4
  65:../USER/vramdisp.c **** 	dt = wddt.b[0]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
  43              		.loc 1 65 5 view .LVU5
  44 0004 274D     		ldr	r5, .L4+4
  64:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
  45              		.loc 1 64 2 view .LVU6
  46 0006 2046     		mov	r0, r4
  47 0008 4FF40071 		mov	r1, #512
  48 000c FFF7FEFF 		bl	GPIO_WriteBits
  49              	.LVL1:
  50              		.loc 1 65 2 is_stmt 1 view .LVU7
  51              		.loc 1 65 18 view .LVU8
  52              		.loc 1 65 44 is_stmt 0 view .LVU9
  53 0010 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
  54              		.loc 1 65 18 view .LVU10
  55 0012 2046     		mov	r0, r4
  56 0014 06F54071 		add	r1, r6, #768
  57 0018 FFF7FEFF 		bl	GPIO_WriteBits
  58              	.LVL2:
  59              		.loc 1 65 50 is_stmt 1 view .LVU11
  60 001c 06F50071 		add	r1, r6, #512
  61 0020 2046     		mov	r0, r4
  62 0022 FFF7FEFF 		bl	GPIO_WriteBits
  63              	.LVL3:
  66:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
  64              		.loc 1 66 2 view .LVU12
  65              		.loc 1 66 18 view .LVU13
  66              		.loc 1 66 44 is_stmt 0 view .LVU14
  67 0026 6E78     		ldrb	r6, [r5, #1]	@ zero_extendqisi2
  68              		.loc 1 66 18 view .LVU15
  69 0028 2046     		mov	r0, r4
  70 002a 06F54071 		add	r1, r6, #768
  71 002e FFF7FEFF 		bl	GPIO_WriteBits
  72              	.LVL4:
  73              		.loc 1 66 50 is_stmt 1 view .LVU16
  74 0032 06F50071 		add	r1, r6, #512
  75 0036 2046     		mov	r0, r4
  76 0038 FFF7FEFF 		bl	GPIO_WriteBits
  77              	.LVL5:
  67:../USER/vramdisp.c **** 	dt = wddt.b[2]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
  78              		.loc 1 67 2 view .LVU17
  79              		.loc 1 67 18 view .LVU18
  80              		.loc 1 67 44 is_stmt 0 view .LVU19
  81 003c AE78     		ldrb	r6, [r5, #2]	@ zero_extendqisi2
  82              		.loc 1 67 18 view .LVU20
  83 003e 2046     		mov	r0, r4
  84 0040 06F54071 		add	r1, r6, #768
  85 0044 FFF7FEFF 		bl	GPIO_WriteBits
  86              	.LVL6:
  87              		.loc 1 67 50 is_stmt 1 view .LVU21
  88 0048 06F50071 		add	r1, r6, #512
  89 004c 2046     		mov	r0, r4
  90 004e FFF7FEFF 		bl	GPIO_WriteBits
  91              	.LVL7:
  68:../USER/vramdisp.c **** 	dt = wddt.b[3]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
  92              		.loc 1 68 2 view .LVU22
  93              		.loc 1 68 18 view .LVU23
  94              		.loc 1 68 44 is_stmt 0 view .LVU24
  95 0052 EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
  96              		.loc 1 68 18 view .LVU25
  97 0054 2046     		mov	r0, r4
  98 0056 06F54071 		add	r1, r6, #768
  99 005a FFF7FEFF 		bl	GPIO_WriteBits
 100              	.LVL8:
 101              		.loc 1 68 50 is_stmt 1 view .LVU26
 102 005e 06F50071 		add	r1, r6, #512
 103 0062 2046     		mov	r0, r4
 104 0064 FFF7FEFF 		bl	GPIO_WriteBits
 105              	.LVL9:
  69:../USER/vramdisp.c **** 	dt = wddt.b[4]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 106              		.loc 1 69 2 view .LVU27
 107              		.loc 1 69 18 view .LVU28
 108              		.loc 1 69 44 is_stmt 0 view .LVU29
 109 0068 2E79     		ldrb	r6, [r5, #4]	@ zero_extendqisi2
 110              		.loc 1 69 18 view .LVU30
 111 006a 2046     		mov	r0, r4
 112 006c 06F54071 		add	r1, r6, #768
 113 0070 FFF7FEFF 		bl	GPIO_WriteBits
 114              	.LVL10:
 115              		.loc 1 69 50 is_stmt 1 view .LVU31
 116 0074 06F50071 		add	r1, r6, #512
 117 0078 2046     		mov	r0, r4
 118 007a FFF7FEFF 		bl	GPIO_WriteBits
 119              	.LVL11:
  70:../USER/vramdisp.c **** 	dt = wddt.b[5]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 120              		.loc 1 70 2 view .LVU32
 121              		.loc 1 70 18 view .LVU33
 122              		.loc 1 70 44 is_stmt 0 view .LVU34
 123 007e 6D79     		ldrb	r5, [r5, #5]	@ zero_extendqisi2
 124              		.loc 1 70 18 view .LVU35
 125 0080 2046     		mov	r0, r4
 126 0082 05F54071 		add	r1, r5, #768
 127 0086 FFF7FEFF 		bl	GPIO_WriteBits
 128              	.LVL12:
 129              		.loc 1 70 50 is_stmt 1 view .LVU36
 130 008a 05F50071 		add	r1, r5, #512
 131 008e 2046     		mov	r0, r4
 132 0090 FFF7FEFF 		bl	GPIO_WriteBits
 133              	.LVL13:
  71:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 134              		.loc 1 71 2 view .LVU37
 135 0094 2046     		mov	r0, r4
  72:../USER/vramdisp.c **** }
 136              		.loc 1 72 1 is_stmt 0 view .LVU38
 137 0096 BDE87040 		pop	{r4, r5, r6, lr}
 138              		.cfi_restore 14
 139              		.cfi_restore 6
 140              		.cfi_restore 5
 141              		.cfi_restore 4
 142              		.cfi_def_cfa_offset 0
 143              	.LVL14:
  71:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 144              		.loc 1 71 2 view .LVU39
 145 009a 0021     		movs	r1, #0
 146 009c FFF7FEBF 		b	GPIO_WriteBits
 147              	.LVL15:
 148              	.L5:
 149              		.align	2
 150              	.L4:
 151 00a0 00000140 		.word	1073807360
 152 00a4 00000000 		.word	wddt
 153              		.cfi_endproc
 154              	.LFE52:
 156              		.section	.text.set_vramadr,"ax",%progbits
 157              		.align	1
 158              		.p2align 2,,3
 159              		.global	set_vramadr
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	set_vramadr:
 166              	.LVL16:
 167              	.LFB29:
  17:../USER/vramdisp.c **** 	int adr;
 168              		.loc 1 17 37 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 172              		.loc 1 18 2 view .LVU41
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 173              		.loc 1 19 2 view .LVU42
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 174              		.loc 1 19 15 is_stmt 0 view .LVU43
 175 0000 00EB8000 		add	r0, r0, r0, lsl #2
 176              	.LVL17:
  17:../USER/vramdisp.c **** 	int adr;
 177              		.loc 1 17 37 view .LVU44
 178 0004 70B5     		push	{r4, r5, r6, lr}
 179              		.cfi_def_cfa_offset 16
 180              		.cfi_offset 4, -16
 181              		.cfi_offset 5, -12
 182              		.cfi_offset 6, -8
 183              		.cfi_offset 14, -4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 184              		.loc 1 19 18 view .LVU45
 185 0006 01EBC006 		add	r6, r1, r0, lsl #3
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 186              		.loc 1 20 2 view .LVU46
 187 000a 0948     		ldr	r0, .L10
 188 000c 0021     		movs	r1, #0
 189              	.LVL18:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 190              		.loc 1 20 2 view .LVU47
 191 000e FFF7FEFF 		bl	GPIO_WriteBits
 192              	.LVL19:
 193 0012 084C     		ldr	r4, .L10+4
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 194              		.loc 1 21 10 view .LVU48
 195 0014 064D     		ldr	r5, .L10
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 196              		.loc 1 19 6 view .LVU49
 197 0016 7601     		lsls	r6, r6, #5
 198              	.LVL20:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 199              		.loc 1 20 2 is_stmt 1 view .LVU50
 200              	.L7:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 201              		.loc 1 21 2 discriminator 1 view .LVU51
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 202              		.loc 1 21 5 discriminator 1 view .LVU52
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 203              		.loc 1 21 10 is_stmt 0 discriminator 1 view .LVU53
 204 0018 2846     		mov	r0, r5
 205 001a FFF7FEFF 		bl	GPIO_ReadBits
 206              	.LVL21:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 207              		.loc 1 21 8 discriminator 1 view .LVU54
 208 001e C0B2     		uxtb	r0, r0
 209 0020 2070     		strb	r0, [r4]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 210              		.loc 1 21 44 discriminator 1 view .LVU55
 211 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 212              		.loc 1 21 2 discriminator 1 view .LVU56
 213 0024 DB07     		lsls	r3, r3, #31
 214 0026 F7D4     		bmi	.L7
  22:../USER/vramdisp.c **** }
 215              		.loc 1 22 2 is_stmt 1 view .LVU57
  22:../USER/vramdisp.c **** }
 216              		.loc 1 22 12 is_stmt 0 view .LVU58
 217 0028 034B     		ldr	r3, .L10+8
 218 002a 1E60     		str	r6, [r3]
  23:../USER/vramdisp.c **** void get_vramdata(int dl){
 219              		.loc 1 23 1 view .LVU59
 220 002c 70BD     		pop	{r4, r5, r6, pc}
 221              	.LVL22:
 222              	.L11:
  23:../USER/vramdisp.c **** void get_vramdata(int dl){
 223              		.loc 1 23 1 view .LVU60
 224 002e 00BF     		.align	2
 225              	.L10:
 226 0030 00000140 		.word	1073807360
 227 0034 00000000 		.word	pd
 228 0038 00000000 		.word	wddt
 229              		.cfi_endproc
 230              	.LFE29:
 232              		.section	.text.get_vramdata,"ax",%progbits
 233              		.align	1
 234              		.p2align 2,,3
 235              		.global	get_vramdata
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu softvfp
 241              	get_vramdata:
 242              	.LVL23:
 243              	.LFB30:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 244              		.loc 1 24 26 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 248              		.loc 1 25 2 view .LVU62
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 249              		.loc 1 26 2 view .LVU63
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 250              		.loc 1 24 26 is_stmt 0 view .LVU64
 251 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 252              		.cfi_def_cfa_offset 24
 253              		.cfi_offset 3, -24
 254              		.cfi_offset 4, -20
 255              		.cfi_offset 5, -16
 256              		.cfi_offset 6, -12
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 259              		.loc 1 26 2 view .LVU65
 260 0002 0021     		movs	r1, #0
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 261              		.loc 1 24 26 view .LVU66
 262 0004 0646     		mov	r6, r0
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 263              		.loc 1 26 2 view .LVU67
 264 0006 1548     		ldr	r0, .L19
 265              	.LVL24:
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 266              		.loc 1 26 2 view .LVU68
 267 0008 FFF7FEFF 		bl	GPIO_WriteBits
 268              	.LVL25:
 269 000c 144D     		ldr	r5, .L19+4
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 270              		.loc 1 27 10 view .LVU69
 271 000e 134F     		ldr	r7, .L19
 272              	.L13:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 273              		.loc 1 27 2 is_stmt 1 discriminator 1 view .LVU70
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 274              		.loc 1 27 5 discriminator 1 view .LVU71
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 275              		.loc 1 27 10 is_stmt 0 discriminator 1 view .LVU72
 276 0010 3846     		mov	r0, r7
 277 0012 FFF7FEFF 		bl	GPIO_ReadBits
 278              	.LVL26:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 279              		.loc 1 27 8 discriminator 1 view .LVU73
 280 0016 C0B2     		uxtb	r0, r0
 281 0018 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 282              		.loc 1 27 44 discriminator 1 view .LVU74
 283 001a 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 284              		.loc 1 27 2 discriminator 1 view .LVU75
 285 001c 14F00104 		ands	r4, r4, #1
 286 0020 F6D1     		bne	.L13
 287              	.LVL27:
  28:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
 288              		.loc 1 28 2 view .LVU76
 289 0022 002E     		cmp	r6, #0
 290 0024 13DD     		ble	.L14
 291 0026 0F4F     		ldr	r7, .L19+8
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 292              		.loc 1 29 3 view .LVU77
 293 0028 0C4D     		ldr	r5, .L19
 294              	.LVL28:
 295              	.L15:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 296              		.loc 1 29 3 is_stmt 1 discriminator 3 view .LVU78
 297 002a 4FF48071 		mov	r1, #256
 298 002e 2846     		mov	r0, r5
 299 0030 FFF7FEFF 		bl	GPIO_WriteBits
 300              	.LVL29:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 301              		.loc 1 30 3 discriminator 3 view .LVU79
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 302              		.loc 1 30 17 is_stmt 0 discriminator 3 view .LVU80
 303 0034 2846     		mov	r0, r5
 304 0036 FFF7FEFF 		bl	GPIO_ReadBits
 305              	.LVL30:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 306              		.loc 1 30 15 discriminator 3 view .LVU81
 307 003a 3B19     		adds	r3, r7, r4
  28:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
 308              		.loc 1 28 17 discriminator 3 view .LVU82
 309 003c 0134     		adds	r4, r4, #1
 310              	.LVL31:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 311              		.loc 1 30 15 discriminator 3 view .LVU83
 312 003e 1871     		strb	r0, [r3, #4]
  31:../USER/vramdisp.c **** 	}
 313              		.loc 1 31 3 is_stmt 1 discriminator 3 view .LVU84
 314 0040 0021     		movs	r1, #0
 315 0042 2846     		mov	r0, r5
  28:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
 316              		.loc 1 28 17 is_stmt 0 discriminator 3 view .LVU85
 317 0044 E4B2     		uxtb	r4, r4
  31:../USER/vramdisp.c **** 	}
 318              		.loc 1 31 3 discriminator 3 view .LVU86
 319 0046 FFF7FEFF 		bl	GPIO_WriteBits
 320              	.LVL32:
  28:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
 321              		.loc 1 28 2 discriminator 3 view .LVU87
 322 004a B442     		cmp	r4, r6
 323 004c EDDB     		blt	.L15
 324              	.LVL33:
 325              	.L14:
  33:../USER/vramdisp.c **** 
 326              		.loc 1 33 2 is_stmt 1 view .LVU88
  35:../USER/vramdisp.c **** void get_vram(int adry, int adrx){
 327              		.loc 1 35 1 is_stmt 0 view .LVU89
 328 004e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 329              		.cfi_restore 14
 330              		.cfi_restore 7
 331              		.cfi_restore 6
 332              		.cfi_restore 5
 333              		.cfi_restore 4
 334              		.cfi_restore 3
 335              		.cfi_def_cfa_offset 0
 336              	.LVL34:
  33:../USER/vramdisp.c **** 
 337              		.loc 1 33 2 view .LVU90
 338 0052 0021     		movs	r1, #0
 339 0054 0148     		ldr	r0, .L19
 340 0056 FFF7FEBF 		b	GPIO_WriteBits
 341              	.LVL35:
 342              	.L20:
 343 005a 00BF     		.align	2
 344              	.L19:
 345 005c 00000140 		.word	1073807360
 346 0060 00000000 		.word	pd
 347 0064 00000000 		.word	wddt
 348              		.cfi_endproc
 349              	.LFE30:
 351              		.section	.text.get_vram,"ax",%progbits
 352              		.align	1
 353              		.p2align 2,,3
 354              		.global	get_vram
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu softvfp
 360              	get_vram:
 361              	.LVL36:
 362              	.LFB31:
  36:../USER/vramdisp.c **** 	unsigned char i,dt;
 363              		.loc 1 36 34 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
  37:../USER/vramdisp.c **** 	if(adry==-1) { adry=0; adrx=0;}
 367              		.loc 1 37 2 view .LVU92
  38:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 368              		.loc 1 38 2 view .LVU93
  36:../USER/vramdisp.c **** 	unsigned char i,dt;
 369              		.loc 1 36 34 is_stmt 0 view .LVU94
 370 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 371              		.cfi_def_cfa_offset 24
 372              		.cfi_offset 4, -24
 373              		.cfi_offset 5, -20
 374              		.cfi_offset 6, -16
 375              		.cfi_offset 7, -12
 376              		.cfi_offset 8, -8
 377              		.cfi_offset 14, -4
  38:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 378              		.loc 1 38 4 view .LVU95
 379 0004 441C     		adds	r4, r0, #1
 380 0006 1EBF     		ittt	ne
 381 0008 00EB8000 		addne	r0, r0, r0, lsl #2
 382              	.LVL37:
  38:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 383              		.loc 1 38 4 view .LVU96
 384 000c 01EBC001 		addne	r1, r1, r0, lsl #3
 385              	.LVL38:
  38:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 386              		.loc 1 38 4 view .LVU97
 387 0010 4E01     		lslne	r6, r1, #5
 388              	.LBB32:
 389              	.LBB33:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 390              		.loc 1 20 2 view .LVU98
 391 0012 2848     		ldr	r0, .L33
 392 0014 4FF00001 		mov	r1, #0
 393              	.LBE33:
 394              	.LBE32:
 395 0018 08BF     		it	eq
 396 001a 0026     		moveq	r6, #0
 397              	.LVL39:
  39:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 398              		.loc 1 39 2 is_stmt 1 view .LVU99
 399              	.LBB37:
 400              	.LBI32:
  17:../USER/vramdisp.c **** 	int adr;
 401              		.loc 1 17 6 view .LVU100
 402              	.LBB34:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 403              		.loc 1 18 2 view .LVU101
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 404              		.loc 1 19 2 view .LVU102
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 405              		.loc 1 20 2 view .LVU103
 406 001c FFF7FEFF 		bl	GPIO_WriteBits
 407              	.LVL40:
 408 0020 254C     		ldr	r4, .L33+4
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 409              		.loc 1 21 10 is_stmt 0 view .LVU104
 410 0022 244D     		ldr	r5, .L33
 411              	.L23:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 412              		.loc 1 21 2 is_stmt 1 view .LVU105
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 413              		.loc 1 21 5 view .LVU106
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 414              		.loc 1 21 10 is_stmt 0 view .LVU107
 415 0024 2846     		mov	r0, r5
 416 0026 FFF7FEFF 		bl	GPIO_ReadBits
 417              	.LVL41:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 418              		.loc 1 21 8 view .LVU108
 419 002a C0B2     		uxtb	r0, r0
 420 002c 2070     		strb	r0, [r4]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 421              		.loc 1 21 44 view .LVU109
 422 002e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 423              		.loc 1 21 2 view .LVU110
 424 0030 DA07     		lsls	r2, r3, #31
 425 0032 F7D4     		bmi	.L23
  22:../USER/vramdisp.c **** }
 426              		.loc 1 22 2 is_stmt 1 view .LVU111
  22:../USER/vramdisp.c **** }
 427              		.loc 1 22 12 is_stmt 0 view .LVU112
 428 0034 214D     		ldr	r5, .L33+8
 429              	.LBE34:
 430              	.LBE37:
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 431              		.loc 1 40 2 view .LVU113
 432 0036 4FF40071 		mov	r1, #512
 433              	.LBB38:
 434              	.LBB35:
  22:../USER/vramdisp.c **** }
 435              		.loc 1 22 12 view .LVU114
 436 003a A846     		mov	r8, r5
 437              	.LBE35:
 438              	.LBE38:
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 439              		.loc 1 40 2 view .LVU115
 440 003c 1D48     		ldr	r0, .L33
 441              	.LBB39:
 442              	.LBB36:
  22:../USER/vramdisp.c **** }
 443              		.loc 1 22 12 view .LVU116
 444 003e 48F8046B 		str	r6, [r8], #4
  22:../USER/vramdisp.c **** }
 445              		.loc 1 22 12 view .LVU117
 446              	.LBE36:
 447              	.LBE39:
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 448              		.loc 1 40 2 is_stmt 1 view .LVU118
 449 0042 FFF7FEFF 		bl	GPIO_WriteBits
 450              	.LVL42:
  41:../USER/vramdisp.c **** 		dt = wddt.b[i];
 451              		.loc 1 41 2 view .LVU119
  43:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 452              		.loc 1 43 3 is_stmt 0 view .LVU120
 453 0046 1B4F     		ldr	r7, .L33
 454              	.LVL43:
 455              	.L24:
  42:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 456              		.loc 1 42 3 is_stmt 1 discriminator 3 view .LVU121
  42:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 457              		.loc 1 42 6 is_stmt 0 discriminator 3 view .LVU122
 458 0048 15F8016B 		ldrb	r6, [r5], #1	@ zero_extendqisi2
 459              	.LVL44:
  43:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 460              		.loc 1 43 3 is_stmt 1 discriminator 3 view .LVU123
 461 004c 3846     		mov	r0, r7
 462 004e 06F50071 		add	r1, r6, #512
 463 0052 FFF7FEFF 		bl	GPIO_WriteBits
 464              	.LVL45:
  44:../USER/vramdisp.c **** 	}
 465              		.loc 1 44 3 discriminator 3 view .LVU124
 466 0056 06F54071 		add	r1, r6, #768
 467 005a 3846     		mov	r0, r7
 468 005c FFF7FEFF 		bl	GPIO_WriteBits
 469              	.LVL46:
  41:../USER/vramdisp.c **** 		dt = wddt.b[i];
 470              		.loc 1 41 2 is_stmt 0 discriminator 3 view .LVU125
 471 0060 4545     		cmp	r5, r8
 472 0062 F1D1     		bne	.L24
  46:../USER/vramdisp.c **** }
 473              		.loc 1 46 2 is_stmt 1 view .LVU126
 474              	.LVL47:
 475              	.LBB40:
 476              	.LBI40:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 477              		.loc 1 24 6 view .LVU127
 478              	.LBB41:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 479              		.loc 1 25 2 view .LVU128
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 480              		.loc 1 26 2 view .LVU129
 481 0064 0021     		movs	r1, #0
 482 0066 1348     		ldr	r0, .L33
 483 0068 FFF7FEFF 		bl	GPIO_WriteBits
 484              	.LVL48:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 485              		.loc 1 27 10 is_stmt 0 view .LVU130
 486 006c 114D     		ldr	r5, .L33
 487              	.LVL49:
 488              	.L25:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 489              		.loc 1 27 2 is_stmt 1 view .LVU131
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 490              		.loc 1 27 5 view .LVU132
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 491              		.loc 1 27 10 is_stmt 0 view .LVU133
 492 006e 2846     		mov	r0, r5
 493 0070 FFF7FEFF 		bl	GPIO_ReadBits
 494              	.LVL50:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 495              		.loc 1 27 8 view .LVU134
 496 0074 C0B2     		uxtb	r0, r0
 497 0076 2070     		strb	r0, [r4]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 498              		.loc 1 27 44 view .LVU135
 499 0078 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 500              		.loc 1 27 2 view .LVU136
 501 007a DB07     		lsls	r3, r3, #31
 502 007c F7D4     		bmi	.L25
 503 007e 104C     		ldr	r4, .L33+12
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 504              		.loc 1 29 3 view .LVU137
 505 0080 0C4D     		ldr	r5, .L33
 506 0082 04F12006 		add	r6, r4, #32
 507              	.LVL51:
 508              	.L26:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 509              		.loc 1 29 3 is_stmt 1 view .LVU138
 510 0086 4FF48071 		mov	r1, #256
 511 008a 2846     		mov	r0, r5
 512 008c FFF7FEFF 		bl	GPIO_WriteBits
 513              	.LVL52:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 514              		.loc 1 30 3 view .LVU139
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 515              		.loc 1 30 17 is_stmt 0 view .LVU140
 516 0090 2846     		mov	r0, r5
 517 0092 FFF7FEFF 		bl	GPIO_ReadBits
 518              	.LVL53:
  31:../USER/vramdisp.c **** 	}
 519              		.loc 1 31 3 view .LVU141
 520 0096 0021     		movs	r1, #0
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 521              		.loc 1 30 15 view .LVU142
 522 0098 04F8010F 		strb	r0, [r4, #1]!
 523              	.LVL54:
  31:../USER/vramdisp.c **** 	}
 524              		.loc 1 31 3 is_stmt 1 view .LVU143
 525 009c 2846     		mov	r0, r5
 526 009e FFF7FEFF 		bl	GPIO_WriteBits
 527              	.LVL55:
  28:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
 528              		.loc 1 28 2 is_stmt 0 view .LVU144
 529 00a2 A642     		cmp	r6, r4
 530 00a4 EFD1     		bne	.L26
  33:../USER/vramdisp.c **** 
 531              		.loc 1 33 2 is_stmt 1 view .LVU145
 532              	.LBE41:
 533              	.LBE40:
  47:../USER/vramdisp.c **** 
 534              		.loc 1 47 1 is_stmt 0 view .LVU146
 535 00a6 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 536              		.cfi_restore 14
 537              		.cfi_restore 8
 538              		.cfi_restore 7
 539              		.cfi_restore 6
 540              		.cfi_restore 5
 541              		.cfi_restore 4
 542              		.cfi_def_cfa_offset 0
 543              	.LVL56:
 544              	.LBB43:
 545              	.LBB42:
  33:../USER/vramdisp.c **** 
 546              		.loc 1 33 2 view .LVU147
 547 00aa 0021     		movs	r1, #0
 548 00ac 0148     		ldr	r0, .L33
 549 00ae FFF7FEBF 		b	GPIO_WriteBits
 550              	.LVL57:
 551              	.L34:
 552 00b2 00BF     		.align	2
 553              	.L33:
 554 00b4 00000140 		.word	1073807360
 555 00b8 00000000 		.word	pd
 556 00bc 00000000 		.word	wddt
 557 00c0 03000000 		.word	wddt+3
 558              	.LBE42:
 559              	.LBE43:
 560              		.cfi_endproc
 561              	.LFE31:
 563              		.section	.text.set_vramdata,"ax",%progbits
 564              		.align	1
 565              		.p2align 2,,3
 566              		.global	set_vramdata
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu softvfp
 572              	set_vramdata:
 573              	.LVL58:
 574              	.LFB32:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 575              		.loc 1 49 26 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 579              		.loc 1 50 2 view .LVU149
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 580              		.loc 1 51 2 view .LVU150
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 581              		.loc 1 49 26 is_stmt 0 view .LVU151
 582 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 583              		.cfi_def_cfa_offset 24
 584              		.cfi_offset 4, -24
 585              		.cfi_offset 5, -20
 586              		.cfi_offset 6, -16
 587              		.cfi_offset 7, -12
 588              		.cfi_offset 8, -8
 589              		.cfi_offset 14, -4
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 590              		.loc 1 51 2 view .LVU152
 591 0004 0021     		movs	r1, #0
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 592              		.loc 1 49 26 view .LVU153
 593 0006 0746     		mov	r7, r0
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 594              		.loc 1 51 2 view .LVU154
 595 0008 1648     		ldr	r0, .L42
 596              	.LVL59:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 597              		.loc 1 51 2 view .LVU155
 598 000a FFF7FEFF 		bl	GPIO_WriteBits
 599              	.LVL60:
 600 000e 164D     		ldr	r5, .L42+4
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 601              		.loc 1 52 10 view .LVU156
 602 0010 144E     		ldr	r6, .L42
 603              	.L36:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 604              		.loc 1 52 2 is_stmt 1 discriminator 1 view .LVU157
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 605              		.loc 1 52 5 discriminator 1 view .LVU158
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 606              		.loc 1 52 10 is_stmt 0 discriminator 1 view .LVU159
 607 0012 3046     		mov	r0, r6
 608 0014 FFF7FEFF 		bl	GPIO_ReadBits
 609              	.LVL61:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 610              		.loc 1 52 8 discriminator 1 view .LVU160
 611 0018 C0B2     		uxtb	r0, r0
 612 001a 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 613              		.loc 1 52 44 discriminator 1 view .LVU161
 614 001c 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 615              		.loc 1 52 2 discriminator 1 view .LVU162
 616 001e 14F00104 		ands	r4, r4, #1
 617 0022 F6D1     		bne	.L36
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 618              		.loc 1 53 2 is_stmt 1 view .LVU163
 619 0024 4FF40071 		mov	r1, #512
 620 0028 0E48     		ldr	r0, .L42
 621 002a FFF7FEFF 		bl	GPIO_WriteBits
 622              	.LVL62:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 623              		.loc 1 54 2 view .LVU164
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 624              		.loc 1 54 2 is_stmt 0 view .LVU165
 625 002e 002F     		cmp	r7, #0
 626 0030 12DD     		ble	.L37
 627 0032 DFF83880 		ldr	r8, .L42+8
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 628              		.loc 1 56 3 view .LVU166
 629 0036 0B4E     		ldr	r6, .L42
 630              	.LVL63:
 631              	.L38:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 632              		.loc 1 55 3 is_stmt 1 discriminator 3 view .LVU167
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 633              		.loc 1 56 3 discriminator 3 view .LVU168
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 634              		.loc 1 56 29 is_stmt 0 discriminator 3 view .LVU169
 635 0038 18F80450 		ldrb	r5, [r8, r4]	@ zero_extendqisi2
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 636              		.loc 1 56 3 discriminator 3 view .LVU170
 637 003c 3046     		mov	r0, r6
 638 003e 05F54071 		add	r1, r5, #768
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 639              		.loc 1 54 16 discriminator 3 view .LVU171
 640 0042 0134     		adds	r4, r4, #1
 641              	.LVL64:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 642              		.loc 1 56 3 discriminator 3 view .LVU172
 643 0044 FFF7FEFF 		bl	GPIO_WriteBits
 644              	.LVL65:
  57:../USER/vramdisp.c **** 	}
 645              		.loc 1 57 3 is_stmt 1 discriminator 3 view .LVU173
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 646              		.loc 1 54 16 is_stmt 0 discriminator 3 view .LVU174
 647 0048 E4B2     		uxtb	r4, r4
  57:../USER/vramdisp.c **** 	}
 648              		.loc 1 57 3 discriminator 3 view .LVU175
 649 004a 05F50071 		add	r1, r5, #512
 650 004e 3046     		mov	r0, r6
 651 0050 FFF7FEFF 		bl	GPIO_WriteBits
 652              	.LVL66:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 653              		.loc 1 54 2 discriminator 3 view .LVU176
 654 0054 BC42     		cmp	r4, r7
 655 0056 EFDB     		blt	.L38
 656              	.LVL67:
 657              	.L37:
  59:../USER/vramdisp.c **** }
 658              		.loc 1 59 2 is_stmt 1 view .LVU177
  60:../USER/vramdisp.c **** 
 659              		.loc 1 60 1 is_stmt 0 view .LVU178
 660 0058 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 661              		.cfi_restore 14
 662              		.cfi_restore 8
 663              		.cfi_restore 7
 664              		.cfi_restore 6
 665              		.cfi_restore 5
 666              		.cfi_restore 4
 667              		.cfi_def_cfa_offset 0
 668              	.LVL68:
  59:../USER/vramdisp.c **** }
 669              		.loc 1 59 2 view .LVU179
 670 005c 0021     		movs	r1, #0
 671 005e 0148     		ldr	r0, .L42
 672 0060 FFF7FEBF 		b	GPIO_WriteBits
 673              	.LVL69:
 674              	.L43:
 675              		.align	2
 676              	.L42:
 677 0064 00000140 		.word	1073807360
 678 0068 00000000 		.word	pd
 679 006c 00000000 		.word	wddt
 680              		.cfi_endproc
 681              	.LFE32:
 683              		.section	.text.set_vramdata_f6,"ax",%progbits
 684              		.align	1
 685              		.p2align 2,,3
 686              		.global	set_vramdata_f6
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu softvfp
 692              	set_vramdata_f6:
 693              	.LVL70:
 694              	.LFB33:
  62:../USER/vramdisp.c **** 	unsigned char i, dt;
 695              		.loc 1 62 29 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
  63:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 699              		.loc 1 63 2 view .LVU181
  64:../USER/vramdisp.c **** 	dt = wddt.b[0]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 700              		.loc 1 64 2 view .LVU182
  62:../USER/vramdisp.c **** 	unsigned char i, dt;
 701              		.loc 1 62 29 is_stmt 0 view .LVU183
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
  64:../USER/vramdisp.c **** 	dt = wddt.b[0]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 708              		.loc 1 64 2 view .LVU184
 709 0002 274C     		ldr	r4, .L46
  65:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 710              		.loc 1 65 5 view .LVU185
 711 0004 274D     		ldr	r5, .L46+4
  64:../USER/vramdisp.c **** 	dt = wddt.b[0]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 712              		.loc 1 64 2 view .LVU186
 713 0006 2046     		mov	r0, r4
 714              	.LVL71:
  64:../USER/vramdisp.c **** 	dt = wddt.b[0]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 715              		.loc 1 64 2 view .LVU187
 716 0008 4FF40071 		mov	r1, #512
 717 000c FFF7FEFF 		bl	GPIO_WriteBits
 718              	.LVL72:
  65:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 719              		.loc 1 65 2 is_stmt 1 view .LVU188
  65:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 720              		.loc 1 65 18 view .LVU189
  65:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 721              		.loc 1 65 44 is_stmt 0 view .LVU190
 722 0010 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
  65:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 723              		.loc 1 65 18 view .LVU191
 724 0012 2046     		mov	r0, r4
 725 0014 06F54071 		add	r1, r6, #768
 726 0018 FFF7FEFF 		bl	GPIO_WriteBits
 727              	.LVL73:
  65:../USER/vramdisp.c **** 	dt = wddt.b[1]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 728              		.loc 1 65 50 is_stmt 1 view .LVU192
 729 001c 06F50071 		add	r1, r6, #512
 730 0020 2046     		mov	r0, r4
 731 0022 FFF7FEFF 		bl	GPIO_WriteBits
 732              	.LVL74:
  66:../USER/vramdisp.c **** 	dt = wddt.b[2]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 733              		.loc 1 66 2 view .LVU193
  66:../USER/vramdisp.c **** 	dt = wddt.b[2]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 734              		.loc 1 66 18 view .LVU194
  66:../USER/vramdisp.c **** 	dt = wddt.b[2]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 735              		.loc 1 66 44 is_stmt 0 view .LVU195
 736 0026 6E78     		ldrb	r6, [r5, #1]	@ zero_extendqisi2
  66:../USER/vramdisp.c **** 	dt = wddt.b[2]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 737              		.loc 1 66 18 view .LVU196
 738 0028 2046     		mov	r0, r4
 739 002a 06F54071 		add	r1, r6, #768
 740 002e FFF7FEFF 		bl	GPIO_WriteBits
 741              	.LVL75:
  66:../USER/vramdisp.c **** 	dt = wddt.b[2]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 742              		.loc 1 66 50 is_stmt 1 view .LVU197
 743 0032 06F50071 		add	r1, r6, #512
 744 0036 2046     		mov	r0, r4
 745 0038 FFF7FEFF 		bl	GPIO_WriteBits
 746              	.LVL76:
  67:../USER/vramdisp.c **** 	dt = wddt.b[3]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 747              		.loc 1 67 2 view .LVU198
  67:../USER/vramdisp.c **** 	dt = wddt.b[3]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 748              		.loc 1 67 18 view .LVU199
  67:../USER/vramdisp.c **** 	dt = wddt.b[3]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 749              		.loc 1 67 44 is_stmt 0 view .LVU200
 750 003c AE78     		ldrb	r6, [r5, #2]	@ zero_extendqisi2
  67:../USER/vramdisp.c **** 	dt = wddt.b[3]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 751              		.loc 1 67 18 view .LVU201
 752 003e 2046     		mov	r0, r4
 753 0040 06F54071 		add	r1, r6, #768
 754 0044 FFF7FEFF 		bl	GPIO_WriteBits
 755              	.LVL77:
  67:../USER/vramdisp.c **** 	dt = wddt.b[3]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 756              		.loc 1 67 50 is_stmt 1 view .LVU202
 757 0048 06F50071 		add	r1, r6, #512
 758 004c 2046     		mov	r0, r4
 759 004e FFF7FEFF 		bl	GPIO_WriteBits
 760              	.LVL78:
  68:../USER/vramdisp.c **** 	dt = wddt.b[4]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 761              		.loc 1 68 2 view .LVU203
  68:../USER/vramdisp.c **** 	dt = wddt.b[4]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 762              		.loc 1 68 18 view .LVU204
  68:../USER/vramdisp.c **** 	dt = wddt.b[4]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 763              		.loc 1 68 44 is_stmt 0 view .LVU205
 764 0052 EE78     		ldrb	r6, [r5, #3]	@ zero_extendqisi2
  68:../USER/vramdisp.c **** 	dt = wddt.b[4]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 765              		.loc 1 68 18 view .LVU206
 766 0054 2046     		mov	r0, r4
 767 0056 06F54071 		add	r1, r6, #768
 768 005a FFF7FEFF 		bl	GPIO_WriteBits
 769              	.LVL79:
  68:../USER/vramdisp.c **** 	dt = wddt.b[4]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 770              		.loc 1 68 50 is_stmt 1 view .LVU207
 771 005e 06F50071 		add	r1, r6, #512
 772 0062 2046     		mov	r0, r4
 773 0064 FFF7FEFF 		bl	GPIO_WriteBits
 774              	.LVL80:
  69:../USER/vramdisp.c **** 	dt = wddt.b[5]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 775              		.loc 1 69 2 view .LVU208
  69:../USER/vramdisp.c **** 	dt = wddt.b[5]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 776              		.loc 1 69 18 view .LVU209
  69:../USER/vramdisp.c **** 	dt = wddt.b[5]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 777              		.loc 1 69 44 is_stmt 0 view .LVU210
 778 0068 2E79     		ldrb	r6, [r5, #4]	@ zero_extendqisi2
  69:../USER/vramdisp.c **** 	dt = wddt.b[5]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 779              		.loc 1 69 18 view .LVU211
 780 006a 2046     		mov	r0, r4
 781 006c 06F54071 		add	r1, r6, #768
 782 0070 FFF7FEFF 		bl	GPIO_WriteBits
 783              	.LVL81:
  69:../USER/vramdisp.c **** 	dt = wddt.b[5]; GPIO_WriteBits(GPIO0,0x300+dt); GPIO_WriteBits(GPIO0,0x200+dt);
 784              		.loc 1 69 50 is_stmt 1 view .LVU212
 785 0074 06F50071 		add	r1, r6, #512
 786 0078 2046     		mov	r0, r4
 787 007a FFF7FEFF 		bl	GPIO_WriteBits
 788              	.LVL82:
  70:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 789              		.loc 1 70 2 view .LVU213
  70:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 790              		.loc 1 70 18 view .LVU214
  70:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 791              		.loc 1 70 44 is_stmt 0 view .LVU215
 792 007e 6D79     		ldrb	r5, [r5, #5]	@ zero_extendqisi2
  70:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 793              		.loc 1 70 18 view .LVU216
 794 0080 2046     		mov	r0, r4
 795 0082 05F54071 		add	r1, r5, #768
 796 0086 FFF7FEFF 		bl	GPIO_WriteBits
 797              	.LVL83:
  70:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 798              		.loc 1 70 50 is_stmt 1 view .LVU217
 799 008a 05F50071 		add	r1, r5, #512
 800 008e 2046     		mov	r0, r4
 801 0090 FFF7FEFF 		bl	GPIO_WriteBits
 802              	.LVL84:
  71:../USER/vramdisp.c **** }
 803              		.loc 1 71 2 view .LVU218
 804 0094 2046     		mov	r0, r4
 805              		.loc 1 72 1 is_stmt 0 view .LVU219
 806 0096 BDE87040 		pop	{r4, r5, r6, lr}
 807              		.cfi_restore 14
 808              		.cfi_restore 6
 809              		.cfi_restore 5
 810              		.cfi_restore 4
 811              		.cfi_def_cfa_offset 0
 812              	.LVL85:
  71:../USER/vramdisp.c **** }
 813              		.loc 1 71 2 view .LVU220
 814 009a 0021     		movs	r1, #0
 815 009c FFF7FEBF 		b	GPIO_WriteBits
 816              	.LVL86:
 817              	.L47:
 818              		.align	2
 819              	.L46:
 820 00a0 00000140 		.word	1073807360
 821 00a4 00000000 		.word	wddt
 822              		.cfi_endproc
 823              	.LFE33:
 825              		.section	.text.set_vram,"ax",%progbits
 826              		.align	1
 827              		.p2align 2,,3
 828              		.global	set_vram
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu softvfp
 834              	set_vram:
 835              	.LVL87:
 836              	.LFB34:
  73:../USER/vramdisp.c **** 
  74:../USER/vramdisp.c **** void set_vram(int adry, int adrx){
 837              		.loc 1 74 34 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
  75:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 841              		.loc 1 75 2 view .LVU222
 842              	.LBB48:
 843              	.LBI48:
  17:../USER/vramdisp.c **** 	int adr;
 844              		.loc 1 17 6 view .LVU223
 845              	.LBB49:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 846              		.loc 1 18 2 view .LVU224
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 847              		.loc 1 19 2 view .LVU225
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 848              		.loc 1 19 15 is_stmt 0 view .LVU226
 849 0000 00EB8000 		add	r0, r0, r0, lsl #2
 850              	.LVL88:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 851              		.loc 1 19 15 view .LVU227
 852              	.LBE49:
 853              	.LBE48:
  74:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 854              		.loc 1 74 34 view .LVU228
 855 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 856              		.cfi_def_cfa_offset 24
 857              		.cfi_offset 3, -24
 858              		.cfi_offset 4, -20
 859              		.cfi_offset 5, -16
 860              		.cfi_offset 6, -12
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
 863              	.LBB52:
 864              	.LBB50:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 865              		.loc 1 19 18 view .LVU229
 866 0006 01EBC004 		add	r4, r1, r0, lsl #3
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 867              		.loc 1 20 2 view .LVU230
 868 000a 1D48     		ldr	r0, .L56
 869 000c 0021     		movs	r1, #0
 870              	.LVL89:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 871              		.loc 1 20 2 view .LVU231
 872 000e FFF7FEFF 		bl	GPIO_WriteBits
 873              	.LVL90:
 874 0012 1C4D     		ldr	r5, .L56+4
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 875              		.loc 1 21 10 view .LVU232
 876 0014 1A4E     		ldr	r6, .L56
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 877              		.loc 1 19 6 view .LVU233
 878 0016 6401     		lsls	r4, r4, #5
 879              	.LVL91:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 880              		.loc 1 20 2 is_stmt 1 view .LVU234
 881              	.L49:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 882              		.loc 1 21 2 view .LVU235
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 883              		.loc 1 21 5 view .LVU236
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 884              		.loc 1 21 10 is_stmt 0 view .LVU237
 885 0018 3046     		mov	r0, r6
 886 001a FFF7FEFF 		bl	GPIO_ReadBits
 887              	.LVL92:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 888              		.loc 1 21 8 view .LVU238
 889 001e C0B2     		uxtb	r0, r0
 890 0020 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 891              		.loc 1 21 44 view .LVU239
 892 0022 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 893              		.loc 1 21 2 view .LVU240
 894 0024 11F00101 		ands	r1, r1, #1
 895 0028 F6D1     		bne	.L49
  22:../USER/vramdisp.c **** }
 896              		.loc 1 22 2 is_stmt 1 view .LVU241
  22:../USER/vramdisp.c **** }
 897              		.loc 1 22 12 is_stmt 0 view .LVU242
 898 002a 174B     		ldr	r3, .L56+8
 899              	.LBE50:
 900              	.LBE52:
 901              	.LBB53:
 902              	.LBB54:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 903              		.loc 1 51 2 view .LVU243
 904 002c 1448     		ldr	r0, .L56
 905              	.LBE54:
 906              	.LBE53:
 907              	.LBB57:
 908              	.LBB51:
  22:../USER/vramdisp.c **** }
 909              		.loc 1 22 12 view .LVU244
 910 002e 1C60     		str	r4, [r3]
 911              	.LVL93:
  22:../USER/vramdisp.c **** }
 912              		.loc 1 22 12 view .LVU245
 913              	.LBE51:
 914              	.LBE57:
  76:../USER/vramdisp.c **** 	set_vramdata(37);
 915              		.loc 1 76 2 is_stmt 1 view .LVU246
 916              	.LBB58:
 917              	.LBI53:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 918              		.loc 1 49 6 view .LVU247
 919              	.LBB55:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 920              		.loc 1 50 2 view .LVU248
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 921              		.loc 1 51 2 view .LVU249
 922 0030 FFF7FEFF 		bl	GPIO_WriteBits
 923              	.LVL94:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 924              		.loc 1 52 10 is_stmt 0 view .LVU250
 925 0034 124C     		ldr	r4, .L56
 926              	.L50:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 927              		.loc 1 52 2 is_stmt 1 view .LVU251
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 928              		.loc 1 52 5 view .LVU252
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 929              		.loc 1 52 10 is_stmt 0 view .LVU253
 930 0036 2046     		mov	r0, r4
 931 0038 FFF7FEFF 		bl	GPIO_ReadBits
 932              	.LVL95:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 933              		.loc 1 52 8 view .LVU254
 934 003c C0B2     		uxtb	r0, r0
 935 003e 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 936              		.loc 1 52 44 view .LVU255
 937 0040 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 938              		.loc 1 52 2 view .LVU256
 939 0042 DB07     		lsls	r3, r3, #31
 940 0044 F7D4     		bmi	.L50
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 941              		.loc 1 53 2 is_stmt 1 view .LVU257
 942 0046 4FF40071 		mov	r1, #512
 943 004a 0D48     		ldr	r0, .L56
 944 004c FFF7FEFF 		bl	GPIO_WriteBits
 945              	.LVL96:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 946              		.loc 1 54 2 view .LVU258
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 947              		.loc 1 54 2 is_stmt 0 view .LVU259
 948 0050 0E4C     		ldr	r4, .L56+12
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 949              		.loc 1 56 3 view .LVU260
 950 0052 0B4D     		ldr	r5, .L56
 951 0054 04F12507 		add	r7, r4, #37
 952              	.LVL97:
 953              	.L51:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 954              		.loc 1 55 3 is_stmt 1 view .LVU261
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 955              		.loc 1 56 3 view .LVU262
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 956              		.loc 1 56 29 is_stmt 0 view .LVU263
 957 0058 14F8016F 		ldrb	r6, [r4, #1]!	@ zero_extendqisi2
 958              	.LVL98:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 959              		.loc 1 56 3 view .LVU264
 960 005c 2846     		mov	r0, r5
 961 005e 06F54071 		add	r1, r6, #768
 962 0062 FFF7FEFF 		bl	GPIO_WriteBits
 963              	.LVL99:
  57:../USER/vramdisp.c **** 	}
 964              		.loc 1 57 3 is_stmt 1 view .LVU265
 965 0066 06F50071 		add	r1, r6, #512
 966 006a 2846     		mov	r0, r5
 967 006c FFF7FEFF 		bl	GPIO_WriteBits
 968              	.LVL100:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 969              		.loc 1 54 2 is_stmt 0 view .LVU266
 970 0070 A742     		cmp	r7, r4
 971 0072 F1D1     		bne	.L51
  59:../USER/vramdisp.c **** }
 972              		.loc 1 59 2 is_stmt 1 view .LVU267
 973              	.LBE55:
 974              	.LBE58:
  77:../USER/vramdisp.c **** }
 975              		.loc 1 77 1 is_stmt 0 view .LVU268
 976 0074 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 977              		.cfi_restore 14
 978              		.cfi_restore 7
 979              		.cfi_restore 6
 980              		.cfi_restore 5
 981              		.cfi_restore 4
 982              		.cfi_restore 3
 983              		.cfi_def_cfa_offset 0
 984              	.LVL101:
 985              	.LBB59:
 986              	.LBB56:
  59:../USER/vramdisp.c **** }
 987              		.loc 1 59 2 view .LVU269
 988 0078 0021     		movs	r1, #0
 989 007a 0148     		ldr	r0, .L56
 990 007c FFF7FEBF 		b	GPIO_WriteBits
 991              	.LVL102:
 992              	.L57:
 993              		.align	2
 994              	.L56:
 995 0080 00000140 		.word	1073807360
 996 0084 00000000 		.word	pd
 997 0088 00000000 		.word	wddt
 998 008c FFFFFFFF 		.word	wddt-1
 999              	.LBE56:
 1000              	.LBE59:
 1001              		.cfi_endproc
 1002              	.LFE34:
 1004              		.section	.text.move_vram,"ax",%progbits
 1005              		.align	1
 1006              		.p2align 2,,3
 1007              		.global	move_vram
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1011              		.fpu softvfp
 1013              	move_vram:
 1014              	.LVL103:
 1015              	.LFB35:
  78:../USER/vramdisp.c **** 
  79:../USER/vramdisp.c **** void move_vram(int dadr, int dlen, int sadr, int mode){
 1016              		.loc 1 79 55 is_stmt 1 view -0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
  80:../USER/vramdisp.c **** 	unsigned char i, dt;
 1020              		.loc 1 80 2 view .LVU271
  81:../USER/vramdisp.c **** 	if(dadr==-1) {
 1021              		.loc 1 81 2 view .LVU272
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 1022              		.loc 1 79 55 is_stmt 0 view .LVU273
 1023 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1024              		.cfi_def_cfa_offset 24
 1025              		.cfi_offset 4, -24
 1026              		.cfi_offset 5, -20
 1027              		.cfi_offset 6, -16
 1028              		.cfi_offset 7, -12
 1029              		.cfi_offset 8, -8
 1030              		.cfi_offset 14, -4
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 1031              		.loc 1 79 55 view .LVU274
 1032 0004 1E46     		mov	r6, r3
 1033              		.loc 1 81 4 view .LVU275
 1034 0006 431C     		adds	r3, r0, #1
 1035              	.LVL104:
 1036              		.loc 1 81 4 view .LVU276
 1037 0008 32D0     		beq	.L59
 1038 000a 0B46     		mov	r3, r1
 1039              	.LVL105:
 1040              	.L60:
  82:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
  83:../USER/vramdisp.c **** 		if(mode==12){ dadr=0; dlen=640*2*(360-10); sadr=640*2*8; }	// Move
  84:../USER/vramdisp.c **** 	}
  85:../USER/vramdisp.c **** 	wddt.i[0] = dadr; wddt.i[1] = dlen; wddt.i[2] = sadr;
 1041              		.loc 1 85 2 is_stmt 1 view .LVU277
 1042              		.loc 1 85 12 is_stmt 0 view .LVU278
 1043 000c 214D     		ldr	r5, .L70
 1044              	.LBB62:
 1045              	.LBB63:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1046              		.loc 1 51 2 view .LVU279
 1047 000e 0021     		movs	r1, #0
 1048              	.LBE63:
 1049              	.LBE62:
 1050              		.loc 1 85 12 view .LVU280
 1051 0010 2860     		str	r0, [r5]
 1052              		.loc 1 85 20 is_stmt 1 view .LVU281
 1053              	.LBB67:
 1054              	.LBB64:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1055              		.loc 1 51 2 is_stmt 0 view .LVU282
 1056 0012 2148     		ldr	r0, .L70+4
 1057              	.LBE64:
 1058              	.LBE67:
 1059              		.loc 1 85 48 view .LVU283
 1060 0014 C5E90132 		strd	r3, r2, [r5, #4]
  86:../USER/vramdisp.c **** 	set_vramdata(mode);
 1061              		.loc 1 86 2 is_stmt 1 view .LVU284
 1062              	.LVL106:
 1063              	.LBB68:
 1064              	.LBI62:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 1065              		.loc 1 49 6 view .LVU285
 1066              	.LBB65:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1067              		.loc 1 50 2 view .LVU286
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1068              		.loc 1 51 2 view .LVU287
 1069 0018 FFF7FEFF 		bl	GPIO_WriteBits
 1070              	.LVL107:
 1071 001c 1F4F     		ldr	r7, .L70+8
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1072              		.loc 1 52 10 is_stmt 0 view .LVU288
 1073 001e DFF87880 		ldr	r8, .L70+4
 1074              	.L61:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1075              		.loc 1 52 2 is_stmt 1 view .LVU289
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1076              		.loc 1 52 5 view .LVU290
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1077              		.loc 1 52 10 is_stmt 0 view .LVU291
 1078 0022 4046     		mov	r0, r8
 1079 0024 FFF7FEFF 		bl	GPIO_ReadBits
 1080              	.LVL108:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1081              		.loc 1 52 8 view .LVU292
 1082 0028 C0B2     		uxtb	r0, r0
 1083 002a 3870     		strb	r0, [r7]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1084              		.loc 1 52 44 view .LVU293
 1085 002c 3C78     		ldrb	r4, [r7]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1086              		.loc 1 52 2 view .LVU294
 1087 002e 14F00104 		ands	r4, r4, #1
 1088 0032 F6D1     		bne	.L61
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 1089              		.loc 1 53 2 is_stmt 1 view .LVU295
 1090 0034 4FF40071 		mov	r1, #512
 1091 0038 1748     		ldr	r0, .L70+4
 1092 003a FFF7FEFF 		bl	GPIO_WriteBits
 1093              	.LVL109:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1094              		.loc 1 54 2 view .LVU296
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1095              		.loc 1 54 2 is_stmt 0 view .LVU297
 1096 003e 002E     		cmp	r6, #0
 1097 0040 10DD     		ble	.L63
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1098              		.loc 1 56 3 view .LVU298
 1099 0042 DFF85480 		ldr	r8, .L70+4
 1100              	.LVL110:
 1101              	.L62:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 1102              		.loc 1 55 3 is_stmt 1 view .LVU299
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1103              		.loc 1 56 3 view .LVU300
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1104              		.loc 1 56 29 is_stmt 0 view .LVU301
 1105 0046 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1106              		.loc 1 56 3 view .LVU302
 1107 0048 4046     		mov	r0, r8
 1108 004a 07F54071 		add	r1, r7, #768
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1109              		.loc 1 54 16 view .LVU303
 1110 004e 0134     		adds	r4, r4, #1
 1111              	.LVL111:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1112              		.loc 1 56 3 view .LVU304
 1113 0050 FFF7FEFF 		bl	GPIO_WriteBits
 1114              	.LVL112:
  57:../USER/vramdisp.c **** 	}
 1115              		.loc 1 57 3 is_stmt 1 view .LVU305
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1116              		.loc 1 54 16 is_stmt 0 view .LVU306
 1117 0054 E4B2     		uxtb	r4, r4
  57:../USER/vramdisp.c **** 	}
 1118              		.loc 1 57 3 view .LVU307
 1119 0056 07F50071 		add	r1, r7, #512
 1120 005a 4046     		mov	r0, r8
 1121 005c FFF7FEFF 		bl	GPIO_WriteBits
 1122              	.LVL113:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1123              		.loc 1 54 2 view .LVU308
 1124 0060 A642     		cmp	r6, r4
 1125 0062 F0DC     		bgt	.L62
 1126              	.LVL114:
 1127              	.L63:
  59:../USER/vramdisp.c **** }
 1128              		.loc 1 59 2 is_stmt 1 view .LVU309
 1129              	.LBE65:
 1130              	.LBE68:
  87:../USER/vramdisp.c **** }
 1131              		.loc 1 87 1 is_stmt 0 view .LVU310
 1132 0064 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1133              		.cfi_remember_state
 1134              		.cfi_restore 14
 1135              		.cfi_restore 8
 1136              		.cfi_restore 7
 1137              		.cfi_restore 6
 1138              		.cfi_restore 5
 1139              		.cfi_restore 4
 1140              		.cfi_def_cfa_offset 0
 1141              	.LVL115:
 1142              	.LBB69:
 1143              	.LBB66:
  59:../USER/vramdisp.c **** }
 1144              		.loc 1 59 2 view .LVU311
 1145 0068 0021     		movs	r1, #0
 1146 006a 0B48     		ldr	r0, .L70+4
 1147 006c FFF7FEBF 		b	GPIO_WriteBits
 1148              	.LVL116:
 1149              	.L59:
 1150              		.cfi_restore_state
  59:../USER/vramdisp.c **** }
 1151              		.loc 1 59 2 view .LVU312
 1152              	.LBE66:
 1153              	.LBE69:
  82:../USER/vramdisp.c **** 		if(mode==12){ dadr=0; dlen=640*2*(360-10); sadr=640*2*8; }	// Move
 1154              		.loc 1 82 3 is_stmt 1 view .LVU313
  82:../USER/vramdisp.c **** 		if(mode==12){ dadr=0; dlen=640*2*(360-10); sadr=640*2*8; }	// Move
 1155              		.loc 1 82 5 is_stmt 0 view .LVU314
 1156 0070 0A2E     		cmp	r6, #10
 1157 0072 09D0     		beq	.L64
 1158              	.LVL117:
  83:../USER/vramdisp.c **** 	}
 1159              		.loc 1 83 3 is_stmt 1 view .LVU315
 1160 0074 0C2E     		cmp	r6, #12
 1161 0076 0A4B     		ldr	r3, .L70+12
 1162 0078 0BBF     		itete	eq
 1163 007a 4FF42052 		moveq	r2, #10240
 1164              	.LVL118:
  83:../USER/vramdisp.c **** 	}
 1165              		.loc 1 83 3 is_stmt 0 view .LVU316
 1166 007e 0B46     		movne	r3, r1
 1167 0080 0020     		moveq	r0, #0
 1168 0082 4FF0FF30 		movne	r0, #-1
 1169 0086 C1E7     		b	.L60
 1170              	.LVL119:
 1171              	.L64:
  83:../USER/vramdisp.c **** 	}
 1172              		.loc 1 83 3 view .LVU317
 1173 0088 1F22     		movs	r2, #31
 1174              	.LVL120:
  83:../USER/vramdisp.c **** 	}
 1175              		.loc 1 83 3 view .LVU318
 1176 008a 4FF4E123 		mov	r3, #460800
 1177 008e 0020     		movs	r0, #0
 1178              	.LVL121:
  83:../USER/vramdisp.c **** 	}
 1179              		.loc 1 83 3 view .LVU319
 1180 0090 BCE7     		b	.L60
 1181              	.L71:
 1182 0092 00BF     		.align	2
 1183              	.L70:
 1184 0094 00000000 		.word	wddt
 1185 0098 00000140 		.word	1073807360
 1186 009c 00000000 		.word	pd
 1187 00a0 00D60600 		.word	448000
 1188              		.cfi_endproc
 1189              	.LFE35:
 1191              		.section	.text.set_vramm,"ax",%progbits
 1192              		.align	1
 1193              		.p2align 2,,3
 1194              		.global	set_vramm
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu softvfp
 1200              	set_vramm:
 1201              	.LVL122:
 1202              	.LFB36:
  88:../USER/vramdisp.c **** void set_vramm(int adry, int adrx, int ptn, int mask, int loopy, int loopx){
 1203              		.loc 1 88 76 is_stmt 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 8, pretend = 0, frame = 8
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
  89:../USER/vramdisp.c **** 	int adr, x,y;
 1207              		.loc 1 89 2 view .LVU321
  90:../USER/vramdisp.c **** 	unsigned char i, ph, pl, dt;
 1208              		.loc 1 90 2 view .LVU322
  91:../USER/vramdisp.c **** 	if(loopy == -1) loopy = 1;
 1209              		.loc 1 91 2 view .LVU323
  88:../USER/vramdisp.c **** 	int adr, x,y;
 1210              		.loc 1 88 76 is_stmt 0 view .LVU324
 1211 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1212              		.cfi_def_cfa_offset 36
 1213              		.cfi_offset 4, -36
 1214              		.cfi_offset 5, -32
 1215              		.cfi_offset 6, -28
 1216              		.cfi_offset 7, -24
 1217              		.cfi_offset 8, -20
 1218              		.cfi_offset 9, -16
 1219              		.cfi_offset 10, -12
 1220              		.cfi_offset 11, -8
 1221              		.cfi_offset 14, -4
 1222 0004 83B0     		sub	sp, sp, #12
 1223              		.cfi_def_cfa_offset 48
 1224              		.loc 1 91 24 view .LVU325
 1225 0006 0C9D     		ldr	r5, [sp, #48]
 1226 0008 0024     		movs	r4, #0
 1227 000a 6F1C     		adds	r7, r5, #1
 1228 000c 08BF     		it	eq
 1229 000e 0125     		moveq	r5, #1
  92:../USER/vramdisp.c **** 	if(loopx == -1) loopx = 1;
  93:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 1230              		.loc 1 93 20 view .LVU326
 1231 0010 D6B2     		uxtb	r6, r2
  94:../USER/vramdisp.c **** 	for(i=0;i<32;i=i+2){ wddt.b[4+i] = pl; wddt.b[5+i] = ph;}
 1232              		.loc 1 94 35 view .LVU327
 1233 0012 DFF8EC80 		ldr	r8, .L86+8
  91:../USER/vramdisp.c **** 	if(loopx == -1) loopx = 1;
 1234              		.loc 1 91 24 view .LVU328
 1235 0016 0C95     		str	r5, [sp, #48]
 1236              	.LVL123:
  92:../USER/vramdisp.c **** 	if(loopx == -1) loopx = 1;
 1237              		.loc 1 92 2 is_stmt 1 view .LVU329
 1238 0018 66F30704 		bfi	r4, r6, #0, #8
  93:../USER/vramdisp.c **** 	for(i=0;i<32;i=i+2){ wddt.b[4+i] = pl; wddt.b[5+i] = ph;}
 1239              		.loc 1 93 5 is_stmt 0 view .LVU330
 1240 001c C2F30725 		ubfx	r5, r2, #8, #8
 1241              	.LVL124:
  93:../USER/vramdisp.c **** 	for(i=0;i<32;i=i+2){ wddt.b[4+i] = pl; wddt.b[5+i] = ph;}
 1242              		.loc 1 93 5 view .LVU331
 1243 0020 65F30F24 		bfi	r4, r5, #8, #8
  88:../USER/vramdisp.c **** 	int adr, x,y;
 1244              		.loc 1 88 76 view .LVU332
 1245 0024 0D9A     		ldr	r2, [sp, #52]
 1246              	.LVL125:
  88:../USER/vramdisp.c **** 	int adr, x,y;
 1247              		.loc 1 88 76 view .LVU333
 1248 0026 66F31744 		bfi	r4, r6, #16, #8
  95:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1249              		.loc 1 95 13 view .LVU334
 1250 002a 88F82430 		strb	r3, [r8, #36]
  96:../USER/vramdisp.c **** 	for(y=0; y<loopy; y++)
 1251              		.loc 1 96 2 view .LVU335
 1252 002e 0C9B     		ldr	r3, [sp, #48]
 1253              	.LVL126:
 1254              		.loc 1 96 2 view .LVU336
 1255 0030 65F31F64 		bfi	r4, r5, #24, #8
  92:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 1256              		.loc 1 92 24 view .LVU337
 1257 0034 551C     		adds	r5, r2, #1
 1258 0036 08BF     		it	eq
 1259 0038 0122     		moveq	r2, #1
 1260              	.LVL127:
  93:../USER/vramdisp.c **** 	for(i=0;i<32;i=i+2){ wddt.b[4+i] = pl; wddt.b[5+i] = ph;}
 1261              		.loc 1 93 2 is_stmt 1 view .LVU338
  93:../USER/vramdisp.c **** 	for(i=0;i<32;i=i+2){ wddt.b[4+i] = pl; wddt.b[5+i] = ph;}
 1262              		.loc 1 93 17 view .LVU339
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1263              		.loc 1 94 2 view .LVU340
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1264              		.loc 1 94 23 view .LVU341
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1265              		.loc 1 94 41 view .LVU342
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1266              		.loc 1 94 23 view .LVU343
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1267              		.loc 1 94 41 view .LVU344
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1268              		.loc 1 94 23 view .LVU345
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1269              		.loc 1 94 41 view .LVU346
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1270              		.loc 1 94 23 view .LVU347
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1271              		.loc 1 94 41 view .LVU348
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1272              		.loc 1 94 23 view .LVU349
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1273              		.loc 1 94 41 view .LVU350
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1274              		.loc 1 94 23 view .LVU351
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1275              		.loc 1 94 41 view .LVU352
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1276              		.loc 1 94 23 view .LVU353
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1277              		.loc 1 94 41 view .LVU354
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1278              		.loc 1 94 23 view .LVU355
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1279              		.loc 1 94 41 view .LVU356
  95:../USER/vramdisp.c **** 	for(y=0; y<loopy; y++)
 1280              		.loc 1 95 2 view .LVU357
 1281              		.loc 1 96 2 view .LVU358
 1282              		.loc 1 96 2 is_stmt 0 view .LVU359
 1283 003a 002B     		cmp	r3, #0
  94:../USER/vramdisp.c **** 	wddt.b[36] = mask;
 1284              		.loc 1 94 35 view .LVU360
 1285 003c C8E90144 		strd	r4, r4, [r8, #4]
 1286 0040 C8E90344 		strd	r4, r4, [r8, #12]
 1287 0044 C8E90544 		strd	r4, r4, [r8, #20]
 1288 0048 C8E90744 		strd	r4, r4, [r8, #28]
 1289              		.loc 1 96 2 view .LVU361
 1290 004c 51DD     		ble	.L72
 1291 004e 002A     		cmp	r2, #0
 1292 0050 4FDD     		ble	.L72
 1293 0052 00EB8000 		add	r0, r0, r0, lsl #2
 1294              	.LVL128:
 1295              		.loc 1 96 2 view .LVU362
 1296 0056 01EBC001 		add	r1, r1, r0, lsl #3
 1297              	.LVL129:
 1298              		.loc 1 96 2 view .LVU363
 1299 005a 8F18     		adds	r7, r1, r2
 1300 005c C2EBC262 		rsb	r2, r2, r2, lsl #27
 1301              	.LVL130:
 1302              		.loc 1 96 2 view .LVU364
 1303 0060 5301     		lsls	r3, r2, #5
 1304 0062 0193     		str	r3, [sp, #4]
 1305              		.loc 1 96 7 view .LVU365
 1306 0064 0023     		movs	r3, #0
 1307 0066 244D     		ldr	r5, .L86
 1308              	.LBB76:
 1309              	.LBB77:
 1310              	.LBB78:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1311              		.loc 1 20 2 view .LVU366
 1312 0068 244C     		ldr	r4, .L86+4
 1313 006a 7F01     		lsls	r7, r7, #5
 1314              	.LBE78:
 1315              	.LBE77:
 1316              	.LBE76:
 1317              		.loc 1 96 7 view .LVU367
 1318 006c 0093     		str	r3, [sp]
 1319 006e 08F12409 		add	r9, r8, #36
 1320              	.LVL131:
 1321              	.L76:
 1322              		.loc 1 96 7 view .LVU368
 1323 0072 019B     		ldr	r3, [sp, #4]
 1324 0074 FE18     		adds	r6, r7, r3
 1325              	.LVL132:
 1326              	.L80:
  97:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1327              		.loc 1 97 28 is_stmt 1 discriminator 3 view .LVU369
 1328              	.LBB87:
 1329              	.LBI76:
  74:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 1330              		.loc 1 74 6 discriminator 3 view .LVU370
 1331              	.LBE87:
  75:../USER/vramdisp.c **** 	set_vramdata(37);
 1332              		.loc 1 75 2 discriminator 3 view .LVU371
 1333              	.LBB88:
 1334              	.LBB81:
 1335              	.LBI77:
  17:../USER/vramdisp.c **** 	int adr;
 1336              		.loc 1 17 6 discriminator 3 view .LVU372
 1337              	.LBB79:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 1338              		.loc 1 18 2 discriminator 3 view .LVU373
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1339              		.loc 1 19 2 discriminator 3 view .LVU374
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1340              		.loc 1 20 2 discriminator 3 view .LVU375
 1341 0076 0021     		movs	r1, #0
 1342 0078 2046     		mov	r0, r4
 1343 007a FFF7FEFF 		bl	GPIO_WriteBits
 1344              	.LVL133:
 1345              	.L77:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1346              		.loc 1 21 2 view .LVU376
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1347              		.loc 1 21 5 view .LVU377
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1348              		.loc 1 21 10 is_stmt 0 view .LVU378
 1349 007e 2046     		mov	r0, r4
 1350 0080 FFF7FEFF 		bl	GPIO_ReadBits
 1351              	.LVL134:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1352              		.loc 1 21 8 view .LVU379
 1353 0084 C0B2     		uxtb	r0, r0
 1354 0086 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1355              		.loc 1 21 44 view .LVU380
 1356 0088 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1357              		.loc 1 21 2 view .LVU381
 1358 008a 11F00101 		ands	r1, r1, #1
 1359 008e F6D1     		bne	.L77
  22:../USER/vramdisp.c **** }
 1360              		.loc 1 22 2 is_stmt 1 view .LVU382
 1361              	.LBE79:
 1362              	.LBE81:
 1363              	.LBB82:
 1364              	.LBB83:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1365              		.loc 1 51 2 is_stmt 0 view .LVU383
 1366 0090 2046     		mov	r0, r4
 1367              	.LBE83:
 1368              	.LBE82:
 1369              	.LBB85:
 1370              	.LBB80:
  22:../USER/vramdisp.c **** }
 1371              		.loc 1 22 12 view .LVU384
 1372 0092 C8F80060 		str	r6, [r8]
 1373              	.LVL135:
  22:../USER/vramdisp.c **** }
 1374              		.loc 1 22 12 view .LVU385
 1375              	.LBE80:
 1376              	.LBE85:
 1377              	.LBE88:
  76:../USER/vramdisp.c **** }
 1378              		.loc 1 76 2 is_stmt 1 view .LVU386
 1379              	.LBB89:
 1380              	.LBB86:
 1381              	.LBI82:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 1382              		.loc 1 49 6 view .LVU387
 1383              	.LBB84:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1384              		.loc 1 50 2 view .LVU388
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1385              		.loc 1 51 2 view .LVU389
 1386 0096 FFF7FEFF 		bl	GPIO_WriteBits
 1387              	.LVL136:
 1388              	.L78:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1389              		.loc 1 52 2 view .LVU390
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1390              		.loc 1 52 5 view .LVU391
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1391              		.loc 1 52 10 is_stmt 0 view .LVU392
 1392 009a 2046     		mov	r0, r4
 1393 009c FFF7FEFF 		bl	GPIO_ReadBits
 1394              	.LVL137:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1395              		.loc 1 52 8 view .LVU393
 1396 00a0 C0B2     		uxtb	r0, r0
 1397 00a2 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1398              		.loc 1 52 44 view .LVU394
 1399 00a4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1400              		.loc 1 52 2 view .LVU395
 1401 00a6 DB07     		lsls	r3, r3, #31
 1402 00a8 F7D4     		bmi	.L78
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 1403              		.loc 1 53 2 is_stmt 1 view .LVU396
 1404 00aa 4FF40071 		mov	r1, #512
 1405 00ae 2046     		mov	r0, r4
 1406 00b0 FFF7FEFF 		bl	GPIO_WriteBits
 1407              	.LVL138:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1408              		.loc 1 54 2 view .LVU397
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1409              		.loc 1 54 2 is_stmt 0 view .LVU398
 1410 00b4 DFF84CA0 		ldr	r10, .L86+12
 1411              	.LVL139:
 1412              	.L79:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 1413              		.loc 1 55 3 is_stmt 1 view .LVU399
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1414              		.loc 1 56 3 view .LVU400
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1415              		.loc 1 56 29 is_stmt 0 view .LVU401
 1416 00b8 1AF801BF 		ldrb	fp, [r10, #1]!	@ zero_extendqisi2
 1417              	.LVL140:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1418              		.loc 1 56 3 view .LVU402
 1419 00bc 2046     		mov	r0, r4
 1420 00be 0BF54071 		add	r1, fp, #768
 1421 00c2 FFF7FEFF 		bl	GPIO_WriteBits
 1422              	.LVL141:
  57:../USER/vramdisp.c **** 	}
 1423              		.loc 1 57 3 is_stmt 1 view .LVU403
 1424 00c6 0BF50071 		add	r1, fp, #512
 1425 00ca 2046     		mov	r0, r4
 1426 00cc FFF7FEFF 		bl	GPIO_WriteBits
 1427              	.LVL142:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1428              		.loc 1 54 2 is_stmt 0 view .LVU404
 1429 00d0 CA45     		cmp	r10, r9
 1430 00d2 F1D1     		bne	.L79
  59:../USER/vramdisp.c **** }
 1431              		.loc 1 59 2 is_stmt 1 view .LVU405
 1432 00d4 2036     		adds	r6, r6, #32
 1433 00d6 0021     		movs	r1, #0
 1434 00d8 2046     		mov	r0, r4
 1435 00da FFF7FEFF 		bl	GPIO_WriteBits
 1436              	.LVL143:
  59:../USER/vramdisp.c **** }
 1437              		.loc 1 59 2 is_stmt 0 view .LVU406
 1438              	.LBE84:
 1439              	.LBE86:
 1440              	.LBE89:
 1441              		.loc 1 97 3 view .LVU407
 1442 00de B742     		cmp	r7, r6
 1443 00e0 C9D1     		bne	.L80
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1444              		.loc 1 96 21 view .LVU408
 1445 00e2 009B     		ldr	r3, [sp]
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1446              		.loc 1 96 2 view .LVU409
 1447 00e4 0C9A     		ldr	r2, [sp, #48]
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1448              		.loc 1 96 21 view .LVU410
 1449 00e6 0133     		adds	r3, r3, #1
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1450              		.loc 1 96 2 view .LVU411
 1451 00e8 9A42     		cmp	r2, r3
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1452              		.loc 1 96 21 view .LVU412
 1453 00ea 0093     		str	r3, [sp]
 1454              	.LVL144:
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1455              		.loc 1 96 21 view .LVU413
 1456 00ec 07F5A067 		add	r7, r7, #1280
  96:../USER/vramdisp.c **** 		for(x=0; x<loopx; x++) { set_vram(adry+y, adrx+x); }
 1457              		.loc 1 96 2 view .LVU414
 1458 00f0 BFD1     		bne	.L76
 1459              	.LVL145:
 1460              	.L72:
  98:../USER/vramdisp.c ****  }
 1461              		.loc 1 98 2 view .LVU415
 1462 00f2 03B0     		add	sp, sp, #12
 1463              		.cfi_def_cfa_offset 36
 1464              		@ sp needed
 1465 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1466              	.LVL146:
 1467              	.L87:
 1468              		.loc 1 98 2 view .LVU416
 1469              		.align	2
 1470              	.L86:
 1471 00f8 00000000 		.word	pd
 1472 00fc 00000140 		.word	1073807360
 1473 0100 00000000 		.word	wddt
 1474 0104 FFFFFFFF 		.word	wddt-1
 1475              		.cfi_endproc
 1476              	.LFE36:
 1478              		.section	.text.dispscroll,"ax",%progbits
 1479              		.align	1
 1480              		.p2align 2,,3
 1481              		.global	dispscroll
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1485              		.fpu softvfp
 1487              	dispscroll:
 1488              	.LVL147:
 1489              	.LFB37:
  99:../USER/vramdisp.c **** 
 100:../USER/vramdisp.c **** void dispscroll(int adry, int adrx){
 1490              		.loc 1 100 36 is_stmt 1 view -0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 8
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 101:../USER/vramdisp.c **** 	int sbeg=8, send=16, stop=0, xlen=1;
 1494              		.loc 1 101 2 view .LVU418
 102:../USER/vramdisp.c **** 	int x,y;
 1495              		.loc 1 102 2 view .LVU419
 103:../USER/vramdisp.c **** 
 104:../USER/vramdisp.c **** 	for(y=0; y<adry; y++){ //puth2(y); fflush(2);
 1496              		.loc 1 104 2 view .LVU420
 1497              		.loc 1 104 2 is_stmt 0 view .LVU421
 1498 0000 0028     		cmp	r0, #0
 1499              		.loc 1 104 2 view .LVU422
 1500 0002 40F3A880 		ble	.L108
 1501 0006 0029     		cmp	r1, #0
 1502 0008 40F3A580 		ble	.L108
 100:../USER/vramdisp.c **** 	int sbeg=8, send=16, stop=0, xlen=1;
 1503              		.loc 1 100 36 view .LVU423
 1504 000c 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1505              		.cfi_def_cfa_offset 36
 1506              		.cfi_offset 4, -36
 1507              		.cfi_offset 5, -32
 1508              		.cfi_offset 6, -28
 1509              		.cfi_offset 7, -24
 1510              		.cfi_offset 8, -20
 1511              		.cfi_offset 9, -16
 1512              		.cfi_offset 10, -12
 1513              		.cfi_offset 11, -8
 1514              		.cfi_offset 14, -4
 1515 0010 00EB8000 		add	r0, r0, r0, lsl #2
 1516              	.LVL148:
 100:../USER/vramdisp.c **** 	int sbeg=8, send=16, stop=0, xlen=1;
 1517              		.loc 1 100 36 view .LVU424
 1518 0014 C300     		lsls	r3, r0, #3
 1519 0016 83B0     		sub	sp, sp, #12
 1520              		.cfi_def_cfa_offset 48
 1521 0018 03F5A073 		add	r3, r3, #320
 1522 001c DFF84091 		ldr	r9, .L111+8
 1523 0020 0193     		str	r3, [sp, #4]
 1524              		.loc 1 104 2 view .LVU425
 1525 0022 4FF4A073 		mov	r3, #320
 1526              	.LBB102:
 1527              	.LBB103:
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 1528              		.loc 1 40 2 view .LVU426
 1529 0026 C846     		mov	r8, r9
 1530 0028 4B4D     		ldr	r5, .L111
 1531              	.LBB104:
 1532              	.LBB105:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1533              		.loc 1 20 2 view .LVU427
 1534 002a 4C4C     		ldr	r4, .L111+4
 1535 002c 4FEA411A 		lsl	r10, r1, #5
 1536              	.LBE105:
 1537              	.LBE104:
 1538              	.LBE103:
 1539              	.LBE102:
 1540              		.loc 1 104 2 view .LVU428
 1541 0030 0093     		str	r3, [sp]
 1542              	.LVL149:
 1543              	.L90:
 1544              		.loc 1 104 2 view .LVU429
 1545 0032 009B     		ldr	r3, [sp]
 1546 0034 5E01     		lsls	r6, r3, #5
 1547 0036 A6F52056 		sub	r6, r6, #10240
 1548              	.LVL150:
 1549              	.L98:
 105:../USER/vramdisp.c **** 		for(x=0; x<adrx; x++){
 106:../USER/vramdisp.c **** 			get_vram(sbeg, x); wddt.b[36] = 0xff; // mask
 1550              		.loc 1 106 4 is_stmt 1 view .LVU430
 1551              	.LBB113:
 1552              	.LBI102:
  36:../USER/vramdisp.c **** 	unsigned char i,dt;
 1553              		.loc 1 36 6 view .LVU431
 1554              	.LBB112:
  37:../USER/vramdisp.c **** 	if(adry==-1) { adry=0; adrx=0;}
 1555              		.loc 1 37 2 view .LVU432
  38:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 1556              		.loc 1 38 2 view .LVU433
  39:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1557              		.loc 1 39 2 view .LVU434
 1558              	.LBB108:
 1559              	.LBI104:
  17:../USER/vramdisp.c **** 	int adr;
 1560              		.loc 1 17 6 view .LVU435
 1561              	.LBB106:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 1562              		.loc 1 18 2 view .LVU436
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1563              		.loc 1 19 2 view .LVU437
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1564              		.loc 1 20 2 view .LVU438
 1565 003a 0021     		movs	r1, #0
 1566 003c 2046     		mov	r0, r4
 1567 003e FFF7FEFF 		bl	GPIO_WriteBits
 1568              	.LVL151:
 1569              	.L91:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1570              		.loc 1 21 2 view .LVU439
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1571              		.loc 1 21 5 view .LVU440
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1572              		.loc 1 21 10 is_stmt 0 view .LVU441
 1573 0042 2046     		mov	r0, r4
 1574 0044 FFF7FEFF 		bl	GPIO_ReadBits
 1575              	.LVL152:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1576              		.loc 1 21 8 view .LVU442
 1577 0048 C0B2     		uxtb	r0, r0
 1578 004a 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1579              		.loc 1 21 44 view .LVU443
 1580 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1581              		.loc 1 21 2 view .LVU444
 1582 004e D907     		lsls	r1, r3, #31
 1583 0050 F7D4     		bmi	.L91
  22:../USER/vramdisp.c **** }
 1584              		.loc 1 22 2 is_stmt 1 view .LVU445
  22:../USER/vramdisp.c **** }
 1585              		.loc 1 22 12 is_stmt 0 view .LVU446
 1586 0052 06F52053 		add	r3, r6, #10240
 1587              	.LBE106:
 1588              	.LBE108:
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 1589              		.loc 1 40 2 view .LVU447
 1590 0056 4FF40071 		mov	r1, #512
 1591 005a 2046     		mov	r0, r4
 1592              	.LBB109:
 1593              	.LBB107:
  22:../USER/vramdisp.c **** }
 1594              		.loc 1 22 12 view .LVU448
 1595 005c C9F80030 		str	r3, [r9]
 1596              	.LVL153:
  22:../USER/vramdisp.c **** }
 1597              		.loc 1 22 12 view .LVU449
 1598              	.LBE107:
 1599              	.LBE109:
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 1600              		.loc 1 40 2 is_stmt 1 view .LVU450
 1601 0060 FFF7FEFF 		bl	GPIO_WriteBits
 1602              	.LVL154:
  41:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1603              		.loc 1 41 2 view .LVU451
  40:../USER/vramdisp.c **** 	for(i=0;i<4;i++){	// send addr
 1604              		.loc 1 40 2 is_stmt 0 view .LVU452
 1605 0064 C146     		mov	r9, r8
 1606 0066 3E4F     		ldr	r7, .L111+8
 1607              	.LVL155:
 1608              	.L92:
  42:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1609              		.loc 1 42 3 is_stmt 1 view .LVU453
  42:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1610              		.loc 1 42 6 is_stmt 0 view .LVU454
 1611 0068 17F801BB 		ldrb	fp, [r7], #1	@ zero_extendqisi2
 1612              	.LVL156:
  43:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 1613              		.loc 1 43 3 is_stmt 1 view .LVU455
 1614 006c 2046     		mov	r0, r4
 1615 006e 0BF50071 		add	r1, fp, #512
 1616 0072 FFF7FEFF 		bl	GPIO_WriteBits
 1617              	.LVL157:
  44:../USER/vramdisp.c **** 	}
 1618              		.loc 1 44 3 view .LVU456
 1619 0076 0BF54071 		add	r1, fp, #768
 1620 007a 2046     		mov	r0, r4
 1621 007c FFF7FEFF 		bl	GPIO_WriteBits
 1622              	.LVL158:
  41:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1623              		.loc 1 41 2 is_stmt 0 view .LVU457
 1624 0080 384B     		ldr	r3, .L111+12
 1625 0082 BB42     		cmp	r3, r7
 1626 0084 F0D1     		bne	.L92
  46:../USER/vramdisp.c **** }
 1627              		.loc 1 46 2 is_stmt 1 view .LVU458
 1628              	.LVL159:
 1629              	.LBB110:
 1630              	.LBI110:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 1631              		.loc 1 24 6 view .LVU459
 1632              	.LBB111:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1633              		.loc 1 25 2 view .LVU460
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1634              		.loc 1 26 2 view .LVU461
 1635 0086 0021     		movs	r1, #0
 1636 0088 2046     		mov	r0, r4
 1637 008a FFF7FEFF 		bl	GPIO_WriteBits
 1638              	.LVL160:
 1639              	.L93:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 1640              		.loc 1 27 2 view .LVU462
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 1641              		.loc 1 27 5 view .LVU463
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 1642              		.loc 1 27 10 is_stmt 0 view .LVU464
 1643 008e 2046     		mov	r0, r4
 1644 0090 FFF7FEFF 		bl	GPIO_ReadBits
 1645              	.LVL161:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 1646              		.loc 1 27 8 view .LVU465
 1647 0094 C0B2     		uxtb	r0, r0
 1648 0096 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 1649              		.loc 1 27 44 view .LVU466
 1650 0098 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 1651              		.loc 1 27 2 view .LVU467
 1652 009a DA07     		lsls	r2, r3, #31
 1653 009c F7D4     		bmi	.L93
 1654 009e 324F     		ldr	r7, .L111+16
 1655              	.LVL162:
 1656              	.L94:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 1657              		.loc 1 29 3 is_stmt 1 view .LVU468
 1658 00a0 4FF48071 		mov	r1, #256
 1659 00a4 2046     		mov	r0, r4
 1660 00a6 FFF7FEFF 		bl	GPIO_WriteBits
 1661              	.LVL163:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 1662              		.loc 1 30 3 view .LVU469
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 1663              		.loc 1 30 17 is_stmt 0 view .LVU470
 1664 00aa 2046     		mov	r0, r4
 1665 00ac FFF7FEFF 		bl	GPIO_ReadBits
 1666              	.LVL164:
  31:../USER/vramdisp.c **** 	}
 1667              		.loc 1 31 3 view .LVU471
 1668 00b0 0021     		movs	r1, #0
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 1669              		.loc 1 30 15 view .LVU472
 1670 00b2 07F8010F 		strb	r0, [r7, #1]!
 1671              	.LVL165:
  31:../USER/vramdisp.c **** 	}
 1672              		.loc 1 31 3 is_stmt 1 view .LVU473
 1673 00b6 2046     		mov	r0, r4
 1674 00b8 FFF7FEFF 		bl	GPIO_WriteBits
 1675              	.LVL166:
  28:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x100);
 1676              		.loc 1 28 2 is_stmt 0 view .LVU474
 1677 00bc 2B4B     		ldr	r3, .L111+20
 1678 00be BB42     		cmp	r3, r7
 1679 00c0 EED1     		bne	.L94
  33:../USER/vramdisp.c **** 
 1680              		.loc 1 33 2 is_stmt 1 view .LVU475
 1681 00c2 0021     		movs	r1, #0
 1682 00c4 2046     		mov	r0, r4
 1683 00c6 FFF7FEFF 		bl	GPIO_WriteBits
 1684              	.LVL167:
  33:../USER/vramdisp.c **** 
 1685              		.loc 1 33 2 is_stmt 0 view .LVU476
 1686              	.LBE111:
 1687              	.LBE110:
 1688              	.LBE112:
 1689              	.LBE113:
 1690              		.loc 1 106 23 is_stmt 1 view .LVU477
 1691              		.loc 1 106 34 is_stmt 0 view .LVU478
 1692 00ca FF23     		movs	r3, #255
 1693              	.LBB114:
 1694              	.LBB115:
 1695              	.LBB116:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1696              		.loc 1 20 2 view .LVU479
 1697 00cc 0021     		movs	r1, #0
 1698 00ce 2046     		mov	r0, r4
 1699              	.LBE116:
 1700              	.LBE115:
 1701              	.LBE114:
 1702              		.loc 1 106 34 view .LVU480
 1703 00d0 88F82430 		strb	r3, [r8, #36]
 107:../USER/vramdisp.c **** 			set_vram(stop, x);
 1704              		.loc 1 107 4 is_stmt 1 view .LVU481
 1705              	.LBB125:
 1706              	.LBI114:
  74:../USER/vramdisp.c **** 	set_vramadr(adry, adrx);
 1707              		.loc 1 74 6 view .LVU482
 1708              	.LBE125:
  75:../USER/vramdisp.c **** 	set_vramdata(37);
 1709              		.loc 1 75 2 view .LVU483
 1710              	.LBB126:
 1711              	.LBB119:
 1712              	.LBI115:
  17:../USER/vramdisp.c **** 	int adr;
 1713              		.loc 1 17 6 view .LVU484
 1714              	.LBB117:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 1715              		.loc 1 18 2 view .LVU485
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1716              		.loc 1 19 2 view .LVU486
 1717              	.LVL168:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1718              		.loc 1 20 2 view .LVU487
 1719 00d4 FFF7FEFF 		bl	GPIO_WriteBits
 1720              	.LVL169:
 1721              	.L95:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1722              		.loc 1 21 2 view .LVU488
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1723              		.loc 1 21 5 view .LVU489
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1724              		.loc 1 21 10 is_stmt 0 view .LVU490
 1725 00d8 2046     		mov	r0, r4
 1726 00da FFF7FEFF 		bl	GPIO_ReadBits
 1727              	.LVL170:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1728              		.loc 1 21 8 view .LVU491
 1729 00de C0B2     		uxtb	r0, r0
 1730 00e0 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1731              		.loc 1 21 44 view .LVU492
 1732 00e2 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1733              		.loc 1 21 2 view .LVU493
 1734 00e4 11F00101 		ands	r1, r1, #1
 1735 00e8 F6D1     		bne	.L95
  22:../USER/vramdisp.c **** }
 1736              		.loc 1 22 2 is_stmt 1 view .LVU494
 1737              	.LBE117:
 1738              	.LBE119:
 1739              	.LBB120:
 1740              	.LBB121:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1741              		.loc 1 51 2 is_stmt 0 view .LVU495
 1742 00ea 2046     		mov	r0, r4
 1743              	.LBE121:
 1744              	.LBE120:
 1745              	.LBB123:
 1746              	.LBB118:
  22:../USER/vramdisp.c **** }
 1747              		.loc 1 22 12 view .LVU496
 1748 00ec C8F80060 		str	r6, [r8]
 1749              	.LVL171:
  22:../USER/vramdisp.c **** }
 1750              		.loc 1 22 12 view .LVU497
 1751              	.LBE118:
 1752              	.LBE123:
 1753              	.LBE126:
  76:../USER/vramdisp.c **** }
 1754              		.loc 1 76 2 is_stmt 1 view .LVU498
 1755              	.LBB127:
 1756              	.LBB124:
 1757              	.LBI120:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 1758              		.loc 1 49 6 view .LVU499
 1759              	.LBB122:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1760              		.loc 1 50 2 view .LVU500
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1761              		.loc 1 51 2 view .LVU501
 1762 00f0 FFF7FEFF 		bl	GPIO_WriteBits
 1763              	.LVL172:
 1764              	.L96:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1765              		.loc 1 52 2 view .LVU502
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1766              		.loc 1 52 5 view .LVU503
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1767              		.loc 1 52 10 is_stmt 0 view .LVU504
 1768 00f4 2046     		mov	r0, r4
 1769 00f6 FFF7FEFF 		bl	GPIO_ReadBits
 1770              	.LVL173:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1771              		.loc 1 52 8 view .LVU505
 1772 00fa C0B2     		uxtb	r0, r0
 1773 00fc 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1774              		.loc 1 52 44 view .LVU506
 1775 00fe 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 1776              		.loc 1 52 2 view .LVU507
 1777 0100 DB07     		lsls	r3, r3, #31
 1778 0102 F7D4     		bmi	.L96
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 1779              		.loc 1 53 2 is_stmt 1 view .LVU508
 1780 0104 4FF40071 		mov	r1, #512
 1781 0108 2046     		mov	r0, r4
 1782 010a FFF7FEFF 		bl	GPIO_WriteBits
 1783              	.LVL174:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1784              		.loc 1 54 2 view .LVU509
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1785              		.loc 1 54 2 is_stmt 0 view .LVU510
 1786 010e 184F     		ldr	r7, .L111+24
 1787              	.LVL175:
 1788              	.L97:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 1789              		.loc 1 55 3 is_stmt 1 view .LVU511
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1790              		.loc 1 56 3 view .LVU512
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1791              		.loc 1 56 29 is_stmt 0 view .LVU513
 1792 0110 17F801BF 		ldrb	fp, [r7, #1]!	@ zero_extendqisi2
 1793              	.LVL176:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 1794              		.loc 1 56 3 view .LVU514
 1795 0114 2046     		mov	r0, r4
 1796 0116 0BF54071 		add	r1, fp, #768
 1797 011a FFF7FEFF 		bl	GPIO_WriteBits
 1798              	.LVL177:
  57:../USER/vramdisp.c **** 	}
 1799              		.loc 1 57 3 is_stmt 1 view .LVU515
 1800 011e 0BF50071 		add	r1, fp, #512
 1801 0122 2046     		mov	r0, r4
 1802 0124 FFF7FEFF 		bl	GPIO_WriteBits
 1803              	.LVL178:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 1804              		.loc 1 54 2 is_stmt 0 view .LVU516
 1805 0128 124B     		ldr	r3, .L111+28
 1806 012a 9F42     		cmp	r7, r3
 1807 012c F0D1     		bne	.L97
  59:../USER/vramdisp.c **** }
 1808              		.loc 1 59 2 is_stmt 1 view .LVU517
 1809 012e 2036     		adds	r6, r6, #32
 1810 0130 0021     		movs	r1, #0
 1811 0132 2046     		mov	r0, r4
 1812 0134 FFF7FEFF 		bl	GPIO_WriteBits
 1813              	.LVL179:
  59:../USER/vramdisp.c **** }
 1814              		.loc 1 59 2 is_stmt 0 view .LVU518
 1815              	.LBE122:
 1816              	.LBE124:
 1817              	.LBE127:
 105:../USER/vramdisp.c **** 			get_vram(sbeg, x); wddt.b[36] = 0xff; // mask
 1818              		.loc 1 105 3 view .LVU519
 1819 0138 5645     		cmp	r6, r10
 1820 013a 7FF47EAF 		bne	.L98
 108:../USER/vramdisp.c **** 		}
 109:../USER/vramdisp.c **** 		sbeg++; stop++;
 1821              		.loc 1 109 3 is_stmt 1 view .LVU520
 1822              		.loc 1 109 11 view .LVU521
 1823              		.loc 1 109 11 is_stmt 0 view .LVU522
 1824 013e 009B     		ldr	r3, [sp]
 104:../USER/vramdisp.c **** 		for(x=0; x<adrx; x++){
 1825              		.loc 1 104 2 view .LVU523
 1826 0140 019A     		ldr	r2, [sp, #4]
 1827 0142 2833     		adds	r3, r3, #40
 1828 0144 9A42     		cmp	r2, r3
 1829 0146 0093     		str	r3, [sp]
 1830 0148 0AF5A06A 		add	r10, r10, #1280
 1831 014c 7FF471AF 		bne	.L90
 110:../USER/vramdisp.c **** 	}
 111:../USER/vramdisp.c **** }
 1832              		.loc 1 111 1 view .LVU524
 1833 0150 03B0     		add	sp, sp, #12
 1834              		.cfi_def_cfa_offset 36
 1835              		@ sp needed
 1836 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1837              	.LVL180:
 1838              	.L108:
 1839              		.cfi_def_cfa_offset 0
 1840              		.cfi_restore 4
 1841              		.cfi_restore 5
 1842              		.cfi_restore 6
 1843              		.cfi_restore 7
 1844              		.cfi_restore 8
 1845              		.cfi_restore 9
 1846              		.cfi_restore 10
 1847              		.cfi_restore 11
 1848              		.cfi_restore 14
 1849              		.loc 1 111 1 view .LVU525
 1850 0156 7047     		bx	lr
 1851              	.L112:
 1852              		.align	2
 1853              	.L111:
 1854 0158 00000000 		.word	pd
 1855 015c 00000140 		.word	1073807360
 1856 0160 00000000 		.word	wddt
 1857 0164 04000000 		.word	wddt+4
 1858 0168 03000000 		.word	wddt+3
 1859 016c 23000000 		.word	wddt+35
 1860 0170 FFFFFFFF 		.word	wddt-1
 1861 0174 24000000 		.word	wddt+36
 1862              		.cfi_endproc
 1863              	.LFE37:
 1865              		.section	.text.set_char,"ax",%progbits
 1866              		.align	1
 1867              		.p2align 2,,3
 1868              		.global	set_char
 1869              		.syntax unified
 1870              		.thumb
 1871              		.thumb_func
 1872              		.fpu softvfp
 1874              	set_char:
 1875              	.LVL181:
 1876              	.LFB38:
 112:../USER/vramdisp.c **** 
 113:../USER/vramdisp.c **** #define maxdy 360
 114:../USER/vramdisp.c **** #define chardh 10
 115:../USER/vramdisp.c **** void set_char(int adry, int adrx, int ptn, int ccd){
 1877              		.loc 1 115 52 is_stmt 1 view -0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 116:../USER/vramdisp.c **** 	int adr, bp;
 1881              		.loc 1 116 2 view .LVU527
 117:../USER/vramdisp.c **** 	unsigned char i, j, cgd, ph, pl;
 1882              		.loc 1 117 2 view .LVU528
 118:../USER/vramdisp.c **** 	ccd = ccd * 8; // font.ddr
 1883              		.loc 1 118 2 view .LVU529
 119:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 1884              		.loc 1 119 2 view .LVU530
 1885              		.loc 1 119 17 view .LVU531
 120:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 1886              		.loc 1 120 2 view .LVU532
 1887 0000 4FF4C872 		mov	r2, #400
 1888              	.LVL182:
 1889              		.loc 1 120 28 is_stmt 0 view .LVU533
 1890 0004 11F0010F 		tst	r1, #1
 1891 0008 14BF     		ite	ne
 1892 000a 4FF00F0C 		movne	ip, #15
 1893 000e 4FF0F00C 		moveq	ip, #240
 1894 0012 02FB00F0 		mul	r0, r2, r0
 1895              	.LVL183:
 115:../USER/vramdisp.c **** 	int adr, bp;
 1896              		.loc 1 115 52 view .LVU534
 1897 0016 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1898              		.cfi_def_cfa_offset 32
 1899              		.cfi_offset 4, -32
 1900              		.cfi_offset 5, -28
 1901              		.cfi_offset 6, -24
 1902              		.cfi_offset 7, -20
 1903              		.cfi_offset 8, -16
 1904              		.cfi_offset 9, -12
 1905              		.cfi_offset 10, -8
 1906              		.cfi_offset 14, -4
 121:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 122:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 123:../USER/vramdisp.c **** 		wddt.b[4] = cgd;
 124:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 1907              		.loc 1 124 3 view .LVU535
 1908 001a 01EBD171 		add	r1, r1, r1, lsr #31
 1909              	.LVL184:
 1910              		.loc 1 124 3 view .LVU536
 1911 001e DFF85C80 		ldr	r8, .L121+8
 1912 0022 DC00     		lsls	r4, r3, #3
 1913              	.LVL185:
 1914              		.loc 1 124 3 view .LVU537
 1915 0024 00EB6100 		add	r0, r0, r1, asr #1
 1916 0028 DFF854A0 		ldr	r10, .L121+12
 1917 002c 114E     		ldr	r6, .L121
 1918              	.LBB130:
 1919              	.LBB131:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1920              		.loc 1 20 2 view .LVU538
 1921 002e 124F     		ldr	r7, .L121+4
 1922 0030 4501     		lsls	r5, r0, #5
 1923 0032 88F805C0 		strb	ip, [r8, #5]
 1924              	.LVL186:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1925              		.loc 1 20 2 view .LVU539
 1926 0036 04F10809 		add	r9, r4, #8
 1927              	.LVL187:
 1928              	.L116:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1929              		.loc 1 20 2 view .LVU540
 1930              	.LBE131:
 1931              	.LBE130:
 122:../USER/vramdisp.c **** 		wddt.b[4] = cgd;
 1932              		.loc 1 122 3 is_stmt 1 discriminator 3 view .LVU541
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 1933              		.loc 1 123 3 discriminator 3 view .LVU542
 122:../USER/vramdisp.c **** 		wddt.b[4] = cgd;
 1934              		.loc 1 122 25 is_stmt 0 discriminator 3 view .LVU543
 1935 003a C4F30A03 		ubfx	r3, r4, #0, #11
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 1936              		.loc 1 123 13 discriminator 3 view .LVU544
 1937 003e 1AF80330 		ldrb	r3, [r10, r3]	@ zero_extendqisi2
 1938              	.LBB134:
 1939              	.LBB132:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1940              		.loc 1 20 2 discriminator 3 view .LVU545
 1941 0042 0021     		movs	r1, #0
 1942 0044 3846     		mov	r0, r7
 1943              	.LBE132:
 1944              	.LBE134:
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 1945              		.loc 1 123 13 discriminator 3 view .LVU546
 1946 0046 88F80430 		strb	r3, [r8, #4]
 1947              		.loc 1 124 3 is_stmt 1 discriminator 3 view .LVU547
 1948              	.LVL188:
 1949              	.LBB135:
 1950              	.LBI130:
  17:../USER/vramdisp.c **** 	int adr;
 1951              		.loc 1 17 6 discriminator 3 view .LVU548
 1952              	.LBB133:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 1953              		.loc 1 18 2 discriminator 3 view .LVU549
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 1954              		.loc 1 19 2 discriminator 3 view .LVU550
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 1955              		.loc 1 20 2 discriminator 3 view .LVU551
 1956 004a FFF7FEFF 		bl	GPIO_WriteBits
 1957              	.LVL189:
 1958              	.L115:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1959              		.loc 1 21 2 view .LVU552
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1960              		.loc 1 21 5 view .LVU553
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1961              		.loc 1 21 10 is_stmt 0 view .LVU554
 1962 004e 3846     		mov	r0, r7
 1963 0050 FFF7FEFF 		bl	GPIO_ReadBits
 1964              	.LVL190:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1965              		.loc 1 21 8 view .LVU555
 1966 0054 C0B2     		uxtb	r0, r0
 1967 0056 3070     		strb	r0, [r6]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1968              		.loc 1 21 44 view .LVU556
 1969 0058 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 1970              		.loc 1 21 2 view .LVU557
 1971 005a DB07     		lsls	r3, r3, #31
 1972 005c F7D4     		bmi	.L115
  22:../USER/vramdisp.c **** }
 1973              		.loc 1 22 2 is_stmt 1 view .LVU558
 1974 005e 0134     		adds	r4, r4, #1
 1975              	.LVL191:
  22:../USER/vramdisp.c **** }
 1976              		.loc 1 22 12 is_stmt 0 view .LVU559
 1977 0060 C8F80050 		str	r5, [r8]
 1978              	.LVL192:
  22:../USER/vramdisp.c **** }
 1979              		.loc 1 22 12 view .LVU560
 1980              	.LBE133:
 1981              	.LBE135:
 125:../USER/vramdisp.c **** 		set_vramdata_f6(6);
 1982              		.loc 1 125 3 is_stmt 1 view .LVU561
 1983 0064 FFF7FEFF 		bl	set_vramdata_f6.constprop.1
 1984              	.LVL193:
 121:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 1985              		.loc 1 121 2 is_stmt 0 view .LVU562
 1986 0068 4C45     		cmp	r4, r9
 1987 006a 05F5A065 		add	r5, r5, #1280
 1988 006e E4D1     		bne	.L116
 126:../USER/vramdisp.c **** 	}
 127:../USER/vramdisp.c **** }
 1989              		.loc 1 127 1 view .LVU563
 1990 0070 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1991              	.LVL194:
 1992              	.L122:
 1993              		.loc 1 127 1 view .LVU564
 1994              		.align	2
 1995              	.L121:
 1996 0074 00000000 		.word	pd
 1997 0078 00000140 		.word	1073807360
 1998 007c 00000000 		.word	wddt
 1999 0080 00000000 		.word	.LANCHOR0
 2000              		.cfi_endproc
 2001              	.LFE38:
 2003              		.section	.text.disp_vram,"ax",%progbits
 2004              		.align	1
 2005              		.p2align 2,,3
 2006              		.global	disp_vram
 2007              		.syntax unified
 2008              		.thumb
 2009              		.thumb_func
 2010              		.fpu softvfp
 2012              	disp_vram:
 2013              	.LVL195:
 2014              	.LFB39:
 128:../USER/vramdisp.c **** 
 129:../USER/vramdisp.c **** static int dispinitf = 0;
 130:../USER/vramdisp.c **** static int defptn = 0xffff;	// Not.Use
 131:../USER/vramdisp.c **** static int csrx=0,csry=0,csrmd=0;
 132:../USER/vramdisp.c **** int disp_vram(char chd){
 2015              		.loc 1 132 24 is_stmt 1 view -0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 8
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 133:../USER/vramdisp.c **** 	int i;
 2019              		.loc 1 133 2 view .LVU566
 134:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000); pd = GPIO_ReadBits(GPIO0);
 2020              		.loc 1 134 2 view .LVU567
 132:../USER/vramdisp.c **** 	int i;
 2021              		.loc 1 132 24 is_stmt 0 view .LVU568
 2022 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2023              		.cfi_def_cfa_offset 36
 2024              		.cfi_offset 4, -36
 2025              		.cfi_offset 5, -32
 2026              		.cfi_offset 6, -28
 2027              		.cfi_offset 7, -24
 2028              		.cfi_offset 8, -20
 2029              		.cfi_offset 9, -16
 2030              		.cfi_offset 10, -12
 2031              		.cfi_offset 11, -8
 2032              		.cfi_offset 14, -4
 2033              		.loc 1 134 2 view .LVU569
 2034 0004 0021     		movs	r1, #0
 132:../USER/vramdisp.c **** 	int i;
 2035              		.loc 1 132 24 view .LVU570
 2036 0006 83B0     		sub	sp, sp, #12
 2037              		.cfi_def_cfa_offset 48
 132:../USER/vramdisp.c **** 	int i;
 2038              		.loc 1 132 24 view .LVU571
 2039 0008 8146     		mov	r9, r0
 2040              		.loc 1 134 2 view .LVU572
 2041 000a 9548     		ldr	r0, .L161
 2042              	.LVL196:
 2043              		.loc 1 134 2 view .LVU573
 2044 000c FFF7FEFF 		bl	GPIO_WriteBits
 2045              	.LVL197:
 2046              		.loc 1 134 32 is_stmt 1 view .LVU574
 2047              		.loc 1 134 37 is_stmt 0 view .LVU575
 2048 0010 9348     		ldr	r0, .L161
 2049 0012 FFF7FEFF 		bl	GPIO_ReadBits
 2050              	.LVL198:
 2051              		.loc 1 134 35 view .LVU576
 2052 0016 934D     		ldr	r5, .L161+4
 2053 0018 C0B2     		uxtb	r0, r0
 2054 001a 2870     		strb	r0, [r5]
 135:../USER/vramdisp.c **** 	if((pd & 1)!=0) return -1;	// Busy
 2055              		.loc 1 135 2 is_stmt 1 view .LVU577
 2056              		.loc 1 135 9 is_stmt 0 view .LVU578
 2057 001c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2058              		.loc 1 135 4 view .LVU579
 2059 001e DC07     		lsls	r4, r3, #31
 2060 0020 00F11A81 		bmi	.L142
 136:../USER/vramdisp.c **** 	else {
 137:../USER/vramdisp.c **** 		if(dispinitf==0 || chd==0x0c){
 2061              		.loc 1 137 3 is_stmt 1 view .LVU580
 2062              		.loc 1 137 15 is_stmt 0 view .LVU581
 2063 0024 DFF85CA2 		ldr	r10, .L161+36
 2064              		.loc 1 137 5 view .LVU582
 2065 0028 DAF80030 		ldr	r3, [r10]
 2066 002c 03B3     		cbz	r3, .L125
 2067              		.loc 1 137 19 discriminator 1 view .LVU583
 2068 002e B9F10C0F 		cmp	r9, #12
 2069 0032 1DD0     		beq	.L125
 138:../USER/vramdisp.c **** 			move_vram( 0, 640*2*maxdy, 0, 10);	// Clear Vram
 139:../USER/vramdisp.c **** 			csrx = 0; csry = 0;	csrmd = 0; dispinitf = 1;
 140:../USER/vramdisp.c **** 		}
 141:../USER/vramdisp.c **** 		//
 142:../USER/vramdisp.c **** 		if(chd>=0x20) { set_char(csry, csrx, defptn, chd); csrx++; }
 2070              		.loc 1 142 3 is_stmt 1 view .LVU584
 2071 0034 8C4F     		ldr	r7, .L161+8
 2072              		.loc 1 142 5 is_stmt 0 view .LVU585
 2073 0036 B9F11F0F 		cmp	r9, #31
 2074 003a 3B68     		ldr	r3, [r7]
 2075              		.loc 1 142 19 view .LVU586
 2076 003c 8B4E     		ldr	r6, .L161+12
 2077              		.loc 1 142 5 view .LVU587
 2078 003e 61DC     		bgt	.L157
 2079              	.L130:
 143:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2080              		.loc 1 143 8 is_stmt 1 view .LVU588
 2081              		.loc 1 143 10 is_stmt 0 view .LVU589
 2082 0040 B9F10D0F 		cmp	r9, #13
 2083 0044 02D0     		beq	.L159
 2084 0046 3268     		ldr	r2, [r6]
 2085              	.L134:
 144:../USER/vramdisp.c **** 		if(csrx>=80) {csrx = 0; csry++;}
 2086              		.loc 1 144 3 is_stmt 1 view .LVU590
 2087              		.loc 1 144 5 is_stmt 0 view .LVU591
 2088 0048 4F2A     		cmp	r2, #79
 2089 004a 03DD     		ble	.L136
 2090              	.L159:
 2091              		.loc 1 144 17 is_stmt 1 discriminator 1 view .LVU592
 2092              		.loc 1 144 22 is_stmt 0 discriminator 1 view .LVU593
 2093 004c 0022     		movs	r2, #0
 2094              		.loc 1 144 31 discriminator 1 view .LVU594
 2095 004e 0133     		adds	r3, r3, #1
 2096 0050 3B60     		str	r3, [r7]
 2097              		.loc 1 144 22 discriminator 1 view .LVU595
 2098 0052 3260     		str	r2, [r6]
 2099              		.loc 1 144 27 is_stmt 1 discriminator 1 view .LVU596
 2100              	.L136:
 145:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2101              		.loc 1 145 3 view .LVU597
 2102              		.loc 1 145 5 is_stmt 0 view .LVU598
 2103 0054 232B     		cmp	r3, #35
 2104 0056 50DD     		ble	.L144
 146:../USER/vramdisp.c **** 			if(csrmd==0) {
 2105              		.loc 1 146 4 is_stmt 1 view .LVU599
 2106              		.loc 1 146 12 is_stmt 0 view .LVU600
 2107 0058 854B     		ldr	r3, .L161+16
 2108 005a 1C68     		ldr	r4, [r3]
 2109              		.loc 1 146 6 view .LVU601
 2110 005c 002C     		cmp	r4, #0
 2111 005e 00F08C80 		beq	.L160
 147:../USER/vramdisp.c **** 				move_vram( 0, 640*2*(maxdy-chardh), 640*2*(chardh), 12);	// Scrool
 148:../USER/vramdisp.c **** 				move_vram( 640*2*(maxdy-chardh),640*2*maxdy, 0, 10);	// Clear
 149:../USER/vramdisp.c **** 				csry = (maxdy/chardh-1); csrx = 0;
 150:../USER/vramdisp.c **** 			} else {
 151:../USER/vramdisp.c **** 				csry = 0; csrx = 0;
 2112              		.loc 1 151 5 is_stmt 1 view .LVU602
 2113              		.loc 1 151 10 is_stmt 0 view .LVU603
 2114 0062 0024     		movs	r4, #0
 152:../USER/vramdisp.c **** 			}
 153:../USER/vramdisp.c **** 		}
 154:../USER/vramdisp.c **** 		return 0;
 155:../USER/vramdisp.c **** 	}
 156:../USER/vramdisp.c **** }
 2115              		.loc 1 156 1 view .LVU604
 2116 0064 2046     		mov	r0, r4
 151:../USER/vramdisp.c **** 			}
 2117              		.loc 1 151 10 view .LVU605
 2118 0066 3C60     		str	r4, [r7]
 151:../USER/vramdisp.c **** 			}
 2119              		.loc 1 151 15 is_stmt 1 view .LVU606
 151:../USER/vramdisp.c **** 			}
 2120              		.loc 1 151 20 is_stmt 0 view .LVU607
 2121 0068 3460     		str	r4, [r6]
 2122              		.loc 1 156 1 view .LVU608
 2123 006a 03B0     		add	sp, sp, #12
 2124              		.cfi_remember_state
 2125              		.cfi_def_cfa_offset 36
 2126              		@ sp needed
 2127 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2128              	.L125:
 2129              		.cfi_restore_state
 138:../USER/vramdisp.c **** 			csrx = 0; csry = 0;	csrmd = 0; dispinitf = 1;
 2130              		.loc 1 138 4 is_stmt 1 view .LVU609
 2131              	.LVL199:
 2132              	.LBB158:
 2133              	.LBI158:
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 2134              		.loc 1 79 6 view .LVU610
 2135              	.LBB159:
  80:../USER/vramdisp.c **** 	if(dadr==-1) {
 2136              		.loc 1 80 2 view .LVU611
  81:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
 2137              		.loc 1 81 2 view .LVU612
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2138              		.loc 1 85 2 view .LVU613
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2139              		.loc 1 85 12 is_stmt 0 view .LVU614
 2140 0070 0023     		movs	r3, #0
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2141              		.loc 1 85 30 view .LVU615
 2142 0072 4FF4E122 		mov	r2, #460800
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2143              		.loc 1 85 12 view .LVU616
 2144 0076 DFF8FC81 		ldr	r8, .L161+20
 2145              	.LBB160:
 2146              	.LBB161:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2147              		.loc 1 51 2 view .LVU617
 2148 007a 1946     		mov	r1, r3
 2149 007c 7848     		ldr	r0, .L161
 2150              	.LBE161:
 2151              	.LBE160:
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2152              		.loc 1 85 12 view .LVU618
 2153 007e C8F80030 		str	r3, [r8]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2154              		.loc 1 85 20 is_stmt 1 view .LVU619
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2155              		.loc 1 85 48 is_stmt 0 view .LVU620
 2156 0082 C8F80830 		str	r3, [r8, #8]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2157              		.loc 1 85 30 view .LVU621
 2158 0086 C8F80420 		str	r2, [r8, #4]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2159              		.loc 1 85 38 is_stmt 1 view .LVU622
  86:../USER/vramdisp.c **** }
 2160              		.loc 1 86 2 view .LVU623
 2161              	.LVL200:
 2162              	.LBB163:
 2163              	.LBI160:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 2164              		.loc 1 49 6 view .LVU624
 2165              	.LBB162:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 2166              		.loc 1 50 2 view .LVU625
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2167              		.loc 1 51 2 view .LVU626
 2168 008a FFF7FEFF 		bl	GPIO_WriteBits
 2169              	.LVL201:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2170              		.loc 1 52 10 is_stmt 0 view .LVU627
 2171 008e 744C     		ldr	r4, .L161
 2172              	.L127:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2173              		.loc 1 52 2 is_stmt 1 view .LVU628
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2174              		.loc 1 52 5 view .LVU629
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2175              		.loc 1 52 10 is_stmt 0 view .LVU630
 2176 0090 2046     		mov	r0, r4
 2177 0092 FFF7FEFF 		bl	GPIO_ReadBits
 2178              	.LVL202:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2179              		.loc 1 52 8 view .LVU631
 2180 0096 C0B2     		uxtb	r0, r0
 2181 0098 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2182              		.loc 1 52 44 view .LVU632
 2183 009a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2184              		.loc 1 52 2 view .LVU633
 2185 009c D807     		lsls	r0, r3, #31
 2186 009e F7D4     		bmi	.L127
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 2187              		.loc 1 53 2 is_stmt 1 view .LVU634
 2188 00a0 4FF40071 		mov	r1, #512
 2189 00a4 6E48     		ldr	r0, .L161
 2190 00a6 FFF7FEFF 		bl	GPIO_WriteBits
 2191              	.LVL203:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2192              		.loc 1 54 2 view .LVU635
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2193              		.loc 1 54 2 is_stmt 0 view .LVU636
 2194 00aa 724C     		ldr	r4, .L161+20
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2195              		.loc 1 56 3 view .LVU637
 2196 00ac 6C4F     		ldr	r7, .L161
 2197 00ae 04F10A0B 		add	fp, r4, #10
 2198              	.LVL204:
 2199              	.L128:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2200              		.loc 1 55 3 is_stmt 1 view .LVU638
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2201              		.loc 1 55 6 is_stmt 0 view .LVU639
 2202 00b2 14F8016B 		ldrb	r6, [r4], #1	@ zero_extendqisi2
 2203              	.LVL205:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2204              		.loc 1 56 3 is_stmt 1 view .LVU640
 2205 00b6 3846     		mov	r0, r7
 2206 00b8 06F54071 		add	r1, r6, #768
 2207 00bc FFF7FEFF 		bl	GPIO_WriteBits
 2208              	.LVL206:
  57:../USER/vramdisp.c **** 	}
 2209              		.loc 1 57 3 view .LVU641
 2210 00c0 06F50071 		add	r1, r6, #512
 2211 00c4 3846     		mov	r0, r7
 2212 00c6 FFF7FEFF 		bl	GPIO_WriteBits
 2213              	.LVL207:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2214              		.loc 1 54 2 is_stmt 0 view .LVU642
 2215 00ca A345     		cmp	fp, r4
 2216 00cc F1D1     		bne	.L128
  59:../USER/vramdisp.c **** }
 2217              		.loc 1 59 2 is_stmt 1 view .LVU643
 2218 00ce 0021     		movs	r1, #0
 2219 00d0 6348     		ldr	r0, .L161
 2220 00d2 FFF7FEFF 		bl	GPIO_WriteBits
 2221              	.LVL208:
  59:../USER/vramdisp.c **** }
 2222              		.loc 1 59 2 is_stmt 0 view .LVU644
 2223              	.LBE162:
 2224              	.LBE163:
 2225              	.LBE159:
 2226              	.LBE158:
 139:../USER/vramdisp.c **** 		}
 2227              		.loc 1 139 4 is_stmt 1 view .LVU645
 139:../USER/vramdisp.c **** 		}
 2228              		.loc 1 139 9 is_stmt 0 view .LVU646
 2229 00d6 0023     		movs	r3, #0
 139:../USER/vramdisp.c **** 		}
 2230              		.loc 1 139 45 view .LVU647
 2231 00d8 0122     		movs	r2, #1
 139:../USER/vramdisp.c **** 		}
 2232              		.loc 1 139 30 view .LVU648
 2233 00da 6549     		ldr	r1, .L161+16
 139:../USER/vramdisp.c **** 		}
 2234              		.loc 1 139 9 view .LVU649
 2235 00dc 634E     		ldr	r6, .L161+12
 139:../USER/vramdisp.c **** 		}
 2236              		.loc 1 139 19 view .LVU650
 2237 00de 624F     		ldr	r7, .L161+8
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2238              		.loc 1 142 5 view .LVU651
 2239 00e0 B9F11F0F 		cmp	r9, #31
 139:../USER/vramdisp.c **** 		}
 2240              		.loc 1 139 30 view .LVU652
 2241 00e4 0B60     		str	r3, [r1]
 139:../USER/vramdisp.c **** 		}
 2242              		.loc 1 139 9 view .LVU653
 2243 00e6 3360     		str	r3, [r6]
 139:../USER/vramdisp.c **** 		}
 2244              		.loc 1 139 14 is_stmt 1 view .LVU654
 139:../USER/vramdisp.c **** 		}
 2245              		.loc 1 139 19 is_stmt 0 view .LVU655
 2246 00e8 3B60     		str	r3, [r7]
 139:../USER/vramdisp.c **** 		}
 2247              		.loc 1 139 24 is_stmt 1 view .LVU656
 139:../USER/vramdisp.c **** 		}
 2248              		.loc 1 139 35 view .LVU657
 139:../USER/vramdisp.c **** 		}
 2249              		.loc 1 139 45 is_stmt 0 view .LVU658
 2250 00ea CAF80020 		str	r2, [r10]
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2251              		.loc 1 142 3 is_stmt 1 view .LVU659
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2252              		.loc 1 142 5 is_stmt 0 view .LVU660
 2253 00ee A7DD     		ble	.L130
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2254              		.loc 1 142 19 is_stmt 1 view .LVU661
 2255              	.LVL209:
 2256              	.LBB164:
 2257              	.LBI164:
 115:../USER/vramdisp.c **** 	int adr, bp;
 2258              		.loc 1 115 6 view .LVU662
 2259              	.LBB165:
 116:../USER/vramdisp.c **** 	unsigned char i, j, cgd, ph, pl;
 2260              		.loc 1 116 2 view .LVU663
 117:../USER/vramdisp.c **** 	ccd = ccd * 8; // font.ddr
 2261              		.loc 1 117 2 view .LVU664
 118:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 2262              		.loc 1 118 2 view .LVU665
 118:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 2263              		.loc 1 118 6 is_stmt 0 view .LVU666
 2264 00f0 4FEAC909 		lsl	r9, r9, #3
 2265              	.LVL210:
 119:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 2266              		.loc 1 119 2 is_stmt 1 view .LVU667
 119:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 2267              		.loc 1 119 17 view .LVU668
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2268              		.loc 1 120 2 view .LVU669
 118:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 2269              		.loc 1 118 6 is_stmt 0 view .LVU670
 2270 00f4 1C46     		mov	r4, r3
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2271              		.loc 1 120 28 view .LVU671
 2272 00f6 F021     		movs	r1, #240
 2273 00f8 14E0     		b	.L131
 2274              	.LVL211:
 2275              	.L144:
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2276              		.loc 1 120 28 view .LVU672
 2277              	.LBE165:
 2278              	.LBE164:
 154:../USER/vramdisp.c **** 	}
 2279              		.loc 1 154 10 view .LVU673
 2280 00fa 0024     		movs	r4, #0
 2281              	.L123:
 2282              		.loc 1 156 1 view .LVU674
 2283 00fc 2046     		mov	r0, r4
 2284 00fe 03B0     		add	sp, sp, #12
 2285              		.cfi_remember_state
 2286              		.cfi_def_cfa_offset 36
 2287              		@ sp needed
 2288 0100 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2289              	.L157:
 2290              		.cfi_restore_state
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2291              		.loc 1 142 19 is_stmt 1 discriminator 1 view .LVU675
 2292 0104 3268     		ldr	r2, [r6]
 2293              	.LVL212:
 2294              	.LBB173:
 115:../USER/vramdisp.c **** 	int adr, bp;
 2295              		.loc 1 115 6 discriminator 1 view .LVU676
 2296              	.LBB172:
 116:../USER/vramdisp.c **** 	unsigned char i, j, cgd, ph, pl;
 2297              		.loc 1 116 2 discriminator 1 view .LVU677
 117:../USER/vramdisp.c **** 	ccd = ccd * 8; // font.ddr
 2298              		.loc 1 117 2 discriminator 1 view .LVU678
 118:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 2299              		.loc 1 118 2 discriminator 1 view .LVU679
 2300 0106 03EB8303 		add	r3, r3, r3, lsl #2
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2301              		.loc 1 120 51 is_stmt 0 discriminator 1 view .LVU680
 2302 010a 12F0010F 		tst	r2, #1
 2303 010e 0CBF     		ite	eq
 2304 0110 F021     		moveq	r1, #240
 2305 0112 0F21     		movne	r1, #15
 2306 0114 02EBD272 		add	r2, r2, r2, lsr #31
 2307              	.LVL213:
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2308              		.loc 1 120 51 discriminator 1 view .LVU681
 2309 0118 DFF85881 		ldr	r8, .L161+20
 2310 011c 5C00     		lsls	r4, r3, #1
 118:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 2311              		.loc 1 118 6 discriminator 1 view .LVU682
 2312 011e 4FEAC909 		lsl	r9, r9, #3
 2313              	.LVL214:
 119:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 2314              		.loc 1 119 2 is_stmt 1 discriminator 1 view .LVU683
 119:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 2315              		.loc 1 119 17 discriminator 1 view .LVU684
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2316              		.loc 1 120 2 discriminator 1 view .LVU685
 2317 0122 5310     		asrs	r3, r2, #1
 2318              	.LVL215:
 2319              	.L131:
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 2320              		.loc 1 120 2 is_stmt 0 discriminator 1 view .LVU686
 2321 0124 544A     		ldr	r2, .L161+24
 2322 0126 04EB8404 		add	r4, r4, r4, lsl #2
 2323 012a 03EBC403 		add	r3, r3, r4, lsl #3
 2324 012e 02F1080B 		add	fp, r2, #8
 2325              	.LBB166:
 2326              	.LBB167:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2327              		.loc 1 20 2 view .LVU687
 2328 0132 DFF82CA1 		ldr	r10, .L161
 2329 0136 CB44     		add	fp, fp, r9
 2330 0138 5C01     		lsls	r4, r3, #5
 2331 013a 88F80510 		strb	r1, [r8, #5]
 2332              	.LVL216:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2333              		.loc 1 20 2 view .LVU688
 2334 013e 9144     		add	r9, r9, r2
 2335              	.LVL217:
 2336              	.L133:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2337              		.loc 1 20 2 view .LVU689
 2338              	.LBE167:
 2339              	.LBE166:
 122:../USER/vramdisp.c **** 		wddt.b[4] = cgd;
 2340              		.loc 1 122 3 is_stmt 1 view .LVU690
 122:../USER/vramdisp.c **** 		wddt.b[4] = cgd;
 2341              		.loc 1 122 7 is_stmt 0 view .LVU691
 2342 0140 19F8013B 		ldrb	r3, [r9], #1	@ zero_extendqisi2
 2343              	.LVL218:
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 2344              		.loc 1 123 3 is_stmt 1 view .LVU692
 2345              	.LBB170:
 2346              	.LBB168:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2347              		.loc 1 20 2 is_stmt 0 view .LVU693
 2348 0144 0021     		movs	r1, #0
 2349 0146 5046     		mov	r0, r10
 2350              	.LBE168:
 2351              	.LBE170:
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 2352              		.loc 1 123 13 view .LVU694
 2353 0148 88F80430 		strb	r3, [r8, #4]
 124:../USER/vramdisp.c **** 		set_vramdata_f6(6);
 2354              		.loc 1 124 3 is_stmt 1 view .LVU695
 2355              	.LVL219:
 2356              	.LBB171:
 2357              	.LBI166:
  17:../USER/vramdisp.c **** 	int adr;
 2358              		.loc 1 17 6 view .LVU696
 2359              	.LBB169:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 2360              		.loc 1 18 2 view .LVU697
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 2361              		.loc 1 19 2 view .LVU698
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2362              		.loc 1 20 2 view .LVU699
 2363 014c FFF7FEFF 		bl	GPIO_WriteBits
 2364              	.LVL220:
 2365              	.L132:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 2366              		.loc 1 21 2 view .LVU700
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 2367              		.loc 1 21 5 view .LVU701
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 2368              		.loc 1 21 10 is_stmt 0 view .LVU702
 2369 0150 5046     		mov	r0, r10
 2370 0152 FFF7FEFF 		bl	GPIO_ReadBits
 2371              	.LVL221:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 2372              		.loc 1 21 8 view .LVU703
 2373 0156 C0B2     		uxtb	r0, r0
 2374 0158 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 2375              		.loc 1 21 44 view .LVU704
 2376 015a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 2377              		.loc 1 21 2 view .LVU705
 2378 015c D907     		lsls	r1, r3, #31
 2379 015e F7D4     		bmi	.L132
  22:../USER/vramdisp.c **** }
 2380              		.loc 1 22 2 is_stmt 1 view .LVU706
  22:../USER/vramdisp.c **** }
 2381              		.loc 1 22 12 is_stmt 0 view .LVU707
 2382 0160 C8F80040 		str	r4, [r8]
 2383              	.LVL222:
  22:../USER/vramdisp.c **** }
 2384              		.loc 1 22 12 view .LVU708
 2385              	.LBE169:
 2386              	.LBE171:
 125:../USER/vramdisp.c **** 	}
 2387              		.loc 1 125 3 is_stmt 1 view .LVU709
 2388 0164 FFF7FEFF 		bl	set_vramdata_f6.constprop.1
 2389              	.LVL223:
 121:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 2390              		.loc 1 121 2 is_stmt 0 view .LVU710
 2391 0168 CB45     		cmp	fp, r9
 2392 016a 04F5A064 		add	r4, r4, #1280
 2393 016e E7D1     		bne	.L133
 2394              	.LVL224:
 121:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 2395              		.loc 1 121 2 view .LVU711
 2396              	.LBE172:
 2397              	.LBE173:
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2398              		.loc 1 142 54 is_stmt 1 discriminator 1 view .LVU712
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2399              		.loc 1 142 58 is_stmt 0 discriminator 1 view .LVU713
 2400 0170 3268     		ldr	r2, [r6]
 2401 0172 3B68     		ldr	r3, [r7]
 2402 0174 0132     		adds	r2, r2, #1
 2403 0176 3260     		str	r2, [r6]
 2404 0178 66E7     		b	.L134
 2405              	.L160:
 147:../USER/vramdisp.c **** 				move_vram( 640*2*(maxdy-chardh),640*2*maxdy, 0, 10);	// Clear
 2406              		.loc 1 147 5 is_stmt 1 view .LVU714
 2407              	.LVL225:
 2408              	.LBB174:
 2409              	.LBI174:
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 2410              		.loc 1 79 6 view .LVU715
 2411              	.LBB175:
  80:../USER/vramdisp.c **** 	if(dadr==-1) {
 2412              		.loc 1 80 2 view .LVU716
  81:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
 2413              		.loc 1 81 2 view .LVU717
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2414              		.loc 1 85 2 view .LVU718
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2415              		.loc 1 85 48 is_stmt 0 view .LVU719
 2416 017a 4FF44852 		mov	r2, #12800
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2417              		.loc 1 85 12 view .LVU720
 2418 017e DFF8F480 		ldr	r8, .L161+20
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2419              		.loc 1 85 30 view .LVU721
 2420 0182 3E4B     		ldr	r3, .L161+28
 2421              	.LBB176:
 2422              	.LBB177:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2423              		.loc 1 51 2 view .LVU722
 2424 0184 2146     		mov	r1, r4
 2425 0186 3648     		ldr	r0, .L161
 2426              	.LBE177:
 2427              	.LBE176:
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2428              		.loc 1 85 48 view .LVU723
 2429 0188 C8F80820 		str	r2, [r8, #8]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2430              		.loc 1 85 30 view .LVU724
 2431 018c C8E90043 		strd	r4, r3, [r8]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2432              		.loc 1 85 38 is_stmt 1 view .LVU725
  86:../USER/vramdisp.c **** }
 2433              		.loc 1 86 2 view .LVU726
 2434              	.LVL226:
 2435              	.LBB179:
 2436              	.LBI176:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 2437              		.loc 1 49 6 view .LVU727
 2438              	.LBB178:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 2439              		.loc 1 50 2 view .LVU728
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2440              		.loc 1 51 2 view .LVU729
 2441 0190 FFF7FEFF 		bl	GPIO_WriteBits
 2442              	.LVL227:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2443              		.loc 1 52 10 is_stmt 0 view .LVU730
 2444 0194 DFF8C880 		ldr	r8, .L161
 2445              	.L138:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2446              		.loc 1 52 2 is_stmt 1 view .LVU731
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2447              		.loc 1 52 5 view .LVU732
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2448              		.loc 1 52 10 is_stmt 0 view .LVU733
 2449 0198 4046     		mov	r0, r8
 2450 019a FFF7FEFF 		bl	GPIO_ReadBits
 2451              	.LVL228:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2452              		.loc 1 52 8 view .LVU734
 2453 019e C0B2     		uxtb	r0, r0
 2454 01a0 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2455              		.loc 1 52 44 view .LVU735
 2456 01a2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2457              		.loc 1 52 2 view .LVU736
 2458 01a4 DA07     		lsls	r2, r3, #31
 2459 01a6 F7D4     		bmi	.L138
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 2460              		.loc 1 53 2 is_stmt 1 view .LVU737
 2461 01a8 DFF8C890 		ldr	r9, .L161+20
 2462 01ac 4FF40071 		mov	r1, #512
 2463 01b0 2B48     		ldr	r0, .L161
 2464 01b2 C846     		mov	r8, r9
 2465 01b4 CB46     		mov	fp, r9
 2466 01b6 FFF7FEFF 		bl	GPIO_WriteBits
 2467              	.LVL229:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2468              		.loc 1 54 2 view .LVU738
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2469              		.loc 1 56 3 is_stmt 0 view .LVU739
 2470 01ba DFF8A4A0 		ldr	r10, .L161
 2471              	.LVL230:
 2472              	.L139:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2473              		.loc 1 55 3 is_stmt 1 view .LVU740
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2474              		.loc 1 55 6 is_stmt 0 view .LVU741
 2475 01be 1BF8012B 		ldrb	r2, [fp], #1	@ zero_extendqisi2
 2476              	.LVL231:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2477              		.loc 1 56 3 is_stmt 1 view .LVU742
 2478 01c2 5046     		mov	r0, r10
 2479 01c4 02F54071 		add	r1, r2, #768
 2480 01c8 0192     		str	r2, [sp, #4]
 2481 01ca FFF7FEFF 		bl	GPIO_WriteBits
 2482              	.LVL232:
  57:../USER/vramdisp.c **** 	}
 2483              		.loc 1 57 3 view .LVU743
 2484 01ce 019A     		ldr	r2, [sp, #4]
 2485 01d0 5046     		mov	r0, r10
 2486 01d2 02F50071 		add	r1, r2, #512
 2487 01d6 FFF7FEFF 		bl	GPIO_WriteBits
 2488              	.LVL233:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2489              		.loc 1 54 2 is_stmt 0 view .LVU744
 2490 01da 294B     		ldr	r3, .L161+32
 2491 01dc 5B45     		cmp	r3, fp
 2492 01de EED1     		bne	.L139
  59:../USER/vramdisp.c **** }
 2493              		.loc 1 59 2 is_stmt 1 view .LVU745
 2494 01e0 0021     		movs	r1, #0
 2495 01e2 1F48     		ldr	r0, .L161
 2496 01e4 FFF7FEFF 		bl	GPIO_WriteBits
 2497              	.LVL234:
  59:../USER/vramdisp.c **** }
 2498              		.loc 1 59 2 is_stmt 0 view .LVU746
 2499              	.LBE178:
 2500              	.LBE179:
 2501              	.LBE175:
 2502              	.LBE174:
 148:../USER/vramdisp.c **** 				csry = (maxdy/chardh-1); csrx = 0;
 2503              		.loc 1 148 5 is_stmt 1 view .LVU747
 2504              	.LBB180:
 2505              	.LBI180:
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 2506              		.loc 1 79 6 view .LVU748
 2507              	.LBB181:
  80:../USER/vramdisp.c **** 	if(dadr==-1) {
 2508              		.loc 1 80 2 view .LVU749
  81:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
 2509              		.loc 1 81 2 view .LVU750
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2510              		.loc 1 85 2 view .LVU751
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2511              		.loc 1 85 48 is_stmt 0 view .LVU752
 2512 01e8 0021     		movs	r1, #0
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2513              		.loc 1 85 30 view .LVU753
 2514 01ea 4FF4E122 		mov	r2, #460800
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2515              		.loc 1 85 12 view .LVU754
 2516 01ee 234B     		ldr	r3, .L161+28
 2517              	.LBB182:
 2518              	.LBB183:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2519              		.loc 1 51 2 view .LVU755
 2520 01f0 1B48     		ldr	r0, .L161
 2521              	.LBE183:
 2522              	.LBE182:
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2523              		.loc 1 85 30 view .LVU756
 2524 01f2 C8E90121 		strd	r2, r1, [r8, #4]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2525              		.loc 1 85 12 view .LVU757
 2526 01f6 C8F80030 		str	r3, [r8]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2527              		.loc 1 85 20 is_stmt 1 view .LVU758
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2528              		.loc 1 85 38 view .LVU759
  86:../USER/vramdisp.c **** }
 2529              		.loc 1 86 2 view .LVU760
 2530              	.LVL235:
 2531              	.LBB185:
 2532              	.LBI182:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 2533              		.loc 1 49 6 view .LVU761
 2534              	.LBB184:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 2535              		.loc 1 50 2 view .LVU762
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2536              		.loc 1 51 2 view .LVU763
 2537 01fa FFF7FEFF 		bl	GPIO_WriteBits
 2538              	.LVL236:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2539              		.loc 1 52 10 is_stmt 0 view .LVU764
 2540 01fe DFF86080 		ldr	r8, .L161
 2541              	.L140:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2542              		.loc 1 52 2 is_stmt 1 view .LVU765
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2543              		.loc 1 52 5 view .LVU766
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2544              		.loc 1 52 10 is_stmt 0 view .LVU767
 2545 0202 4046     		mov	r0, r8
 2546 0204 FFF7FEFF 		bl	GPIO_ReadBits
 2547              	.LVL237:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2548              		.loc 1 52 8 view .LVU768
 2549 0208 C0B2     		uxtb	r0, r0
 2550 020a 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2551              		.loc 1 52 44 view .LVU769
 2552 020c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2553              		.loc 1 52 2 view .LVU770
 2554 020e DB07     		lsls	r3, r3, #31
 2555 0210 F7D4     		bmi	.L140
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 2556              		.loc 1 53 2 is_stmt 1 view .LVU771
 2557 0212 4FF40071 		mov	r1, #512
 2558 0216 1248     		ldr	r0, .L161
 2559 0218 FFF7FEFF 		bl	GPIO_WriteBits
 2560              	.LVL238:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2561              		.loc 1 54 2 view .LVU772
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2562              		.loc 1 54 2 is_stmt 0 view .LVU773
 2563 021c DFF868A0 		ldr	r10, .L161+40
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2564              		.loc 1 56 3 view .LVU774
 2565 0220 DFF83C80 		ldr	r8, .L161
 2566              	.LVL239:
 2567              	.L141:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2568              		.loc 1 55 3 is_stmt 1 view .LVU775
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2569              		.loc 1 55 6 is_stmt 0 view .LVU776
 2570 0224 19F8015B 		ldrb	r5, [r9], #1	@ zero_extendqisi2
 2571              	.LVL240:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2572              		.loc 1 56 3 is_stmt 1 view .LVU777
 2573 0228 4046     		mov	r0, r8
 2574 022a 05F54071 		add	r1, r5, #768
 2575 022e FFF7FEFF 		bl	GPIO_WriteBits
 2576              	.LVL241:
  57:../USER/vramdisp.c **** 	}
 2577              		.loc 1 57 3 view .LVU778
 2578 0232 05F50071 		add	r1, r5, #512
 2579 0236 4046     		mov	r0, r8
 2580 0238 FFF7FEFF 		bl	GPIO_WriteBits
 2581              	.LVL242:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2582              		.loc 1 54 2 is_stmt 0 view .LVU779
 2583 023c CA45     		cmp	r10, r9
 2584 023e F1D1     		bne	.L141
  59:../USER/vramdisp.c **** }
 2585              		.loc 1 59 2 is_stmt 1 view .LVU780
 2586 0240 0021     		movs	r1, #0
 2587 0242 0748     		ldr	r0, .L161
 2588 0244 FFF7FEFF 		bl	GPIO_WriteBits
 2589              	.LVL243:
  59:../USER/vramdisp.c **** }
 2590              		.loc 1 59 2 is_stmt 0 view .LVU781
 2591              	.LBE184:
 2592              	.LBE185:
 2593              	.LBE181:
 2594              	.LBE180:
 149:../USER/vramdisp.c **** 			} else {
 2595              		.loc 1 149 5 is_stmt 1 view .LVU782
 149:../USER/vramdisp.c **** 			} else {
 2596              		.loc 1 149 10 is_stmt 0 view .LVU783
 2597 0248 2322     		movs	r2, #35
 149:../USER/vramdisp.c **** 			} else {
 2598              		.loc 1 149 35 view .LVU784
 2599 024a 0023     		movs	r3, #0
 2600              		.loc 1 156 1 view .LVU785
 2601 024c 2046     		mov	r0, r4
 149:../USER/vramdisp.c **** 			} else {
 2602              		.loc 1 149 10 view .LVU786
 2603 024e 3A60     		str	r2, [r7]
 149:../USER/vramdisp.c **** 			} else {
 2604              		.loc 1 149 30 is_stmt 1 view .LVU787
 149:../USER/vramdisp.c **** 			} else {
 2605              		.loc 1 149 35 is_stmt 0 view .LVU788
 2606 0250 3360     		str	r3, [r6]
 2607              		.loc 1 156 1 view .LVU789
 2608 0252 03B0     		add	sp, sp, #12
 2609              		.cfi_remember_state
 2610              		.cfi_def_cfa_offset 36
 2611              		@ sp needed
 2612 0254 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2613              	.L142:
 2614              		.cfi_restore_state
 135:../USER/vramdisp.c **** 	else {
 2615              		.loc 1 135 25 view .LVU790
 2616 0258 4FF0FF34 		mov	r4, #-1
 2617 025c 4EE7     		b	.L123
 2618              	.L162:
 2619 025e 00BF     		.align	2
 2620              	.L161:
 2621 0260 00000140 		.word	1073807360
 2622 0264 00000000 		.word	pd
 2623 0268 00000000 		.word	.LANCHOR3
 2624 026c 00000000 		.word	.LANCHOR2
 2625 0270 00000000 		.word	.LANCHOR4
 2626 0274 00000000 		.word	wddt
 2627 0278 00000000 		.word	.LANCHOR0
 2628 027c 00D60600 		.word	448000
 2629 0280 0C000000 		.word	wddt+12
 2630 0284 00000000 		.word	.LANCHOR1
 2631 0288 0A000000 		.word	wddt+10
 2632              		.cfi_endproc
 2633              	.LFE39:
 2635              		.section	.text.disp_vramw,"ax",%progbits
 2636              		.align	1
 2637              		.p2align 2,,3
 2638              		.global	disp_vramw
 2639              		.syntax unified
 2640              		.thumb
 2641              		.thumb_func
 2642              		.fpu softvfp
 2644              	disp_vramw:
 2645              	.LVL244:
 2646              	.LFB40:
 157:../USER/vramdisp.c **** void disp_vramw(char ch) { int rc; do{ rc = disp_vram(ch);} while(rc!=0); }
 2647              		.loc 1 157 26 is_stmt 1 view -0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              		.loc 1 157 26 is_stmt 0 view .LVU792
 2652 0000 10B5     		push	{r4, lr}
 2653              		.cfi_def_cfa_offset 8
 2654              		.cfi_offset 4, -8
 2655              		.cfi_offset 14, -4
 2656 0002 0446     		mov	r4, r0
 2657              	.LVL245:
 2658              	.L164:
 2659              		.loc 1 157 28 is_stmt 1 discriminator 1 view .LVU793
 2660              		.loc 1 157 36 discriminator 1 view .LVU794
 2661              		.loc 1 157 40 discriminator 1 view .LVU795
 2662              		.loc 1 157 45 is_stmt 0 discriminator 1 view .LVU796
 2663 0004 2046     		mov	r0, r4
 2664 0006 FFF7FEFF 		bl	disp_vram
 2665              	.LVL246:
 2666              		.loc 1 157 1 discriminator 1 view .LVU797
 2667 000a 0028     		cmp	r0, #0
 2668 000c FAD1     		bne	.L164
 2669              		.loc 1 157 1 view .LVU798
 2670 000e 10BD     		pop	{r4, pc}
 2671              		.cfi_endproc
 2672              	.LFE40:
 2674              		.section	.text.gotoxy,"ax",%progbits
 2675              		.align	1
 2676              		.p2align 2,,3
 2677              		.global	gotoxy
 2678              		.syntax unified
 2679              		.thumb
 2680              		.thumb_func
 2681              		.fpu softvfp
 2683              	gotoxy:
 2684              	.LVL247:
 2685              	.LFB41:
 158:../USER/vramdisp.c **** 
 159:../USER/vramdisp.c **** void gotoxy(u16 yp, u16 xp, u16 fc, u16 bc){
 2686              		.loc 1 159 44 is_stmt 1 view -0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 8
 2689              		@ frame_needed = 0, uses_anonymous_args = 0
 160:../USER/vramdisp.c **** 
 161:../USER/vramdisp.c **** 	if(yp==0xffff) {
 2690              		.loc 1 161 2 view .LVU800
 159:../USER/vramdisp.c **** 
 2691              		.loc 1 159 44 is_stmt 0 view .LVU801
 2692 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2693              		.cfi_def_cfa_offset 36
 2694              		.cfi_offset 4, -36
 2695              		.cfi_offset 5, -32
 2696              		.cfi_offset 6, -28
 2697              		.cfi_offset 7, -24
 2698              		.cfi_offset 8, -20
 2699              		.cfi_offset 9, -16
 2700              		.cfi_offset 10, -12
 2701              		.cfi_offset 11, -8
 2702              		.cfi_offset 14, -4
 2703              		.loc 1 161 4 view .LVU802
 2704 0004 4FF6FF74 		movw	r4, #65535
 2705 0008 A042     		cmp	r0, r4
 159:../USER/vramdisp.c **** 
 2706              		.loc 1 159 44 view .LVU803
 2707 000a 83B0     		sub	sp, sp, #12
 2708              		.cfi_def_cfa_offset 48
 159:../USER/vramdisp.c **** 
 2709              		.loc 1 159 44 view .LVU804
 2710 000c 9046     		mov	r8, r2
 2711 000e 1F46     		mov	r7, r3
 2712              		.loc 1 161 4 view .LVU805
 2713 0010 39D0     		beq	.L194
 162:../USER/vramdisp.c **** 		if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 163:../USER/vramdisp.c **** 		else           csrmd = xp;
 164:../USER/vramdisp.c **** 	}
 165:../USER/vramdisp.c **** 	else { csry=yp; csrx=xp; }
 2714              		.loc 1 165 9 is_stmt 1 view .LVU806
 2715              		.loc 1 165 13 is_stmt 0 view .LVU807
 2716 0012 864A     		ldr	r2, .L199
 2717              	.LVL248:
 2718              		.loc 1 165 22 view .LVU808
 2719 0014 864B     		ldr	r3, .L199+4
 2720              	.LVL249:
 2721              		.loc 1 165 13 view .LVU809
 2722 0016 1060     		str	r0, [r2]
 2723              		.loc 1 165 18 is_stmt 1 view .LVU810
 2724              		.loc 1 165 22 is_stmt 0 view .LVU811
 2725 0018 1960     		str	r1, [r3]
 2726              	.LVL250:
 2727              	.L174:
 166:../USER/vramdisp.c **** 	//
 167:../USER/vramdisp.c **** 	if(fc!=0 || bc!=0) { wddt.s[2] = fc;  wddt.s[3] = bc; set_vramdata(8); }
 2728              		.loc 1 167 2 is_stmt 1 view .LVU812
 2729              		.loc 1 167 4 is_stmt 0 view .LVU813
 2730 001a 58EA0703 		orrs	r3, r8, r7
 2731 001e 02D1     		bne	.L195
 168:../USER/vramdisp.c **** }
 2732              		.loc 1 168 1 view .LVU814
 2733 0020 03B0     		add	sp, sp, #12
 2734              		.cfi_remember_state
 2735              		.cfi_def_cfa_offset 36
 2736              		@ sp needed
 2737 0022 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2738              	.L195:
 2739              		.cfi_restore_state
 167:../USER/vramdisp.c **** }
 2740              		.loc 1 167 23 is_stmt 1 discriminator 3 view .LVU815
 167:../USER/vramdisp.c **** }
 2741              		.loc 1 167 33 is_stmt 0 discriminator 3 view .LVU816
 2742 0026 834B     		ldr	r3, .L199+8
 2743              	.LBB208:
 2744              	.LBB209:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2745              		.loc 1 51 2 discriminator 3 view .LVU817
 2746 0028 0021     		movs	r1, #0
 2747 002a 8348     		ldr	r0, .L199+12
 2748              	.LBE209:
 2749              	.LBE208:
 167:../USER/vramdisp.c **** }
 2750              		.loc 1 167 33 discriminator 3 view .LVU818
 2751 002c A3F80480 		strh	r8, [r3, #4]	@ movhi
 167:../USER/vramdisp.c **** }
 2752              		.loc 1 167 40 is_stmt 1 discriminator 3 view .LVU819
 167:../USER/vramdisp.c **** }
 2753              		.loc 1 167 50 is_stmt 0 discriminator 3 view .LVU820
 2754 0030 DF80     		strh	r7, [r3, #6]	@ movhi
 167:../USER/vramdisp.c **** }
 2755              		.loc 1 167 56 is_stmt 1 discriminator 3 view .LVU821
 2756              	.LVL251:
 2757              	.LBB212:
 2758              	.LBI208:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 2759              		.loc 1 49 6 discriminator 3 view .LVU822
 2760              	.LBB210:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 2761              		.loc 1 50 2 discriminator 3 view .LVU823
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2762              		.loc 1 51 2 discriminator 3 view .LVU824
 2763 0032 FFF7FEFF 		bl	GPIO_WriteBits
 2764              	.LVL252:
 2765 0036 814C     		ldr	r4, .L199+16
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2766              		.loc 1 52 10 is_stmt 0 discriminator 3 view .LVU825
 2767 0038 7F4D     		ldr	r5, .L199+12
 2768              	.L182:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2769              		.loc 1 52 2 is_stmt 1 view .LVU826
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2770              		.loc 1 52 5 view .LVU827
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2771              		.loc 1 52 10 is_stmt 0 view .LVU828
 2772 003a 2846     		mov	r0, r5
 2773 003c FFF7FEFF 		bl	GPIO_ReadBits
 2774              	.LVL253:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2775              		.loc 1 52 8 view .LVU829
 2776 0040 C0B2     		uxtb	r0, r0
 2777 0042 2070     		strb	r0, [r4]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2778              		.loc 1 52 44 view .LVU830
 2779 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2780              		.loc 1 52 2 view .LVU831
 2781 0046 DB07     		lsls	r3, r3, #31
 2782 0048 F7D4     		bmi	.L182
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 2783              		.loc 1 53 2 is_stmt 1 view .LVU832
 2784 004a 4FF40071 		mov	r1, #512
 2785 004e 7A48     		ldr	r0, .L199+12
 2786 0050 FFF7FEFF 		bl	GPIO_WriteBits
 2787              	.LVL254:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2788              		.loc 1 54 2 view .LVU833
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2789              		.loc 1 54 2 is_stmt 0 view .LVU834
 2790 0054 7A4C     		ldr	r4, .L199+20
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2791              		.loc 1 56 3 view .LVU835
 2792 0056 784E     		ldr	r6, .L199+12
 2793 0058 04F10807 		add	r7, r4, #8
 2794              	.LVL255:
 2795              	.L183:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 2796              		.loc 1 55 3 is_stmt 1 view .LVU836
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2797              		.loc 1 56 3 view .LVU837
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2798              		.loc 1 56 29 is_stmt 0 view .LVU838
 2799 005c 14F8015F 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 2800              	.LVL256:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 2801              		.loc 1 56 3 view .LVU839
 2802 0060 3046     		mov	r0, r6
 2803 0062 05F54071 		add	r1, r5, #768
 2804 0066 FFF7FEFF 		bl	GPIO_WriteBits
 2805              	.LVL257:
  57:../USER/vramdisp.c **** 	}
 2806              		.loc 1 57 3 is_stmt 1 view .LVU840
 2807 006a 05F50071 		add	r1, r5, #512
 2808 006e 3046     		mov	r0, r6
 2809 0070 FFF7FEFF 		bl	GPIO_WriteBits
 2810              	.LVL258:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 2811              		.loc 1 54 2 is_stmt 0 view .LVU841
 2812 0074 A742     		cmp	r7, r4
 2813 0076 F1D1     		bne	.L183
  59:../USER/vramdisp.c **** }
 2814              		.loc 1 59 2 is_stmt 1 view .LVU842
 2815 0078 0021     		movs	r1, #0
 2816 007a 6F48     		ldr	r0, .L199+12
 2817              	.LBE210:
 2818              	.LBE212:
 2819              		.loc 1 168 1 is_stmt 0 view .LVU843
 2820 007c 03B0     		add	sp, sp, #12
 2821              		.cfi_remember_state
 2822              		.cfi_def_cfa_offset 36
 2823              		@ sp needed
 2824 007e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2825              		.cfi_restore 14
 2826              		.cfi_restore 11
 2827              		.cfi_restore 10
 2828              		.cfi_restore 9
 2829              		.cfi_restore 8
 2830              		.cfi_restore 7
 2831              		.cfi_restore 6
 2832              		.cfi_restore 5
 2833              		.cfi_restore 4
 2834              		.cfi_def_cfa_offset 0
 2835              	.LVL259:
 2836              	.LBB213:
 2837              	.LBB211:
  59:../USER/vramdisp.c **** }
 2838              		.loc 1 59 2 view .LVU844
 2839 0082 FFF7FEBF 		b	GPIO_WriteBits
 2840              	.LVL260:
 2841              	.L194:
 2842              		.cfi_restore_state
  59:../USER/vramdisp.c **** }
 2843              		.loc 1 59 2 view .LVU845
 2844              	.LBE211:
 2845              	.LBE213:
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2846              		.loc 1 162 3 is_stmt 1 view .LVU846
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2847              		.loc 1 162 5 is_stmt 0 view .LVU847
 2848 0086 8142     		cmp	r1, r0
 2849 0088 02D0     		beq	.L196
 163:../USER/vramdisp.c **** 	}
 2850              		.loc 1 163 18 is_stmt 1 view .LVU848
 163:../USER/vramdisp.c **** 	}
 2851              		.loc 1 163 24 is_stmt 0 view .LVU849
 2852 008a 6E4B     		ldr	r3, .L199+24
 2853              	.LVL261:
 163:../USER/vramdisp.c **** 	}
 2854              		.loc 1 163 24 view .LVU850
 2855 008c 1960     		str	r1, [r3]
 2856 008e C4E7     		b	.L174
 2857              	.LVL262:
 2858              	.L196:
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2859              		.loc 1 162 20 is_stmt 1 discriminator 1 view .LVU851
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2860              		.loc 1 162 30 is_stmt 0 discriminator 1 view .LVU852
 2861 0090 0023     		movs	r3, #0
 2862              	.LVL263:
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2863              		.loc 1 162 30 discriminator 1 view .LVU853
 2864 0092 6D4D     		ldr	r5, .L199+28
 2865 0094 694C     		ldr	r4, .L199+16
 2866              	.LBB214:
 2867              	.LBB215:
 2868              	.LBB216:
 2869              	.LBB217:
 134:../USER/vramdisp.c **** 	if((pd & 1)!=0) return -1;	// Busy
 2870              		.loc 1 134 2 discriminator 1 view .LVU854
 2871 0096 684E     		ldr	r6, .L199+12
 2872              	.LBE217:
 2873              	.LBE216:
 2874              	.LBE215:
 2875              	.LBE214:
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2876              		.loc 1 162 30 discriminator 1 view .LVU855
 2877 0098 2B60     		str	r3, [r5]
 162:../USER/vramdisp.c **** 		else           csrmd = xp;
 2878              		.loc 1 162 35 is_stmt 1 discriminator 1 view .LVU856
 2879              	.LVL264:
 2880              	.LBB239:
 2881              	.LBI214:
 157:../USER/vramdisp.c **** 
 2882              		.loc 1 157 6 discriminator 1 view .LVU857
 2883              	.L170:
 2884              	.LBB238:
 157:../USER/vramdisp.c **** 
 2885              		.loc 1 157 28 view .LVU858
 157:../USER/vramdisp.c **** 
 2886              		.loc 1 157 36 view .LVU859
 157:../USER/vramdisp.c **** 
 2887              		.loc 1 157 40 view .LVU860
 2888              	.LBB237:
 2889              	.LBI216:
 132:../USER/vramdisp.c **** 	int i;
 2890              		.loc 1 132 5 view .LVU861
 2891              	.LBB236:
 133:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000); pd = GPIO_ReadBits(GPIO0);
 2892              		.loc 1 133 2 view .LVU862
 134:../USER/vramdisp.c **** 	if((pd & 1)!=0) return -1;	// Busy
 2893              		.loc 1 134 2 view .LVU863
 2894 009a 0021     		movs	r1, #0
 2895 009c 3046     		mov	r0, r6
 2896 009e FFF7FEFF 		bl	GPIO_WriteBits
 2897              	.LVL265:
 134:../USER/vramdisp.c **** 	if((pd & 1)!=0) return -1;	// Busy
 2898              		.loc 1 134 32 view .LVU864
 134:../USER/vramdisp.c **** 	if((pd & 1)!=0) return -1;	// Busy
 2899              		.loc 1 134 37 is_stmt 0 view .LVU865
 2900 00a2 3046     		mov	r0, r6
 2901 00a4 FFF7FEFF 		bl	GPIO_ReadBits
 2902              	.LVL266:
 134:../USER/vramdisp.c **** 	if((pd & 1)!=0) return -1;	// Busy
 2903              		.loc 1 134 35 view .LVU866
 2904 00a8 C0B2     		uxtb	r0, r0
 2905 00aa 2070     		strb	r0, [r4]
 135:../USER/vramdisp.c **** 	else {
 2906              		.loc 1 135 2 is_stmt 1 view .LVU867
 135:../USER/vramdisp.c **** 	else {
 2907              		.loc 1 135 9 is_stmt 0 view .LVU868
 2908 00ac 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 135:../USER/vramdisp.c **** 	else {
 2909              		.loc 1 135 4 view .LVU869
 2910 00ae 13F00103 		ands	r3, r3, #1
 2911 00b2 F2D1     		bne	.L170
 137:../USER/vramdisp.c **** 			move_vram( 0, 640*2*maxdy, 0, 10);	// Clear Vram
 2912              		.loc 1 137 3 is_stmt 1 view .LVU870
 137:../USER/vramdisp.c **** 			move_vram( 0, 640*2*maxdy, 0, 10);	// Clear Vram
 2913              		.loc 1 137 5 is_stmt 0 view .LVU871
 2914 00b4 2A68     		ldr	r2, [r5]
 2915 00b6 D2B1     		cbz	r2, .L197
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 2916              		.loc 1 142 3 is_stmt 1 view .LVU872
 143:../USER/vramdisp.c **** 		if(csrx>=80) {csrx = 0; csry++;}
 2917              		.loc 1 143 8 view .LVU873
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2918              		.loc 1 144 3 view .LVU874
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2919              		.loc 1 144 10 is_stmt 0 view .LVU875
 2920 00b8 DFF87491 		ldr	r9, .L199+4
 2921 00bc DFF86CA1 		ldr	r10, .L199
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2922              		.loc 1 144 5 view .LVU876
 2923 00c0 D9F80010 		ldr	r1, [r9]
 2924 00c4 DAF80020 		ldr	r2, [r10]
 2925 00c8 4F29     		cmp	r1, #79
 2926 00ca 04DD     		ble	.L175
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2927              		.loc 1 144 17 is_stmt 1 view .LVU877
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2928              		.loc 1 144 31 is_stmt 0 view .LVU878
 2929 00cc 0132     		adds	r2, r2, #1
 2930 00ce CAF80020 		str	r2, [r10]
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2931              		.loc 1 144 22 view .LVU879
 2932 00d2 C9F80030 		str	r3, [r9]
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 2933              		.loc 1 144 27 is_stmt 1 view .LVU880
 2934              	.L175:
 145:../USER/vramdisp.c **** 			if(csrmd==0) {
 2935              		.loc 1 145 3 view .LVU881
 145:../USER/vramdisp.c **** 			if(csrmd==0) {
 2936              		.loc 1 145 5 is_stmt 0 view .LVU882
 2937 00d6 232A     		cmp	r2, #35
 2938 00d8 9FDD     		ble	.L174
 146:../USER/vramdisp.c **** 				move_vram( 0, 640*2*(maxdy-chardh), 640*2*(chardh), 12);	// Scrool
 2939              		.loc 1 146 4 is_stmt 1 view .LVU883
 146:../USER/vramdisp.c **** 				move_vram( 0, 640*2*(maxdy-chardh), 640*2*(chardh), 12);	// Scrool
 2940              		.loc 1 146 12 is_stmt 0 view .LVU884
 2941 00da 5A4B     		ldr	r3, .L199+24
 146:../USER/vramdisp.c **** 				move_vram( 0, 640*2*(maxdy-chardh), 640*2*(chardh), 12);	// Scrool
 2942              		.loc 1 146 6 view .LVU885
 2943 00dc 1B68     		ldr	r3, [r3]
 2944 00de 002B     		cmp	r3, #0
 2945 00e0 3ED0     		beq	.L198
 151:../USER/vramdisp.c **** 			}
 2946              		.loc 1 151 5 is_stmt 1 view .LVU886
 151:../USER/vramdisp.c **** 			}
 2947              		.loc 1 151 10 is_stmt 0 view .LVU887
 2948 00e2 0023     		movs	r3, #0
 2949 00e4 CAF80030 		str	r3, [r10]
 151:../USER/vramdisp.c **** 			}
 2950              		.loc 1 151 15 is_stmt 1 view .LVU888
 151:../USER/vramdisp.c **** 			}
 2951              		.loc 1 151 20 is_stmt 0 view .LVU889
 2952 00e8 C9F80030 		str	r3, [r9]
 2953              	.LVL267:
 151:../USER/vramdisp.c **** 			}
 2954              		.loc 1 151 20 view .LVU890
 2955 00ec 95E7     		b	.L174
 2956              	.LVL268:
 2957              	.L197:
 138:../USER/vramdisp.c **** 			csrx = 0; csry = 0;	csrmd = 0; dispinitf = 1;
 2958              		.loc 1 138 4 is_stmt 1 view .LVU891
 2959              	.LBB218:
 2960              	.LBI218:
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 2961              		.loc 1 79 6 view .LVU892
 2962              	.LBB219:
  80:../USER/vramdisp.c **** 	if(dadr==-1) {
 2963              		.loc 1 80 2 view .LVU893
  81:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
 2964              		.loc 1 81 2 view .LVU894
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2965              		.loc 1 85 2 view .LVU895
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2966              		.loc 1 85 30 is_stmt 0 view .LVU896
 2967 00ee 4FF4E123 		mov	r3, #460800
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2968              		.loc 1 85 12 view .LVU897
 2969 00f2 504E     		ldr	r6, .L199+8
 2970              	.LBB220:
 2971              	.LBB221:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2972              		.loc 1 51 2 view .LVU898
 2973 00f4 1146     		mov	r1, r2
 2974 00f6 5048     		ldr	r0, .L199+12
 2975              	.LBE221:
 2976              	.LBE220:
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2977              		.loc 1 85 30 view .LVU899
 2978 00f8 7360     		str	r3, [r6, #4]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2979              		.loc 1 85 12 view .LVU900
 2980 00fa 3260     		str	r2, [r6]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2981              		.loc 1 85 20 is_stmt 1 view .LVU901
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2982              		.loc 1 85 38 view .LVU902
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 2983              		.loc 1 85 48 is_stmt 0 view .LVU903
 2984 00fc B260     		str	r2, [r6, #8]
  86:../USER/vramdisp.c **** }
 2985              		.loc 1 86 2 is_stmt 1 view .LVU904
 2986              	.LVL269:
 2987              	.LBB223:
 2988              	.LBI220:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 2989              		.loc 1 49 6 view .LVU905
 2990              	.LBB222:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 2991              		.loc 1 50 2 view .LVU906
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 2992              		.loc 1 51 2 view .LVU907
 2993 00fe FFF7FEFF 		bl	GPIO_WriteBits
 2994              	.LVL270:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2995              		.loc 1 52 10 is_stmt 0 view .LVU908
 2996 0102 4D4E     		ldr	r6, .L199+12
 2997              	.L172:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2998              		.loc 1 52 2 is_stmt 1 view .LVU909
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 2999              		.loc 1 52 5 view .LVU910
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3000              		.loc 1 52 10 is_stmt 0 view .LVU911
 3001 0104 3046     		mov	r0, r6
 3002 0106 FFF7FEFF 		bl	GPIO_ReadBits
 3003              	.LVL271:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3004              		.loc 1 52 8 view .LVU912
 3005 010a C0B2     		uxtb	r0, r0
 3006 010c 2070     		strb	r0, [r4]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3007              		.loc 1 52 44 view .LVU913
 3008 010e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3009              		.loc 1 52 2 view .LVU914
 3010 0110 D807     		lsls	r0, r3, #31
 3011 0112 F7D4     		bmi	.L172
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 3012              		.loc 1 53 2 is_stmt 1 view .LVU915
 3013 0114 4FF40071 		mov	r1, #512
 3014 0118 4748     		ldr	r0, .L199+12
 3015 011a FFF7FEFF 		bl	GPIO_WriteBits
 3016              	.LVL272:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3017              		.loc 1 54 2 view .LVU916
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3018              		.loc 1 54 2 is_stmt 0 view .LVU917
 3019 011e 454C     		ldr	r4, .L199+8
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3020              		.loc 1 56 3 view .LVU918
 3021 0120 DFF81491 		ldr	r9, .L199+12
 3022 0124 04F10A0A 		add	r10, r4, #10
 3023              	.LVL273:
 3024              	.L173:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3025              		.loc 1 55 3 is_stmt 1 view .LVU919
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3026              		.loc 1 55 6 is_stmt 0 view .LVU920
 3027 0128 14F8016B 		ldrb	r6, [r4], #1	@ zero_extendqisi2
 3028              	.LVL274:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3029              		.loc 1 56 3 is_stmt 1 view .LVU921
 3030 012c 4846     		mov	r0, r9
 3031 012e 06F54071 		add	r1, r6, #768
 3032 0132 FFF7FEFF 		bl	GPIO_WriteBits
 3033              	.LVL275:
  57:../USER/vramdisp.c **** 	}
 3034              		.loc 1 57 3 view .LVU922
 3035 0136 06F50071 		add	r1, r6, #512
 3036 013a 4846     		mov	r0, r9
 3037 013c FFF7FEFF 		bl	GPIO_WriteBits
 3038              	.LVL276:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3039              		.loc 1 54 2 is_stmt 0 view .LVU923
 3040 0140 A245     		cmp	r10, r4
 3041 0142 F1D1     		bne	.L173
  59:../USER/vramdisp.c **** }
 3042              		.loc 1 59 2 is_stmt 1 view .LVU924
 3043 0144 0021     		movs	r1, #0
 3044 0146 3C48     		ldr	r0, .L199+12
 3045 0148 FFF7FEFF 		bl	GPIO_WriteBits
 3046              	.LVL277:
  59:../USER/vramdisp.c **** }
 3047              		.loc 1 59 2 is_stmt 0 view .LVU925
 3048              	.LBE222:
 3049              	.LBE223:
 3050              	.LBE219:
 3051              	.LBE218:
 139:../USER/vramdisp.c **** 		}
 3052              		.loc 1 139 4 is_stmt 1 view .LVU926
 139:../USER/vramdisp.c **** 		}
 3053              		.loc 1 139 45 is_stmt 0 view .LVU927
 3054 014c 0122     		movs	r2, #1
 139:../USER/vramdisp.c **** 		}
 3055              		.loc 1 139 9 view .LVU928
 3056 014e 0023     		movs	r3, #0
 3057 0150 3748     		ldr	r0, .L199+4
 139:../USER/vramdisp.c **** 		}
 3058              		.loc 1 139 45 view .LVU929
 3059 0152 2A60     		str	r2, [r5]
 139:../USER/vramdisp.c **** 		}
 3060              		.loc 1 139 19 view .LVU930
 3061 0154 3549     		ldr	r1, .L199
 139:../USER/vramdisp.c **** 		}
 3062              		.loc 1 139 30 view .LVU931
 3063 0156 3B4A     		ldr	r2, .L199+24
 139:../USER/vramdisp.c **** 		}
 3064              		.loc 1 139 9 view .LVU932
 3065 0158 0360     		str	r3, [r0]
 139:../USER/vramdisp.c **** 		}
 3066              		.loc 1 139 14 is_stmt 1 view .LVU933
 139:../USER/vramdisp.c **** 		}
 3067              		.loc 1 139 19 is_stmt 0 view .LVU934
 3068 015a 0B60     		str	r3, [r1]
 139:../USER/vramdisp.c **** 		}
 3069              		.loc 1 139 24 is_stmt 1 view .LVU935
 139:../USER/vramdisp.c **** 		}
 3070              		.loc 1 139 30 is_stmt 0 view .LVU936
 3071 015c 1360     		str	r3, [r2]
 139:../USER/vramdisp.c **** 		}
 3072              		.loc 1 139 35 is_stmt 1 view .LVU937
 142:../USER/vramdisp.c **** 		else if(chd==0x0d) { csrx = 0; csry++;}
 3073              		.loc 1 142 3 view .LVU938
 143:../USER/vramdisp.c **** 		if(csrx>=80) {csrx = 0; csry++;}
 3074              		.loc 1 143 8 view .LVU939
 144:../USER/vramdisp.c **** 		if(csry>=(maxdy/chardh)) {
 3075              		.loc 1 144 3 view .LVU940
 145:../USER/vramdisp.c **** 			if(csrmd==0) {
 3076              		.loc 1 145 3 view .LVU941
 3077 015e 5CE7     		b	.L174
 3078              	.L198:
 147:../USER/vramdisp.c **** 				move_vram( 640*2*(maxdy-chardh),640*2*maxdy, 0, 10);	// Clear
 3079              		.loc 1 147 5 view .LVU942
 3080              	.LVL278:
 3081              	.LBB224:
 3082              	.LBI224:
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 3083              		.loc 1 79 6 view .LVU943
 3084              	.LBB225:
  80:../USER/vramdisp.c **** 	if(dadr==-1) {
 3085              		.loc 1 80 2 view .LVU944
  81:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
 3086              		.loc 1 81 2 view .LVU945
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3087              		.loc 1 85 2 view .LVU946
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3088              		.loc 1 85 48 is_stmt 0 view .LVU947
 3089 0160 4FF44851 		mov	r1, #12800
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3090              		.loc 1 85 12 view .LVU948
 3091 0164 334E     		ldr	r6, .L199+8
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3092              		.loc 1 85 30 view .LVU949
 3093 0166 394A     		ldr	r2, .L199+32
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3094              		.loc 1 85 48 view .LVU950
 3095 0168 B160     		str	r1, [r6, #8]
 3096              	.LBB226:
 3097              	.LBB227:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3098              		.loc 1 51 2 view .LVU951
 3099 016a 3348     		ldr	r0, .L199+12
 3100 016c 1946     		mov	r1, r3
 3101              	.LBE227:
 3102              	.LBE226:
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3103              		.loc 1 85 12 view .LVU952
 3104 016e 3360     		str	r3, [r6]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3105              		.loc 1 85 20 is_stmt 1 view .LVU953
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3106              		.loc 1 85 30 is_stmt 0 view .LVU954
 3107 0170 7260     		str	r2, [r6, #4]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3108              		.loc 1 85 38 is_stmt 1 view .LVU955
  86:../USER/vramdisp.c **** }
 3109              		.loc 1 86 2 view .LVU956
 3110              	.LVL279:
 3111              	.LBB229:
 3112              	.LBI226:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 3113              		.loc 1 49 6 view .LVU957
 3114              	.LBB228:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3115              		.loc 1 50 2 view .LVU958
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3116              		.loc 1 51 2 view .LVU959
 3117 0172 FFF7FEFF 		bl	GPIO_WriteBits
 3118              	.LVL280:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3119              		.loc 1 52 10 is_stmt 0 view .LVU960
 3120 0176 304D     		ldr	r5, .L199+12
 3121              	.L177:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3122              		.loc 1 52 2 is_stmt 1 view .LVU961
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3123              		.loc 1 52 5 view .LVU962
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3124              		.loc 1 52 10 is_stmt 0 view .LVU963
 3125 0178 2846     		mov	r0, r5
 3126 017a FFF7FEFF 		bl	GPIO_ReadBits
 3127              	.LVL281:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3128              		.loc 1 52 8 view .LVU964
 3129 017e C0B2     		uxtb	r0, r0
 3130 0180 2070     		strb	r0, [r4]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3131              		.loc 1 52 44 view .LVU965
 3132 0182 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3133              		.loc 1 52 2 view .LVU966
 3134 0184 D907     		lsls	r1, r3, #31
 3135 0186 F7D4     		bmi	.L177
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 3136              		.loc 1 53 2 is_stmt 1 view .LVU967
 3137 0188 2A4D     		ldr	r5, .L199+8
 3138 018a 4FF40071 		mov	r1, #512
 3139 018e 2E46     		mov	r6, r5
 3140 0190 AB46     		mov	fp, r5
 3141 0192 2948     		ldr	r0, .L199+12
 3142 0194 FFF7FEFF 		bl	GPIO_WriteBits
 3143              	.LVL282:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3144              		.loc 1 54 2 view .LVU968
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3145              		.loc 1 54 2 is_stmt 0 view .LVU969
 3146 0198 0194     		str	r4, [sp, #4]
 3147              	.LVL283:
 3148              	.L178:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3149              		.loc 1 55 3 is_stmt 1 view .LVU970
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3150              		.loc 1 55 6 is_stmt 0 view .LVU971
 3151 019a 1BF8014B 		ldrb	r4, [fp], #1	@ zero_extendqisi2
 3152              	.LVL284:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3153              		.loc 1 56 3 is_stmt 1 view .LVU972
 3154 019e 2648     		ldr	r0, .L199+12
 3155 01a0 04F54071 		add	r1, r4, #768
 3156 01a4 FFF7FEFF 		bl	GPIO_WriteBits
 3157              	.LVL285:
  57:../USER/vramdisp.c **** 	}
 3158              		.loc 1 57 3 view .LVU973
 3159 01a8 04F50071 		add	r1, r4, #512
 3160 01ac 2248     		ldr	r0, .L199+12
 3161 01ae FFF7FEFF 		bl	GPIO_WriteBits
 3162              	.LVL286:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3163              		.loc 1 54 2 is_stmt 0 view .LVU974
 3164 01b2 274B     		ldr	r3, .L199+36
 3165 01b4 5B45     		cmp	r3, fp
 3166 01b6 F0D1     		bne	.L178
  59:../USER/vramdisp.c **** }
 3167              		.loc 1 59 2 view .LVU975
 3168 01b8 0021     		movs	r1, #0
 3169 01ba 1F48     		ldr	r0, .L199+12
 3170 01bc 019C     		ldr	r4, [sp, #4]
 3171              	.LVL287:
  59:../USER/vramdisp.c **** }
 3172              		.loc 1 59 2 is_stmt 1 view .LVU976
 3173 01be FFF7FEFF 		bl	GPIO_WriteBits
 3174              	.LVL288:
  59:../USER/vramdisp.c **** }
 3175              		.loc 1 59 2 is_stmt 0 view .LVU977
 3176              	.LBE228:
 3177              	.LBE229:
 3178              	.LBE225:
 3179              	.LBE224:
 148:../USER/vramdisp.c **** 				csry = (maxdy/chardh-1); csrx = 0;
 3180              		.loc 1 148 5 is_stmt 1 view .LVU978
 3181              	.LBB230:
 3182              	.LBI230:
  79:../USER/vramdisp.c **** 	unsigned char i, dt;
 3183              		.loc 1 79 6 view .LVU979
 3184              	.LBB231:
  80:../USER/vramdisp.c **** 	if(dadr==-1) {
 3185              		.loc 1 80 2 view .LVU980
  81:../USER/vramdisp.c **** 		if(mode==10){ dadr=0; dlen=640*2*(360); sadr=0x001f; }		// Fill
 3186              		.loc 1 81 2 view .LVU981
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3187              		.loc 1 85 2 view .LVU982
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3188              		.loc 1 85 48 is_stmt 0 view .LVU983
 3189 01c2 0021     		movs	r1, #0
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3190              		.loc 1 85 30 view .LVU984
 3191 01c4 4FF4E122 		mov	r2, #460800
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3192              		.loc 1 85 12 view .LVU985
 3193 01c8 204B     		ldr	r3, .L199+32
 3194              	.LBB232:
 3195              	.LBB233:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3196              		.loc 1 51 2 view .LVU986
 3197 01ca 1B48     		ldr	r0, .L199+12
 3198              	.LBE233:
 3199              	.LBE232:
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3200              		.loc 1 85 30 view .LVU987
 3201 01cc C6E90121 		strd	r2, r1, [r6, #4]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3202              		.loc 1 85 12 view .LVU988
 3203 01d0 3360     		str	r3, [r6]
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3204              		.loc 1 85 20 is_stmt 1 view .LVU989
  85:../USER/vramdisp.c **** 	set_vramdata(mode);
 3205              		.loc 1 85 38 view .LVU990
  86:../USER/vramdisp.c **** }
 3206              		.loc 1 86 2 view .LVU991
 3207              	.LVL289:
 3208              	.LBB235:
 3209              	.LBI232:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 3210              		.loc 1 49 6 view .LVU992
 3211              	.LBB234:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3212              		.loc 1 50 2 view .LVU993
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3213              		.loc 1 51 2 view .LVU994
 3214 01d2 FFF7FEFF 		bl	GPIO_WriteBits
 3215              	.LVL290:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3216              		.loc 1 52 10 is_stmt 0 view .LVU995
 3217 01d6 184E     		ldr	r6, .L199+12
 3218              	.L179:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3219              		.loc 1 52 2 is_stmt 1 view .LVU996
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3220              		.loc 1 52 5 view .LVU997
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3221              		.loc 1 52 10 is_stmt 0 view .LVU998
 3222 01d8 3046     		mov	r0, r6
 3223 01da FFF7FEFF 		bl	GPIO_ReadBits
 3224              	.LVL291:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3225              		.loc 1 52 8 view .LVU999
 3226 01de C0B2     		uxtb	r0, r0
 3227 01e0 2070     		strb	r0, [r4]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3228              		.loc 1 52 44 view .LVU1000
 3229 01e2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3230              		.loc 1 52 2 view .LVU1001
 3231 01e4 DA07     		lsls	r2, r3, #31
 3232 01e6 F7D4     		bmi	.L179
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 3233              		.loc 1 53 2 is_stmt 1 view .LVU1002
 3234 01e8 4FF40071 		mov	r1, #512
 3235 01ec 1248     		ldr	r0, .L199+12
 3236 01ee FFF7FEFF 		bl	GPIO_WriteBits
 3237              	.LVL292:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3238              		.loc 1 54 2 view .LVU1003
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3239              		.loc 1 54 2 is_stmt 0 view .LVU1004
 3240 01f2 DFF860B0 		ldr	fp, .L199+40
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3241              		.loc 1 56 3 view .LVU1005
 3242 01f6 104E     		ldr	r6, .L199+12
 3243              	.LVL293:
 3244              	.L180:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3245              		.loc 1 55 3 is_stmt 1 view .LVU1006
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3246              		.loc 1 55 6 is_stmt 0 view .LVU1007
 3247 01f8 15F8014B 		ldrb	r4, [r5], #1	@ zero_extendqisi2
 3248              	.LVL294:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3249              		.loc 1 56 3 is_stmt 1 view .LVU1008
 3250 01fc 3046     		mov	r0, r6
 3251 01fe 04F54071 		add	r1, r4, #768
 3252 0202 FFF7FEFF 		bl	GPIO_WriteBits
 3253              	.LVL295:
  57:../USER/vramdisp.c **** 	}
 3254              		.loc 1 57 3 view .LVU1009
 3255 0206 04F50071 		add	r1, r4, #512
 3256 020a 3046     		mov	r0, r6
 3257 020c FFF7FEFF 		bl	GPIO_WriteBits
 3258              	.LVL296:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3259              		.loc 1 54 2 is_stmt 0 view .LVU1010
 3260 0210 AB45     		cmp	fp, r5
 3261 0212 F1D1     		bne	.L180
  59:../USER/vramdisp.c **** }
 3262              		.loc 1 59 2 is_stmt 1 view .LVU1011
 3263 0214 0021     		movs	r1, #0
 3264 0216 0848     		ldr	r0, .L199+12
 3265 0218 FFF7FEFF 		bl	GPIO_WriteBits
 3266              	.LVL297:
  59:../USER/vramdisp.c **** }
 3267              		.loc 1 59 2 is_stmt 0 view .LVU1012
 3268              	.LBE234:
 3269              	.LBE235:
 3270              	.LBE231:
 3271              	.LBE230:
 149:../USER/vramdisp.c **** 			} else {
 3272              		.loc 1 149 5 is_stmt 1 view .LVU1013
 149:../USER/vramdisp.c **** 			} else {
 3273              		.loc 1 149 10 is_stmt 0 view .LVU1014
 3274 021c 2322     		movs	r2, #35
 149:../USER/vramdisp.c **** 			} else {
 3275              		.loc 1 149 35 view .LVU1015
 3276 021e 0023     		movs	r3, #0
 149:../USER/vramdisp.c **** 			} else {
 3277              		.loc 1 149 10 view .LVU1016
 3278 0220 CAF80020 		str	r2, [r10]
 149:../USER/vramdisp.c **** 			} else {
 3279              		.loc 1 149 30 is_stmt 1 view .LVU1017
 149:../USER/vramdisp.c **** 			} else {
 3280              		.loc 1 149 35 is_stmt 0 view .LVU1018
 3281 0224 C9F80030 		str	r3, [r9]
 3282              	.LVL298:
 149:../USER/vramdisp.c **** 			} else {
 3283              		.loc 1 149 35 view .LVU1019
 3284 0228 F7E6     		b	.L174
 3285              	.L200:
 3286 022a 00BF     		.align	2
 3287              	.L199:
 3288 022c 00000000 		.word	.LANCHOR3
 3289 0230 00000000 		.word	.LANCHOR2
 3290 0234 00000000 		.word	wddt
 3291 0238 00000140 		.word	1073807360
 3292 023c 00000000 		.word	pd
 3293 0240 FFFFFFFF 		.word	wddt-1
 3294 0244 00000000 		.word	.LANCHOR4
 3295 0248 00000000 		.word	.LANCHOR1
 3296 024c 00D60600 		.word	448000
 3297 0250 0C000000 		.word	wddt+12
 3298 0254 0A000000 		.word	wddt+10
 3299              	.LBE236:
 3300              	.LBE237:
 3301              	.LBE238:
 3302              	.LBE239:
 3303              		.cfi_endproc
 3304              	.LFE41:
 3306              		.section	.text.dispfull,"ax",%progbits
 3307              		.align	1
 3308              		.p2align 2,,3
 3309              		.global	dispfull
 3310              		.syntax unified
 3311              		.thumb
 3312              		.thumb_func
 3313              		.fpu softvfp
 3315              	dispfull:
 3316              	.LVL299:
 3317              	.LFB42:
 169:../USER/vramdisp.c **** 
 170:../USER/vramdisp.c **** void dispfull(int adry, int adrx, int ptn, int ccd, int len){
 3318              		.loc 1 170 61 is_stmt 1 view -0
 3319              		.cfi_startproc
 3320              		@ args = 4, pretend = 0, frame = 8
 3321              		@ frame_needed = 0, uses_anonymous_args = 0
 3322              		.loc 1 170 61 is_stmt 0 view .LVU1021
 3323 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3324              		.cfi_def_cfa_offset 36
 3325              		.cfi_offset 4, -36
 3326              		.cfi_offset 5, -32
 3327              		.cfi_offset 6, -28
 3328              		.cfi_offset 7, -24
 3329              		.cfi_offset 8, -20
 3330              		.cfi_offset 9, -16
 3331              		.cfi_offset 10, -12
 3332              		.cfi_offset 11, -8
 3333              		.cfi_offset 14, -4
 3334 0004 83B0     		sub	sp, sp, #12
 3335              		.cfi_def_cfa_offset 48
 171:../USER/vramdisp.c **** 	int x;
 172:../USER/vramdisp.c **** 	if(len==-1) len = 1;
 3336              		.loc 1 172 4 view .LVU1022
 3337 0006 0C9A     		ldr	r2, [sp, #48]
 3338              	.LVL300:
 170:../USER/vramdisp.c **** 	int x;
 3339              		.loc 1 170 61 view .LVU1023
 3340 0008 0190     		str	r0, [sp, #4]
 3341              		.loc 1 172 4 view .LVU1024
 3342 000a 0132     		adds	r2, r2, #1
 170:../USER/vramdisp.c **** 	int x;
 3343              		.loc 1 170 61 view .LVU1025
 3344 000c 8946     		mov	r9, r1
 171:../USER/vramdisp.c **** 	int x;
 3345              		.loc 1 171 2 is_stmt 1 view .LVU1026
 3346              		.loc 1 172 2 view .LVU1027
 3347              		.loc 1 172 4 is_stmt 0 view .LVU1028
 3348 000e 64D0     		beq	.L216
 173:../USER/vramdisp.c **** 	if(adry==-1) { adry=0; adrx=0; ptn=0x07e0; ccd=0x30; len=0x10;}
 3349              		.loc 1 173 2 is_stmt 1 view .LVU1029
 3350              		.loc 1 173 4 is_stmt 0 view .LVU1030
 3351 0010 421C     		adds	r2, r0, #1
 3352 0012 4CD0     		beq	.L212
 3353              	.LVL301:
 174:../USER/vramdisp.c **** 	for( x=0; x<len; x++) {
 3354              		.loc 1 174 2 is_stmt 1 view .LVU1031
 3355              		.loc 1 174 2 is_stmt 0 view .LVU1032
 3356 0014 0C9A     		ldr	r2, [sp, #48]
 3357 0016 002A     		cmp	r2, #0
 3358 0018 5CDD     		ble	.L201
 3359 001a DA00     		lsls	r2, r3, #3
 3360 001c 3449     		ldr	r1, .L218
 3361              	.LVL302:
 3362              		.loc 1 174 2 view .LVU1033
 3363 001e C2F30A02 		ubfx	r2, r2, #0, #11
 3364 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 3365              	.LVL303:
 3366              	.L203:
 3367              		.loc 1 174 8 view .LVU1034
 3368 0024 0027     		movs	r7, #0
 3369 0026 0133     		adds	r3, r3, #1
 3370 0028 DFF8C880 		ldr	r8, .L218+4
 3371 002c DFF8C8B0 		ldr	fp, .L218+8
 3372              	.LBB244:
 3373              	.LBB245:
 3374              	.LBB246:
 3375              	.LBB247:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3376              		.loc 1 20 2 view .LVU1035
 3377 0030 DFF8C8A0 		ldr	r10, .L218+12
 3378 0034 DE00     		lsls	r6, r3, #3
 3379              	.LVL304:
 3380              	.L210:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3381              		.loc 1 20 2 view .LVU1036
 3382              	.LBE247:
 3383              	.LBE246:
 3384              	.LBE245:
 3385              	.LBE244:
 175:../USER/vramdisp.c **** 		if((adrx+x)>=80) {adrx = adrx - 80; adry++;}
 3386              		.loc 1 175 3 is_stmt 1 view .LVU1037
 3387              		.loc 1 175 11 is_stmt 0 view .LVU1038
 3388 0036 07EB0903 		add	r3, r7, r9
 3389              		.loc 1 175 5 view .LVU1039
 3390 003a 4F2B     		cmp	r3, #79
 3391 003c 06DD     		ble	.L205
 3392              		.loc 1 175 21 is_stmt 1 discriminator 1 view .LVU1040
 3393              		.loc 1 175 43 is_stmt 0 discriminator 1 view .LVU1041
 3394 003e 019B     		ldr	r3, [sp, #4]
 3395              		.loc 1 175 26 discriminator 1 view .LVU1042
 3396 0040 A9F15009 		sub	r9, r9, #80
 3397              	.LVL305:
 3398              		.loc 1 175 39 is_stmt 1 discriminator 1 view .LVU1043
 3399              		.loc 1 175 43 is_stmt 0 discriminator 1 view .LVU1044
 3400 0044 0133     		adds	r3, r3, #1
 3401 0046 0193     		str	r3, [sp, #4]
 3402              	.LVL306:
 3403              		.loc 1 175 43 discriminator 1 view .LVU1045
 3404 0048 09EB0703 		add	r3, r9, r7
 3405              	.LVL307:
 3406              	.L205:
 176:../USER/vramdisp.c **** 		set_char(adry,adrx+x,ptn,ccd+x);
 3407              		.loc 1 176 3 is_stmt 1 discriminator 2 view .LVU1046
 3408              	.LBB253:
 3409              	.LBI244:
 115:../USER/vramdisp.c **** 	int adr, bp;
 3410              		.loc 1 115 6 discriminator 2 view .LVU1047
 3411              	.LBB252:
 116:../USER/vramdisp.c **** 	unsigned char i, j, cgd, ph, pl;
 3412              		.loc 1 116 2 discriminator 2 view .LVU1048
 117:../USER/vramdisp.c **** 	ccd = ccd * 8; // font.ddr
 3413              		.loc 1 117 2 discriminator 2 view .LVU1049
 118:../USER/vramdisp.c **** 	ph = ptn >> 8; pl = ptn & 0xff;
 3414              		.loc 1 118 2 discriminator 2 view .LVU1050
 119:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 3415              		.loc 1 119 2 discriminator 2 view .LVU1051
 119:../USER/vramdisp.c **** 	if((adrx&1)==0) wddt.b[5] = 0xf0; else wddt.b[5] = 0x0f;
 3416              		.loc 1 119 17 discriminator 2 view .LVU1052
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 3417              		.loc 1 120 2 discriminator 2 view .LVU1053
 3418 004c 4FF4C874 		mov	r4, #400
 120:../USER/vramdisp.c **** 	for(j=0; j<8; j++) {
 3419              		.loc 1 120 28 is_stmt 0 discriminator 2 view .LVU1054
 3420 0050 13F0010F 		tst	r3, #1
 3421 0054 14BF     		ite	ne
 3422 0056 0F21     		movne	r1, #15
 3423 0058 F021     		moveq	r1, #240
 3424 005a 0198     		ldr	r0, [sp, #4]
 124:../USER/vramdisp.c **** 		set_vramdata_f6(6);
 3425              		.loc 1 124 3 discriminator 2 view .LVU1055
 3426 005c 03EBD373 		add	r3, r3, r3, lsr #31
 3427 0060 04FB00F4 		mul	r4, r4, r0
 3428 0064 04EB6303 		add	r3, r4, r3, asr #1
 3429 0068 5C01     		lsls	r4, r3, #5
 3430 006a 88F80510 		strb	r1, [r8, #5]
 3431              	.LVL308:
 124:../USER/vramdisp.c **** 		set_vramdata_f6(6);
 3432              		.loc 1 124 3 discriminator 2 view .LVU1056
 3433 006e A6F10805 		sub	r5, r6, #8
 3434              	.LVL309:
 3435              	.L207:
 122:../USER/vramdisp.c **** 		wddt.b[4] = cgd;
 3436              		.loc 1 122 3 is_stmt 1 view .LVU1057
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 3437              		.loc 1 123 3 view .LVU1058
 3438              	.LBB250:
 3439              	.LBB248:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3440              		.loc 1 20 2 is_stmt 0 view .LVU1059
 3441 0072 0021     		movs	r1, #0
 3442 0074 5046     		mov	r0, r10
 3443              	.LBE248:
 3444              	.LBE250:
 123:../USER/vramdisp.c **** 		set_vramadr(adry*chardh+j, adrx/2);
 3445              		.loc 1 123 13 view .LVU1060
 3446 0076 88F80420 		strb	r2, [r8, #4]
 124:../USER/vramdisp.c **** 		set_vramdata_f6(6);
 3447              		.loc 1 124 3 is_stmt 1 view .LVU1061
 3448              	.LVL310:
 3449              	.LBB251:
 3450              	.LBI246:
  17:../USER/vramdisp.c **** 	int adr;
 3451              		.loc 1 17 6 view .LVU1062
 3452              	.LBB249:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 3453              		.loc 1 18 2 view .LVU1063
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3454              		.loc 1 19 2 view .LVU1064
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3455              		.loc 1 20 2 view .LVU1065
 3456 007a FFF7FEFF 		bl	GPIO_WriteBits
 3457              	.LVL311:
 3458              	.L208:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3459              		.loc 1 21 2 view .LVU1066
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3460              		.loc 1 21 5 view .LVU1067
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3461              		.loc 1 21 10 is_stmt 0 view .LVU1068
 3462 007e 5046     		mov	r0, r10
 3463 0080 FFF7FEFF 		bl	GPIO_ReadBits
 3464              	.LVL312:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3465              		.loc 1 21 8 view .LVU1069
 3466 0084 C0B2     		uxtb	r0, r0
 3467 0086 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3468              		.loc 1 21 44 view .LVU1070
 3469 008a 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3470              		.loc 1 21 2 view .LVU1071
 3471 008e DB07     		lsls	r3, r3, #31
 3472 0090 F5D4     		bmi	.L208
  22:../USER/vramdisp.c **** }
 3473              		.loc 1 22 2 is_stmt 1 view .LVU1072
 3474 0092 0135     		adds	r5, r5, #1
 3475              	.LVL313:
  22:../USER/vramdisp.c **** }
 3476              		.loc 1 22 12 is_stmt 0 view .LVU1073
 3477 0094 C8F80040 		str	r4, [r8]
 3478              	.LVL314:
  22:../USER/vramdisp.c **** }
 3479              		.loc 1 22 12 view .LVU1074
 3480              	.LBE249:
 3481              	.LBE251:
 125:../USER/vramdisp.c **** 	}
 3482              		.loc 1 125 3 is_stmt 1 view .LVU1075
 3483 0098 FFF7FEFF 		bl	set_vramdata_f6.constprop.1
 3484              	.LVL315:
 121:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 3485              		.loc 1 121 2 is_stmt 0 view .LVU1076
 3486 009c AE42     		cmp	r6, r5
 3487 009e 04F5A064 		add	r4, r4, #1280
 3488 00a2 0DD0     		beq	.L217
 3489 00a4 124A     		ldr	r2, .L218
 3490 00a6 C5F30A03 		ubfx	r3, r5, #0, #11
 3491 00aa D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3492 00ac E1E7     		b	.L207
 3493              	.LVL316:
 3494              	.L212:
 121:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 3495              		.loc 1 121 2 view .LVU1077
 3496              	.LBE252:
 3497              	.LBE253:
 3498 00ae 1023     		movs	r3, #16
 3499              	.LVL317:
 121:../USER/vramdisp.c **** 		cgd = FONT_8x8[(ccd+j)& 0x7ff];
 3500              		.loc 1 121 2 view .LVU1078
 3501 00b0 4FF00009 		mov	r9, #0
 3502 00b4 0C93     		str	r3, [sp, #48]
 3503 00b6 7C22     		movs	r2, #124
 3504 00b8 CDF80490 		str	r9, [sp, #4]
 3505 00bc 3023     		movs	r3, #48
 3506 00be B1E7     		b	.L203
 3507              	.LVL318:
 3508              	.L217:
 174:../USER/vramdisp.c **** 		if((adrx+x)>=80) {adrx = adrx - 80; adry++;}
 3509              		.loc 1 174 2 discriminator 2 view .LVU1079
 3510 00c0 0C9B     		ldr	r3, [sp, #48]
 174:../USER/vramdisp.c **** 		if((adrx+x)>=80) {adrx = adrx - 80; adry++;}
 3511              		.loc 1 174 20 discriminator 2 view .LVU1080
 3512 00c2 0137     		adds	r7, r7, #1
 3513              	.LVL319:
 174:../USER/vramdisp.c **** 		if((adrx+x)>=80) {adrx = adrx - 80; adry++;}
 3514              		.loc 1 174 2 discriminator 2 view .LVU1081
 3515 00c4 9F42     		cmp	r7, r3
 3516 00c6 05DA     		bge	.L201
 3517 00c8 094A     		ldr	r2, .L218
 3518 00ca C6F30A03 		ubfx	r3, r6, #0, #11
 3519 00ce D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3520 00d0 0836     		adds	r6, r6, #8
 3521 00d2 B0E7     		b	.L210
 3522              	.LVL320:
 3523              	.L201:
 177:../USER/vramdisp.c **** 	}
 178:../USER/vramdisp.c **** }
 3524              		.loc 1 178 1 view .LVU1082
 3525 00d4 03B0     		add	sp, sp, #12
 3526              		.cfi_remember_state
 3527              		.cfi_def_cfa_offset 36
 3528              		@ sp needed
 3529 00d6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3530              	.LVL321:
 3531              	.L216:
 3532              		.cfi_restore_state
 173:../USER/vramdisp.c **** 	for( x=0; x<len; x++) {
 3533              		.loc 1 173 2 is_stmt 1 view .LVU1083
 173:../USER/vramdisp.c **** 	for( x=0; x<len; x++) {
 3534              		.loc 1 173 4 is_stmt 0 view .LVU1084
 3535 00da 421C     		adds	r2, r0, #1
 3536 00dc E7D0     		beq	.L212
 3537 00de 0449     		ldr	r1, .L218
 3538              	.LVL322:
 173:../USER/vramdisp.c **** 	for( x=0; x<len; x++) {
 3539              		.loc 1 173 4 view .LVU1085
 3540 00e0 DA00     		lsls	r2, r3, #3
 3541 00e2 C2F30A02 		ubfx	r2, r2, #0, #11
 3542 00e6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 172:../USER/vramdisp.c **** 	if(adry==-1) { adry=0; adrx=0; ptn=0x07e0; ccd=0x30; len=0x10;}
 3543              		.loc 1 172 18 view .LVU1086
 3544 00e8 0121     		movs	r1, #1
 3545 00ea 0C91     		str	r1, [sp, #48]
 3546 00ec 9AE7     		b	.L203
 3547              	.L219:
 3548 00ee 00BF     		.align	2
 3549              	.L218:
 3550 00f0 00000000 		.word	.LANCHOR0
 3551 00f4 00000000 		.word	wddt
 3552 00f8 00000000 		.word	pd
 3553 00fc 00000140 		.word	1073807360
 3554              		.cfi_endproc
 3555              	.LFE42:
 3557              		.section	.text.pget,"ax",%progbits
 3558              		.align	1
 3559              		.p2align 2,,3
 3560              		.global	pget
 3561              		.syntax unified
 3562              		.thumb
 3563              		.thumb_func
 3564              		.fpu softvfp
 3566              	pget:
 3567              	.LVL323:
 3568              	.LFB43:
 179:../USER/vramdisp.c **** 
 180:../USER/vramdisp.c **** u16 pget(u16 xp, u16 yp){
 3569              		.loc 1 180 25 is_stmt 1 view -0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 0
 3572              		@ frame_needed = 0, uses_anonymous_args = 0
 181:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 3573              		.loc 1 181 2 view .LVU1088
 182:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 3574              		.loc 1 182 2 view .LVU1089
 3575              	.LBB260:
 3576              	.LBB261:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3577              		.loc 1 19 15 is_stmt 0 view .LVU1090
 3578 0000 01EB8101 		add	r1, r1, r1, lsl #2
 3579              	.LVL324:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3580              		.loc 1 19 15 view .LVU1091
 3581              	.LBE261:
 3582              	.LBE260:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 3583              		.loc 1 180 25 view .LVU1092
 3584 0004 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3585              		.cfi_def_cfa_offset 32
 3586              		.cfi_offset 3, -32
 3587              		.cfi_offset 4, -28
 3588              		.cfi_offset 5, -24
 3589              		.cfi_offset 6, -20
 3590              		.cfi_offset 7, -16
 3591              		.cfi_offset 8, -12
 3592              		.cfi_offset 9, -8
 3593              		.cfi_offset 14, -4
 3594              	.LBB266:
 3595              	.LBB262:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3596              		.loc 1 19 15 view .LVU1093
 3597 0008 CC00     		lsls	r4, r1, #3
 3598              	.LBE262:
 3599              	.LBE266:
 3600              		.loc 1 182 12 view .LVU1094
 3601 000a 384D     		ldr	r5, .L230
 3602              		.loc 1 182 17 view .LVU1095
 3603 000c 00F00F03 		and	r3, r0, #15
 3604              	.LBB267:
 3605              	.LBB263:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3606              		.loc 1 19 18 view .LVU1096
 3607 0010 04EB1014 		add	r4, r4, r0, lsr #4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3608              		.loc 1 20 2 view .LVU1097
 3609 0014 0021     		movs	r1, #0
 3610 0016 3648     		ldr	r0, .L230+4
 3611              	.LVL325:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3612              		.loc 1 20 2 view .LVU1098
 3613              	.LBE263:
 3614              	.LBE267:
 3615              		.loc 1 182 12 view .LVU1099
 3616 0018 2B71     		strb	r3, [r5, #4]
 183:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 3617              		.loc 1 183 2 is_stmt 1 view .LVU1100
 3618              	.LVL326:
 3619              	.LBB268:
 3620              	.LBI260:
  17:../USER/vramdisp.c **** 	int adr;
 3621              		.loc 1 17 6 view .LVU1101
 3622              	.LBB264:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 3623              		.loc 1 18 2 view .LVU1102
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3624              		.loc 1 19 2 view .LVU1103
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3625              		.loc 1 20 2 is_stmt 0 view .LVU1104
 3626 001a FFF7FEFF 		bl	GPIO_WriteBits
 3627              	.LVL327:
 3628 001e 354E     		ldr	r6, .L230+8
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3629              		.loc 1 21 10 view .LVU1105
 3630 0020 334F     		ldr	r7, .L230+4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3631              		.loc 1 19 6 view .LVU1106
 3632 0022 6401     		lsls	r4, r4, #5
 3633              	.LVL328:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3634              		.loc 1 20 2 is_stmt 1 view .LVU1107
 3635              	.L221:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3636              		.loc 1 21 2 view .LVU1108
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3637              		.loc 1 21 5 view .LVU1109
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3638              		.loc 1 21 10 is_stmt 0 view .LVU1110
 3639 0024 3846     		mov	r0, r7
 3640 0026 FFF7FEFF 		bl	GPIO_ReadBits
 3641              	.LVL329:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3642              		.loc 1 21 8 view .LVU1111
 3643 002a C0B2     		uxtb	r0, r0
 3644 002c 3070     		strb	r0, [r6]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3645              		.loc 1 21 44 view .LVU1112
 3646 002e 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3647              		.loc 1 21 2 view .LVU1113
 3648 0030 11F00101 		ands	r1, r1, #1
 3649 0034 F6D1     		bne	.L221
  22:../USER/vramdisp.c **** }
 3650              		.loc 1 22 2 is_stmt 1 view .LVU1114
 3651              	.LBE264:
 3652              	.LBE268:
 3653              	.LBB269:
 3654              	.LBB270:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3655              		.loc 1 51 2 is_stmt 0 view .LVU1115
 3656 0036 2E48     		ldr	r0, .L230+4
 3657              	.LBE270:
 3658              	.LBE269:
 3659              	.LBB272:
 3660              	.LBB265:
  22:../USER/vramdisp.c **** }
 3661              		.loc 1 22 12 view .LVU1116
 3662 0038 2C60     		str	r4, [r5]
 3663              	.LVL330:
  22:../USER/vramdisp.c **** }
 3664              		.loc 1 22 12 view .LVU1117
 3665              	.LBE265:
 3666              	.LBE272:
 184:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 3667              		.loc 1 184 2 is_stmt 1 view .LVU1118
 3668              	.LBB273:
 3669              	.LBI269:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 3670              		.loc 1 49 6 view .LVU1119
 3671              	.LBB271:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3672              		.loc 1 50 2 view .LVU1120
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3673              		.loc 1 51 2 view .LVU1121
 3674 003a FFF7FEFF 		bl	GPIO_WriteBits
 3675              	.LVL331:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3676              		.loc 1 52 10 is_stmt 0 view .LVU1122
 3677 003e 2C4C     		ldr	r4, .L230+4
 3678              	.L222:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3679              		.loc 1 52 2 is_stmt 1 view .LVU1123
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3680              		.loc 1 52 5 view .LVU1124
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3681              		.loc 1 52 10 is_stmt 0 view .LVU1125
 3682 0040 2046     		mov	r0, r4
 3683 0042 FFF7FEFF 		bl	GPIO_ReadBits
 3684              	.LVL332:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3685              		.loc 1 52 8 view .LVU1126
 3686 0046 C0B2     		uxtb	r0, r0
 3687 0048 3070     		strb	r0, [r6]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3688              		.loc 1 52 44 view .LVU1127
 3689 004a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3690              		.loc 1 52 2 view .LVU1128
 3691 004c DB07     		lsls	r3, r3, #31
 3692 004e F7D4     		bmi	.L222
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 3693              		.loc 1 53 2 is_stmt 1 view .LVU1129
 3694 0050 4FF40071 		mov	r1, #512
 3695 0054 2648     		ldr	r0, .L230+4
 3696 0056 FFF7FEFF 		bl	GPIO_WriteBits
 3697              	.LVL333:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3698              		.loc 1 54 2 view .LVU1130
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3699              		.loc 1 54 2 is_stmt 0 view .LVU1131
 3700 005a 244C     		ldr	r4, .L230
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3701              		.loc 1 56 3 view .LVU1132
 3702 005c 244F     		ldr	r7, .L230+4
 3703 005e 04F10509 		add	r9, r4, #5
 3704              	.LVL334:
 3705              	.L223:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3706              		.loc 1 55 3 is_stmt 1 view .LVU1133
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3707              		.loc 1 55 6 is_stmt 0 view .LVU1134
 3708 0062 14F8018B 		ldrb	r8, [r4], #1	@ zero_extendqisi2
 3709              	.LVL335:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3710              		.loc 1 56 3 is_stmt 1 view .LVU1135
 3711 0066 3846     		mov	r0, r7
 3712 0068 08F54071 		add	r1, r8, #768
 3713 006c FFF7FEFF 		bl	GPIO_WriteBits
 3714              	.LVL336:
  57:../USER/vramdisp.c **** 	}
 3715              		.loc 1 57 3 view .LVU1136
 3716 0070 08F50071 		add	r1, r8, #512
 3717 0074 3846     		mov	r0, r7
 3718 0076 FFF7FEFF 		bl	GPIO_WriteBits
 3719              	.LVL337:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3720              		.loc 1 54 2 is_stmt 0 view .LVU1137
 3721 007a A145     		cmp	r9, r4
 3722 007c F1D1     		bne	.L223
  59:../USER/vramdisp.c **** }
 3723              		.loc 1 59 2 is_stmt 1 view .LVU1138
 3724 007e 0021     		movs	r1, #0
 3725 0080 1B48     		ldr	r0, .L230+4
 3726 0082 FFF7FEFF 		bl	GPIO_WriteBits
 3727              	.LVL338:
  59:../USER/vramdisp.c **** }
 3728              		.loc 1 59 2 is_stmt 0 view .LVU1139
 3729              	.LBE271:
 3730              	.LBE273:
 185:../USER/vramdisp.c **** 	get_vramdata(2);
 3731              		.loc 1 185 2 is_stmt 1 view .LVU1140
 3732              	.LBB274:
 3733              	.LBI274:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 3734              		.loc 1 24 6 view .LVU1141
 3735              	.LBB275:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3736              		.loc 1 25 2 view .LVU1142
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3737              		.loc 1 26 2 view .LVU1143
 3738 0086 0021     		movs	r1, #0
 3739 0088 1948     		ldr	r0, .L230+4
 3740 008a FFF7FEFF 		bl	GPIO_WriteBits
 3741              	.LVL339:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3742              		.loc 1 27 10 is_stmt 0 view .LVU1144
 3743 008e 184F     		ldr	r7, .L230+4
 3744              	.L224:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3745              		.loc 1 27 2 is_stmt 1 view .LVU1145
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3746              		.loc 1 27 5 view .LVU1146
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3747              		.loc 1 27 10 is_stmt 0 view .LVU1147
 3748 0090 3846     		mov	r0, r7
 3749 0092 FFF7FEFF 		bl	GPIO_ReadBits
 3750              	.LVL340:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3751              		.loc 1 27 8 view .LVU1148
 3752 0096 C0B2     		uxtb	r0, r0
 3753 0098 3070     		strb	r0, [r6]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3754              		.loc 1 27 44 view .LVU1149
 3755 009a 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 3756              		.loc 1 27 2 view .LVU1150
 3757 009c 14F00104 		ands	r4, r4, #1
 3758 00a0 F6D1     		bne	.L224
 3759              	.LVL341:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 3760              		.loc 1 29 3 is_stmt 1 view .LVU1151
 3761 00a2 4FF48071 		mov	r1, #256
 3762 00a6 1248     		ldr	r0, .L230+4
 3763 00a8 FFF7FEFF 		bl	GPIO_WriteBits
 3764              	.LVL342:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 3765              		.loc 1 30 3 view .LVU1152
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 3766              		.loc 1 30 17 is_stmt 0 view .LVU1153
 3767 00ac 1048     		ldr	r0, .L230+4
 3768 00ae FFF7FEFF 		bl	GPIO_ReadBits
 3769              	.LVL343:
  31:../USER/vramdisp.c **** 	}
 3770              		.loc 1 31 3 view .LVU1154
 3771 00b2 2146     		mov	r1, r4
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 3772              		.loc 1 30 15 view .LVU1155
 3773 00b4 2871     		strb	r0, [r5, #4]
  31:../USER/vramdisp.c **** 	}
 3774              		.loc 1 31 3 is_stmt 1 view .LVU1156
 3775 00b6 0E48     		ldr	r0, .L230+4
 3776 00b8 FFF7FEFF 		bl	GPIO_WriteBits
 3777              	.LVL344:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 3778              		.loc 1 29 3 view .LVU1157
 3779 00bc 4FF48071 		mov	r1, #256
 3780 00c0 0B48     		ldr	r0, .L230+4
 3781 00c2 FFF7FEFF 		bl	GPIO_WriteBits
 3782              	.LVL345:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 3783              		.loc 1 30 3 view .LVU1158
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 3784              		.loc 1 30 17 is_stmt 0 view .LVU1159
 3785 00c6 0A48     		ldr	r0, .L230+4
 3786 00c8 FFF7FEFF 		bl	GPIO_ReadBits
 3787              	.LVL346:
  31:../USER/vramdisp.c **** 	}
 3788              		.loc 1 31 3 view .LVU1160
 3789 00cc 2146     		mov	r1, r4
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 3790              		.loc 1 30 15 view .LVU1161
 3791 00ce 6871     		strb	r0, [r5, #5]
  31:../USER/vramdisp.c **** 	}
 3792              		.loc 1 31 3 is_stmt 1 view .LVU1162
 3793 00d0 0748     		ldr	r0, .L230+4
 3794 00d2 FFF7FEFF 		bl	GPIO_WriteBits
 3795              	.LVL347:
  33:../USER/vramdisp.c **** 
 3796              		.loc 1 33 2 view .LVU1163
 3797 00d6 2146     		mov	r1, r4
 3798 00d8 0548     		ldr	r0, .L230+4
 3799 00da FFF7FEFF 		bl	GPIO_WriteBits
 3800              	.LVL348:
  33:../USER/vramdisp.c **** 
 3801              		.loc 1 33 2 is_stmt 0 view .LVU1164
 3802              	.LBE275:
 3803              	.LBE274:
 186:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 3804              		.loc 1 186 2 is_stmt 1 view .LVU1165
 3805              		.loc 1 186 23 view .LVU1166
 187:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 3806              		.loc 1 187 2 view .LVU1167
 3807              		.loc 1 187 9 is_stmt 0 view .LVU1168
 3808 00de 6879     		ldrb	r0, [r5, #5]	@ zero_extendqisi2
 3809              		.loc 1 187 20 view .LVU1169
 3810 00e0 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 188:../USER/vramdisp.c **** }
 3811              		.loc 1 188 1 view .LVU1170
 3812 00e2 43EA0020 		orr	r0, r3, r0, lsl #8
 3813 00e6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3814              	.L231:
 3815 00ea 00BF     		.align	2
 3816              	.L230:
 3817 00ec 00000000 		.word	wddt
 3818 00f0 00000140 		.word	1073807360
 3819 00f4 00000000 		.word	pd
 3820              		.cfi_endproc
 3821              	.LFE43:
 3823              		.section	.text.pset,"ax",%progbits
 3824              		.align	1
 3825              		.p2align 2,,3
 3826              		.global	pset
 3827              		.syntax unified
 3828              		.thumb
 3829              		.thumb_func
 3830              		.fpu softvfp
 3832              	pset:
 3833              	.LVL349:
 3834              	.LFB44:
 189:../USER/vramdisp.c **** 
 190:../USER/vramdisp.c **** void pset(u16 xp, u16 yp, u16 ptn){	// xp=0-639 yp=0-359
 3835              		.loc 1 190 35 is_stmt 1 view -0
 3836              		.cfi_startproc
 3837              		@ args = 0, pretend = 0, frame = 0
 3838              		@ frame_needed = 0, uses_anonymous_args = 0
 191:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 3839              		.loc 1 191 2 view .LVU1172
 192:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 193:../USER/vramdisp.c **** 	//else {
 194:../USER/vramdisp.c **** 		wddt.s[2] = ptn; wddt.b[6] = xp & 15; // bit.pos
 3840              		.loc 1 194 3 view .LVU1173
 3841              	.LBB280:
 3842              	.LBB281:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3843              		.loc 1 19 15 is_stmt 0 view .LVU1174
 3844 0000 01EB8101 		add	r1, r1, r1, lsl #2
 3845              	.LVL350:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3846              		.loc 1 19 15 view .LVU1175
 3847              	.LBE281:
 3848              	.LBE280:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 3849              		.loc 1 190 35 view .LVU1176
 3850 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3851              		.cfi_def_cfa_offset 24
 3852              		.cfi_offset 3, -24
 3853              		.cfi_offset 4, -20
 3854              		.cfi_offset 5, -16
 3855              		.cfi_offset 6, -12
 3856              		.cfi_offset 7, -8
 3857              		.cfi_offset 14, -4
 3858              	.LBB286:
 3859              	.LBB282:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3860              		.loc 1 19 15 view .LVU1177
 3861 0006 CC00     		lsls	r4, r1, #3
 3862              	.LBE282:
 3863              	.LBE286:
 3864              		.loc 1 194 13 view .LVU1178
 3865 0008 1F4E     		ldr	r6, .L240
 3866              		.loc 1 194 35 view .LVU1179
 3867 000a 00F00F03 		and	r3, r0, #15
 3868              	.LBB287:
 3869              	.LBB283:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3870              		.loc 1 19 18 view .LVU1180
 3871 000e 04EB1014 		add	r4, r4, r0, lsr #4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3872              		.loc 1 20 2 view .LVU1181
 3873 0012 0021     		movs	r1, #0
 3874 0014 1D48     		ldr	r0, .L240+4
 3875              	.LVL351:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3876              		.loc 1 20 2 view .LVU1182
 3877              	.LBE283:
 3878              	.LBE287:
 3879              		.loc 1 194 30 view .LVU1183
 3880 0016 B371     		strb	r3, [r6, #6]
 3881              		.loc 1 194 13 view .LVU1184
 3882 0018 B280     		strh	r2, [r6, #4]	@ movhi
 3883              		.loc 1 194 20 is_stmt 1 view .LVU1185
 195:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 3884              		.loc 1 195 3 view .LVU1186
 3885              	.LVL352:
 3886              	.LBB288:
 3887              	.LBI280:
  17:../USER/vramdisp.c **** 	int adr;
 3888              		.loc 1 17 6 view .LVU1187
 3889              	.LBB284:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 3890              		.loc 1 18 2 view .LVU1188
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3891              		.loc 1 19 2 view .LVU1189
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3892              		.loc 1 20 2 is_stmt 0 view .LVU1190
 3893 001a FFF7FEFF 		bl	GPIO_WriteBits
 3894              	.LVL353:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3895              		.loc 1 20 2 view .LVU1191
 3896 001e 1C4D     		ldr	r5, .L240+8
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3897              		.loc 1 21 10 view .LVU1192
 3898 0020 1A4F     		ldr	r7, .L240+4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3899              		.loc 1 19 6 view .LVU1193
 3900 0022 6401     		lsls	r4, r4, #5
 3901              	.LVL354:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3902              		.loc 1 20 2 is_stmt 1 view .LVU1194
 3903              	.L233:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3904              		.loc 1 21 2 view .LVU1195
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3905              		.loc 1 21 5 view .LVU1196
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3906              		.loc 1 21 10 is_stmt 0 view .LVU1197
 3907 0024 3846     		mov	r0, r7
 3908 0026 FFF7FEFF 		bl	GPIO_ReadBits
 3909              	.LVL355:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3910              		.loc 1 21 8 view .LVU1198
 3911 002a C0B2     		uxtb	r0, r0
 3912 002c 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3913              		.loc 1 21 44 view .LVU1199
 3914 002e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 3915              		.loc 1 21 2 view .LVU1200
 3916 0030 11F00101 		ands	r1, r1, #1
 3917 0034 F6D1     		bne	.L233
  22:../USER/vramdisp.c **** }
 3918              		.loc 1 22 2 is_stmt 1 view .LVU1201
 3919              	.LBE284:
 3920              	.LBE288:
 3921              	.LBB289:
 3922              	.LBB290:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3923              		.loc 1 51 2 is_stmt 0 view .LVU1202
 3924 0036 1548     		ldr	r0, .L240+4
 3925              	.LBE290:
 3926              	.LBE289:
 3927              	.LBB293:
 3928              	.LBB285:
  22:../USER/vramdisp.c **** }
 3929              		.loc 1 22 12 view .LVU1203
 3930 0038 3460     		str	r4, [r6]
 3931              	.LVL356:
  22:../USER/vramdisp.c **** }
 3932              		.loc 1 22 12 view .LVU1204
 3933              	.LBE285:
 3934              	.LBE293:
 196:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 3935              		.loc 1 196 3 is_stmt 1 view .LVU1205
 3936              	.LBB294:
 3937              	.LBI289:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 3938              		.loc 1 49 6 view .LVU1206
 3939              	.LBB291:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 3940              		.loc 1 50 2 view .LVU1207
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 3941              		.loc 1 51 2 view .LVU1208
 3942 003a FFF7FEFF 		bl	GPIO_WriteBits
 3943              	.LVL357:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3944              		.loc 1 52 10 is_stmt 0 view .LVU1209
 3945 003e 134C     		ldr	r4, .L240+4
 3946              	.L234:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3947              		.loc 1 52 2 is_stmt 1 view .LVU1210
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3948              		.loc 1 52 5 view .LVU1211
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3949              		.loc 1 52 10 is_stmt 0 view .LVU1212
 3950 0040 2046     		mov	r0, r4
 3951 0042 FFF7FEFF 		bl	GPIO_ReadBits
 3952              	.LVL358:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3953              		.loc 1 52 8 view .LVU1213
 3954 0046 C0B2     		uxtb	r0, r0
 3955 0048 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3956              		.loc 1 52 44 view .LVU1214
 3957 004a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 3958              		.loc 1 52 2 view .LVU1215
 3959 004c DB07     		lsls	r3, r3, #31
 3960 004e F7D4     		bmi	.L234
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 3961              		.loc 1 53 2 is_stmt 1 view .LVU1216
 3962 0050 4FF40071 		mov	r1, #512
 3963 0054 0D48     		ldr	r0, .L240+4
 3964 0056 FFF7FEFF 		bl	GPIO_WriteBits
 3965              	.LVL359:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3966              		.loc 1 54 2 view .LVU1217
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3967              		.loc 1 54 2 is_stmt 0 view .LVU1218
 3968 005a 0E4C     		ldr	r4, .L240+12
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3969              		.loc 1 56 3 view .LVU1219
 3970 005c 0B4D     		ldr	r5, .L240+4
 3971 005e E71D     		adds	r7, r4, #7
 3972              	.LVL360:
 3973              	.L235:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 3974              		.loc 1 55 3 is_stmt 1 view .LVU1220
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3975              		.loc 1 56 3 view .LVU1221
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3976              		.loc 1 56 29 is_stmt 0 view .LVU1222
 3977 0060 14F8016F 		ldrb	r6, [r4, #1]!	@ zero_extendqisi2
 3978              	.LVL361:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 3979              		.loc 1 56 3 view .LVU1223
 3980 0064 2846     		mov	r0, r5
 3981 0066 06F54071 		add	r1, r6, #768
 3982 006a FFF7FEFF 		bl	GPIO_WriteBits
 3983              	.LVL362:
  57:../USER/vramdisp.c **** 	}
 3984              		.loc 1 57 3 is_stmt 1 view .LVU1224
 3985 006e 06F50071 		add	r1, r6, #512
 3986 0072 2846     		mov	r0, r5
 3987 0074 FFF7FEFF 		bl	GPIO_WriteBits
 3988              	.LVL363:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 3989              		.loc 1 54 2 is_stmt 0 view .LVU1225
 3990 0078 A742     		cmp	r7, r4
 3991 007a F1D1     		bne	.L235
  59:../USER/vramdisp.c **** }
 3992              		.loc 1 59 2 is_stmt 1 view .LVU1226
 3993              	.LBE291:
 3994              	.LBE294:
 197:../USER/vramdisp.c **** 	//}
 198:../USER/vramdisp.c **** }
 3995              		.loc 1 198 1 is_stmt 0 view .LVU1227
 3996 007c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 3997              		.cfi_restore 14
 3998              		.cfi_restore 7
 3999              		.cfi_restore 6
 4000              		.cfi_restore 5
 4001              		.cfi_restore 4
 4002              		.cfi_restore 3
 4003              		.cfi_def_cfa_offset 0
 4004              	.LVL364:
 4005              	.LBB295:
 4006              	.LBB292:
  59:../USER/vramdisp.c **** }
 4007              		.loc 1 59 2 view .LVU1228
 4008 0080 0021     		movs	r1, #0
 4009 0082 0248     		ldr	r0, .L240+4
 4010 0084 FFF7FEBF 		b	GPIO_WriteBits
 4011              	.LVL365:
 4012              	.L241:
 4013              		.align	2
 4014              	.L240:
 4015 0088 00000000 		.word	wddt
 4016 008c 00000140 		.word	1073807360
 4017 0090 00000000 		.word	pd
 4018 0094 FFFFFFFF 		.word	wddt-1
 4019              	.LBE292:
 4020              	.LBE295:
 4021              		.cfi_endproc
 4022              	.LFE44:
 4024              		.section	.text.DCircle,"ax",%progbits
 4025              		.align	1
 4026              		.p2align 2,,3
 4027              		.global	DCircle
 4028              		.syntax unified
 4029              		.thumb
 4030              		.thumb_func
 4031              		.fpu softvfp
 4033              	DCircle:
 4034              	.LVL366:
 4035              	.LFB45:
 199:../USER/vramdisp.c **** 
 200:../USER/vramdisp.c **** void DCircle(u16 x0,u16 y0,u16 r,u16 ptn) {
 4036              		.loc 1 200 43 is_stmt 1 view -0
 4037              		.cfi_startproc
 4038              		@ args = 0, pretend = 0, frame = 72
 4039              		@ frame_needed = 0, uses_anonymous_args = 0
 201:../USER/vramdisp.c ****   int a,b,di;
 4040              		.loc 1 201 3 view .LVU1230
 202:../USER/vramdisp.c ****   a=0; b=r; di=3-(r<<1);
 4041              		.loc 1 202 3 view .LVU1231
 4042              		.loc 1 202 8 view .LVU1232
 200:../USER/vramdisp.c ****   int a,b,di;
 4043              		.loc 1 200 43 is_stmt 0 view .LVU1233
 4044 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4045              		.cfi_def_cfa_offset 36
 4046              		.cfi_offset 4, -36
 4047              		.cfi_offset 5, -32
 4048              		.cfi_offset 6, -28
 4049              		.cfi_offset 7, -24
 4050              		.cfi_offset 8, -20
 4051              		.cfi_offset 9, -16
 4052              		.cfi_offset 10, -12
 4053              		.cfi_offset 11, -8
 4054              		.cfi_offset 14, -4
 4055 0004 93B0     		sub	sp, sp, #76
 4056              		.cfi_def_cfa_offset 112
 200:../USER/vramdisp.c ****   int a,b,di;
 4057              		.loc 1 200 43 view .LVU1234
 4058 0006 0191     		str	r1, [sp, #4]
 4059              		.loc 1 202 4 view .LVU1235
 4060 0008 0021     		movs	r1, #0
 4061              	.LVL367:
 4062              		.loc 1 202 4 view .LVU1236
 4063 000a 0091     		str	r1, [sp]
 4064              		.loc 1 202 20 view .LVU1237
 4065 000c 5100     		lsls	r1, r2, #1
 4066              		.loc 1 202 9 view .LVU1238
 4067 000e 0592     		str	r2, [sp, #20]
 4068              	.LVL368:
 4069              		.loc 1 202 13 is_stmt 1 view .LVU1239
 4070 0010 1EB2     		sxth	r6, r3
 4071 0012 421C     		adds	r2, r0, #1
 4072              	.LVL369:
 4073              		.loc 1 202 15 is_stmt 0 view .LVU1240
 4074 0014 C1F10303 		rsb	r3, r1, #3
 4075              	.LVL370:
 4076              		.loc 1 202 15 view .LVU1241
 4077 0018 0893     		str	r3, [sp, #32]
 4078              	.LVL371:
 203:../USER/vramdisp.c ****   while(a<=b) {
 4079              		.loc 1 203 3 is_stmt 1 view .LVU1242
 4080              		.loc 1 203 3 is_stmt 0 view .LVU1243
 4081 001a 93B2     		uxth	r3, r2
 4082              	.LVL372:
 4083              		.loc 1 203 3 view .LVU1244
 4084 001c 0693     		str	r3, [sp, #24]
 4085 001e CA4F     		ldr	r7, .L309
 4086 0020 C3B2     		uxtb	r3, r0
 4087 0022 DFF830B3 		ldr	fp, .L309+12
 4088              	.LBB356:
 4089              	.LBB357:
 4090              	.LBB358:
 4091              	.LBB359:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4092              		.loc 1 20 2 view .LVU1245
 4093 0026 DFF83093 		ldr	r9, .L309+16
 4094              	.LBE359:
 4095              	.LBE358:
 4096              	.LBE357:
 4097              	.LBE356:
 200:../USER/vramdisp.c ****   int a,b,di;
 4098              		.loc 1 200 43 view .LVU1246
 4099 002a 0290     		str	r0, [sp, #8]
 4100 002c 0A93     		str	r3, [sp, #40]
 4101              	.LVL373:
 4102              	.L275:
 204:../USER/vramdisp.c ****     pset(x0-b,y0-a,ptn); pset(x0+b,y0-a,ptn); pset(x0-a,y0+b,ptn);
 4103              		.loc 1 204 5 is_stmt 1 view .LVU1247
 4104 002e BDF80030 		ldrh	r3, [sp]
 4105 0032 019A     		ldr	r2, [sp, #4]
 4106 0034 0493     		str	r3, [sp, #16]
 4107 0036 D51A     		subs	r5, r2, r3
 4108 0038 BDF81440 		ldrh	r4, [sp, #20]
 4109 003c 029B     		ldr	r3, [sp, #8]
 4110              	.LBB377:
 4111              	.LBB374:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4112              		.loc 1 195 3 is_stmt 0 view .LVU1248
 4113 003e ADB2     		uxth	r5, r5
 4114              	.LBE374:
 4115              	.LBE377:
 4116              		.loc 1 204 5 view .LVU1249
 4117 0040 1B1B     		subs	r3, r3, r4
 4118              	.LVL374:
 4119              	.LBB378:
 4120              	.LBI356:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 4121              		.loc 1 190 6 is_stmt 1 view .LVU1250
 4122              	.LBB375:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 4123              		.loc 1 191 2 view .LVU1251
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4124              		.loc 1 194 3 view .LVU1252
 4125              	.LBE375:
 4126              	.LBE378:
 4127              		.loc 1 204 5 is_stmt 0 view .LVU1253
 4128 0042 9BB2     		uxth	r3, r3
 4129              	.LBB379:
 4130              	.LBB376:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4131              		.loc 1 195 3 view .LVU1254
 4132 0044 1A09     		lsrs	r2, r3, #4
 4133              	.LBB365:
 4134              	.LBB360:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4135              		.loc 1 19 15 view .LVU1255
 4136 0046 05EB8505 		add	r5, r5, r5, lsl #2
 4137              	.LBE360:
 4138              	.LBE365:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4139              		.loc 1 194 35 view .LVU1256
 4140 004a 03F00F03 		and	r3, r3, #15
 4141              	.LVL375:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4142              		.loc 1 194 35 view .LVU1257
 4143 004e 0393     		str	r3, [sp, #12]
 4144              	.LBB366:
 4145              	.LBB361:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4146              		.loc 1 19 15 view .LVU1258
 4147 0050 ED00     		lsls	r5, r5, #3
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4148              		.loc 1 19 18 view .LVU1259
 4149 0052 5319     		adds	r3, r2, r5
 4150              	.LBE361:
 4151              	.LBE366:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4152              		.loc 1 195 3 view .LVU1260
 4153 0054 0D92     		str	r2, [sp, #52]
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4154              		.loc 1 194 30 view .LVU1261
 4155 0056 039A     		ldr	r2, [sp, #12]
 4156              	.LBB367:
 4157              	.LBB362:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4158              		.loc 1 19 6 view .LVU1262
 4159 0058 5B01     		lsls	r3, r3, #5
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4160              		.loc 1 20 2 view .LVU1263
 4161 005a 0021     		movs	r1, #0
 4162 005c 4846     		mov	r0, r9
 4163              	.LBE362:
 4164              	.LBE367:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4165              		.loc 1 194 13 view .LVU1264
 4166 005e BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4167              		.loc 1 194 20 is_stmt 1 view .LVU1265
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4168              		.loc 1 194 30 is_stmt 0 view .LVU1266
 4169 0060 BA71     		strb	r2, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4170              		.loc 1 195 3 is_stmt 1 view .LVU1267
 4171              	.LVL376:
 4172              	.LBB368:
 4173              	.LBI358:
  17:../USER/vramdisp.c **** 	int adr;
 4174              		.loc 1 17 6 view .LVU1268
 4175              	.LBB363:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 4176              		.loc 1 18 2 view .LVU1269
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4177              		.loc 1 19 2 view .LVU1270
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4178              		.loc 1 19 6 is_stmt 0 view .LVU1271
 4179 0062 0793     		str	r3, [sp, #28]
 4180              	.LVL377:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4181              		.loc 1 20 2 is_stmt 1 view .LVU1272
 4182 0064 FFF7FEFF 		bl	GPIO_WriteBits
 4183              	.LVL378:
 4184              	.L243:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4185              		.loc 1 21 2 view .LVU1273
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4186              		.loc 1 21 5 view .LVU1274
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4187              		.loc 1 21 10 is_stmt 0 view .LVU1275
 4188 0068 4846     		mov	r0, r9
 4189 006a FFF7FEFF 		bl	GPIO_ReadBits
 4190              	.LVL379:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4191              		.loc 1 21 8 view .LVU1276
 4192 006e C0B2     		uxtb	r0, r0
 4193 0070 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4194              		.loc 1 21 44 view .LVU1277
 4195 0074 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4196              		.loc 1 21 2 view .LVU1278
 4197 0078 11F00101 		ands	r1, r1, #1
 4198 007c F4D1     		bne	.L243
  22:../USER/vramdisp.c **** }
 4199              		.loc 1 22 2 is_stmt 1 view .LVU1279
  22:../USER/vramdisp.c **** }
 4200              		.loc 1 22 12 is_stmt 0 view .LVU1280
 4201 007e 079B     		ldr	r3, [sp, #28]
 4202              	.LBE363:
 4203              	.LBE368:
 4204              	.LBB369:
 4205              	.LBB370:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4206              		.loc 1 51 2 view .LVU1281
 4207 0080 4846     		mov	r0, r9
 4208              	.LBE370:
 4209              	.LBE369:
 4210              	.LBB372:
 4211              	.LBB364:
  22:../USER/vramdisp.c **** }
 4212              		.loc 1 22 12 view .LVU1282
 4213 0082 3B60     		str	r3, [r7]
 4214              	.LVL380:
  22:../USER/vramdisp.c **** }
 4215              		.loc 1 22 12 view .LVU1283
 4216              	.LBE364:
 4217              	.LBE372:
 196:../USER/vramdisp.c **** 	//}
 4218              		.loc 1 196 3 is_stmt 1 view .LVU1284
 4219              	.LBB373:
 4220              	.LBI369:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 4221              		.loc 1 49 6 view .LVU1285
 4222              	.LBB371:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4223              		.loc 1 50 2 view .LVU1286
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4224              		.loc 1 51 2 view .LVU1287
 4225 0084 FFF7FEFF 		bl	GPIO_WriteBits
 4226              	.LVL381:
 4227              	.L244:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4228              		.loc 1 52 2 view .LVU1288
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4229              		.loc 1 52 5 view .LVU1289
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4230              		.loc 1 52 10 is_stmt 0 view .LVU1290
 4231 0088 4846     		mov	r0, r9
 4232 008a FFF7FEFF 		bl	GPIO_ReadBits
 4233              	.LVL382:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4234              		.loc 1 52 8 view .LVU1291
 4235 008e C0B2     		uxtb	r0, r0
 4236 0090 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4237              		.loc 1 52 44 view .LVU1292
 4238 0094 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4239              		.loc 1 52 2 view .LVU1293
 4240 0098 DB07     		lsls	r3, r3, #31
 4241 009a F5D4     		bmi	.L244
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4242              		.loc 1 53 2 is_stmt 1 view .LVU1294
 4243 009c AB4B     		ldr	r3, .L309+4
 4244 009e 4FF40071 		mov	r1, #512
 4245 00a2 4846     		mov	r0, r9
 4246 00a4 0F93     		str	r3, [sp, #60]
 4247 00a6 9846     		mov	r8, r3
 4248 00a8 FFF7FEFF 		bl	GPIO_WriteBits
 4249              	.LVL383:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4250              		.loc 1 54 2 view .LVU1295
 4251              	.L245:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 4252              		.loc 1 55 3 view .LVU1296
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4253              		.loc 1 56 3 view .LVU1297
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4254              		.loc 1 56 29 is_stmt 0 view .LVU1298
 4255 00ac 18F801AF 		ldrb	r10, [r8, #1]!	@ zero_extendqisi2
 4256              	.LVL384:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4257              		.loc 1 56 3 view .LVU1299
 4258 00b0 4846     		mov	r0, r9
 4259 00b2 0AF54071 		add	r1, r10, #768
 4260 00b6 FFF7FEFF 		bl	GPIO_WriteBits
 4261              	.LVL385:
  57:../USER/vramdisp.c **** 	}
 4262              		.loc 1 57 3 is_stmt 1 view .LVU1300
 4263 00ba 0AF50071 		add	r1, r10, #512
 4264 00be 4846     		mov	r0, r9
 4265 00c0 FFF7FEFF 		bl	GPIO_WriteBits
 4266              	.LVL386:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4267              		.loc 1 54 2 is_stmt 0 view .LVU1301
 4268 00c4 A24B     		ldr	r3, .L309+8
 4269 00c6 4345     		cmp	r3, r8
 4270 00c8 F0D1     		bne	.L245
  59:../USER/vramdisp.c **** }
 4271              		.loc 1 59 2 is_stmt 1 view .LVU1302
 4272 00ca 0021     		movs	r1, #0
 4273 00cc 4846     		mov	r0, r9
 4274 00ce FFF7FEFF 		bl	GPIO_WriteBits
 4275              	.LVL387:
  59:../USER/vramdisp.c **** }
 4276              		.loc 1 59 2 is_stmt 0 view .LVU1303
 4277              	.LBE371:
 4278              	.LBE373:
 4279              	.LBE376:
 4280              	.LBE379:
 4281              		.loc 1 204 26 is_stmt 1 view .LVU1304
 4282 00d2 029B     		ldr	r3, [sp, #8]
 4283              	.LBB380:
 4284              	.LBB381:
 4285              	.LBB382:
 4286              	.LBB383:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4287              		.loc 1 20 2 is_stmt 0 view .LVU1305
 4288 00d4 0021     		movs	r1, #0
 4289              	.LBE383:
 4290              	.LBE382:
 4291              	.LBE381:
 4292              	.LBE380:
 4293              		.loc 1 204 26 view .LVU1306
 4294 00d6 E318     		adds	r3, r4, r3
 4295 00d8 9BB2     		uxth	r3, r3
 4296              	.LVL388:
 4297              	.LBB399:
 4298              	.LBI380:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 4299              		.loc 1 190 6 is_stmt 1 view .LVU1307
 4300              	.LBB398:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 4301              		.loc 1 191 2 view .LVU1308
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4302              		.loc 1 194 3 view .LVU1309
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4303              		.loc 1 195 3 is_stmt 0 view .LVU1310
 4304 00da 1A09     		lsrs	r2, r3, #4
 4305              	.LBB389:
 4306              	.LBB384:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4307              		.loc 1 19 18 view .LVU1311
 4308 00dc 1544     		add	r5, r5, r2
 4309              	.LBE384:
 4310              	.LBE389:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4311              		.loc 1 194 35 view .LVU1312
 4312 00de 03F00F03 		and	r3, r3, #15
 4313              	.LVL389:
 4314              	.LBB390:
 4315              	.LBB385:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4316              		.loc 1 20 2 view .LVU1313
 4317 00e2 4846     		mov	r0, r9
 4318              	.LBE385:
 4319              	.LBE390:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4320              		.loc 1 195 3 view .LVU1314
 4321 00e4 0C92     		str	r2, [sp, #48]
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4322              		.loc 1 194 35 view .LVU1315
 4323 00e6 0B93     		str	r3, [sp, #44]
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4324              		.loc 1 194 13 view .LVU1316
 4325 00e8 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4326              		.loc 1 194 20 is_stmt 1 view .LVU1317
 4327              	.LBB391:
 4328              	.LBB386:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4329              		.loc 1 19 6 is_stmt 0 view .LVU1318
 4330 00ea 6D01     		lsls	r5, r5, #5
 4331              	.LBE386:
 4332              	.LBE391:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4333              		.loc 1 194 30 view .LVU1319
 4334 00ec BB71     		strb	r3, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4335              		.loc 1 195 3 is_stmt 1 view .LVU1320
 4336              	.LVL390:
 4337              	.LBB392:
 4338              	.LBI382:
  17:../USER/vramdisp.c **** 	int adr;
 4339              		.loc 1 17 6 view .LVU1321
 4340              	.LBB387:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 4341              		.loc 1 18 2 view .LVU1322
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4342              		.loc 1 19 2 view .LVU1323
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4343              		.loc 1 20 2 view .LVU1324
 4344 00ee FFF7FEFF 		bl	GPIO_WriteBits
 4345              	.LVL391:
 4346              	.L246:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4347              		.loc 1 21 2 view .LVU1325
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4348              		.loc 1 21 5 view .LVU1326
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4349              		.loc 1 21 10 is_stmt 0 view .LVU1327
 4350 00f2 4846     		mov	r0, r9
 4351 00f4 FFF7FEFF 		bl	GPIO_ReadBits
 4352              	.LVL392:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4353              		.loc 1 21 8 view .LVU1328
 4354 00f8 C0B2     		uxtb	r0, r0
 4355 00fa 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4356              		.loc 1 21 44 view .LVU1329
 4357 00fe 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4358              		.loc 1 21 2 view .LVU1330
 4359 0102 11F00101 		ands	r1, r1, #1
 4360 0106 F4D1     		bne	.L246
  22:../USER/vramdisp.c **** }
 4361              		.loc 1 22 2 is_stmt 1 view .LVU1331
 4362              	.LBE387:
 4363              	.LBE392:
 4364              	.LBB393:
 4365              	.LBB394:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4366              		.loc 1 51 2 is_stmt 0 view .LVU1332
 4367 0108 4846     		mov	r0, r9
 4368              	.LBE394:
 4369              	.LBE393:
 4370              	.LBB396:
 4371              	.LBB388:
  22:../USER/vramdisp.c **** }
 4372              		.loc 1 22 12 view .LVU1333
 4373 010a 3D60     		str	r5, [r7]
 4374              	.LVL393:
  22:../USER/vramdisp.c **** }
 4375              		.loc 1 22 12 view .LVU1334
 4376              	.LBE388:
 4377              	.LBE396:
 196:../USER/vramdisp.c **** 	//}
 4378              		.loc 1 196 3 is_stmt 1 view .LVU1335
 4379              	.LBB397:
 4380              	.LBI393:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 4381              		.loc 1 49 6 view .LVU1336
 4382              	.LBB395:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4383              		.loc 1 50 2 view .LVU1337
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4384              		.loc 1 51 2 view .LVU1338
 4385 010c FFF7FEFF 		bl	GPIO_WriteBits
 4386              	.LVL394:
 4387              	.L247:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4388              		.loc 1 52 2 view .LVU1339
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4389              		.loc 1 52 5 view .LVU1340
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4390              		.loc 1 52 10 is_stmt 0 view .LVU1341
 4391 0110 4846     		mov	r0, r9
 4392 0112 FFF7FEFF 		bl	GPIO_ReadBits
 4393              	.LVL395:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4394              		.loc 1 52 8 view .LVU1342
 4395 0116 C0B2     		uxtb	r0, r0
 4396 0118 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4397              		.loc 1 52 44 view .LVU1343
 4398 011c 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4399              		.loc 1 52 2 view .LVU1344
 4400 0120 D807     		lsls	r0, r3, #31
 4401 0122 F5D4     		bmi	.L247
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4402              		.loc 1 53 2 is_stmt 1 view .LVU1345
 4403 0124 4FF40071 		mov	r1, #512
 4404 0128 4846     		mov	r0, r9
 4405 012a FFF7FEFF 		bl	GPIO_WriteBits
 4406              	.LVL396:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4407              		.loc 1 54 2 view .LVU1346
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4408              		.loc 1 53 2 is_stmt 0 view .LVU1347
 4409 012e 874D     		ldr	r5, .L309+4
 4410              	.LVL397:
 4411              	.L248:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 4412              		.loc 1 55 3 is_stmt 1 view .LVU1348
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4413              		.loc 1 56 3 view .LVU1349
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4414              		.loc 1 56 29 is_stmt 0 view .LVU1350
 4415 0130 15F8018F 		ldrb	r8, [r5, #1]!	@ zero_extendqisi2
 4416              	.LVL398:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4417              		.loc 1 56 3 view .LVU1351
 4418 0134 4846     		mov	r0, r9
 4419 0136 08F54071 		add	r1, r8, #768
 4420 013a FFF7FEFF 		bl	GPIO_WriteBits
 4421              	.LVL399:
  57:../USER/vramdisp.c **** 	}
 4422              		.loc 1 57 3 is_stmt 1 view .LVU1352
 4423 013e 08F50071 		add	r1, r8, #512
 4424 0142 4846     		mov	r0, r9
 4425 0144 FFF7FEFF 		bl	GPIO_WriteBits
 4426              	.LVL400:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4427              		.loc 1 54 2 is_stmt 0 view .LVU1353
 4428 0148 814B     		ldr	r3, .L309+8
 4429 014a AB42     		cmp	r3, r5
 4430 014c F0D1     		bne	.L248
  59:../USER/vramdisp.c **** }
 4431              		.loc 1 59 2 is_stmt 1 view .LVU1354
 4432 014e 0021     		movs	r1, #0
 4433 0150 4846     		mov	r0, r9
 4434 0152 FFF7FEFF 		bl	GPIO_WriteBits
 4435              	.LVL401:
  59:../USER/vramdisp.c **** }
 4436              		.loc 1 59 2 is_stmt 0 view .LVU1355
 4437              	.LBE395:
 4438              	.LBE397:
 4439              	.LBE398:
 4440              	.LBE399:
 4441              		.loc 1 204 47 is_stmt 1 view .LVU1356
 4442              	.LBB400:
 4443              	.LBI400:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 4444              		.loc 1 190 6 view .LVU1357
 4445              	.LBB401:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 4446              		.loc 1 191 2 view .LVU1358
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4447              		.loc 1 194 3 view .LVU1359
 4448              	.LBE401:
 4449              	.LBE400:
 4450              		.loc 1 204 47 is_stmt 0 view .LVU1360
 4451 0156 019B     		ldr	r3, [sp, #4]
 4452 0158 049A     		ldr	r2, [sp, #16]
 4453 015a E518     		adds	r5, r4, r3
 4454 015c 029B     		ldr	r3, [sp, #8]
 4455              	.LBB420:
 4456              	.LBB418:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4457              		.loc 1 195 3 view .LVU1361
 4458 015e ADB2     		uxth	r5, r5
 4459              	.LBE418:
 4460              	.LBE420:
 4461              		.loc 1 204 47 view .LVU1362
 4462 0160 9B1A     		subs	r3, r3, r2
 4463              	.LBB421:
 4464              	.LBB419:
 4465              	.LBB402:
 4466              	.LBB403:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4467              		.loc 1 19 15 view .LVU1363
 4468 0162 05EB8505 		add	r5, r5, r5, lsl #2
 4469 0166 EA00     		lsls	r2, r5, #3
 4470 0168 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
 4471              	.LBE403:
 4472              	.LBE402:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4473              		.loc 1 195 3 view .LVU1364
 4474 016c C3F30B15 		ubfx	r5, r3, #4, #12
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4475              		.loc 1 194 35 view .LVU1365
 4476 0170 0A9B     		ldr	r3, [sp, #40]
 4477 0172 0E91     		str	r1, [sp, #56]
 4478 0174 A3EB0108 		sub	r8, r3, r1
 4479              	.LBB409:
 4480              	.LBB404:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4481              		.loc 1 19 18 view .LVU1366
 4482 0178 05EB020A 		add	r10, r5, r2
 4483              	.LBE404:
 4484              	.LBE409:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4485              		.loc 1 194 35 view .LVU1367
 4486 017c 08F00F08 		and	r8, r8, #15
 4487              	.LBB410:
 4488              	.LBB405:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4489              		.loc 1 20 2 view .LVU1368
 4490 0180 0021     		movs	r1, #0
 4491 0182 4846     		mov	r0, r9
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4492              		.loc 1 19 15 view .LVU1369
 4493 0184 1092     		str	r2, [sp, #64]
 4494              	.LBE405:
 4495              	.LBE410:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4496              		.loc 1 194 13 view .LVU1370
 4497 0186 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4498              		.loc 1 194 20 is_stmt 1 view .LVU1371
 4499              	.LBB411:
 4500              	.LBB406:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4501              		.loc 1 19 6 is_stmt 0 view .LVU1372
 4502 0188 4FEA4A1A 		lsl	r10, r10, #5
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4503              		.loc 1 19 15 view .LVU1373
 4504 018c 0992     		str	r2, [sp, #36]
 4505              	.LBE406:
 4506              	.LBE411:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4507              		.loc 1 194 30 view .LVU1374
 4508 018e 87F80680 		strb	r8, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4509              		.loc 1 195 3 is_stmt 1 view .LVU1375
 4510              	.LVL402:
 4511              	.LBB412:
 4512              	.LBI402:
  17:../USER/vramdisp.c **** 	int adr;
 4513              		.loc 1 17 6 view .LVU1376
 4514              	.LBB407:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 4515              		.loc 1 18 2 view .LVU1377
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4516              		.loc 1 19 2 view .LVU1378
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4517              		.loc 1 20 2 view .LVU1379
 4518 0192 FFF7FEFF 		bl	GPIO_WriteBits
 4519              	.LVL403:
 4520              	.L249:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4521              		.loc 1 21 2 view .LVU1380
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4522              		.loc 1 21 5 view .LVU1381
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4523              		.loc 1 21 10 is_stmt 0 view .LVU1382
 4524 0196 4846     		mov	r0, r9
 4525 0198 FFF7FEFF 		bl	GPIO_ReadBits
 4526              	.LVL404:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4527              		.loc 1 21 8 view .LVU1383
 4528 019c C0B2     		uxtb	r0, r0
 4529 019e 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4530              		.loc 1 21 44 view .LVU1384
 4531 01a2 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4532              		.loc 1 21 2 view .LVU1385
 4533 01a6 11F00101 		ands	r1, r1, #1
 4534 01aa F4D1     		bne	.L249
  22:../USER/vramdisp.c **** }
 4535              		.loc 1 22 2 is_stmt 1 view .LVU1386
 4536              	.LBE407:
 4537              	.LBE412:
 4538              	.LBB413:
 4539              	.LBB414:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4540              		.loc 1 51 2 is_stmt 0 view .LVU1387
 4541 01ac 4846     		mov	r0, r9
 4542              	.LBE414:
 4543              	.LBE413:
 4544              	.LBB416:
 4545              	.LBB408:
  22:../USER/vramdisp.c **** }
 4546              		.loc 1 22 12 view .LVU1388
 4547 01ae C7F800A0 		str	r10, [r7]
 4548              	.LVL405:
  22:../USER/vramdisp.c **** }
 4549              		.loc 1 22 12 view .LVU1389
 4550              	.LBE408:
 4551              	.LBE416:
 196:../USER/vramdisp.c **** 	//}
 4552              		.loc 1 196 3 is_stmt 1 view .LVU1390
 4553              	.LBB417:
 4554              	.LBI413:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 4555              		.loc 1 49 6 view .LVU1391
 4556              	.LBB415:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4557              		.loc 1 50 2 view .LVU1392
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4558              		.loc 1 51 2 view .LVU1393
 4559 01b2 FFF7FEFF 		bl	GPIO_WriteBits
 4560              	.LVL406:
 4561              	.L250:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4562              		.loc 1 52 2 view .LVU1394
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4563              		.loc 1 52 5 view .LVU1395
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4564              		.loc 1 52 10 is_stmt 0 view .LVU1396
 4565 01b6 4846     		mov	r0, r9
 4566 01b8 FFF7FEFF 		bl	GPIO_ReadBits
 4567              	.LVL407:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4568              		.loc 1 52 8 view .LVU1397
 4569 01bc C0B2     		uxtb	r0, r0
 4570 01be 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4571              		.loc 1 52 44 view .LVU1398
 4572 01c2 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4573              		.loc 1 52 2 view .LVU1399
 4574 01c6 D907     		lsls	r1, r3, #31
 4575 01c8 F5D4     		bmi	.L250
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4576              		.loc 1 53 2 is_stmt 1 view .LVU1400
 4577 01ca 4FF40071 		mov	r1, #512
 4578 01ce 4846     		mov	r0, r9
 4579 01d0 DFF878A1 		ldr	r10, .L309+4
 4580 01d4 FFF7FEFF 		bl	GPIO_WriteBits
 4581              	.LVL408:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4582              		.loc 1 54 2 view .LVU1401
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4583              		.loc 1 53 2 is_stmt 0 view .LVU1402
 4584 01d8 1194     		str	r4, [sp, #68]
 4585              	.LVL409:
 4586              	.L251:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 4587              		.loc 1 55 3 is_stmt 1 view .LVU1403
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4588              		.loc 1 56 3 view .LVU1404
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4589              		.loc 1 56 29 is_stmt 0 view .LVU1405
 4590 01da 1AF8014F 		ldrb	r4, [r10, #1]!	@ zero_extendqisi2
 4591              	.LVL410:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4592              		.loc 1 56 3 view .LVU1406
 4593 01de 4846     		mov	r0, r9
 4594 01e0 04F54071 		add	r1, r4, #768
 4595 01e4 FFF7FEFF 		bl	GPIO_WriteBits
 4596              	.LVL411:
  57:../USER/vramdisp.c **** 	}
 4597              		.loc 1 57 3 is_stmt 1 view .LVU1407
 4598 01e8 04F50071 		add	r1, r4, #512
 4599 01ec 4846     		mov	r0, r9
 4600 01ee FFF7FEFF 		bl	GPIO_WriteBits
 4601              	.LVL412:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4602              		.loc 1 54 2 is_stmt 0 view .LVU1408
 4603 01f2 574B     		ldr	r3, .L309+8
 4604 01f4 5345     		cmp	r3, r10
 4605 01f6 F0D1     		bne	.L251
  59:../USER/vramdisp.c **** }
 4606              		.loc 1 59 2 view .LVU1409
 4607 01f8 0021     		movs	r1, #0
 4608 01fa 4846     		mov	r0, r9
 4609 01fc 119C     		ldr	r4, [sp, #68]
  59:../USER/vramdisp.c **** }
 4610              		.loc 1 59 2 is_stmt 1 view .LVU1410
 4611 01fe FFF7FEFF 		bl	GPIO_WriteBits
 4612              	.LVL413:
  59:../USER/vramdisp.c **** }
 4613              		.loc 1 59 2 is_stmt 0 view .LVU1411
 4614              	.LBE415:
 4615              	.LBE417:
 4616              	.LBE419:
 4617              	.LBE421:
 205:../USER/vramdisp.c ****     pset(x0-b,y0-a,ptn); pset(x0-a,y0-b,ptn); pset(x0+b,y0+a,ptn);
 4618              		.loc 1 205 5 is_stmt 1 view .LVU1412
 4619              	.LBB422:
 4620              	.LBI422:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 4621              		.loc 1 190 6 view .LVU1413
 4622              	.LBB423:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 4623              		.loc 1 191 2 view .LVU1414
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4624              		.loc 1 194 3 view .LVU1415
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4625              		.loc 1 194 30 is_stmt 0 view .LVU1416
 4626 0202 039B     		ldr	r3, [sp, #12]
 4627              	.LBB424:
 4628              	.LBB425:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4629              		.loc 1 20 2 view .LVU1417
 4630 0204 0021     		movs	r1, #0
 4631 0206 4846     		mov	r0, r9
 4632              	.LBE425:
 4633              	.LBE424:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4634              		.loc 1 194 13 view .LVU1418
 4635 0208 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4636              		.loc 1 194 20 is_stmt 1 view .LVU1419
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4637              		.loc 1 194 30 is_stmt 0 view .LVU1420
 4638 020a BB71     		strb	r3, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4639              		.loc 1 195 3 is_stmt 1 view .LVU1421
 4640              	.LVL414:
 4641              	.LBB428:
 4642              	.LBI424:
  17:../USER/vramdisp.c **** 	int adr;
 4643              		.loc 1 17 6 view .LVU1422
 4644              	.LBB426:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 4645              		.loc 1 18 2 view .LVU1423
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4646              		.loc 1 19 2 view .LVU1424
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4647              		.loc 1 20 2 view .LVU1425
 4648 020c FFF7FEFF 		bl	GPIO_WriteBits
 4649              	.LVL415:
 4650              	.L252:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4651              		.loc 1 21 2 view .LVU1426
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4652              		.loc 1 21 5 view .LVU1427
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4653              		.loc 1 21 10 is_stmt 0 view .LVU1428
 4654 0210 4846     		mov	r0, r9
 4655 0212 FFF7FEFF 		bl	GPIO_ReadBits
 4656              	.LVL416:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4657              		.loc 1 21 8 view .LVU1429
 4658 0216 C0B2     		uxtb	r0, r0
 4659 0218 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4660              		.loc 1 21 44 view .LVU1430
 4661 021c 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4662              		.loc 1 21 2 view .LVU1431
 4663 0220 11F00101 		ands	r1, r1, #1
 4664 0224 F4D1     		bne	.L252
  22:../USER/vramdisp.c **** }
 4665              		.loc 1 22 2 is_stmt 1 view .LVU1432
  22:../USER/vramdisp.c **** }
 4666              		.loc 1 22 12 is_stmt 0 view .LVU1433
 4667 0226 079B     		ldr	r3, [sp, #28]
 4668              	.LBE426:
 4669              	.LBE428:
 4670              	.LBB429:
 4671              	.LBB430:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4672              		.loc 1 51 2 view .LVU1434
 4673 0228 4846     		mov	r0, r9
 4674              	.LBE430:
 4675              	.LBE429:
 4676              	.LBB432:
 4677              	.LBB427:
  22:../USER/vramdisp.c **** }
 4678              		.loc 1 22 12 view .LVU1435
 4679 022a 3B60     		str	r3, [r7]
 4680              	.LVL417:
  22:../USER/vramdisp.c **** }
 4681              		.loc 1 22 12 view .LVU1436
 4682              	.LBE427:
 4683              	.LBE432:
 196:../USER/vramdisp.c **** 	//}
 4684              		.loc 1 196 3 is_stmt 1 view .LVU1437
 4685              	.LBB433:
 4686              	.LBI429:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 4687              		.loc 1 49 6 view .LVU1438
 4688              	.LBB431:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4689              		.loc 1 50 2 view .LVU1439
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4690              		.loc 1 51 2 view .LVU1440
 4691 022c FFF7FEFF 		bl	GPIO_WriteBits
 4692              	.LVL418:
 4693              	.L253:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4694              		.loc 1 52 2 view .LVU1441
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4695              		.loc 1 52 5 view .LVU1442
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4696              		.loc 1 52 10 is_stmt 0 view .LVU1443
 4697 0230 4846     		mov	r0, r9
 4698 0232 FFF7FEFF 		bl	GPIO_ReadBits
 4699              	.LVL419:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4700              		.loc 1 52 8 view .LVU1444
 4701 0236 C0B2     		uxtb	r0, r0
 4702 0238 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4703              		.loc 1 52 44 view .LVU1445
 4704 023c 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4705              		.loc 1 52 2 view .LVU1446
 4706 0240 DA07     		lsls	r2, r3, #31
 4707 0242 F5D4     		bmi	.L253
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4708              		.loc 1 53 2 is_stmt 1 view .LVU1447
 4709 0244 4FF40071 		mov	r1, #512
 4710 0248 4846     		mov	r0, r9
 4711 024a DFF800A1 		ldr	r10, .L309+4
 4712 024e FFF7FEFF 		bl	GPIO_WriteBits
 4713              	.LVL420:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4714              		.loc 1 54 2 view .LVU1448
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4715              		.loc 1 53 2 is_stmt 0 view .LVU1449
 4716 0252 0794     		str	r4, [sp, #28]
 4717              	.LVL421:
 4718              	.L254:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 4719              		.loc 1 55 3 is_stmt 1 view .LVU1450
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4720              		.loc 1 56 3 view .LVU1451
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4721              		.loc 1 56 29 is_stmt 0 view .LVU1452
 4722 0254 1AF8014F 		ldrb	r4, [r10, #1]!	@ zero_extendqisi2
 4723              	.LVL422:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4724              		.loc 1 56 3 view .LVU1453
 4725 0258 4846     		mov	r0, r9
 4726 025a 04F54071 		add	r1, r4, #768
 4727 025e FFF7FEFF 		bl	GPIO_WriteBits
 4728              	.LVL423:
  57:../USER/vramdisp.c **** 	}
 4729              		.loc 1 57 3 is_stmt 1 view .LVU1454
 4730 0262 04F50071 		add	r1, r4, #512
 4731 0266 4846     		mov	r0, r9
 4732 0268 FFF7FEFF 		bl	GPIO_WriteBits
 4733              	.LVL424:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4734              		.loc 1 54 2 is_stmt 0 view .LVU1455
 4735 026c 384B     		ldr	r3, .L309+8
 4736 026e 5345     		cmp	r3, r10
 4737 0270 F0D1     		bne	.L254
  59:../USER/vramdisp.c **** }
 4738              		.loc 1 59 2 is_stmt 1 view .LVU1456
 4739 0272 0021     		movs	r1, #0
 4740 0274 4846     		mov	r0, r9
 4741 0276 079C     		ldr	r4, [sp, #28]
 4742 0278 FFF7FEFF 		bl	GPIO_WriteBits
 4743              	.LVL425:
  59:../USER/vramdisp.c **** }
 4744              		.loc 1 59 2 is_stmt 0 view .LVU1457
 4745              	.LBE431:
 4746              	.LBE433:
 4747              	.LBE423:
 4748              	.LBE422:
 4749              		.loc 1 205 26 is_stmt 1 view .LVU1458
 4750              	.LBB434:
 4751              	.LBI434:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 4752              		.loc 1 190 6 view .LVU1459
 4753              	.LBB435:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 4754              		.loc 1 191 2 view .LVU1460
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4755              		.loc 1 194 3 view .LVU1461
 4756              	.LBE435:
 4757              	.LBE434:
 4758              		.loc 1 205 26 is_stmt 0 view .LVU1462
 4759 027c 019B     		ldr	r3, [sp, #4]
 4760              	.LBB450:
 4761              	.LBB448:
 4762              	.LBB436:
 4763              	.LBB437:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4764              		.loc 1 20 2 view .LVU1463
 4765 027e 0021     		movs	r1, #0
 4766              	.LBE437:
 4767              	.LBE436:
 4768              	.LBE448:
 4769              	.LBE450:
 4770              		.loc 1 205 26 view .LVU1464
 4771 0280 1C1B     		subs	r4, r3, r4
 4772              	.LVL426:
 4773              	.LBB451:
 4774              	.LBB449:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4775              		.loc 1 195 3 view .LVU1465
 4776 0282 A4B2     		uxth	r4, r4
 4777              	.LBB441:
 4778              	.LBB438:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4779              		.loc 1 19 15 view .LVU1466
 4780 0284 04EB8404 		add	r4, r4, r4, lsl #2
 4781 0288 E400     		lsls	r4, r4, #3
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4782              		.loc 1 19 18 view .LVU1467
 4783 028a 2544     		add	r5, r5, r4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4784              		.loc 1 20 2 view .LVU1468
 4785 028c 4846     		mov	r0, r9
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4786              		.loc 1 19 6 view .LVU1469
 4787 028e 6D01     		lsls	r5, r5, #5
 4788              	.LBE438:
 4789              	.LBE441:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4790              		.loc 1 194 13 view .LVU1470
 4791 0290 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4792              		.loc 1 194 20 is_stmt 1 view .LVU1471
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4793              		.loc 1 194 30 is_stmt 0 view .LVU1472
 4794 0292 87F80680 		strb	r8, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4795              		.loc 1 195 3 is_stmt 1 view .LVU1473
 4796              	.LVL427:
 4797              	.LBB442:
 4798              	.LBI436:
  17:../USER/vramdisp.c **** 	int adr;
 4799              		.loc 1 17 6 view .LVU1474
 4800              	.LBB439:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 4801              		.loc 1 18 2 view .LVU1475
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4802              		.loc 1 19 2 view .LVU1476
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4803              		.loc 1 20 2 view .LVU1477
 4804 0296 FFF7FEFF 		bl	GPIO_WriteBits
 4805              	.LVL428:
 4806              	.L255:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4807              		.loc 1 21 2 view .LVU1478
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4808              		.loc 1 21 5 view .LVU1479
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4809              		.loc 1 21 10 is_stmt 0 view .LVU1480
 4810 029a 4846     		mov	r0, r9
 4811 029c FFF7FEFF 		bl	GPIO_ReadBits
 4812              	.LVL429:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4813              		.loc 1 21 8 view .LVU1481
 4814 02a0 C0B2     		uxtb	r0, r0
 4815 02a2 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4816              		.loc 1 21 44 view .LVU1482
 4817 02a6 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4818              		.loc 1 21 2 view .LVU1483
 4819 02aa 11F00101 		ands	r1, r1, #1
 4820 02ae F4D1     		bne	.L255
  22:../USER/vramdisp.c **** }
 4821              		.loc 1 22 2 is_stmt 1 view .LVU1484
 4822              	.LBE439:
 4823              	.LBE442:
 4824              	.LBB443:
 4825              	.LBB444:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4826              		.loc 1 51 2 is_stmt 0 view .LVU1485
 4827 02b0 4846     		mov	r0, r9
 4828              	.LBE444:
 4829              	.LBE443:
 4830              	.LBB446:
 4831              	.LBB440:
  22:../USER/vramdisp.c **** }
 4832              		.loc 1 22 12 view .LVU1486
 4833 02b2 3D60     		str	r5, [r7]
 4834              	.LVL430:
  22:../USER/vramdisp.c **** }
 4835              		.loc 1 22 12 view .LVU1487
 4836              	.LBE440:
 4837              	.LBE446:
 196:../USER/vramdisp.c **** 	//}
 4838              		.loc 1 196 3 is_stmt 1 view .LVU1488
 4839              	.LBB447:
 4840              	.LBI443:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 4841              		.loc 1 49 6 view .LVU1489
 4842              	.LBB445:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4843              		.loc 1 50 2 view .LVU1490
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4844              		.loc 1 51 2 view .LVU1491
 4845 02b4 FFF7FEFF 		bl	GPIO_WriteBits
 4846              	.LVL431:
 4847              	.L256:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4848              		.loc 1 52 2 view .LVU1492
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4849              		.loc 1 52 5 view .LVU1493
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4850              		.loc 1 52 10 is_stmt 0 view .LVU1494
 4851 02b8 4846     		mov	r0, r9
 4852 02ba FFF7FEFF 		bl	GPIO_ReadBits
 4853              	.LVL432:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4854              		.loc 1 52 8 view .LVU1495
 4855 02be C0B2     		uxtb	r0, r0
 4856 02c0 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4857              		.loc 1 52 44 view .LVU1496
 4858 02c4 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 4859              		.loc 1 52 2 view .LVU1497
 4860 02c8 DB07     		lsls	r3, r3, #31
 4861 02ca F5D4     		bmi	.L256
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4862              		.loc 1 53 2 is_stmt 1 view .LVU1498
 4863 02cc 4FF40071 		mov	r1, #512
 4864 02d0 4846     		mov	r0, r9
 4865 02d2 FFF7FEFF 		bl	GPIO_WriteBits
 4866              	.LVL433:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4867              		.loc 1 54 2 view .LVU1499
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 4868              		.loc 1 53 2 is_stmt 0 view .LVU1500
 4869 02d6 1D4D     		ldr	r5, .L309+4
 4870              	.LVL434:
 4871              	.L257:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 4872              		.loc 1 55 3 is_stmt 1 view .LVU1501
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4873              		.loc 1 56 3 view .LVU1502
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4874              		.loc 1 56 29 is_stmt 0 view .LVU1503
 4875 02d8 15F8018F 		ldrb	r8, [r5, #1]!	@ zero_extendqisi2
 4876              	.LVL435:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 4877              		.loc 1 56 3 view .LVU1504
 4878 02dc 4846     		mov	r0, r9
 4879 02de 08F54071 		add	r1, r8, #768
 4880 02e2 FFF7FEFF 		bl	GPIO_WriteBits
 4881              	.LVL436:
  57:../USER/vramdisp.c **** 	}
 4882              		.loc 1 57 3 is_stmt 1 view .LVU1505
 4883 02e6 08F50071 		add	r1, r8, #512
 4884 02ea 4846     		mov	r0, r9
 4885 02ec FFF7FEFF 		bl	GPIO_WriteBits
 4886              	.LVL437:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 4887              		.loc 1 54 2 is_stmt 0 view .LVU1506
 4888 02f0 174B     		ldr	r3, .L309+8
 4889 02f2 AB42     		cmp	r3, r5
 4890 02f4 F0D1     		bne	.L257
  59:../USER/vramdisp.c **** }
 4891              		.loc 1 59 2 is_stmt 1 view .LVU1507
 4892 02f6 0021     		movs	r1, #0
 4893 02f8 4846     		mov	r0, r9
 4894 02fa FFF7FEFF 		bl	GPIO_WriteBits
 4895              	.LVL438:
  59:../USER/vramdisp.c **** }
 4896              		.loc 1 59 2 is_stmt 0 view .LVU1508
 4897              	.LBE445:
 4898              	.LBE447:
 4899              	.LBE449:
 4900              	.LBE451:
 4901              		.loc 1 205 47 is_stmt 1 view .LVU1509
 4902              	.LBB452:
 4903              	.LBI452:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 4904              		.loc 1 190 6 view .LVU1510
 4905              	.LBB453:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 4906              		.loc 1 191 2 view .LVU1511
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4907              		.loc 1 194 3 view .LVU1512
 4908              	.LBE453:
 4909              	.LBE452:
 4910              		.loc 1 205 47 is_stmt 0 view .LVU1513
 4911 02fe 019B     		ldr	r3, [sp, #4]
 4912 0300 049A     		ldr	r2, [sp, #16]
 4913              	.LBB470:
 4914              	.LBB468:
 4915              	.LBB454:
 4916              	.LBB455:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4917              		.loc 1 20 2 view .LVU1514
 4918 0302 0021     		movs	r1, #0
 4919              	.LBE455:
 4920              	.LBE454:
 4921              	.LBE468:
 4922              	.LBE470:
 4923              		.loc 1 205 47 view .LVU1515
 4924 0304 03EB0208 		add	r8, r3, r2
 4925              	.LBB471:
 4926              	.LBB469:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4927              		.loc 1 195 3 view .LVU1516
 4928 0308 1FFA88F8 		uxth	r8, r8
 4929              	.LBB460:
 4930              	.LBB456:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4931              		.loc 1 19 15 view .LVU1517
 4932 030c 08EB8808 		add	r8, r8, r8, lsl #2
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4933              		.loc 1 19 18 view .LVU1518
 4934 0310 0C9B     		ldr	r3, [sp, #48]
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4935              		.loc 1 19 15 view .LVU1519
 4936 0312 4FEAC808 		lsl	r8, r8, #3
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4937              		.loc 1 19 18 view .LVU1520
 4938 0316 4344     		add	r3, r3, r8
 4939 0318 1D46     		mov	r5, r3
 4940              	.LBE456:
 4941              	.LBE460:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4942              		.loc 1 194 30 view .LVU1521
 4943 031a 0B9B     		ldr	r3, [sp, #44]
 4944              	.LBB461:
 4945              	.LBB457:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4946              		.loc 1 20 2 view .LVU1522
 4947 031c 4846     		mov	r0, r9
 4948              	.LBE457:
 4949              	.LBE461:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4950              		.loc 1 194 13 view .LVU1523
 4951 031e BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4952              		.loc 1 194 20 is_stmt 1 view .LVU1524
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 4953              		.loc 1 194 30 is_stmt 0 view .LVU1525
 4954 0320 BB71     		strb	r3, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 4955              		.loc 1 195 3 is_stmt 1 view .LVU1526
 4956              	.LVL439:
 4957              	.LBB462:
 4958              	.LBI454:
  17:../USER/vramdisp.c **** 	int adr;
 4959              		.loc 1 17 6 view .LVU1527
 4960              	.LBB458:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 4961              		.loc 1 18 2 view .LVU1528
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4962              		.loc 1 19 2 view .LVU1529
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 4963              		.loc 1 19 6 is_stmt 0 view .LVU1530
 4964 0322 6D01     		lsls	r5, r5, #5
 4965              	.LVL440:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4966              		.loc 1 20 2 is_stmt 1 view .LVU1531
 4967 0324 FFF7FEFF 		bl	GPIO_WriteBits
 4968              	.LVL441:
 4969              	.L258:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4970              		.loc 1 21 2 view .LVU1532
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4971              		.loc 1 21 5 view .LVU1533
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4972              		.loc 1 21 10 is_stmt 0 view .LVU1534
 4973 0328 4846     		mov	r0, r9
 4974 032a FFF7FEFF 		bl	GPIO_ReadBits
 4975              	.LVL442:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4976              		.loc 1 21 8 view .LVU1535
 4977 032e C0B2     		uxtb	r0, r0
 4978 0330 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4979              		.loc 1 21 44 view .LVU1536
 4980 0334 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 4981              		.loc 1 21 2 view .LVU1537
 4982 0338 11F00101 		ands	r1, r1, #1
 4983 033c F4D1     		bne	.L258
  22:../USER/vramdisp.c **** }
 4984              		.loc 1 22 2 is_stmt 1 view .LVU1538
 4985              	.LBE458:
 4986              	.LBE462:
 4987              	.LBB463:
 4988              	.LBB464:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 4989              		.loc 1 51 2 is_stmt 0 view .LVU1539
 4990 033e 4846     		mov	r0, r9
 4991              	.LBE464:
 4992              	.LBE463:
 4993              	.LBB466:
 4994              	.LBB459:
  22:../USER/vramdisp.c **** }
 4995              		.loc 1 22 12 view .LVU1540
 4996 0340 3D60     		str	r5, [r7]
 4997              	.LVL443:
  22:../USER/vramdisp.c **** }
 4998              		.loc 1 22 12 view .LVU1541
 4999              	.LBE459:
 5000              	.LBE466:
 196:../USER/vramdisp.c **** 	//}
 5001              		.loc 1 196 3 is_stmt 1 view .LVU1542
 5002              	.LBB467:
 5003              	.LBI463:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 5004              		.loc 1 49 6 view .LVU1543
 5005              	.LBB465:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5006              		.loc 1 50 2 view .LVU1544
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5007              		.loc 1 51 2 view .LVU1545
 5008 0342 FFF7FEFF 		bl	GPIO_WriteBits
 5009              	.LVL444:
 5010 0346 09E0     		b	.L310
 5011              	.L311:
 5012              		.align	2
 5013              	.L309:
 5014 0348 00000000 		.word	wddt
 5015 034c FFFFFFFF 		.word	wddt-1
 5016 0350 06000000 		.word	wddt+6
 5017 0354 00000000 		.word	pd
 5018 0358 00000140 		.word	1073807360
 5019              	.L310:
 5020              	.L259:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5021              		.loc 1 52 2 view .LVU1546
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5022              		.loc 1 52 5 view .LVU1547
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5023              		.loc 1 52 10 is_stmt 0 view .LVU1548
 5024 035c 4846     		mov	r0, r9
 5025 035e FFF7FEFF 		bl	GPIO_ReadBits
 5026              	.LVL445:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5027              		.loc 1 52 8 view .LVU1549
 5028 0362 C0B2     		uxtb	r0, r0
 5029 0364 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5030              		.loc 1 52 44 view .LVU1550
 5031 0368 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5032              		.loc 1 52 2 view .LVU1551
 5033 036c DD07     		lsls	r5, r3, #31
 5034 036e F5D4     		bmi	.L259
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5035              		.loc 1 53 2 is_stmt 1 view .LVU1552
 5036 0370 4FF40071 		mov	r1, #512
 5037 0374 4846     		mov	r0, r9
 5038 0376 FFF7FEFF 		bl	GPIO_WriteBits
 5039              	.LVL446:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5040              		.loc 1 54 2 view .LVU1553
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5041              		.loc 1 53 2 is_stmt 0 view .LVU1554
 5042 037a 9D4D     		ldr	r5, .L312
 5043              	.LVL447:
 5044              	.L260:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 5045              		.loc 1 55 3 is_stmt 1 view .LVU1555
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5046              		.loc 1 56 3 view .LVU1556
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5047              		.loc 1 56 29 is_stmt 0 view .LVU1557
 5048 037c 15F801AF 		ldrb	r10, [r5, #1]!	@ zero_extendqisi2
 5049              	.LVL448:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5050              		.loc 1 56 3 view .LVU1558
 5051 0380 4846     		mov	r0, r9
 5052 0382 0AF54071 		add	r1, r10, #768
 5053 0386 FFF7FEFF 		bl	GPIO_WriteBits
 5054              	.LVL449:
  57:../USER/vramdisp.c **** 	}
 5055              		.loc 1 57 3 is_stmt 1 view .LVU1559
 5056 038a 0AF50071 		add	r1, r10, #512
 5057 038e 4846     		mov	r0, r9
 5058 0390 FFF7FEFF 		bl	GPIO_WriteBits
 5059              	.LVL450:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5060              		.loc 1 54 2 is_stmt 0 view .LVU1560
 5061 0394 974B     		ldr	r3, .L312+4
 5062 0396 AB42     		cmp	r3, r5
 5063 0398 F0D1     		bne	.L260
  59:../USER/vramdisp.c **** }
 5064              		.loc 1 59 2 is_stmt 1 view .LVU1561
 5065 039a 0021     		movs	r1, #0
 5066 039c 4846     		mov	r0, r9
 5067 039e FFF7FEFF 		bl	GPIO_WriteBits
 5068              	.LVL451:
  59:../USER/vramdisp.c **** }
 5069              		.loc 1 59 2 is_stmt 0 view .LVU1562
 5070              	.LBE465:
 5071              	.LBE467:
 5072              	.LBE469:
 5073              	.LBE471:
 206:../USER/vramdisp.c ****     pset(x0+a,y0-b,ptn); pset(x0+a,y0+b,ptn); pset(x0-b,y0+a,ptn);
 5074              		.loc 1 206 5 is_stmt 1 view .LVU1563
 5075              	.LBB472:
 5076              	.LBI472:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 5077              		.loc 1 190 6 view .LVU1564
 5078              	.LBB473:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 5079              		.loc 1 191 2 view .LVU1565
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5080              		.loc 1 194 3 view .LVU1566
 5081              	.LBE473:
 5082              	.LBE472:
 5083              		.loc 1 206 5 is_stmt 0 view .LVU1567
 5084 03a2 029A     		ldr	r2, [sp, #8]
 5085 03a4 049B     		ldr	r3, [sp, #16]
 5086              	.LBB490:
 5087              	.LBB488:
 5088              	.LBB474:
 5089              	.LBB475:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5090              		.loc 1 20 2 view .LVU1568
 5091 03a6 0021     		movs	r1, #0
 5092              	.LBE475:
 5093              	.LBE474:
 5094              	.LBE488:
 5095              	.LBE490:
 5096              		.loc 1 206 5 view .LVU1569
 5097 03a8 1344     		add	r3, r3, r2
 5098              	.LBB491:
 5099              	.LBB489:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5100              		.loc 1 195 3 view .LVU1570
 5101 03aa C3F30B15 		ubfx	r5, r3, #4, #12
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5102              		.loc 1 194 35 view .LVU1571
 5103 03ae 0A9A     		ldr	r2, [sp, #40]
 5104 03b0 0E9B     		ldr	r3, [sp, #56]
 5105              	.LBB480:
 5106              	.LBB476:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5107              		.loc 1 19 18 view .LVU1572
 5108 03b2 2C44     		add	r4, r4, r5
 5109              	.LBE476:
 5110              	.LBE480:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5111              		.loc 1 194 35 view .LVU1573
 5112 03b4 1344     		add	r3, r3, r2
 5113 03b6 03F00F0A 		and	r10, r3, #15
 5114              	.LBB481:
 5115              	.LBB477:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5116              		.loc 1 20 2 view .LVU1574
 5117 03ba 4846     		mov	r0, r9
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5118              		.loc 1 19 6 view .LVU1575
 5119 03bc 6401     		lsls	r4, r4, #5
 5120              	.LBE477:
 5121              	.LBE481:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5122              		.loc 1 194 30 view .LVU1576
 5123 03be 87F806A0 		strb	r10, [r7, #6]
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5124              		.loc 1 194 13 view .LVU1577
 5125 03c2 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5126              		.loc 1 194 20 is_stmt 1 view .LVU1578
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5127              		.loc 1 195 3 view .LVU1579
 5128              	.LVL452:
 5129              	.LBB482:
 5130              	.LBI474:
  17:../USER/vramdisp.c **** 	int adr;
 5131              		.loc 1 17 6 view .LVU1580
 5132              	.LBB478:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 5133              		.loc 1 18 2 view .LVU1581
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5134              		.loc 1 19 2 view .LVU1582
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5135              		.loc 1 20 2 view .LVU1583
 5136 03c4 FFF7FEFF 		bl	GPIO_WriteBits
 5137              	.LVL453:
 5138              	.L261:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5139              		.loc 1 21 2 view .LVU1584
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5140              		.loc 1 21 5 view .LVU1585
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5141              		.loc 1 21 10 is_stmt 0 view .LVU1586
 5142 03c8 4846     		mov	r0, r9
 5143 03ca FFF7FEFF 		bl	GPIO_ReadBits
 5144              	.LVL454:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5145              		.loc 1 21 8 view .LVU1587
 5146 03ce C0B2     		uxtb	r0, r0
 5147 03d0 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5148              		.loc 1 21 44 view .LVU1588
 5149 03d4 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5150              		.loc 1 21 2 view .LVU1589
 5151 03d8 11F00101 		ands	r1, r1, #1
 5152 03dc F4D1     		bne	.L261
  22:../USER/vramdisp.c **** }
 5153              		.loc 1 22 2 is_stmt 1 view .LVU1590
 5154              	.LBE478:
 5155              	.LBE482:
 5156              	.LBB483:
 5157              	.LBB484:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5158              		.loc 1 51 2 is_stmt 0 view .LVU1591
 5159 03de 4846     		mov	r0, r9
 5160              	.LBE484:
 5161              	.LBE483:
 5162              	.LBB486:
 5163              	.LBB479:
  22:../USER/vramdisp.c **** }
 5164              		.loc 1 22 12 view .LVU1592
 5165 03e0 3C60     		str	r4, [r7]
 5166              	.LVL455:
  22:../USER/vramdisp.c **** }
 5167              		.loc 1 22 12 view .LVU1593
 5168              	.LBE479:
 5169              	.LBE486:
 196:../USER/vramdisp.c **** 	//}
 5170              		.loc 1 196 3 is_stmt 1 view .LVU1594
 5171              	.LBB487:
 5172              	.LBI483:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 5173              		.loc 1 49 6 view .LVU1595
 5174              	.LBB485:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5175              		.loc 1 50 2 view .LVU1596
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5176              		.loc 1 51 2 view .LVU1597
 5177 03e2 FFF7FEFF 		bl	GPIO_WriteBits
 5178              	.LVL456:
 5179              	.L262:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5180              		.loc 1 52 2 view .LVU1598
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5181              		.loc 1 52 5 view .LVU1599
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5182              		.loc 1 52 10 is_stmt 0 view .LVU1600
 5183 03e6 4846     		mov	r0, r9
 5184 03e8 FFF7FEFF 		bl	GPIO_ReadBits
 5185              	.LVL457:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5186              		.loc 1 52 8 view .LVU1601
 5187 03ec C0B2     		uxtb	r0, r0
 5188 03ee 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5189              		.loc 1 52 44 view .LVU1602
 5190 03f2 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5191              		.loc 1 52 2 view .LVU1603
 5192 03f6 D807     		lsls	r0, r3, #31
 5193 03f8 F5D4     		bmi	.L262
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5194              		.loc 1 53 2 is_stmt 1 view .LVU1604
 5195 03fa 4FF40071 		mov	r1, #512
 5196 03fe 4846     		mov	r0, r9
 5197 0400 7B4C     		ldr	r4, .L312
 5198 0402 FFF7FEFF 		bl	GPIO_WriteBits
 5199              	.LVL458:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5200              		.loc 1 54 2 view .LVU1605
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5201              		.loc 1 53 2 is_stmt 0 view .LVU1606
 5202 0406 0495     		str	r5, [sp, #16]
 5203              	.LVL459:
 5204              	.L263:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 5205              		.loc 1 55 3 is_stmt 1 view .LVU1607
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5206              		.loc 1 56 3 view .LVU1608
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5207              		.loc 1 56 29 is_stmt 0 view .LVU1609
 5208 0408 14F8015F 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 5209              	.LVL460:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5210              		.loc 1 56 3 view .LVU1610
 5211 040c 4846     		mov	r0, r9
 5212 040e 05F54071 		add	r1, r5, #768
 5213 0412 FFF7FEFF 		bl	GPIO_WriteBits
 5214              	.LVL461:
  57:../USER/vramdisp.c **** 	}
 5215              		.loc 1 57 3 is_stmt 1 view .LVU1611
 5216 0416 05F50071 		add	r1, r5, #512
 5217 041a 4846     		mov	r0, r9
 5218 041c FFF7FEFF 		bl	GPIO_WriteBits
 5219              	.LVL462:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5220              		.loc 1 54 2 is_stmt 0 view .LVU1612
 5221 0420 744B     		ldr	r3, .L312+4
 5222 0422 A342     		cmp	r3, r4
 5223 0424 F0D1     		bne	.L263
  59:../USER/vramdisp.c **** }
 5224              		.loc 1 59 2 view .LVU1613
 5225 0426 0021     		movs	r1, #0
 5226 0428 4846     		mov	r0, r9
 5227 042a 049D     		ldr	r5, [sp, #16]
  59:../USER/vramdisp.c **** }
 5228              		.loc 1 59 2 is_stmt 1 view .LVU1614
 5229 042c FFF7FEFF 		bl	GPIO_WriteBits
 5230              	.LVL463:
  59:../USER/vramdisp.c **** }
 5231              		.loc 1 59 2 is_stmt 0 view .LVU1615
 5232              	.LBE485:
 5233              	.LBE487:
 5234              	.LBE489:
 5235              	.LBE491:
 5236              		.loc 1 206 26 is_stmt 1 view .LVU1616
 5237              	.LBB492:
 5238              	.LBI492:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 5239              		.loc 1 190 6 view .LVU1617
 5240              	.LBB493:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 5241              		.loc 1 191 2 view .LVU1618
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5242              		.loc 1 194 3 view .LVU1619
 5243              	.LBB494:
 5244              	.LBB495:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5245              		.loc 1 19 18 is_stmt 0 view .LVU1620
 5246 0430 109B     		ldr	r3, [sp, #64]
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5247              		.loc 1 20 2 view .LVU1621
 5248 0432 0021     		movs	r1, #0
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5249              		.loc 1 19 18 view .LVU1622
 5250 0434 1D44     		add	r5, r5, r3
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5251              		.loc 1 20 2 view .LVU1623
 5252 0436 4846     		mov	r0, r9
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5253              		.loc 1 19 6 view .LVU1624
 5254 0438 6D01     		lsls	r5, r5, #5
 5255              	.LBE495:
 5256              	.LBE494:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5257              		.loc 1 194 13 view .LVU1625
 5258 043a BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5259              		.loc 1 194 20 is_stmt 1 view .LVU1626
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5260              		.loc 1 194 30 is_stmt 0 view .LVU1627
 5261 043c 87F806A0 		strb	r10, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5262              		.loc 1 195 3 is_stmt 1 view .LVU1628
 5263              	.LVL464:
 5264              	.LBB498:
 5265              	.LBI494:
  17:../USER/vramdisp.c **** 	int adr;
 5266              		.loc 1 17 6 view .LVU1629
 5267              	.LBB496:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 5268              		.loc 1 18 2 view .LVU1630
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5269              		.loc 1 19 2 view .LVU1631
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5270              		.loc 1 20 2 view .LVU1632
 5271 0440 FFF7FEFF 		bl	GPIO_WriteBits
 5272              	.LVL465:
 5273              	.L264:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5274              		.loc 1 21 2 view .LVU1633
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5275              		.loc 1 21 5 view .LVU1634
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5276              		.loc 1 21 10 is_stmt 0 view .LVU1635
 5277 0444 4846     		mov	r0, r9
 5278 0446 FFF7FEFF 		bl	GPIO_ReadBits
 5279              	.LVL466:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5280              		.loc 1 21 8 view .LVU1636
 5281 044a C0B2     		uxtb	r0, r0
 5282 044c 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5283              		.loc 1 21 44 view .LVU1637
 5284 0450 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5285              		.loc 1 21 2 view .LVU1638
 5286 0454 11F00101 		ands	r1, r1, #1
 5287 0458 F4D1     		bne	.L264
  22:../USER/vramdisp.c **** }
 5288              		.loc 1 22 2 is_stmt 1 view .LVU1639
 5289              	.LBE496:
 5290              	.LBE498:
 5291              	.LBB499:
 5292              	.LBB500:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5293              		.loc 1 51 2 is_stmt 0 view .LVU1640
 5294 045a 4846     		mov	r0, r9
 5295              	.LBE500:
 5296              	.LBE499:
 5297              	.LBB502:
 5298              	.LBB497:
  22:../USER/vramdisp.c **** }
 5299              		.loc 1 22 12 view .LVU1641
 5300 045c 3D60     		str	r5, [r7]
 5301              	.LVL467:
  22:../USER/vramdisp.c **** }
 5302              		.loc 1 22 12 view .LVU1642
 5303              	.LBE497:
 5304              	.LBE502:
 196:../USER/vramdisp.c **** 	//}
 5305              		.loc 1 196 3 is_stmt 1 view .LVU1643
 5306              	.LBB503:
 5307              	.LBI499:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 5308              		.loc 1 49 6 view .LVU1644
 5309              	.LBB501:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5310              		.loc 1 50 2 view .LVU1645
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5311              		.loc 1 51 2 view .LVU1646
 5312 045e FFF7FEFF 		bl	GPIO_WriteBits
 5313              	.LVL468:
 5314              	.L265:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5315              		.loc 1 52 2 view .LVU1647
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5316              		.loc 1 52 5 view .LVU1648
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5317              		.loc 1 52 10 is_stmt 0 view .LVU1649
 5318 0462 4846     		mov	r0, r9
 5319 0464 FFF7FEFF 		bl	GPIO_ReadBits
 5320              	.LVL469:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5321              		.loc 1 52 8 view .LVU1650
 5322 0468 C0B2     		uxtb	r0, r0
 5323 046a 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5324              		.loc 1 52 44 view .LVU1651
 5325 046e 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5326              		.loc 1 52 2 view .LVU1652
 5327 0472 D907     		lsls	r1, r3, #31
 5328 0474 F5D4     		bmi	.L265
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5329              		.loc 1 53 2 is_stmt 1 view .LVU1653
 5330 0476 4FF40071 		mov	r1, #512
 5331 047a 4846     		mov	r0, r9
 5332 047c FFF7FEFF 		bl	GPIO_WriteBits
 5333              	.LVL470:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5334              		.loc 1 54 2 view .LVU1654
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5335              		.loc 1 53 2 is_stmt 0 view .LVU1655
 5336 0480 5B4C     		ldr	r4, .L312
 5337              	.LVL471:
 5338              	.L266:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 5339              		.loc 1 55 3 is_stmt 1 view .LVU1656
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5340              		.loc 1 56 3 view .LVU1657
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5341              		.loc 1 56 29 is_stmt 0 view .LVU1658
 5342 0482 14F8015F 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 5343              	.LVL472:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5344              		.loc 1 56 3 view .LVU1659
 5345 0486 4846     		mov	r0, r9
 5346 0488 05F54071 		add	r1, r5, #768
 5347 048c FFF7FEFF 		bl	GPIO_WriteBits
 5348              	.LVL473:
  57:../USER/vramdisp.c **** 	}
 5349              		.loc 1 57 3 is_stmt 1 view .LVU1660
 5350 0490 05F50071 		add	r1, r5, #512
 5351 0494 4846     		mov	r0, r9
 5352 0496 FFF7FEFF 		bl	GPIO_WriteBits
 5353              	.LVL474:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5354              		.loc 1 54 2 is_stmt 0 view .LVU1661
 5355 049a 564B     		ldr	r3, .L312+4
 5356 049c A342     		cmp	r3, r4
 5357 049e F0D1     		bne	.L266
  59:../USER/vramdisp.c **** }
 5358              		.loc 1 59 2 is_stmt 1 view .LVU1662
 5359 04a0 0021     		movs	r1, #0
 5360 04a2 4846     		mov	r0, r9
 5361 04a4 FFF7FEFF 		bl	GPIO_WriteBits
 5362              	.LVL475:
  59:../USER/vramdisp.c **** }
 5363              		.loc 1 59 2 is_stmt 0 view .LVU1663
 5364              	.LBE501:
 5365              	.LBE503:
 5366              	.LBE493:
 5367              	.LBE492:
 5368              		.loc 1 206 47 is_stmt 1 view .LVU1664
 5369              	.LBB504:
 5370              	.LBI504:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 5371              		.loc 1 190 6 view .LVU1665
 5372              	.LBB505:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 5373              		.loc 1 191 2 view .LVU1666
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5374              		.loc 1 194 3 view .LVU1667
 5375              	.LBB506:
 5376              	.LBB507:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5377              		.loc 1 19 18 is_stmt 0 view .LVU1668
 5378 04a8 0D9B     		ldr	r3, [sp, #52]
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5379              		.loc 1 20 2 view .LVU1669
 5380 04aa 0021     		movs	r1, #0
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5381              		.loc 1 19 18 view .LVU1670
 5382 04ac 4344     		add	r3, r3, r8
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5383              		.loc 1 19 6 view .LVU1671
 5384 04ae 5C01     		lsls	r4, r3, #5
 5385              	.LBE507:
 5386              	.LBE506:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5387              		.loc 1 194 30 view .LVU1672
 5388 04b0 039B     		ldr	r3, [sp, #12]
 5389              	.LBB511:
 5390              	.LBB508:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5391              		.loc 1 20 2 view .LVU1673
 5392 04b2 4846     		mov	r0, r9
 5393              	.LBE508:
 5394              	.LBE511:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5395              		.loc 1 194 13 view .LVU1674
 5396 04b4 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5397              		.loc 1 194 20 is_stmt 1 view .LVU1675
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5398              		.loc 1 194 30 is_stmt 0 view .LVU1676
 5399 04b6 BB71     		strb	r3, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5400              		.loc 1 195 3 is_stmt 1 view .LVU1677
 5401              	.LVL476:
 5402              	.LBB512:
 5403              	.LBI506:
  17:../USER/vramdisp.c **** 	int adr;
 5404              		.loc 1 17 6 view .LVU1678
 5405              	.LBB509:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 5406              		.loc 1 18 2 view .LVU1679
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5407              		.loc 1 19 2 view .LVU1680
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5408              		.loc 1 20 2 view .LVU1681
 5409 04b8 FFF7FEFF 		bl	GPIO_WriteBits
 5410              	.LVL477:
 5411              	.L267:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5412              		.loc 1 21 2 view .LVU1682
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5413              		.loc 1 21 5 view .LVU1683
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5414              		.loc 1 21 10 is_stmt 0 view .LVU1684
 5415 04bc 4846     		mov	r0, r9
 5416 04be FFF7FEFF 		bl	GPIO_ReadBits
 5417              	.LVL478:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5418              		.loc 1 21 8 view .LVU1685
 5419 04c2 C0B2     		uxtb	r0, r0
 5420 04c4 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5421              		.loc 1 21 44 view .LVU1686
 5422 04c8 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5423              		.loc 1 21 2 view .LVU1687
 5424 04cc 11F00101 		ands	r1, r1, #1
 5425 04d0 F4D1     		bne	.L267
  22:../USER/vramdisp.c **** }
 5426              		.loc 1 22 2 is_stmt 1 view .LVU1688
 5427              	.LBE509:
 5428              	.LBE512:
 5429              	.LBB513:
 5430              	.LBB514:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5431              		.loc 1 51 2 is_stmt 0 view .LVU1689
 5432 04d2 4846     		mov	r0, r9
 5433              	.LBE514:
 5434              	.LBE513:
 5435              	.LBB518:
 5436              	.LBB510:
  22:../USER/vramdisp.c **** }
 5437              		.loc 1 22 12 view .LVU1690
 5438 04d4 3C60     		str	r4, [r7]
 5439              	.LVL479:
  22:../USER/vramdisp.c **** }
 5440              		.loc 1 22 12 view .LVU1691
 5441              	.LBE510:
 5442              	.LBE518:
 196:../USER/vramdisp.c **** 	//}
 5443              		.loc 1 196 3 is_stmt 1 view .LVU1692
 5444              	.LBB519:
 5445              	.LBI513:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 5446              		.loc 1 49 6 view .LVU1693
 5447              	.LBB515:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5448              		.loc 1 50 2 view .LVU1694
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5449              		.loc 1 51 2 view .LVU1695
 5450 04d6 FFF7FEFF 		bl	GPIO_WriteBits
 5451              	.LVL480:
 5452              	.L268:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5453              		.loc 1 52 2 view .LVU1696
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5454              		.loc 1 52 5 view .LVU1697
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5455              		.loc 1 52 10 is_stmt 0 view .LVU1698
 5456 04da 4846     		mov	r0, r9
 5457 04dc FFF7FEFF 		bl	GPIO_ReadBits
 5458              	.LVL481:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5459              		.loc 1 52 8 view .LVU1699
 5460 04e0 C0B2     		uxtb	r0, r0
 5461 04e2 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5462              		.loc 1 52 44 view .LVU1700
 5463 04e6 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5464              		.loc 1 52 2 view .LVU1701
 5465 04ea DA07     		lsls	r2, r3, #31
 5466 04ec F5D4     		bmi	.L268
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5467              		.loc 1 53 2 is_stmt 1 view .LVU1702
 5468 04ee 4FF40071 		mov	r1, #512
 5469 04f2 4846     		mov	r0, r9
 5470 04f4 FFF7FEFF 		bl	GPIO_WriteBits
 5471              	.LVL482:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5472              		.loc 1 54 2 view .LVU1703
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5473              		.loc 1 53 2 is_stmt 0 view .LVU1704
 5474 04f8 3D4C     		ldr	r4, .L312
 5475              	.LVL483:
 5476              	.L269:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 5477              		.loc 1 55 3 is_stmt 1 view .LVU1705
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5478              		.loc 1 56 3 view .LVU1706
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5479              		.loc 1 56 29 is_stmt 0 view .LVU1707
 5480 04fa 14F8015F 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 5481              	.LVL484:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5482              		.loc 1 56 3 view .LVU1708
 5483 04fe 4846     		mov	r0, r9
 5484 0500 05F54071 		add	r1, r5, #768
 5485 0504 FFF7FEFF 		bl	GPIO_WriteBits
 5486              	.LVL485:
  57:../USER/vramdisp.c **** 	}
 5487              		.loc 1 57 3 is_stmt 1 view .LVU1709
 5488 0508 05F50071 		add	r1, r5, #512
 5489 050c 4846     		mov	r0, r9
 5490 050e FFF7FEFF 		bl	GPIO_WriteBits
 5491              	.LVL486:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5492              		.loc 1 54 2 is_stmt 0 view .LVU1710
 5493 0512 384B     		ldr	r3, .L312+4
 5494 0514 A342     		cmp	r3, r4
 5495 0516 F0D1     		bne	.L269
  59:../USER/vramdisp.c **** }
 5496              		.loc 1 59 2 is_stmt 1 view .LVU1711
 5497              	.LBE515:
 5498              	.LBE519:
 5499              	.LBE505:
 5500              	.LBE504:
 207:../USER/vramdisp.c ****     a++;
 5501              		.loc 1 207 6 is_stmt 0 view .LVU1712
 5502 0518 009C     		ldr	r4, [sp]
 5503              	.LVL487:
 5504              	.LBB524:
 5505              	.LBB522:
 5506              	.LBB520:
 5507              	.LBB516:
  59:../USER/vramdisp.c **** }
 5508              		.loc 1 59 2 view .LVU1713
 5509 051a 0021     		movs	r1, #0
 5510 051c 4846     		mov	r0, r9
 5511              	.LBE516:
 5512              	.LBE520:
 5513              	.LBE522:
 5514              	.LBE524:
 5515              		.loc 1 207 6 view .LVU1714
 5516 051e 0134     		adds	r4, r4, #1
 5517 0520 0094     		str	r4, [sp]
 5518              	.LVL488:
 5519              	.LBB525:
 5520              	.LBB523:
 5521              	.LBB521:
 5522              	.LBB517:
  59:../USER/vramdisp.c **** }
 5523              		.loc 1 59 2 view .LVU1715
 5524 0522 FFF7FEFF 		bl	GPIO_WriteBits
 5525              	.LVL489:
  59:../USER/vramdisp.c **** }
 5526              		.loc 1 59 2 view .LVU1716
 5527              	.LBE517:
 5528              	.LBE521:
 5529              	.LBE523:
 5530              	.LBE525:
 5531              		.loc 1 207 5 is_stmt 1 view .LVU1717
 208:../USER/vramdisp.c ****     if(di<0) di += 4*a+6;
 5532              		.loc 1 208 5 view .LVU1718
 5533              		.loc 1 208 7 is_stmt 0 view .LVU1719
 5534 0526 089B     		ldr	r3, [sp, #32]
 5535 0528 002B     		cmp	r3, #0
 5536 052a 5CDB     		blt	.L308
 209:../USER/vramdisp.c ****     else {   di += 10+4*(a-b); b--; }
 5537              		.loc 1 209 14 is_stmt 1 view .LVU1720
 5538              		.loc 1 209 27 is_stmt 0 view .LVU1721
 5539 052c 059A     		ldr	r2, [sp, #20]
 5540 052e 009B     		ldr	r3, [sp]
 5541 0530 0199     		ldr	r1, [sp, #4]
 5542 0532 9B1A     		subs	r3, r3, r2
 5543              		.loc 1 209 33 view .LVU1722
 5544 0534 013A     		subs	r2, r2, #1
 5545 0536 8C18     		adds	r4, r1, r2
 5546              	.LVL490:
 5547              		.loc 1 209 33 view .LVU1723
 5548 0538 0592     		str	r2, [sp, #20]
 5549              	.LVL491:
 5550              		.loc 1 209 22 view .LVU1724
 5551 053a 089A     		ldr	r2, [sp, #32]
 5552 053c A4B2     		uxth	r4, r4
 5553 053e 02EB8303 		add	r3, r2, r3, lsl #2
 5554              		.loc 1 209 17 view .LVU1725
 5555 0542 0A33     		adds	r3, r3, #10
 5556 0544 04EB8404 		add	r4, r4, r4, lsl #2
 5557 0548 0893     		str	r3, [sp, #32]
 5558              	.LVL492:
 5559              		.loc 1 209 32 is_stmt 1 view .LVU1726
 5560              		.loc 1 209 32 is_stmt 0 view .LVU1727
 5561 054a E300     		lsls	r3, r4, #3
 5562              	.LVL493:
 5563              		.loc 1 209 32 view .LVU1728
 5564 054c 0993     		str	r3, [sp, #36]
 5565              	.L271:
 210:../USER/vramdisp.c ****     pset(x0+a,y0+b,ptn);
 5566              		.loc 1 210 5 is_stmt 1 view .LVU1729
 5567              	.LVL494:
 5568              	.LBB526:
 5569              	.LBI526:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 5570              		.loc 1 190 6 view .LVU1730
 5571              	.LBB527:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 5572              		.loc 1 191 2 view .LVU1731
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5573              		.loc 1 194 3 view .LVU1732
 5574              	.LBB528:
 5575              	.LBB529:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5576              		.loc 1 19 18 is_stmt 0 view .LVU1733
 5577 054e 099B     		ldr	r3, [sp, #36]
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5578              		.loc 1 20 2 view .LVU1734
 5579 0550 4846     		mov	r0, r9
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5580              		.loc 1 19 18 view .LVU1735
 5581 0552 1946     		mov	r1, r3
 5582 0554 069B     		ldr	r3, [sp, #24]
 5583              	.LBE529:
 5584              	.LBE528:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5585              		.loc 1 194 13 view .LVU1736
 5586 0556 BE80     		strh	r6, [r7, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5587              		.loc 1 194 20 is_stmt 1 view .LVU1737
 5588              	.LBB534:
 5589              	.LBB530:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5590              		.loc 1 19 18 is_stmt 0 view .LVU1738
 5591 0558 01EB1314 		add	r4, r1, r3, lsr #4
 5592              	.LBE530:
 5593              	.LBE534:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5594              		.loc 1 194 35 view .LVU1739
 5595 055c 03F00F03 		and	r3, r3, #15
 5596              	.LBB535:
 5597              	.LBB531:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5598              		.loc 1 20 2 view .LVU1740
 5599 0560 0021     		movs	r1, #0
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5600              		.loc 1 19 6 view .LVU1741
 5601 0562 6401     		lsls	r4, r4, #5
 5602              	.LBE531:
 5603              	.LBE535:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5604              		.loc 1 194 30 view .LVU1742
 5605 0564 BB71     		strb	r3, [r7, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5606              		.loc 1 195 3 is_stmt 1 view .LVU1743
 5607              	.LVL495:
 5608              	.LBB536:
 5609              	.LBI528:
  17:../USER/vramdisp.c **** 	int adr;
 5610              		.loc 1 17 6 view .LVU1744
 5611              	.LBB532:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 5612              		.loc 1 18 2 view .LVU1745
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5613              		.loc 1 19 2 view .LVU1746
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5614              		.loc 1 20 2 view .LVU1747
 5615 0566 FFF7FEFF 		bl	GPIO_WriteBits
 5616              	.LVL496:
 5617              	.L272:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5618              		.loc 1 21 2 view .LVU1748
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5619              		.loc 1 21 5 view .LVU1749
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5620              		.loc 1 21 10 is_stmt 0 view .LVU1750
 5621 056a 4846     		mov	r0, r9
 5622 056c FFF7FEFF 		bl	GPIO_ReadBits
 5623              	.LVL497:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5624              		.loc 1 21 8 view .LVU1751
 5625 0570 C0B2     		uxtb	r0, r0
 5626 0572 8BF80000 		strb	r0, [fp]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5627              		.loc 1 21 44 view .LVU1752
 5628 0576 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5629              		.loc 1 21 2 view .LVU1753
 5630 057a 11F00101 		ands	r1, r1, #1
 5631 057e F4D1     		bne	.L272
  22:../USER/vramdisp.c **** }
 5632              		.loc 1 22 2 is_stmt 1 view .LVU1754
 5633              	.LBE532:
 5634              	.LBE536:
 5635              	.LBB537:
 5636              	.LBB538:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5637              		.loc 1 51 2 is_stmt 0 view .LVU1755
 5638 0580 4846     		mov	r0, r9
 5639              	.LBE538:
 5640              	.LBE537:
 5641              	.LBB540:
 5642              	.LBB533:
  22:../USER/vramdisp.c **** }
 5643              		.loc 1 22 12 view .LVU1756
 5644 0582 3C60     		str	r4, [r7]
 5645              	.LVL498:
  22:../USER/vramdisp.c **** }
 5646              		.loc 1 22 12 view .LVU1757
 5647              	.LBE533:
 5648              	.LBE540:
 196:../USER/vramdisp.c **** 	//}
 5649              		.loc 1 196 3 is_stmt 1 view .LVU1758
 5650              	.LBB541:
 5651              	.LBI537:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 5652              		.loc 1 49 6 view .LVU1759
 5653              	.LBB539:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5654              		.loc 1 50 2 view .LVU1760
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5655              		.loc 1 51 2 view .LVU1761
 5656 0584 FFF7FEFF 		bl	GPIO_WriteBits
 5657              	.LVL499:
 5658              	.L273:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5659              		.loc 1 52 2 view .LVU1762
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5660              		.loc 1 52 5 view .LVU1763
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5661              		.loc 1 52 10 is_stmt 0 view .LVU1764
 5662 0588 4846     		mov	r0, r9
 5663 058a FFF7FEFF 		bl	GPIO_ReadBits
 5664              	.LVL500:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5665              		.loc 1 52 8 view .LVU1765
 5666 058e C0B2     		uxtb	r0, r0
 5667 0590 8BF80000 		strb	r0, [fp]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5668              		.loc 1 52 44 view .LVU1766
 5669 0594 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5670              		.loc 1 52 2 view .LVU1767
 5671 0598 DB07     		lsls	r3, r3, #31
 5672 059a F5D4     		bmi	.L273
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5673              		.loc 1 53 2 is_stmt 1 view .LVU1768
 5674 059c 4FF40071 		mov	r1, #512
 5675 05a0 4846     		mov	r0, r9
 5676 05a2 FFF7FEFF 		bl	GPIO_WriteBits
 5677              	.LVL501:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5678              		.loc 1 54 2 view .LVU1769
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5679              		.loc 1 53 2 is_stmt 0 view .LVU1770
 5680 05a6 0F9C     		ldr	r4, [sp, #60]
 5681              	.LVL502:
 5682              	.L274:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 5683              		.loc 1 55 3 is_stmt 1 view .LVU1771
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5684              		.loc 1 56 3 view .LVU1772
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5685              		.loc 1 56 29 is_stmt 0 view .LVU1773
 5686 05a8 14F8015F 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 5687              	.LVL503:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5688              		.loc 1 56 3 view .LVU1774
 5689 05ac 4846     		mov	r0, r9
 5690 05ae 05F54071 		add	r1, r5, #768
 5691 05b2 FFF7FEFF 		bl	GPIO_WriteBits
 5692              	.LVL504:
  57:../USER/vramdisp.c **** 	}
 5693              		.loc 1 57 3 is_stmt 1 view .LVU1775
 5694 05b6 05F50071 		add	r1, r5, #512
 5695 05ba 4846     		mov	r0, r9
 5696 05bc FFF7FEFF 		bl	GPIO_WriteBits
 5697              	.LVL505:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5698              		.loc 1 54 2 is_stmt 0 view .LVU1776
 5699 05c0 0C4B     		ldr	r3, .L312+4
 5700 05c2 A342     		cmp	r3, r4
 5701 05c4 F0D1     		bne	.L274
  59:../USER/vramdisp.c **** }
 5702              		.loc 1 59 2 is_stmt 1 view .LVU1777
 5703 05c6 0021     		movs	r1, #0
 5704 05c8 4846     		mov	r0, r9
 5705 05ca FFF7FEFF 		bl	GPIO_WriteBits
 5706              	.LVL506:
  59:../USER/vramdisp.c **** }
 5707              		.loc 1 59 2 is_stmt 0 view .LVU1778
 5708 05ce 069B     		ldr	r3, [sp, #24]
 5709              	.LBE539:
 5710              	.LBE541:
 5711              	.LBE527:
 5712              	.LBE526:
 203:../USER/vramdisp.c ****     pset(x0-b,y0-a,ptn); pset(x0+b,y0-a,ptn); pset(x0-a,y0+b,ptn);
 5713              		.loc 1 203 8 view .LVU1779
 5714 05d0 009A     		ldr	r2, [sp]
 5715 05d2 0133     		adds	r3, r3, #1
 5716 05d4 9BB2     		uxth	r3, r3
 5717 05d6 0693     		str	r3, [sp, #24]
 5718              	.LVL507:
 203:../USER/vramdisp.c ****     pset(x0-b,y0-a,ptn); pset(x0+b,y0-a,ptn); pset(x0-a,y0+b,ptn);
 5719              		.loc 1 203 8 view .LVU1780
 5720 05d8 059B     		ldr	r3, [sp, #20]
 5721 05da 9342     		cmp	r3, r2
 5722 05dc BFF627AD 		bge	.L275
 211:../USER/vramdisp.c ****   }
 212:../USER/vramdisp.c **** }
 5723              		.loc 1 212 1 view .LVU1781
 5724 05e0 13B0     		add	sp, sp, #76
 5725              		.cfi_remember_state
 5726              		.cfi_def_cfa_offset 36
 5727              	.LVL508:
 5728              		.loc 1 212 1 view .LVU1782
 5729              		@ sp needed
 5730 05e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5731              	.LVL509:
 5732              	.L308:
 5733              		.cfi_restore_state
 208:../USER/vramdisp.c ****     else {   di += 10+4*(a-b); b--; }
 5734              		.loc 1 208 14 is_stmt 1 discriminator 1 view .LVU1783
 208:../USER/vramdisp.c ****     else {   di += 10+4*(a-b); b--; }
 5735              		.loc 1 208 17 is_stmt 0 discriminator 1 view .LVU1784
 5736 05e6 03EB8403 		add	r3, r3, r4, lsl #2
 5737 05ea 0633     		adds	r3, r3, #6
 5738 05ec 0893     		str	r3, [sp, #32]
 5739              	.LVL510:
 208:../USER/vramdisp.c ****     else {   di += 10+4*(a-b); b--; }
 5740              		.loc 1 208 17 discriminator 1 view .LVU1785
 5741 05ee AEE7     		b	.L271
 5742              	.L313:
 5743              		.align	2
 5744              	.L312:
 5745 05f0 FFFFFFFF 		.word	wddt-1
 5746 05f4 06000000 		.word	wddt+6
 5747              		.cfi_endproc
 5748              	.LFE45:
 5750              		.section	.text.DLine,"ax",%progbits
 5751              		.align	1
 5752              		.p2align 2,,3
 5753              		.global	DLine
 5754              		.syntax unified
 5755              		.thumb
 5756              		.thumb_func
 5757              		.fpu softvfp
 5759              	DLine:
 5760              	.LVL511:
 5761              	.LFB46:
 213:../USER/vramdisp.c **** void DLine(u16 x1, u16 y1, u16 x2, u16 y2, u16 ptn) {
 5762              		.loc 1 213 53 is_stmt 1 view -0
 5763              		.cfi_startproc
 5764              		@ args = 4, pretend = 0, frame = 40
 5765              		@ frame_needed = 0, uses_anonymous_args = 0
 5766              		.loc 1 213 53 is_stmt 0 view .LVU1787
 5767 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5768              		.cfi_def_cfa_offset 36
 5769              		.cfi_offset 4, -36
 5770              		.cfi_offset 5, -32
 5771              		.cfi_offset 6, -28
 5772              		.cfi_offset 7, -24
 5773              		.cfi_offset 8, -20
 5774              		.cfi_offset 9, -16
 5775              		.cfi_offset 10, -12
 5776              		.cfi_offset 11, -8
 5777              		.cfi_offset 14, -4
 214:../USER/vramdisp.c ****   u16 t;
 215:../USER/vramdisp.c ****   int xerr=0,yerr=0,delta_x,delta_y,distance;
 216:../USER/vramdisp.c ****   int incx,incy,uRow,uCol;
 217:../USER/vramdisp.c **** 
 218:../USER/vramdisp.c ****   delta_x=x2-x1;  delta_y=y2-y1; uRow=x1; uCol=y1;
 5778              		.loc 1 218 10 view .LVU1788
 5779 0004 141A     		subs	r4, r2, r0
 213:../USER/vramdisp.c **** void DLine(u16 x1, u16 y1, u16 x2, u16 y2, u16 ptn) {
 5780              		.loc 1 213 53 view .LVU1789
 5781 0006 8BB0     		sub	sp, sp, #44
 5782              		.cfi_def_cfa_offset 80
 5783              		.loc 1 218 13 view .LVU1790
 5784 0008 8246     		mov	r10, r0
 214:../USER/vramdisp.c ****   u16 t;
 5785              		.loc 1 214 3 is_stmt 1 view .LVU1791
 215:../USER/vramdisp.c ****   int incx,incy,uRow,uCol;
 5786              		.loc 1 215 3 view .LVU1792
 5787              	.LVL512:
 216:../USER/vramdisp.c **** 
 5788              		.loc 1 216 3 view .LVU1793
 5789              		.loc 1 218 3 view .LVU1794
 219:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5790              		.loc 1 219 5 is_stmt 0 view .LVU1795
 5791 000a 002C     		cmp	r4, #0
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5792              		.loc 1 218 26 view .LVU1796
 5793 000c A3EB0100 		sub	r0, r3, r1
 5794              	.LVL513:
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5795              		.loc 1 218 26 view .LVU1797
 5796 0010 0590     		str	r0, [sp, #20]
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5797              		.loc 1 218 10 view .LVU1798
 5798 0012 0494     		str	r4, [sp, #16]
 5799              	.LVL514:
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5800              		.loc 1 218 19 is_stmt 1 view .LVU1799
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5801              		.loc 1 218 34 view .LVU1800
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5802              		.loc 1 218 43 view .LVU1801
 5803              		.loc 1 219 3 view .LVU1802
 218:../USER/vramdisp.c ****   if(delta_x>0) incx=1;
 5804              		.loc 1 218 29 is_stmt 0 view .LVU1803
 5805 0014 0191     		str	r1, [sp, #4]
 213:../USER/vramdisp.c ****   u16 t;
 5806              		.loc 1 213 53 view .LVU1804
 5807 0016 BDF85000 		ldrh	r0, [sp, #80]
 5808              	.LVL515:
 5809              		.loc 1 219 5 view .LVU1805
 5810 001a 40F38680 		ble	.L336
 5811              		.loc 1 219 21 view .LVU1806
 5812 001e 0122     		movs	r2, #1
 5813              	.LVL516:
 5814              		.loc 1 219 21 view .LVU1807
 5815 0020 0992     		str	r2, [sp, #36]
 5816              	.LVL517:
 5817              	.L315:
 220:../USER/vramdisp.c ****   else if(delta_x==0)incx=0;
 221:../USER/vramdisp.c ****   else {incx=-1;delta_x=-delta_x;}
 222:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 5818              		.loc 1 222 3 is_stmt 1 view .LVU1808
 5819              		.loc 1 222 5 is_stmt 0 view .LVU1809
 5820 0022 5A1A     		subs	r2, r3, r1
 5821 0024 002A     		cmp	r2, #0
 5822 0026 78DD     		ble	.L328
 5823              		.loc 1 222 20 view .LVU1810
 5824 0028 0123     		movs	r3, #1
 5825              	.LVL518:
 5826              		.loc 1 222 20 view .LVU1811
 5827 002a 0893     		str	r3, [sp, #32]
 5828              	.LVL519:
 5829              	.L317:
 223:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 224:../USER/vramdisp.c ****   else{incy=-1;delta_y=-delta_y;}
 225:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 5830              		.loc 1 225 3 is_stmt 1 view .LVU1812
 5831 002c DDE90423 		ldrd	r2, r3, [sp, #16]
 5832 0030 9342     		cmp	r3, r2
 5833 0032 B8BF     		it	lt
 5834 0034 1346     		movlt	r3, r2
 5835 0036 9946     		mov	r9, r3
 5836              	.LVL520:
 226:../USER/vramdisp.c ****   else distance=delta_y;
 227:../USER/vramdisp.c ****   for(t=0;t<=distance+1;t++ ) {
 5837              		.loc 1 227 3 view .LVU1813
 5838              		.loc 1 227 3 is_stmt 0 view .LVU1814
 5839 0038 0133     		adds	r3, r3, #1
 5840              	.LVL521:
 5841              		.loc 1 227 3 view .LVU1815
 5842 003a 0693     		str	r3, [sp, #24]
 5843 003c 66D4     		bmi	.L314
 5844              	.LVL522:
 5845              	.L319:
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 5846              		.loc 1 222 20 view .LVU1816
 5847 003e 0027     		movs	r7, #0
 5848 0040 B846     		mov	r8, r7
 5849 0042 03B2     		sxth	r3, r0
 5850 0044 DFF828B1 		ldr	fp, .L337+16
 5851 0048 454E     		ldr	r6, .L337
 5852              	.LBB548:
 5853              	.LBB549:
 5854              	.LBB550:
 5855              	.LBB551:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5856              		.loc 1 20 2 view .LVU1817
 5857 004a 464C     		ldr	r4, .L337+4
 5858              	.LBE551:
 5859              	.LBE550:
 5860              	.LBE549:
 5861              	.LBE548:
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 5862              		.loc 1 222 20 view .LVU1818
 5863 004c 0297     		str	r7, [sp, #8]
 5864 004e 0793     		str	r3, [sp, #28]
 5865              	.LVL523:
 5866              	.L325:
 228:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 5867              		.loc 1 228 2 is_stmt 1 view .LVU1819
 5868              	.LBB577:
 5869              	.LBI548:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 5870              		.loc 1 190 6 view .LVU1820
 5871              	.LBB574:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 5872              		.loc 1 191 2 view .LVU1821
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5873              		.loc 1 194 3 view .LVU1822
 5874              	.LBB559:
 5875              	.LBB552:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5876              		.loc 1 19 15 is_stmt 0 view .LVU1823
 5877 0050 BDF80450 		ldrh	r5, [sp, #4]
 5878              	.LBE552:
 5879              	.LBE559:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5880              		.loc 1 195 3 view .LVU1824
 5881 0054 CAF30B13 		ubfx	r3, r10, #4, #12
 5882              	.LBB560:
 5883              	.LBB553:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5884              		.loc 1 19 15 view .LVU1825
 5885 0058 05EB8505 		add	r5, r5, r5, lsl #2
 5886              	.LBE553:
 5887              	.LBE560:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5888              		.loc 1 194 13 view .LVU1826
 5889 005c 079A     		ldr	r2, [sp, #28]
 5890              	.LBB561:
 5891              	.LBB554:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5892              		.loc 1 19 18 view .LVU1827
 5893 005e 03EBC505 		add	r5, r3, r5, lsl #3
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5894              		.loc 1 20 2 view .LVU1828
 5895 0062 0021     		movs	r1, #0
 5896              	.LBE554:
 5897              	.LBE561:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5898              		.loc 1 194 35 view .LVU1829
 5899 0064 0AF00F03 		and	r3, r10, #15
 5900              	.LBB562:
 5901              	.LBB555:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5902              		.loc 1 20 2 view .LVU1830
 5903 0068 2046     		mov	r0, r4
 5904              	.LBE555:
 5905              	.LBE562:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5906              		.loc 1 194 13 view .LVU1831
 5907 006a ABF80420 		strh	r2, [fp, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5908              		.loc 1 194 20 is_stmt 1 view .LVU1832
 5909              	.LBB563:
 5910              	.LBB556:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5911              		.loc 1 19 6 is_stmt 0 view .LVU1833
 5912 006e 6D01     		lsls	r5, r5, #5
 5913              	.LBE556:
 5914              	.LBE563:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 5915              		.loc 1 194 30 view .LVU1834
 5916 0070 8BF80630 		strb	r3, [fp, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 5917              		.loc 1 195 3 is_stmt 1 view .LVU1835
 5918              	.LVL524:
 5919              	.LBB564:
 5920              	.LBI550:
  17:../USER/vramdisp.c **** 	int adr;
 5921              		.loc 1 17 6 view .LVU1836
 5922              	.LBB557:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 5923              		.loc 1 18 2 view .LVU1837
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5924              		.loc 1 19 2 view .LVU1838
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5925              		.loc 1 20 2 view .LVU1839
 5926 0074 FFF7FEFF 		bl	GPIO_WriteBits
 5927              	.LVL525:
 5928              	.L320:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5929              		.loc 1 21 2 view .LVU1840
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5930              		.loc 1 21 5 view .LVU1841
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5931              		.loc 1 21 10 is_stmt 0 view .LVU1842
 5932 0078 2046     		mov	r0, r4
 5933 007a FFF7FEFF 		bl	GPIO_ReadBits
 5934              	.LVL526:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5935              		.loc 1 21 8 view .LVU1843
 5936 007e C0B2     		uxtb	r0, r0
 5937 0080 3070     		strb	r0, [r6]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5938              		.loc 1 21 44 view .LVU1844
 5939 0082 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 5940              		.loc 1 21 2 view .LVU1845
 5941 0084 11F00101 		ands	r1, r1, #1
 5942 0088 F6D1     		bne	.L320
  22:../USER/vramdisp.c **** }
 5943              		.loc 1 22 2 is_stmt 1 view .LVU1846
 5944              	.LBE557:
 5945              	.LBE564:
 5946              	.LBB565:
 5947              	.LBB566:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5948              		.loc 1 51 2 is_stmt 0 view .LVU1847
 5949 008a 2046     		mov	r0, r4
 5950              	.LBE566:
 5951              	.LBE565:
 5952              	.LBB570:
 5953              	.LBB558:
  22:../USER/vramdisp.c **** }
 5954              		.loc 1 22 12 view .LVU1848
 5955 008c CBF80050 		str	r5, [fp]
 5956              	.LVL527:
  22:../USER/vramdisp.c **** }
 5957              		.loc 1 22 12 view .LVU1849
 5958              	.LBE558:
 5959              	.LBE570:
 196:../USER/vramdisp.c **** 	//}
 5960              		.loc 1 196 3 is_stmt 1 view .LVU1850
 5961              	.LBB571:
 5962              	.LBI565:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 5963              		.loc 1 49 6 view .LVU1851
 5964              	.LBB567:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 5965              		.loc 1 50 2 view .LVU1852
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 5966              		.loc 1 51 2 view .LVU1853
 5967 0090 FFF7FEFF 		bl	GPIO_WriteBits
 5968              	.LVL528:
 5969              	.L321:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5970              		.loc 1 52 2 view .LVU1854
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5971              		.loc 1 52 5 view .LVU1855
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5972              		.loc 1 52 10 is_stmt 0 view .LVU1856
 5973 0094 2046     		mov	r0, r4
 5974 0096 FFF7FEFF 		bl	GPIO_ReadBits
 5975              	.LVL529:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5976              		.loc 1 52 8 view .LVU1857
 5977 009a C0B2     		uxtb	r0, r0
 5978 009c 3070     		strb	r0, [r6]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5979              		.loc 1 52 44 view .LVU1858
 5980 009e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 5981              		.loc 1 52 2 view .LVU1859
 5982 00a0 DB07     		lsls	r3, r3, #31
 5983 00a2 F7D4     		bmi	.L321
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 5984              		.loc 1 53 2 is_stmt 1 view .LVU1860
 5985 00a4 4FF40071 		mov	r1, #512
 5986 00a8 2046     		mov	r0, r4
 5987 00aa 2F4D     		ldr	r5, .L337+8
 5988 00ac FFF7FEFF 		bl	GPIO_WriteBits
 5989              	.LVL530:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5990              		.loc 1 54 2 view .LVU1861
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 5991              		.loc 1 54 2 is_stmt 0 view .LVU1862
 5992 00b0 0397     		str	r7, [sp, #12]
 5993              	.LVL531:
 5994              	.L322:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 5995              		.loc 1 55 3 is_stmt 1 view .LVU1863
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5996              		.loc 1 56 3 view .LVU1864
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 5997              		.loc 1 56 29 is_stmt 0 view .LVU1865
 5998 00b2 15F8017F 		ldrb	r7, [r5, #1]!	@ zero_extendqisi2
 5999              	.LVL532:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 6000              		.loc 1 56 3 view .LVU1866
 6001 00b6 2046     		mov	r0, r4
 6002 00b8 07F54071 		add	r1, r7, #768
 6003 00bc FFF7FEFF 		bl	GPIO_WriteBits
 6004              	.LVL533:
  57:../USER/vramdisp.c **** 	}
 6005              		.loc 1 57 3 is_stmt 1 view .LVU1867
 6006 00c0 07F50071 		add	r1, r7, #512
 6007 00c4 2046     		mov	r0, r4
 6008 00c6 FFF7FEFF 		bl	GPIO_WriteBits
 6009              	.LVL534:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6010              		.loc 1 54 2 is_stmt 0 view .LVU1868
 6011 00ca 284B     		ldr	r3, .L337+12
 6012 00cc AB42     		cmp	r3, r5
 6013 00ce F0D1     		bne	.L322
 6014              	.LBE567:
 6015              	.LBE571:
 6016              	.LBE574:
 6017              	.LBE577:
 229:../USER/vramdisp.c ****     xerr+=delta_x ; yerr+=delta_y ;
 6018              		.loc 1 229 9 view .LVU1869
 6019 00d0 DDE90373 		ldrd	r7, r3, [sp, #12]
 6020 00d4 9844     		add	r8, r8, r3
 6021              	.LVL535:
 6022              		.loc 1 229 25 view .LVU1870
 6023 00d6 059B     		ldr	r3, [sp, #20]
 6024              	.LBB578:
 6025              	.LBB575:
 6026              	.LBB572:
 6027              	.LBB568:
  59:../USER/vramdisp.c **** }
 6028              		.loc 1 59 2 view .LVU1871
 6029 00d8 0021     		movs	r1, #0
 6030 00da 2046     		mov	r0, r4
 6031              	.LBE568:
 6032              	.LBE572:
 6033              	.LBE575:
 6034              	.LBE578:
 6035              		.loc 1 229 25 view .LVU1872
 6036 00dc 1F44     		add	r7, r7, r3
 6037              	.LBB579:
 6038              	.LBB576:
 6039              	.LBB573:
 6040              	.LBB569:
  59:../USER/vramdisp.c **** }
 6041              		.loc 1 59 2 view .LVU1873
 6042 00de FFF7FEFF 		bl	GPIO_WriteBits
 6043              	.LVL536:
  59:../USER/vramdisp.c **** }
 6044              		.loc 1 59 2 view .LVU1874
 6045              	.LBE569:
 6046              	.LBE573:
 6047              	.LBE576:
 6048              	.LBE579:
 6049              		.loc 1 229 5 is_stmt 1 view .LVU1875
 6050              		.loc 1 229 21 view .LVU1876
 230:../USER/vramdisp.c ****     if(xerr>distance) { xerr-=distance; uRow+=incx; }
 6051              		.loc 1 230 5 view .LVU1877
 6052              		.loc 1 230 7 is_stmt 0 view .LVU1878
 6053 00e2 C845     		cmp	r8, r9
 6054 00e4 03DD     		ble	.L323
 6055              		.loc 1 230 25 is_stmt 1 discriminator 1 view .LVU1879
 6056              		.loc 1 230 45 is_stmt 0 discriminator 1 view .LVU1880
 6057 00e6 099B     		ldr	r3, [sp, #36]
 6058              		.loc 1 230 29 discriminator 1 view .LVU1881
 6059 00e8 A8EB0908 		sub	r8, r8, r9
 6060              	.LVL537:
 6061              		.loc 1 230 41 is_stmt 1 discriminator 1 view .LVU1882
 6062              		.loc 1 230 45 is_stmt 0 discriminator 1 view .LVU1883
 6063 00ec 9A44     		add	r10, r10, r3
 6064              	.LVL538:
 6065              	.L323:
 231:../USER/vramdisp.c ****     if(yerr>distance) { yerr-=distance; uCol+=incy; }
 6066              		.loc 1 231 5 is_stmt 1 view .LVU1884
 6067              		.loc 1 231 7 is_stmt 0 view .LVU1885
 6068 00ee 4F45     		cmp	r7, r9
 6069 00f0 05DD     		ble	.L324
 6070              		.loc 1 231 25 is_stmt 1 discriminator 1 view .LVU1886
 6071              		.loc 1 231 45 is_stmt 0 discriminator 1 view .LVU1887
 6072 00f2 019B     		ldr	r3, [sp, #4]
 6073 00f4 089A     		ldr	r2, [sp, #32]
 6074              		.loc 1 231 29 discriminator 1 view .LVU1888
 6075 00f6 A7EB0907 		sub	r7, r7, r9
 6076              	.LVL539:
 6077              		.loc 1 231 41 is_stmt 1 discriminator 1 view .LVU1889
 6078              		.loc 1 231 45 is_stmt 0 discriminator 1 view .LVU1890
 6079 00fa 1344     		add	r3, r3, r2
 6080 00fc 0193     		str	r3, [sp, #4]
 6081              	.LVL540:
 6082              	.L324:
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6083              		.loc 1 227 26 discriminator 2 view .LVU1891
 6084 00fe 029B     		ldr	r3, [sp, #8]
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6085              		.loc 1 227 3 discriminator 2 view .LVU1892
 6086 0100 069A     		ldr	r2, [sp, #24]
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6087              		.loc 1 227 26 discriminator 2 view .LVU1893
 6088 0102 0133     		adds	r3, r3, #1
 6089 0104 9BB2     		uxth	r3, r3
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6090              		.loc 1 227 3 discriminator 2 view .LVU1894
 6091 0106 9342     		cmp	r3, r2
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6092              		.loc 1 227 26 discriminator 2 view .LVU1895
 6093 0108 0293     		str	r3, [sp, #8]
 6094              	.LVL541:
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6095              		.loc 1 227 3 discriminator 2 view .LVU1896
 6096 010a A1DD     		ble	.L325
 6097              	.LVL542:
 6098              	.L314:
 232:../USER/vramdisp.c ****   }
 233:../USER/vramdisp.c **** }
 6099              		.loc 1 233 1 view .LVU1897
 6100 010c 0BB0     		add	sp, sp, #44
 6101              		.cfi_remember_state
 6102              		.cfi_def_cfa_offset 36
 6103              		@ sp needed
 6104 010e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6105              	.LVL543:
 6106              	.L316:
 6107              		.cfi_restore_state
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 6108              		.loc 1 222 3 is_stmt 1 view .LVU1898
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 6109              		.loc 1 222 5 is_stmt 0 view .LVU1899
 6110 0112 5A1A     		subs	r2, r3, r1
 6111              	.LVL544:
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 6112              		.loc 1 222 5 view .LVU1900
 6113 0114 002A     		cmp	r2, #0
 6114 0116 19DC     		bgt	.L327
 220:../USER/vramdisp.c ****   else {incx=-1;delta_x=-delta_x;}
 6115              		.loc 1 220 26 view .LVU1901
 6116 0118 0994     		str	r4, [sp, #36]
 6117              	.LVL545:
 6118              	.L328:
 223:../USER/vramdisp.c ****   else{incy=-1;delta_y=-delta_y;}
 6119              		.loc 1 223 8 is_stmt 1 view .LVU1902
 223:../USER/vramdisp.c ****   else{incy=-1;delta_y=-delta_y;}
 6120              		.loc 1 223 10 is_stmt 0 view .LVU1903
 6121 011a 5A1A     		subs	r2, r3, r1
 6122 011c 6AB1     		cbz	r2, .L318
 224:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 6123              		.loc 1 224 8 is_stmt 1 view .LVU1904
 6124              	.LVL546:
 224:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 6125              		.loc 1 224 16 view .LVU1905
 224:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 6126              		.loc 1 224 23 is_stmt 0 view .LVU1906
 6127 011e CB1A     		subs	r3, r1, r3
 6128              	.LVL547:
 224:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 6129              		.loc 1 224 23 view .LVU1907
 6130 0120 0593     		str	r3, [sp, #20]
 6131              	.LVL548:
 224:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 6132              		.loc 1 224 12 view .LVU1908
 6133 0122 4FF0FF33 		mov	r3, #-1
 6134              	.LVL549:
 224:../USER/vramdisp.c ****   if( delta_x>delta_y)distance=delta_x;
 6135              		.loc 1 224 12 view .LVU1909
 6136 0126 0893     		str	r3, [sp, #32]
 6137 0128 80E7     		b	.L317
 6138              	.LVL550:
 6139              	.L336:
 220:../USER/vramdisp.c ****   else {incx=-1;delta_x=-delta_x;}
 6140              		.loc 1 220 8 is_stmt 1 view .LVU1910
 220:../USER/vramdisp.c ****   else {incx=-1;delta_x=-delta_x;}
 6141              		.loc 1 220 10 is_stmt 0 view .LVU1911
 6142 012a F2D0     		beq	.L316
 221:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 6143              		.loc 1 221 9 is_stmt 1 view .LVU1912
 6144              	.LVL551:
 221:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 6145              		.loc 1 221 17 view .LVU1913
 221:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 6146              		.loc 1 221 24 is_stmt 0 view .LVU1914
 6147 012c AAEB0202 		sub	r2, r10, r2
 6148              	.LVL552:
 221:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 6149              		.loc 1 221 24 view .LVU1915
 6150 0130 0492     		str	r2, [sp, #16]
 6151              	.LVL553:
 221:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 6152              		.loc 1 221 13 view .LVU1916
 6153 0132 4FF0FF32 		mov	r2, #-1
 6154              	.LVL554:
 221:../USER/vramdisp.c ****   if(delta_y>0)incy=1;
 6155              		.loc 1 221 13 view .LVU1917
 6156 0136 0992     		str	r2, [sp, #36]
 6157 0138 73E7     		b	.L315
 6158              	.LVL555:
 6159              	.L318:
 225:../USER/vramdisp.c ****   else distance=delta_y;
 6160              		.loc 1 225 3 is_stmt 1 view .LVU1918
 6161 013a 049B     		ldr	r3, [sp, #16]
 6162              	.LVL556:
 225:../USER/vramdisp.c ****   else distance=delta_y;
 6163              		.loc 1 225 3 is_stmt 0 view .LVU1919
 6164 013c 23EAE379 		bic	r9, r3, r3, asr #31
 6165              	.LVL557:
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6166              		.loc 1 227 3 is_stmt 1 view .LVU1920
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6167              		.loc 1 227 22 is_stmt 0 view .LVU1921
 6168 0140 09F10103 		add	r3, r9, #1
 6169 0144 0693     		str	r3, [sp, #24]
 223:../USER/vramdisp.c ****   else{incy=-1;delta_y=-delta_y;}
 6170              		.loc 1 223 26 view .LVU1922
 6171 0146 059B     		ldr	r3, [sp, #20]
 6172 0148 0893     		str	r3, [sp, #32]
 6173 014a 78E7     		b	.L319
 6174              	.LVL558:
 6175              	.L327:
 225:../USER/vramdisp.c ****   else distance=delta_y;
 6176              		.loc 1 225 3 is_stmt 1 view .LVU1923
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6177              		.loc 1 227 3 view .LVU1924
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6178              		.loc 1 227 22 is_stmt 0 view .LVU1925
 6179 014c 059B     		ldr	r3, [sp, #20]
 6180              	.LVL559:
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6181              		.loc 1 227 22 view .LVU1926
 6182 014e 5A1C     		adds	r2, r3, #1
 6183 0150 9946     		mov	r9, r3
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 6184              		.loc 1 222 20 view .LVU1927
 6185 0152 0123     		movs	r3, #1
 227:../USER/vramdisp.c **** 	pset(uRow,uCol,ptn);
 6186              		.loc 1 227 22 view .LVU1928
 6187 0154 0692     		str	r2, [sp, #24]
 220:../USER/vramdisp.c ****   else {incx=-1;delta_x=-delta_x;}
 6188              		.loc 1 220 26 view .LVU1929
 6189 0156 049A     		ldr	r2, [sp, #16]
 222:../USER/vramdisp.c ****   else if(delta_y==0)incy=0;
 6190              		.loc 1 222 20 view .LVU1930
 6191 0158 0893     		str	r3, [sp, #32]
 220:../USER/vramdisp.c ****   else {incx=-1;delta_x=-delta_x;}
 6192              		.loc 1 220 26 view .LVU1931
 6193 015a 0992     		str	r2, [sp, #36]
 6194 015c 6FE7     		b	.L319
 6195              	.L338:
 6196 015e 00BF     		.align	2
 6197              	.L337:
 6198 0160 00000000 		.word	pd
 6199 0164 00000140 		.word	1073807360
 6200 0168 FFFFFFFF 		.word	wddt-1
 6201 016c 06000000 		.word	wddt+6
 6202 0170 00000000 		.word	wddt
 6203              		.cfi_endproc
 6204              	.LFE46:
 6206              		.section	.text.DrawRectangle,"ax",%progbits
 6207              		.align	1
 6208              		.p2align 2,,3
 6209              		.global	DrawRectangle
 6210              		.syntax unified
 6211              		.thumb
 6212              		.thumb_func
 6213              		.fpu softvfp
 6215              	DrawRectangle:
 6216              	.LVL560:
 6217              	.LFB47:
 234:../USER/vramdisp.c **** void DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2, u16 ptn) {
 6218              		.loc 1 234 61 is_stmt 1 view -0
 6219              		.cfi_startproc
 6220              		@ args = 4, pretend = 0, frame = 0
 6221              		@ frame_needed = 0, uses_anonymous_args = 0
 235:../USER/vramdisp.c ****   DLine(x1,y1,x2,y1,ptn); DLine(x1,y1,x1,y2,ptn);
 6222              		.loc 1 235 3 view .LVU1933
 234:../USER/vramdisp.c **** void DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2, u16 ptn) {
 6223              		.loc 1 234 61 is_stmt 0 view .LVU1934
 6224 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6225              		.cfi_def_cfa_offset 24
 6226              		.cfi_offset 4, -24
 6227              		.cfi_offset 5, -20
 6228              		.cfi_offset 6, -16
 6229              		.cfi_offset 7, -12
 6230              		.cfi_offset 8, -8
 6231              		.cfi_offset 14, -4
 6232 0004 1C46     		mov	r4, r3
 6233 0006 0746     		mov	r7, r0
 6234 0008 0E46     		mov	r6, r1
 6235 000a 9046     		mov	r8, r2
 6236 000c 82B0     		sub	sp, sp, #8
 6237              		.cfi_def_cfa_offset 32
 234:../USER/vramdisp.c **** void DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2, u16 ptn) {
 6238              		.loc 1 234 61 view .LVU1935
 6239 000e BDF82050 		ldrh	r5, [sp, #32]
 6240              		.loc 1 235 3 view .LVU1936
 6241 0012 0B46     		mov	r3, r1
 6242              	.LVL561:
 6243              		.loc 1 235 3 view .LVU1937
 6244 0014 0095     		str	r5, [sp]
 6245 0016 FFF7FEFF 		bl	DLine
 6246              	.LVL562:
 6247              		.loc 1 235 27 is_stmt 1 view .LVU1938
 6248 001a 2346     		mov	r3, r4
 6249 001c 3A46     		mov	r2, r7
 6250 001e 3146     		mov	r1, r6
 6251 0020 3846     		mov	r0, r7
 6252 0022 0095     		str	r5, [sp]
 6253 0024 FFF7FEFF 		bl	DLine
 6254              	.LVL563:
 236:../USER/vramdisp.c ****   DLine(x1,y2,x2,y2,ptn); DLine(x2,y1,x2,y2,ptn);
 6255              		.loc 1 236 3 view .LVU1939
 6256 0028 3846     		mov	r0, r7
 6257 002a 2346     		mov	r3, r4
 6258 002c 4246     		mov	r2, r8
 6259 002e 2146     		mov	r1, r4
 6260 0030 0095     		str	r5, [sp]
 6261 0032 FFF7FEFF 		bl	DLine
 6262              	.LVL564:
 6263              		.loc 1 236 27 view .LVU1940
 6264 0036 2346     		mov	r3, r4
 6265 0038 3146     		mov	r1, r6
 6266 003a 4246     		mov	r2, r8
 6267 003c 4046     		mov	r0, r8
 6268 003e 0895     		str	r5, [sp, #32]
 6269              	.LVL565:
 237:../USER/vramdisp.c **** }
 6270              		.loc 1 237 1 is_stmt 0 view .LVU1941
 6271 0040 02B0     		add	sp, sp, #8
 6272              		.cfi_def_cfa_offset 24
 6273              		@ sp needed
 6274 0042 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 6275              		.cfi_restore 14
 6276              		.cfi_restore 8
 6277              		.cfi_restore 7
 6278              		.cfi_restore 6
 6279              		.cfi_restore 5
 6280              		.cfi_restore 4
 6281              		.cfi_def_cfa_offset 0
 236:../USER/vramdisp.c ****   DLine(x1,y2,x2,y2,ptn); DLine(x2,y1,x2,y2,ptn);
 6282              		.loc 1 236 27 view .LVU1942
 6283 0046 FFF7FEBF 		b	DLine
 6284              	.LVL566:
 6285              		.cfi_endproc
 6286              	.LFE47:
 6288 004a 00BF     		.section	.text.point,"ax",%progbits
 6289              		.align	1
 6290              		.p2align 2,,3
 6291              		.global	point
 6292              		.syntax unified
 6293              		.thumb
 6294              		.thumb_func
 6295              		.fpu softvfp
 6297              	point:
 6298              	.LVL567:
 6299              	.LFB48:
 238:../USER/vramdisp.c **** 
 239:../USER/vramdisp.c **** #define MAXSIZE 256 // Seed Size MAX
 240:../USER/vramdisp.c **** #define MINX 0
 241:../USER/vramdisp.c **** #define MINY 0
 242:../USER/vramdisp.c **** #define MAXX 640
 243:../USER/vramdisp.c **** #define MAXY 360
 244:../USER/vramdisp.c **** 
 245:../USER/vramdisp.c **** struct BufStr { u16 sx; u16 sy; };
 246:../USER/vramdisp.c **** //struct BufStr buff[MAXSIZE]; // Seed Buf
 247:../USER/vramdisp.c **** struct BufStr *buff = (struct BufStr *)&aryex[0]; // Seed Buf
 248:../USER/vramdisp.c **** struct BufStr *sIdx, *eIdx;  // Seed Buf Poiner
 249:../USER/vramdisp.c **** 
 250:../USER/vramdisp.c **** u16 point( u16 x, u16 y ){ return pget(x,y); }
 6300              		.loc 1 250 26 is_stmt 1 view -0
 6301              		.cfi_startproc
 6302              		@ args = 0, pretend = 0, frame = 0
 6303              		@ frame_needed = 0, uses_anonymous_args = 0
 6304              		.loc 1 250 28 view .LVU1944
 6305              	.LBB588:
 6306              	.LBI588:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 6307              		.loc 1 180 5 view .LVU1945
 6308              	.LBB589:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 6309              		.loc 1 181 2 view .LVU1946
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6310              		.loc 1 182 2 view .LVU1947
 6311              	.LBB590:
 6312              	.LBB591:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6313              		.loc 1 19 15 is_stmt 0 view .LVU1948
 6314 0000 01EB8101 		add	r1, r1, r1, lsl #2
 6315              	.LVL568:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6316              		.loc 1 19 15 view .LVU1949
 6317              	.LBE591:
 6318              	.LBE590:
 6319              	.LBE589:
 6320              	.LBE588:
 6321              		.loc 1 250 26 view .LVU1950
 6322 0004 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 6323              		.cfi_def_cfa_offset 32
 6324              		.cfi_offset 3, -32
 6325              		.cfi_offset 4, -28
 6326              		.cfi_offset 5, -24
 6327              		.cfi_offset 6, -20
 6328              		.cfi_offset 7, -16
 6329              		.cfi_offset 8, -12
 6330              		.cfi_offset 9, -8
 6331              		.cfi_offset 14, -4
 6332              	.LBB607:
 6333              	.LBB606:
 6334              	.LBB596:
 6335              	.LBB592:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6336              		.loc 1 19 15 view .LVU1951
 6337 0008 CC00     		lsls	r4, r1, #3
 6338              	.LBE592:
 6339              	.LBE596:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6340              		.loc 1 182 12 view .LVU1952
 6341 000a 384D     		ldr	r5, .L351
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6342              		.loc 1 182 17 view .LVU1953
 6343 000c 00F00F03 		and	r3, r0, #15
 6344              	.LBB597:
 6345              	.LBB593:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6346              		.loc 1 19 18 view .LVU1954
 6347 0010 04EB1014 		add	r4, r4, r0, lsr #4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6348              		.loc 1 20 2 view .LVU1955
 6349 0014 0021     		movs	r1, #0
 6350 0016 3648     		ldr	r0, .L351+4
 6351              	.LVL569:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6352              		.loc 1 20 2 view .LVU1956
 6353              	.LBE593:
 6354              	.LBE597:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6355              		.loc 1 182 12 view .LVU1957
 6356 0018 2B71     		strb	r3, [r5, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 6357              		.loc 1 183 2 is_stmt 1 view .LVU1958
 6358              	.LVL570:
 6359              	.LBB598:
 6360              	.LBI590:
  17:../USER/vramdisp.c **** 	int adr;
 6361              		.loc 1 17 6 view .LVU1959
 6362              	.LBB594:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 6363              		.loc 1 18 2 view .LVU1960
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6364              		.loc 1 19 2 view .LVU1961
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6365              		.loc 1 20 2 is_stmt 0 view .LVU1962
 6366 001a FFF7FEFF 		bl	GPIO_WriteBits
 6367              	.LVL571:
 6368 001e 354E     		ldr	r6, .L351+8
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6369              		.loc 1 21 10 view .LVU1963
 6370 0020 334F     		ldr	r7, .L351+4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6371              		.loc 1 19 6 view .LVU1964
 6372 0022 6401     		lsls	r4, r4, #5
 6373              	.LVL572:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6374              		.loc 1 20 2 is_stmt 1 view .LVU1965
 6375              	.L342:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6376              		.loc 1 21 2 view .LVU1966
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6377              		.loc 1 21 5 view .LVU1967
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6378              		.loc 1 21 10 is_stmt 0 view .LVU1968
 6379 0024 3846     		mov	r0, r7
 6380 0026 FFF7FEFF 		bl	GPIO_ReadBits
 6381              	.LVL573:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6382              		.loc 1 21 8 view .LVU1969
 6383 002a C0B2     		uxtb	r0, r0
 6384 002c 3070     		strb	r0, [r6]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6385              		.loc 1 21 44 view .LVU1970
 6386 002e 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6387              		.loc 1 21 2 view .LVU1971
 6388 0030 11F00101 		ands	r1, r1, #1
 6389 0034 F6D1     		bne	.L342
  22:../USER/vramdisp.c **** }
 6390              		.loc 1 22 2 is_stmt 1 view .LVU1972
 6391              	.LBE594:
 6392              	.LBE598:
 6393              	.LBB599:
 6394              	.LBB600:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6395              		.loc 1 51 2 is_stmt 0 view .LVU1973
 6396 0036 2E48     		ldr	r0, .L351+4
 6397              	.LBE600:
 6398              	.LBE599:
 6399              	.LBB602:
 6400              	.LBB595:
  22:../USER/vramdisp.c **** }
 6401              		.loc 1 22 12 view .LVU1974
 6402 0038 2C60     		str	r4, [r5]
 6403              	.LVL574:
  22:../USER/vramdisp.c **** }
 6404              		.loc 1 22 12 view .LVU1975
 6405              	.LBE595:
 6406              	.LBE602:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 6407              		.loc 1 184 2 is_stmt 1 view .LVU1976
 6408              	.LBB603:
 6409              	.LBI599:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 6410              		.loc 1 49 6 view .LVU1977
 6411              	.LBB601:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6412              		.loc 1 50 2 view .LVU1978
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6413              		.loc 1 51 2 view .LVU1979
 6414 003a FFF7FEFF 		bl	GPIO_WriteBits
 6415              	.LVL575:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6416              		.loc 1 52 10 is_stmt 0 view .LVU1980
 6417 003e 2C4C     		ldr	r4, .L351+4
 6418              	.L343:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6419              		.loc 1 52 2 is_stmt 1 view .LVU1981
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6420              		.loc 1 52 5 view .LVU1982
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6421              		.loc 1 52 10 is_stmt 0 view .LVU1983
 6422 0040 2046     		mov	r0, r4
 6423 0042 FFF7FEFF 		bl	GPIO_ReadBits
 6424              	.LVL576:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6425              		.loc 1 52 8 view .LVU1984
 6426 0046 C0B2     		uxtb	r0, r0
 6427 0048 3070     		strb	r0, [r6]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6428              		.loc 1 52 44 view .LVU1985
 6429 004a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6430              		.loc 1 52 2 view .LVU1986
 6431 004c DB07     		lsls	r3, r3, #31
 6432 004e F7D4     		bmi	.L343
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 6433              		.loc 1 53 2 is_stmt 1 view .LVU1987
 6434 0050 4FF40071 		mov	r1, #512
 6435 0054 2648     		ldr	r0, .L351+4
 6436 0056 FFF7FEFF 		bl	GPIO_WriteBits
 6437              	.LVL577:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6438              		.loc 1 54 2 view .LVU1988
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6439              		.loc 1 54 2 is_stmt 0 view .LVU1989
 6440 005a 244C     		ldr	r4, .L351
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 6441              		.loc 1 56 3 view .LVU1990
 6442 005c 244F     		ldr	r7, .L351+4
 6443 005e 04F10509 		add	r9, r4, #5
 6444              	.LVL578:
 6445              	.L344:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 6446              		.loc 1 55 3 is_stmt 1 view .LVU1991
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 6447              		.loc 1 55 6 is_stmt 0 view .LVU1992
 6448 0062 14F8018B 		ldrb	r8, [r4], #1	@ zero_extendqisi2
 6449              	.LVL579:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 6450              		.loc 1 56 3 is_stmt 1 view .LVU1993
 6451 0066 3846     		mov	r0, r7
 6452 0068 08F54071 		add	r1, r8, #768
 6453 006c FFF7FEFF 		bl	GPIO_WriteBits
 6454              	.LVL580:
  57:../USER/vramdisp.c **** 	}
 6455              		.loc 1 57 3 view .LVU1994
 6456 0070 08F50071 		add	r1, r8, #512
 6457 0074 3846     		mov	r0, r7
 6458 0076 FFF7FEFF 		bl	GPIO_WriteBits
 6459              	.LVL581:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6460              		.loc 1 54 2 is_stmt 0 view .LVU1995
 6461 007a A145     		cmp	r9, r4
 6462 007c F1D1     		bne	.L344
  59:../USER/vramdisp.c **** }
 6463              		.loc 1 59 2 is_stmt 1 view .LVU1996
 6464 007e 0021     		movs	r1, #0
 6465 0080 1B48     		ldr	r0, .L351+4
 6466 0082 FFF7FEFF 		bl	GPIO_WriteBits
 6467              	.LVL582:
  59:../USER/vramdisp.c **** }
 6468              		.loc 1 59 2 is_stmt 0 view .LVU1997
 6469              	.LBE601:
 6470              	.LBE603:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 6471              		.loc 1 185 2 is_stmt 1 view .LVU1998
 6472              	.LBB604:
 6473              	.LBI604:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 6474              		.loc 1 24 6 view .LVU1999
 6475              	.LBB605:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6476              		.loc 1 25 2 view .LVU2000
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6477              		.loc 1 26 2 view .LVU2001
 6478 0086 0021     		movs	r1, #0
 6479 0088 1948     		ldr	r0, .L351+4
 6480 008a FFF7FEFF 		bl	GPIO_WriteBits
 6481              	.LVL583:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6482              		.loc 1 27 10 is_stmt 0 view .LVU2002
 6483 008e 184F     		ldr	r7, .L351+4
 6484              	.L345:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6485              		.loc 1 27 2 is_stmt 1 view .LVU2003
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6486              		.loc 1 27 5 view .LVU2004
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6487              		.loc 1 27 10 is_stmt 0 view .LVU2005
 6488 0090 3846     		mov	r0, r7
 6489 0092 FFF7FEFF 		bl	GPIO_ReadBits
 6490              	.LVL584:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6491              		.loc 1 27 8 view .LVU2006
 6492 0096 C0B2     		uxtb	r0, r0
 6493 0098 3070     		strb	r0, [r6]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6494              		.loc 1 27 44 view .LVU2007
 6495 009a 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6496              		.loc 1 27 2 view .LVU2008
 6497 009c 14F00104 		ands	r4, r4, #1
 6498 00a0 F6D1     		bne	.L345
 6499              	.LVL585:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 6500              		.loc 1 29 3 is_stmt 1 view .LVU2009
 6501 00a2 4FF48071 		mov	r1, #256
 6502 00a6 1248     		ldr	r0, .L351+4
 6503 00a8 FFF7FEFF 		bl	GPIO_WriteBits
 6504              	.LVL586:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6505              		.loc 1 30 3 view .LVU2010
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6506              		.loc 1 30 17 is_stmt 0 view .LVU2011
 6507 00ac 1048     		ldr	r0, .L351+4
 6508 00ae FFF7FEFF 		bl	GPIO_ReadBits
 6509              	.LVL587:
  31:../USER/vramdisp.c **** 	}
 6510              		.loc 1 31 3 view .LVU2012
 6511 00b2 2146     		mov	r1, r4
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6512              		.loc 1 30 15 view .LVU2013
 6513 00b4 2871     		strb	r0, [r5, #4]
  31:../USER/vramdisp.c **** 	}
 6514              		.loc 1 31 3 is_stmt 1 view .LVU2014
 6515 00b6 0E48     		ldr	r0, .L351+4
 6516 00b8 FFF7FEFF 		bl	GPIO_WriteBits
 6517              	.LVL588:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 6518              		.loc 1 29 3 view .LVU2015
 6519 00bc 4FF48071 		mov	r1, #256
 6520 00c0 0B48     		ldr	r0, .L351+4
 6521 00c2 FFF7FEFF 		bl	GPIO_WriteBits
 6522              	.LVL589:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6523              		.loc 1 30 3 view .LVU2016
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6524              		.loc 1 30 17 is_stmt 0 view .LVU2017
 6525 00c6 0A48     		ldr	r0, .L351+4
 6526 00c8 FFF7FEFF 		bl	GPIO_ReadBits
 6527              	.LVL590:
  31:../USER/vramdisp.c **** 	}
 6528              		.loc 1 31 3 view .LVU2018
 6529 00cc 2146     		mov	r1, r4
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6530              		.loc 1 30 15 view .LVU2019
 6531 00ce 6871     		strb	r0, [r5, #5]
  31:../USER/vramdisp.c **** 	}
 6532              		.loc 1 31 3 is_stmt 1 view .LVU2020
 6533 00d0 0748     		ldr	r0, .L351+4
 6534 00d2 FFF7FEFF 		bl	GPIO_WriteBits
 6535              	.LVL591:
  33:../USER/vramdisp.c **** 
 6536              		.loc 1 33 2 view .LVU2021
 6537 00d6 2146     		mov	r1, r4
 6538 00d8 0548     		ldr	r0, .L351+4
 6539 00da FFF7FEFF 		bl	GPIO_WriteBits
 6540              	.LVL592:
  33:../USER/vramdisp.c **** 
 6541              		.loc 1 33 2 is_stmt 0 view .LVU2022
 6542              	.LBE605:
 6543              	.LBE604:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 6544              		.loc 1 186 2 is_stmt 1 view .LVU2023
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 6545              		.loc 1 186 23 view .LVU2024
 187:../USER/vramdisp.c **** }
 6546              		.loc 1 187 2 view .LVU2025
 187:../USER/vramdisp.c **** }
 6547              		.loc 1 187 9 is_stmt 0 view .LVU2026
 6548 00de 6879     		ldrb	r0, [r5, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 6549              		.loc 1 187 20 view .LVU2027
 6550 00e0 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 6551              	.LBE606:
 6552              	.LBE607:
 6553              		.loc 1 250 1 view .LVU2028
 6554 00e2 43EA0020 		orr	r0, r3, r0, lsl #8
 6555 00e6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6556              	.L352:
 6557 00ea 00BF     		.align	2
 6558              	.L351:
 6559 00ec 00000000 		.word	wddt
 6560 00f0 00000140 		.word	1073807360
 6561 00f4 00000000 		.word	pd
 6562              		.cfi_endproc
 6563              	.LFE48:
 6565              		.section	.text.scanLine,"ax",%progbits
 6566              		.align	1
 6567              		.p2align 2,,3
 6568              		.global	scanLine
 6569              		.syntax unified
 6570              		.thumb
 6571              		.thumb_func
 6572              		.fpu softvfp
 6574              	scanLine:
 6575              	.LVL593:
 6576              	.LFB49:
 251:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6577              		.loc 1 251 48 is_stmt 1 view -0
 6578              		.cfi_startproc
 6579              		@ args = 0, pretend = 0, frame = 32
 6580              		@ frame_needed = 0, uses_anonymous_args = 0
 6581              		.loc 1 251 48 is_stmt 0 view .LVU2030
 6582 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6583              		.cfi_def_cfa_offset 36
 6584              		.cfi_offset 4, -36
 6585              		.cfi_offset 5, -32
 6586              		.cfi_offset 6, -28
 6587              		.cfi_offset 7, -24
 6588              		.cfi_offset 8, -20
 6589              		.cfi_offset 9, -16
 6590              		.cfi_offset 10, -12
 6591              		.cfi_offset 11, -8
 6592              		.cfi_offset 14, -4
 252:../USER/vramdisp.c ****   while ( lx <= rx ) {
 6593              		.loc 1 252 9 view .LVU2031
 6594 0004 8842     		cmp	r0, r1
 251:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6595              		.loc 1 251 48 view .LVU2032
 6596 0006 89B0     		sub	sp, sp, #36
 6597              		.cfi_def_cfa_offset 72
 251:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6598              		.loc 1 251 48 view .LVU2033
 6599 0008 0291     		str	r1, [sp, #8]
 6600 000a 0792     		str	r2, [sp, #28]
 6601 000c 0493     		str	r3, [sp, #16]
 6602              		.loc 1 252 3 is_stmt 1 view .LVU2034
 6603              		.loc 1 252 9 is_stmt 0 view .LVU2035
 6604 000e 00F29081 		bhi	.L353
 6605 0012 8346     		mov	fp, r0
 6606 0014 D14E     		ldr	r6, .L397
 6607              	.LBB638:
 6608              	.LBB639:
 6609              	.LBB640:
 6610              	.LBB641:
 6611              	.LBB642:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6612              		.loc 1 19 15 view .LVU2036
 6613 0016 02EB8203 		add	r3, r2, r2, lsl #2
 6614              	.LVL594:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6615              		.loc 1 19 15 view .LVU2037
 6616 001a DB00     		lsls	r3, r3, #3
 6617 001c D04D     		ldr	r5, .L397+4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6618              		.loc 1 20 2 view .LVU2038
 6619 001e D14C     		ldr	r4, .L397+8
 6620 0020 0196     		str	r6, [sp, #4]
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6621              		.loc 1 19 15 view .LVU2039
 6622 0022 0693     		str	r3, [sp, #24]
 6623              	.LVL595:
 6624              	.L360:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6625              		.loc 1 19 15 view .LVU2040
 6626              	.LBE642:
 6627              	.LBE641:
 6628              	.LBE640:
 6629              	.LBE639:
 6630              	.LBE638:
 253:../USER/vramdisp.c ****     for ( ; lx <= rx ; lx++ ) if ( point( lx, y ) == col ) break;
 6631              		.loc 1 253 31 is_stmt 1 view .LVU2041
 6632              	.LBB663:
 6633              	.LBI638:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6634              		.loc 1 250 5 view .LVU2042
 6635              	.LBE663:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6636              		.loc 1 250 28 view .LVU2043
 6637              	.LBB664:
 6638              	.LBB662:
 6639              	.LBI639:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 6640              		.loc 1 180 5 view .LVU2044
 6641              	.LBB661:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 6642              		.loc 1 181 2 view .LVU2045
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6643              		.loc 1 182 2 view .LVU2046
 6644              	.LBB649:
 6645              	.LBB643:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6646              		.loc 1 19 18 is_stmt 0 view .LVU2047
 6647 0024 069B     		ldr	r3, [sp, #24]
 6648              	.LBE643:
 6649              	.LBE649:
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 6650              		.loc 1 183 2 view .LVU2048
 6651 0026 4FEA1B17 		lsr	r7, fp, #4
 6652 002a 1FFA87F8 		uxth	r8, r7
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6653              		.loc 1 182 17 view .LVU2049
 6654 002e 0BF00F0A 		and	r10, fp, #15
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6655              		.loc 1 182 12 view .LVU2050
 6656 0032 019A     		ldr	r2, [sp, #4]
 6657              	.LBB650:
 6658              	.LBB644:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6659              		.loc 1 19 18 view .LVU2051
 6660 0034 9844     		add	r8, r8, r3
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6661              		.loc 1 20 2 view .LVU2052
 6662 0036 0021     		movs	r1, #0
 6663              	.LBE644:
 6664              	.LBE650:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6665              		.loc 1 182 17 view .LVU2053
 6666 0038 5FFA8AF3 		uxtb	r3, r10
 6667              	.LBB651:
 6668              	.LBB645:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6669              		.loc 1 20 2 view .LVU2054
 6670 003c 2046     		mov	r0, r4
 6671              	.LBE645:
 6672              	.LBE651:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6673              		.loc 1 182 17 view .LVU2055
 6674 003e 0593     		str	r3, [sp, #20]
 6675              	.LBB652:
 6676              	.LBB646:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6677              		.loc 1 19 6 view .LVU2056
 6678 0040 4FEA4818 		lsl	r8, r8, #5
 6679              	.LBE646:
 6680              	.LBE652:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6681              		.loc 1 182 12 view .LVU2057
 6682 0044 1371     		strb	r3, [r2, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 6683              		.loc 1 183 2 is_stmt 1 view .LVU2058
 6684              	.LVL596:
 6685              	.LBB653:
 6686              	.LBI641:
  17:../USER/vramdisp.c **** 	int adr;
 6687              		.loc 1 17 6 view .LVU2059
 6688              	.LBB647:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 6689              		.loc 1 18 2 view .LVU2060
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6690              		.loc 1 19 2 view .LVU2061
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6691              		.loc 1 20 2 view .LVU2062
 6692 0046 FFF7FEFF 		bl	GPIO_WriteBits
 6693              	.LVL597:
 6694              	.L355:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6695              		.loc 1 21 2 view .LVU2063
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6696              		.loc 1 21 5 view .LVU2064
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6697              		.loc 1 21 10 is_stmt 0 view .LVU2065
 6698 004a 2046     		mov	r0, r4
 6699 004c FFF7FEFF 		bl	GPIO_ReadBits
 6700              	.LVL598:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6701              		.loc 1 21 8 view .LVU2066
 6702 0050 C0B2     		uxtb	r0, r0
 6703 0052 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6704              		.loc 1 21 44 view .LVU2067
 6705 0054 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6706              		.loc 1 21 2 view .LVU2068
 6707 0056 11F00101 		ands	r1, r1, #1
 6708 005a F6D1     		bne	.L355
  22:../USER/vramdisp.c **** }
 6709              		.loc 1 22 2 is_stmt 1 view .LVU2069
  22:../USER/vramdisp.c **** }
 6710              		.loc 1 22 12 is_stmt 0 view .LVU2070
 6711 005c 019B     		ldr	r3, [sp, #4]
 6712              	.LBE647:
 6713              	.LBE653:
 6714              	.LBB654:
 6715              	.LBB655:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6716              		.loc 1 51 2 view .LVU2071
 6717 005e 2046     		mov	r0, r4
 6718              	.LBE655:
 6719              	.LBE654:
 6720              	.LBB657:
 6721              	.LBB648:
  22:../USER/vramdisp.c **** }
 6722              		.loc 1 22 12 view .LVU2072
 6723 0060 C3F80080 		str	r8, [r3]
 6724              	.LVL599:
  22:../USER/vramdisp.c **** }
 6725              		.loc 1 22 12 view .LVU2073
 6726              	.LBE648:
 6727              	.LBE657:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 6728              		.loc 1 184 2 is_stmt 1 view .LVU2074
 6729              	.LBB658:
 6730              	.LBI654:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 6731              		.loc 1 49 6 view .LVU2075
 6732              	.LBB656:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6733              		.loc 1 50 2 view .LVU2076
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6734              		.loc 1 51 2 view .LVU2077
 6735 0064 FFF7FEFF 		bl	GPIO_WriteBits
 6736              	.LVL600:
 6737              	.L356:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6738              		.loc 1 52 2 view .LVU2078
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6739              		.loc 1 52 5 view .LVU2079
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6740              		.loc 1 52 10 is_stmt 0 view .LVU2080
 6741 0068 2046     		mov	r0, r4
 6742 006a FFF7FEFF 		bl	GPIO_ReadBits
 6743              	.LVL601:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6744              		.loc 1 52 8 view .LVU2081
 6745 006e C0B2     		uxtb	r0, r0
 6746 0070 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6747              		.loc 1 52 44 view .LVU2082
 6748 0072 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6749              		.loc 1 52 2 view .LVU2083
 6750 0074 D907     		lsls	r1, r3, #31
 6751 0076 F7D4     		bmi	.L356
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 6752              		.loc 1 53 2 is_stmt 1 view .LVU2084
 6753 0078 4FF40071 		mov	r1, #512
 6754 007c 2046     		mov	r0, r4
 6755 007e DFF8DC92 		ldr	r9, .L397
 6756 0082 FFF7FEFF 		bl	GPIO_WriteBits
 6757              	.LVL602:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6758              		.loc 1 54 2 view .LVU2085
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 6759              		.loc 1 53 2 is_stmt 0 view .LVU2086
 6760 0086 0196     		str	r6, [sp, #4]
 6761 0088 0397     		str	r7, [sp, #12]
 6762              	.LVL603:
 6763              	.L357:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 6764              		.loc 1 55 3 is_stmt 1 view .LVU2087
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 6765              		.loc 1 55 6 is_stmt 0 view .LVU2088
 6766 008a 19F8017B 		ldrb	r7, [r9], #1	@ zero_extendqisi2
 6767              	.LVL604:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 6768              		.loc 1 56 3 is_stmt 1 view .LVU2089
 6769 008e 2046     		mov	r0, r4
 6770 0090 07F54071 		add	r1, r7, #768
 6771 0094 FFF7FEFF 		bl	GPIO_WriteBits
 6772              	.LVL605:
  57:../USER/vramdisp.c **** 	}
 6773              		.loc 1 57 3 view .LVU2090
 6774 0098 07F50071 		add	r1, r7, #512
 6775 009c 2046     		mov	r0, r4
 6776 009e FFF7FEFF 		bl	GPIO_WriteBits
 6777              	.LVL606:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6778              		.loc 1 54 2 is_stmt 0 view .LVU2091
 6779 00a2 B14B     		ldr	r3, .L397+12
 6780 00a4 4B45     		cmp	r3, r9
 6781 00a6 F0D1     		bne	.L357
  59:../USER/vramdisp.c **** }
 6782              		.loc 1 59 2 view .LVU2092
 6783 00a8 0021     		movs	r1, #0
 6784 00aa 2046     		mov	r0, r4
 6785 00ac 039F     		ldr	r7, [sp, #12]
 6786              	.LVL607:
  59:../USER/vramdisp.c **** }
 6787              		.loc 1 59 2 is_stmt 1 view .LVU2093
 6788 00ae FFF7FEFF 		bl	GPIO_WriteBits
 6789              	.LVL608:
  59:../USER/vramdisp.c **** }
 6790              		.loc 1 59 2 is_stmt 0 view .LVU2094
 6791              	.LBE656:
 6792              	.LBE658:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 6793              		.loc 1 185 2 is_stmt 1 view .LVU2095
 6794              	.LBB659:
 6795              	.LBI659:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 6796              		.loc 1 24 6 view .LVU2096
 6797              	.LBB660:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6798              		.loc 1 25 2 view .LVU2097
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6799              		.loc 1 26 2 view .LVU2098
 6800 00b2 0021     		movs	r1, #0
 6801 00b4 2046     		mov	r0, r4
 6802 00b6 FFF7FEFF 		bl	GPIO_WriteBits
 6803              	.LVL609:
 6804              	.L358:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6805              		.loc 1 27 2 view .LVU2099
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6806              		.loc 1 27 5 view .LVU2100
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6807              		.loc 1 27 10 is_stmt 0 view .LVU2101
 6808 00ba 2046     		mov	r0, r4
 6809 00bc FFF7FEFF 		bl	GPIO_ReadBits
 6810              	.LVL610:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6811              		.loc 1 27 8 view .LVU2102
 6812 00c0 C0B2     		uxtb	r0, r0
 6813 00c2 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6814              		.loc 1 27 44 view .LVU2103
 6815 00c4 95F80090 		ldrb	r9, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 6816              		.loc 1 27 2 view .LVU2104
 6817 00c8 19F00109 		ands	r9, r9, #1
 6818 00cc F5D1     		bne	.L358
 6819              	.LVL611:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 6820              		.loc 1 29 3 is_stmt 1 view .LVU2105
 6821 00ce 4FF48071 		mov	r1, #256
 6822 00d2 2046     		mov	r0, r4
 6823 00d4 FFF7FEFF 		bl	GPIO_WriteBits
 6824              	.LVL612:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6825              		.loc 1 30 3 view .LVU2106
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6826              		.loc 1 30 17 is_stmt 0 view .LVU2107
 6827 00d8 2046     		mov	r0, r4
 6828 00da FFF7FEFF 		bl	GPIO_ReadBits
 6829              	.LVL613:
  31:../USER/vramdisp.c **** 	}
 6830              		.loc 1 31 3 view .LVU2108
 6831 00de 4946     		mov	r1, r9
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6832              		.loc 1 30 15 view .LVU2109
 6833 00e0 3071     		strb	r0, [r6, #4]
  31:../USER/vramdisp.c **** 	}
 6834              		.loc 1 31 3 is_stmt 1 view .LVU2110
 6835 00e2 2046     		mov	r0, r4
 6836 00e4 FFF7FEFF 		bl	GPIO_WriteBits
 6837              	.LVL614:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 6838              		.loc 1 29 3 view .LVU2111
 6839 00e8 4FF48071 		mov	r1, #256
 6840 00ec 2046     		mov	r0, r4
 6841 00ee FFF7FEFF 		bl	GPIO_WriteBits
 6842              	.LVL615:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6843              		.loc 1 30 3 view .LVU2112
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6844              		.loc 1 30 17 is_stmt 0 view .LVU2113
 6845 00f2 2046     		mov	r0, r4
 6846 00f4 FFF7FEFF 		bl	GPIO_ReadBits
 6847              	.LVL616:
  31:../USER/vramdisp.c **** 	}
 6848              		.loc 1 31 3 view .LVU2114
 6849 00f8 4946     		mov	r1, r9
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 6850              		.loc 1 30 15 view .LVU2115
 6851 00fa 7071     		strb	r0, [r6, #5]
  31:../USER/vramdisp.c **** 	}
 6852              		.loc 1 31 3 is_stmt 1 view .LVU2116
 6853 00fc 2046     		mov	r0, r4
 6854 00fe FFF7FEFF 		bl	GPIO_WriteBits
 6855              	.LVL617:
  33:../USER/vramdisp.c **** 
 6856              		.loc 1 33 2 view .LVU2117
 6857 0102 4946     		mov	r1, r9
 6858 0104 2046     		mov	r0, r4
 6859 0106 FFF7FEFF 		bl	GPIO_WriteBits
 6860              	.LVL618:
  33:../USER/vramdisp.c **** 
 6861              		.loc 1 33 2 is_stmt 0 view .LVU2118
 6862              	.LBE660:
 6863              	.LBE659:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 6864              		.loc 1 186 2 is_stmt 1 view .LVU2119
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 6865              		.loc 1 186 23 view .LVU2120
 187:../USER/vramdisp.c **** }
 6866              		.loc 1 187 2 view .LVU2121
 187:../USER/vramdisp.c **** }
 6867              		.loc 1 187 9 is_stmt 0 view .LVU2122
 6868 010a 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 6869              		.loc 1 187 20 view .LVU2123
 6870 010c 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 6871              	.LBE661:
 6872              	.LBE662:
 6873              	.LBE664:
 6874              		.loc 1 253 34 view .LVU2124
 6875 010e 43EA0223 		orr	r3, r3, r2, lsl #8
 6876 0112 049A     		ldr	r2, [sp, #16]
 6877 0114 9A42     		cmp	r2, r3
 6878 0116 13D0     		beq	.L359
 6879              		.loc 1 253 26 discriminator 1 view .LVU2125
 6880 0118 0BF1010B 		add	fp, fp, #1
 6881              	.LVL619:
 6882              		.loc 1 253 5 discriminator 1 view .LVU2126
 6883 011c 029B     		ldr	r3, [sp, #8]
 6884              		.loc 1 253 26 discriminator 1 view .LVU2127
 6885 011e 1FFA8BFB 		uxth	fp, fp
 6886              	.LVL620:
 6887              		.loc 1 253 5 discriminator 1 view .LVU2128
 6888 0122 5B45     		cmp	r3, fp
 6889 0124 BFF47EAF 		bcs	.L360
 6890 0128 069B     		ldr	r3, [sp, #24]
 6891 012a 0BF00F0A 		and	r10, fp, #15
 6892 012e 03EB1B18 		add	r8, r3, fp, lsr #4
 6893 0132 5FFA8AF3 		uxtb	r3, r10
 6894 0136 0593     		str	r3, [sp, #20]
 6895 0138 4FEA4818 		lsl	r8, r8, #5
 6896 013c 4FEA1B17 		lsr	r7, fp, #4
 6897              	.L359:
 254:../USER/vramdisp.c ****     if ( point( lx, y ) != col ) break;
 6898              		.loc 1 254 5 is_stmt 1 view .LVU2129
 6899              	.LVL621:
 6900              	.LBB665:
 6901              	.LBI665:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6902              		.loc 1 250 5 view .LVU2130
 6903              	.LBE665:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 6904              		.loc 1 250 28 view .LVU2131
 6905              	.LBB680:
 6906              	.LBB666:
 6907              	.LBI666:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 6908              		.loc 1 180 5 view .LVU2132
 6909              	.LBB667:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 6910              		.loc 1 181 2 view .LVU2133
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6911              		.loc 1 182 2 view .LVU2134
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6912              		.loc 1 182 12 is_stmt 0 view .LVU2135
 6913 0140 059B     		ldr	r3, [sp, #20]
 6914              	.LBB668:
 6915              	.LBB669:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6916              		.loc 1 20 2 view .LVU2136
 6917 0142 0021     		movs	r1, #0
 6918 0144 2046     		mov	r0, r4
 6919              	.LBE669:
 6920              	.LBE668:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 6921              		.loc 1 182 12 view .LVU2137
 6922 0146 3371     		strb	r3, [r6, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 6923              		.loc 1 183 2 is_stmt 1 view .LVU2138
 6924              	.LVL622:
 6925              	.LBB672:
 6926              	.LBI668:
  17:../USER/vramdisp.c **** 	int adr;
 6927              		.loc 1 17 6 view .LVU2139
 6928              	.LBB670:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 6929              		.loc 1 18 2 view .LVU2140
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6930              		.loc 1 19 2 view .LVU2141
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6931              		.loc 1 20 2 view .LVU2142
 6932 0148 FFF7FEFF 		bl	GPIO_WriteBits
 6933              	.LVL623:
 6934              	.L361:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6935              		.loc 1 21 2 view .LVU2143
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6936              		.loc 1 21 5 view .LVU2144
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6937              		.loc 1 21 10 is_stmt 0 view .LVU2145
 6938 014c 2046     		mov	r0, r4
 6939 014e FFF7FEFF 		bl	GPIO_ReadBits
 6940              	.LVL624:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6941              		.loc 1 21 8 view .LVU2146
 6942 0152 C0B2     		uxtb	r0, r0
 6943 0154 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6944              		.loc 1 21 44 view .LVU2147
 6945 0156 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 6946              		.loc 1 21 2 view .LVU2148
 6947 0158 11F00101 		ands	r1, r1, #1
 6948 015c F6D1     		bne	.L361
  22:../USER/vramdisp.c **** }
 6949              		.loc 1 22 2 is_stmt 1 view .LVU2149
 6950              	.LBE670:
 6951              	.LBE672:
 6952              	.LBB673:
 6953              	.LBB674:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6954              		.loc 1 51 2 is_stmt 0 view .LVU2150
 6955 015e 2046     		mov	r0, r4
 6956              	.LBE674:
 6957              	.LBE673:
 6958              	.LBB676:
 6959              	.LBB671:
  22:../USER/vramdisp.c **** }
 6960              		.loc 1 22 12 view .LVU2151
 6961 0160 C6F80080 		str	r8, [r6]
 6962              	.LVL625:
  22:../USER/vramdisp.c **** }
 6963              		.loc 1 22 12 view .LVU2152
 6964              	.LBE671:
 6965              	.LBE676:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 6966              		.loc 1 184 2 is_stmt 1 view .LVU2153
 6967              	.LBB677:
 6968              	.LBI673:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 6969              		.loc 1 49 6 view .LVU2154
 6970              	.LBB675:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 6971              		.loc 1 50 2 view .LVU2155
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 6972              		.loc 1 51 2 view .LVU2156
 6973 0164 FFF7FEFF 		bl	GPIO_WriteBits
 6974              	.LVL626:
 6975              	.L362:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6976              		.loc 1 52 2 view .LVU2157
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6977              		.loc 1 52 5 view .LVU2158
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6978              		.loc 1 52 10 is_stmt 0 view .LVU2159
 6979 0168 2046     		mov	r0, r4
 6980 016a FFF7FEFF 		bl	GPIO_ReadBits
 6981              	.LVL627:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6982              		.loc 1 52 8 view .LVU2160
 6983 016e C0B2     		uxtb	r0, r0
 6984 0170 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6985              		.loc 1 52 44 view .LVU2161
 6986 0172 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 6987              		.loc 1 52 2 view .LVU2162
 6988 0174 DA07     		lsls	r2, r3, #31
 6989 0176 F7D4     		bmi	.L362
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 6990              		.loc 1 53 2 is_stmt 1 view .LVU2163
 6991 0178 4FF40071 		mov	r1, #512
 6992 017c 2046     		mov	r0, r4
 6993 017e FFF7FEFF 		bl	GPIO_WriteBits
 6994              	.LVL628:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 6995              		.loc 1 54 2 view .LVU2164
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 6996              		.loc 1 53 2 is_stmt 0 view .LVU2165
 6997 0182 DFF8D881 		ldr	r8, .L397
 6998              	.LVL629:
 6999              	.L363:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7000              		.loc 1 55 3 is_stmt 1 view .LVU2166
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7001              		.loc 1 55 6 is_stmt 0 view .LVU2167
 7002 0186 18F8019B 		ldrb	r9, [r8], #1	@ zero_extendqisi2
 7003              	.LVL630:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 7004              		.loc 1 56 3 is_stmt 1 view .LVU2168
 7005 018a 2046     		mov	r0, r4
 7006 018c 09F54071 		add	r1, r9, #768
 7007 0190 FFF7FEFF 		bl	GPIO_WriteBits
 7008              	.LVL631:
  57:../USER/vramdisp.c **** 	}
 7009              		.loc 1 57 3 view .LVU2169
 7010 0194 09F50071 		add	r1, r9, #512
 7011 0198 2046     		mov	r0, r4
 7012 019a FFF7FEFF 		bl	GPIO_WriteBits
 7013              	.LVL632:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7014              		.loc 1 54 2 is_stmt 0 view .LVU2170
 7015 019e 724B     		ldr	r3, .L397+12
 7016 01a0 4345     		cmp	r3, r8
 7017 01a2 F0D1     		bne	.L363
  59:../USER/vramdisp.c **** }
 7018              		.loc 1 59 2 is_stmt 1 view .LVU2171
 7019 01a4 0021     		movs	r1, #0
 7020 01a6 2046     		mov	r0, r4
 7021 01a8 FFF7FEFF 		bl	GPIO_WriteBits
 7022              	.LVL633:
  59:../USER/vramdisp.c **** }
 7023              		.loc 1 59 2 is_stmt 0 view .LVU2172
 7024              	.LBE675:
 7025              	.LBE677:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 7026              		.loc 1 185 2 is_stmt 1 view .LVU2173
 7027              	.LBB678:
 7028              	.LBI678:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 7029              		.loc 1 24 6 view .LVU2174
 7030              	.LBB679:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7031              		.loc 1 25 2 view .LVU2175
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7032              		.loc 1 26 2 view .LVU2176
 7033 01ac 0021     		movs	r1, #0
 7034 01ae 2046     		mov	r0, r4
 7035 01b0 FFF7FEFF 		bl	GPIO_WriteBits
 7036              	.LVL634:
 7037              	.L364:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7038              		.loc 1 27 2 view .LVU2177
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7039              		.loc 1 27 5 view .LVU2178
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7040              		.loc 1 27 10 is_stmt 0 view .LVU2179
 7041 01b4 2046     		mov	r0, r4
 7042 01b6 FFF7FEFF 		bl	GPIO_ReadBits
 7043              	.LVL635:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7044              		.loc 1 27 8 view .LVU2180
 7045 01ba C0B2     		uxtb	r0, r0
 7046 01bc 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7047              		.loc 1 27 44 view .LVU2181
 7048 01be 95F80080 		ldrb	r8, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7049              		.loc 1 27 2 view .LVU2182
 7050 01c2 18F00108 		ands	r8, r8, #1
 7051 01c6 F5D1     		bne	.L364
 7052              	.LVL636:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 7053              		.loc 1 29 3 is_stmt 1 view .LVU2183
 7054 01c8 4FF48071 		mov	r1, #256
 7055 01cc 2046     		mov	r0, r4
 7056 01ce FFF7FEFF 		bl	GPIO_WriteBits
 7057              	.LVL637:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7058              		.loc 1 30 3 view .LVU2184
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7059              		.loc 1 30 17 is_stmt 0 view .LVU2185
 7060 01d2 2046     		mov	r0, r4
 7061 01d4 FFF7FEFF 		bl	GPIO_ReadBits
 7062              	.LVL638:
  31:../USER/vramdisp.c **** 	}
 7063              		.loc 1 31 3 view .LVU2186
 7064 01d8 4146     		mov	r1, r8
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7065              		.loc 1 30 15 view .LVU2187
 7066 01da 3071     		strb	r0, [r6, #4]
  31:../USER/vramdisp.c **** 	}
 7067              		.loc 1 31 3 is_stmt 1 view .LVU2188
 7068 01dc 2046     		mov	r0, r4
 7069 01de FFF7FEFF 		bl	GPIO_WriteBits
 7070              	.LVL639:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 7071              		.loc 1 29 3 view .LVU2189
 7072 01e2 4FF48071 		mov	r1, #256
 7073 01e6 2046     		mov	r0, r4
 7074 01e8 FFF7FEFF 		bl	GPIO_WriteBits
 7075              	.LVL640:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7076              		.loc 1 30 3 view .LVU2190
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7077              		.loc 1 30 17 is_stmt 0 view .LVU2191
 7078 01ec 2046     		mov	r0, r4
 7079 01ee FFF7FEFF 		bl	GPIO_ReadBits
 7080              	.LVL641:
  31:../USER/vramdisp.c **** 	}
 7081              		.loc 1 31 3 view .LVU2192
 7082 01f2 4146     		mov	r1, r8
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7083              		.loc 1 30 15 view .LVU2193
 7084 01f4 7071     		strb	r0, [r6, #5]
  31:../USER/vramdisp.c **** 	}
 7085              		.loc 1 31 3 is_stmt 1 view .LVU2194
 7086 01f6 2046     		mov	r0, r4
 7087 01f8 FFF7FEFF 		bl	GPIO_WriteBits
 7088              	.LVL642:
  33:../USER/vramdisp.c **** 
 7089              		.loc 1 33 2 view .LVU2195
 7090 01fc 4146     		mov	r1, r8
 7091 01fe 2046     		mov	r0, r4
 7092 0200 FFF7FEFF 		bl	GPIO_WriteBits
 7093              	.LVL643:
  33:../USER/vramdisp.c **** 
 7094              		.loc 1 33 2 is_stmt 0 view .LVU2196
 7095              	.LBE679:
 7096              	.LBE678:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 7097              		.loc 1 186 2 is_stmt 1 view .LVU2197
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 7098              		.loc 1 186 23 view .LVU2198
 187:../USER/vramdisp.c **** }
 7099              		.loc 1 187 2 view .LVU2199
 187:../USER/vramdisp.c **** }
 7100              		.loc 1 187 9 is_stmt 0 view .LVU2200
 7101 0204 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 7102              		.loc 1 187 20 view .LVU2201
 7103 0206 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 7104              	.LBE667:
 7105              	.LBE666:
 7106              	.LBE680:
 7107              		.loc 1 254 8 view .LVU2202
 7108 0208 43EA0223 		orr	r3, r3, r2, lsl #8
 7109 020c 049A     		ldr	r2, [sp, #16]
 7110 020e 9A42     		cmp	r2, r3
 7111 0210 40F08F80 		bne	.L353
 255:../USER/vramdisp.c ****     for ( ; lx <= rx ; lx++ ) if ( point( lx, y ) != col ) break;
 7112              		.loc 1 255 5 view .LVU2203
 7113 0214 029B     		ldr	r3, [sp, #8]
 7114 0216 5B45     		cmp	r3, fp
 7115 0218 C0F0AC80 		bcc	.L394
 7116 021c 9046     		mov	r8, r2
 7117 021e 5346     		mov	r3, r10
 7118 0220 DDF81890 		ldr	r9, [sp, #24]
 7119              	.LVL644:
 7120              	.L372:
 7121              		.loc 1 255 31 is_stmt 1 view .LVU2204
 7122              	.LBB681:
 7123              	.LBI681:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7124              		.loc 1 250 5 view .LVU2205
 7125              	.LBE681:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7126              		.loc 1 250 28 view .LVU2206
 7127              	.LBB696:
 7128              	.LBB682:
 7129              	.LBI682:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 7130              		.loc 1 180 5 view .LVU2207
 7131              	.LBB683:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 7132              		.loc 1 181 2 view .LVU2208
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7133              		.loc 1 182 2 view .LVU2209
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 7134              		.loc 1 183 2 is_stmt 0 view .LVU2210
 7135 0224 BFB2     		uxth	r7, r7
 7136              	.LBB684:
 7137              	.LBB685:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7138              		.loc 1 19 18 view .LVU2211
 7139 0226 4F44     		add	r7, r7, r9
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7140              		.loc 1 20 2 view .LVU2212
 7141 0228 0021     		movs	r1, #0
 7142 022a 2046     		mov	r0, r4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7143              		.loc 1 19 6 view .LVU2213
 7144 022c 7F01     		lsls	r7, r7, #5
 7145              	.LBE685:
 7146              	.LBE684:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7147              		.loc 1 182 12 view .LVU2214
 7148 022e 3371     		strb	r3, [r6, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 7149              		.loc 1 183 2 is_stmt 1 view .LVU2215
 7150              	.LVL645:
 7151              	.LBB688:
 7152              	.LBI684:
  17:../USER/vramdisp.c **** 	int adr;
 7153              		.loc 1 17 6 view .LVU2216
 7154              	.LBB686:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 7155              		.loc 1 18 2 view .LVU2217
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7156              		.loc 1 19 2 view .LVU2218
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7157              		.loc 1 20 2 view .LVU2219
 7158 0230 FFF7FEFF 		bl	GPIO_WriteBits
 7159              	.LVL646:
 7160              	.L367:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7161              		.loc 1 21 2 view .LVU2220
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7162              		.loc 1 21 5 view .LVU2221
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7163              		.loc 1 21 10 is_stmt 0 view .LVU2222
 7164 0234 2046     		mov	r0, r4
 7165 0236 FFF7FEFF 		bl	GPIO_ReadBits
 7166              	.LVL647:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7167              		.loc 1 21 8 view .LVU2223
 7168 023a C0B2     		uxtb	r0, r0
 7169 023c 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7170              		.loc 1 21 44 view .LVU2224
 7171 023e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7172              		.loc 1 21 2 view .LVU2225
 7173 0240 11F00101 		ands	r1, r1, #1
 7174 0244 F6D1     		bne	.L367
  22:../USER/vramdisp.c **** }
 7175              		.loc 1 22 2 is_stmt 1 view .LVU2226
 7176              	.LBE686:
 7177              	.LBE688:
 7178              	.LBB689:
 7179              	.LBB690:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7180              		.loc 1 51 2 is_stmt 0 view .LVU2227
 7181 0246 2046     		mov	r0, r4
 7182              	.LBE690:
 7183              	.LBE689:
 7184              	.LBB692:
 7185              	.LBB687:
  22:../USER/vramdisp.c **** }
 7186              		.loc 1 22 12 view .LVU2228
 7187 0248 3760     		str	r7, [r6]
 7188              	.LVL648:
  22:../USER/vramdisp.c **** }
 7189              		.loc 1 22 12 view .LVU2229
 7190              	.LBE687:
 7191              	.LBE692:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 7192              		.loc 1 184 2 is_stmt 1 view .LVU2230
 7193              	.LBB693:
 7194              	.LBI689:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 7195              		.loc 1 49 6 view .LVU2231
 7196              	.LBB691:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7197              		.loc 1 50 2 view .LVU2232
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7198              		.loc 1 51 2 view .LVU2233
 7199 024a FFF7FEFF 		bl	GPIO_WriteBits
 7200              	.LVL649:
 7201              	.L368:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7202              		.loc 1 52 2 view .LVU2234
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7203              		.loc 1 52 5 view .LVU2235
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7204              		.loc 1 52 10 is_stmt 0 view .LVU2236
 7205 024e 2046     		mov	r0, r4
 7206 0250 FFF7FEFF 		bl	GPIO_ReadBits
 7207              	.LVL650:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7208              		.loc 1 52 8 view .LVU2237
 7209 0254 C0B2     		uxtb	r0, r0
 7210 0256 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7211              		.loc 1 52 44 view .LVU2238
 7212 0258 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7213              		.loc 1 52 2 view .LVU2239
 7214 025a DB07     		lsls	r3, r3, #31
 7215 025c F7D4     		bmi	.L368
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 7216              		.loc 1 53 2 is_stmt 1 view .LVU2240
 7217 025e 4FF40071 		mov	r1, #512
 7218 0262 2046     		mov	r0, r4
 7219 0264 FFF7FEFF 		bl	GPIO_WriteBits
 7220              	.LVL651:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7221              		.loc 1 54 2 view .LVU2241
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 7222              		.loc 1 53 2 is_stmt 0 view .LVU2242
 7223 0268 3C4F     		ldr	r7, .L397
 7224              	.LVL652:
 7225              	.L369:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7226              		.loc 1 55 3 is_stmt 1 view .LVU2243
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7227              		.loc 1 55 6 is_stmt 0 view .LVU2244
 7228 026a 17F801AB 		ldrb	r10, [r7], #1	@ zero_extendqisi2
 7229              	.LVL653:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 7230              		.loc 1 56 3 is_stmt 1 view .LVU2245
 7231 026e 2046     		mov	r0, r4
 7232 0270 0AF54071 		add	r1, r10, #768
 7233 0274 FFF7FEFF 		bl	GPIO_WriteBits
 7234              	.LVL654:
  57:../USER/vramdisp.c **** 	}
 7235              		.loc 1 57 3 view .LVU2246
 7236 0278 0AF50071 		add	r1, r10, #512
 7237 027c 2046     		mov	r0, r4
 7238 027e FFF7FEFF 		bl	GPIO_WriteBits
 7239              	.LVL655:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7240              		.loc 1 54 2 is_stmt 0 view .LVU2247
 7241 0282 394B     		ldr	r3, .L397+12
 7242 0284 BB42     		cmp	r3, r7
 7243 0286 F0D1     		bne	.L369
  59:../USER/vramdisp.c **** }
 7244              		.loc 1 59 2 is_stmt 1 view .LVU2248
 7245 0288 0021     		movs	r1, #0
 7246 028a 2046     		mov	r0, r4
 7247 028c FFF7FEFF 		bl	GPIO_WriteBits
 7248              	.LVL656:
  59:../USER/vramdisp.c **** }
 7249              		.loc 1 59 2 is_stmt 0 view .LVU2249
 7250              	.LBE691:
 7251              	.LBE693:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 7252              		.loc 1 185 2 is_stmt 1 view .LVU2250
 7253              	.LBB694:
 7254              	.LBI694:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 7255              		.loc 1 24 6 view .LVU2251
 7256              	.LBB695:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7257              		.loc 1 25 2 view .LVU2252
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7258              		.loc 1 26 2 view .LVU2253
 7259 0290 0021     		movs	r1, #0
 7260 0292 2046     		mov	r0, r4
 7261 0294 FFF7FEFF 		bl	GPIO_WriteBits
 7262              	.LVL657:
 7263              	.L370:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7264              		.loc 1 27 2 view .LVU2254
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7265              		.loc 1 27 5 view .LVU2255
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7266              		.loc 1 27 10 is_stmt 0 view .LVU2256
 7267 0298 2046     		mov	r0, r4
 7268 029a FFF7FEFF 		bl	GPIO_ReadBits
 7269              	.LVL658:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7270              		.loc 1 27 8 view .LVU2257
 7271 029e C0B2     		uxtb	r0, r0
 7272 02a0 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7273              		.loc 1 27 44 view .LVU2258
 7274 02a2 2F78     		ldrb	r7, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7275              		.loc 1 27 2 view .LVU2259
 7276 02a4 17F00107 		ands	r7, r7, #1
 7277 02a8 F6D1     		bne	.L370
 7278              	.LVL659:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 7279              		.loc 1 29 3 is_stmt 1 view .LVU2260
 7280 02aa 4FF48071 		mov	r1, #256
 7281 02ae 2046     		mov	r0, r4
 7282 02b0 FFF7FEFF 		bl	GPIO_WriteBits
 7283              	.LVL660:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7284              		.loc 1 30 3 view .LVU2261
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7285              		.loc 1 30 17 is_stmt 0 view .LVU2262
 7286 02b4 2046     		mov	r0, r4
 7287 02b6 FFF7FEFF 		bl	GPIO_ReadBits
 7288              	.LVL661:
  31:../USER/vramdisp.c **** 	}
 7289              		.loc 1 31 3 view .LVU2263
 7290 02ba 3946     		mov	r1, r7
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7291              		.loc 1 30 15 view .LVU2264
 7292 02bc 3071     		strb	r0, [r6, #4]
  31:../USER/vramdisp.c **** 	}
 7293              		.loc 1 31 3 is_stmt 1 view .LVU2265
 7294 02be 2046     		mov	r0, r4
 7295 02c0 FFF7FEFF 		bl	GPIO_WriteBits
 7296              	.LVL662:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 7297              		.loc 1 29 3 view .LVU2266
 7298 02c4 4FF48071 		mov	r1, #256
 7299 02c8 2046     		mov	r0, r4
 7300 02ca FFF7FEFF 		bl	GPIO_WriteBits
 7301              	.LVL663:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7302              		.loc 1 30 3 view .LVU2267
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7303              		.loc 1 30 17 is_stmt 0 view .LVU2268
 7304 02ce 2046     		mov	r0, r4
 7305 02d0 FFF7FEFF 		bl	GPIO_ReadBits
 7306              	.LVL664:
  31:../USER/vramdisp.c **** 	}
 7307              		.loc 1 31 3 view .LVU2269
 7308 02d4 3946     		mov	r1, r7
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7309              		.loc 1 30 15 view .LVU2270
 7310 02d6 7071     		strb	r0, [r6, #5]
  31:../USER/vramdisp.c **** 	}
 7311              		.loc 1 31 3 is_stmt 1 view .LVU2271
 7312 02d8 2046     		mov	r0, r4
 7313 02da FFF7FEFF 		bl	GPIO_WriteBits
 7314              	.LVL665:
  33:../USER/vramdisp.c **** 
 7315              		.loc 1 33 2 view .LVU2272
 7316 02de 3946     		mov	r1, r7
 7317 02e0 2046     		mov	r0, r4
 7318 02e2 FFF7FEFF 		bl	GPIO_WriteBits
 7319              	.LVL666:
  33:../USER/vramdisp.c **** 
 7320              		.loc 1 33 2 is_stmt 0 view .LVU2273
 7321              	.LBE695:
 7322              	.LBE694:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 7323              		.loc 1 186 2 is_stmt 1 view .LVU2274
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 7324              		.loc 1 186 23 view .LVU2275
 187:../USER/vramdisp.c **** }
 7325              		.loc 1 187 2 view .LVU2276
 187:../USER/vramdisp.c **** }
 7326              		.loc 1 187 9 is_stmt 0 view .LVU2277
 7327 02e6 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 7328              		.loc 1 187 20 view .LVU2278
 7329 02e8 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 7330              	.LBE683:
 7331              	.LBE682:
 7332              	.LBE696:
 7333              		.loc 1 255 34 view .LVU2279
 7334 02ea 43EA0223 		orr	r3, r3, r2, lsl #8
 7335 02ee 9845     		cmp	r8, r3
 7336 02f0 0BD1     		bne	.L371
 7337              		.loc 1 255 26 discriminator 1 view .LVU2280
 7338 02f2 0BF10103 		add	r3, fp, #1
 7339              		.loc 1 255 5 discriminator 1 view .LVU2281
 7340 02f6 029A     		ldr	r2, [sp, #8]
 7341              		.loc 1 255 26 discriminator 1 view .LVU2282
 7342 02f8 9BB2     		uxth	r3, r3
 7343              	.LVL667:
 7344              		.loc 1 255 5 discriminator 1 view .LVU2283
 7345 02fa 9A42     		cmp	r2, r3
 7346 02fc 1CD3     		bcc	.L395
 7347 02fe 9B46     		mov	fp, r3
 7348 0300 03F00F03 		and	r3, r3, #15
 7349              	.LVL668:
 7350              		.loc 1 255 5 discriminator 1 view .LVU2284
 7351 0304 4FEA1B17 		lsr	r7, fp, #4
 7352 0308 8CE7     		b	.L372
 7353              	.L371:
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7354              		.loc 1 256 5 is_stmt 1 view .LVU2285
 7355              		.loc 1 256 9 is_stmt 0 view .LVU2286
 7356 030a 184A     		ldr	r2, .L397+16
 257:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7357              		.loc 1 257 20 view .LVU2287
 7358 030c 1849     		ldr	r1, .L397+20
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7359              		.loc 1 256 9 view .LVU2288
 7360 030e 1368     		ldr	r3, [r2]
 7361              		.loc 1 257 20 view .LVU2289
 7362 0310 0968     		ldr	r1, [r1]
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7363              		.loc 1 256 33 view .LVU2290
 7364 0312 0798     		ldr	r0, [sp, #28]
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7365              		.loc 1 256 19 view .LVU2291
 7366 0314 0BF1FF3C 		add	ip, fp, #-1
 7367              		.loc 1 257 10 view .LVU2292
 7368 0318 1F1D     		adds	r7, r3, #4
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7369              		.loc 1 256 33 view .LVU2293
 7370 031a 5880     		strh	r0, [r3, #2]	@ movhi
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7371              		.loc 1 256 14 view .LVU2294
 7372 031c A3F800C0 		strh	ip, [r3]	@ movhi
 256:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7373              		.loc 1 256 24 is_stmt 1 view .LVU2295
 7374              		.loc 1 257 5 view .LVU2296
 7375              		.loc 1 257 20 is_stmt 0 view .LVU2297
 7376 0320 01F58063 		add	r3, r1, #1024
 7377              		.loc 1 257 8 view .LVU2298
 7378 0324 9F42     		cmp	r7, r3
 7379 0326 1760     		str	r7, [r2]
 7380 0328 2AD0     		beq	.L396
 7381              	.LVL669:
 7382              	.L374:
 252:../USER/vramdisp.c ****     for ( ; lx <= rx ; lx++ ) if ( point( lx, y ) == col ) break;
 7383              		.loc 1 252 9 view .LVU2299
 7384 032a 029B     		ldr	r3, [sp, #8]
 7385 032c 5B45     		cmp	r3, fp
 7386 032e BFF479AE 		bcs	.L360
 7387              	.LVL670:
 7388              	.L353:
 258:../USER/vramdisp.c ****   }
 259:../USER/vramdisp.c **** }
 7389              		.loc 1 259 1 view .LVU2300
 7390 0332 09B0     		add	sp, sp, #36
 7391              		.cfi_remember_state
 7392              		.cfi_def_cfa_offset 36
 7393              		@ sp needed
 7394 0334 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7395              	.LVL671:
 7396              	.L395:
 7397              		.cfi_restore_state
 7398              		.loc 1 259 1 view .LVU2301
 7399 0338 9E46     		mov	lr, r3
 7400              	.LVL672:
 7401              	.L373:
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7402              		.loc 1 256 5 is_stmt 1 view .LVU2302
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7403              		.loc 1 256 9 is_stmt 0 view .LVU2303
 7404 033a 0C4A     		ldr	r2, .L397+16
 257:../USER/vramdisp.c ****   }
 7405              		.loc 1 257 20 view .LVU2304
 7406 033c 0C49     		ldr	r1, .L397+20
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7407              		.loc 1 256 9 view .LVU2305
 7408 033e 1068     		ldr	r0, [r2]
 257:../USER/vramdisp.c ****   }
 7409              		.loc 1 257 20 view .LVU2306
 7410 0340 0968     		ldr	r1, [r1]
 257:../USER/vramdisp.c ****   }
 7411              		.loc 1 257 10 view .LVU2307
 7412 0342 071D     		adds	r7, r0, #4
 257:../USER/vramdisp.c ****   }
 7413              		.loc 1 257 20 view .LVU2308
 7414 0344 01F5806C 		add	ip, r1, #1024
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7415              		.loc 1 256 33 view .LVU2309
 7416 0348 079B     		ldr	r3, [sp, #28]
 257:../USER/vramdisp.c ****   }
 7417              		.loc 1 257 8 view .LVU2310
 7418 034a 6745     		cmp	r7, ip
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7419              		.loc 1 256 14 view .LVU2311
 7420 034c A0F800B0 		strh	fp, [r0]	@ movhi
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7421              		.loc 1 256 24 is_stmt 1 view .LVU2312
 256:../USER/vramdisp.c ****     if ( ++eIdx == &buff[MAXSIZE] ) eIdx = buff;
 7422              		.loc 1 256 33 is_stmt 0 view .LVU2313
 7423 0350 4380     		strh	r3, [r0, #2]	@ movhi
 257:../USER/vramdisp.c ****   }
 7424              		.loc 1 257 5 is_stmt 1 view .LVU2314
 257:../USER/vramdisp.c ****   }
 7425              		.loc 1 257 8 is_stmt 0 view .LVU2315
 7426 0352 1760     		str	r7, [r2]
 7427 0354 EDD1     		bne	.L353
 7428              	.L376:
 257:../USER/vramdisp.c ****   }
 7429              		.loc 1 257 37 is_stmt 1 discriminator 1 view .LVU2316
 257:../USER/vramdisp.c ****   }
 7430              		.loc 1 257 42 is_stmt 0 discriminator 1 view .LVU2317
 7431 0356 F346     		mov	fp, lr
 7432 0358 1160     		str	r1, [r2]
 7433 035a E6E7     		b	.L374
 7434              	.L398:
 7435              		.align	2
 7436              	.L397:
 7437 035c 00000000 		.word	wddt
 7438 0360 00000000 		.word	pd
 7439 0364 00000140 		.word	1073807360
 7440 0368 05000000 		.word	wddt+5
 7441 036c 00000000 		.word	eIdx
 7442 0370 00000000 		.word	.LANCHOR5
 7443              	.LVL673:
 7444              	.L394:
 257:../USER/vramdisp.c ****   }
 7445              		.loc 1 257 42 discriminator 1 view .LVU2318
 7446 0374 0BF1FF32 		add	r2, fp, #-1
 255:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7447              		.loc 1 255 5 view .LVU2319
 7448 0378 DE46     		mov	lr, fp
 7449 037a 1FFA82FB 		uxth	fp, r2
 7450              	.LVL674:
 255:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7451              		.loc 1 255 5 view .LVU2320
 7452 037e DCE7     		b	.L373
 7453              	.LVL675:
 7454              	.L396:
 255:../USER/vramdisp.c ****     eIdx->sx = lx - 1; eIdx->sy = y;
 7455              		.loc 1 255 5 view .LVU2321
 7456 0380 DE46     		mov	lr, fp
 7457 0382 E8E7     		b	.L376
 7458              		.cfi_endproc
 7459              	.LFE49:
 7461              		.section	.text.DPaint,"ax",%progbits
 7462              		.align	1
 7463              		.p2align 2,,3
 7464              		.global	DPaint
 7465              		.syntax unified
 7466              		.thumb
 7467              		.thumb_func
 7468              		.fpu softvfp
 7470              	DPaint:
 7471              	.LVL676:
 7472              	.LFB50:
 260:../USER/vramdisp.c **** void DPaint( u16 x, u16 y, u16 paintCol ){
 7473              		.loc 1 260 42 is_stmt 1 view -0
 7474              		.cfi_startproc
 7475              		@ args = 0, pretend = 0, frame = 32
 7476              		@ frame_needed = 0, uses_anonymous_args = 0
 7477              		.loc 1 260 42 is_stmt 0 view .LVU2323
 7478 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7479              		.cfi_def_cfa_offset 36
 7480              		.cfi_offset 4, -36
 7481              		.cfi_offset 5, -32
 7482              		.cfi_offset 6, -28
 7483              		.cfi_offset 7, -24
 7484              		.cfi_offset 8, -20
 7485              		.cfi_offset 9, -16
 7486              		.cfi_offset 10, -12
 7487              		.cfi_offset 11, -8
 7488              		.cfi_offset 14, -4
 7489 0004 89B0     		sub	sp, sp, #36
 7490              		.cfi_def_cfa_offset 72
 7491              		.loc 1 260 42 view .LVU2324
 7492 0006 1446     		mov	r4, r2
 7493 0008 0792     		str	r2, [sp, #28]
 261:../USER/vramdisp.c ****   u16 lx, rx, ly,  i;
 7494              		.loc 1 261 3 is_stmt 1 view .LVU2325
 262:../USER/vramdisp.c ****   u16 col = point( x, y );
 7495              		.loc 1 262 3 view .LVU2326
 260:../USER/vramdisp.c **** void DPaint( u16 x, u16 y, u16 paintCol ){
 7496              		.loc 1 260 42 is_stmt 0 view .LVU2327
 7497 000a 8346     		mov	fp, r0
 7498              	.LVL677:
 260:../USER/vramdisp.c **** void DPaint( u16 x, u16 y, u16 paintCol ){
 7499              		.loc 1 260 42 view .LVU2328
 7500 000c 0E46     		mov	r6, r1
 7501 000e 0491     		str	r1, [sp, #16]
 7502              	.LVL678:
 7503              	.LBB735:
 7504              	.LBI735:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7505              		.loc 1 250 5 is_stmt 1 view .LVU2329
 7506              	.LBB736:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7507              		.loc 1 250 28 view .LVU2330
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7508              		.loc 1 250 35 is_stmt 0 view .LVU2331
 7509 0010 FFF7FEFF 		bl	pget
 7510              	.LVL679:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7511              		.loc 1 250 35 view .LVU2332
 7512              	.LBE736:
 7513              	.LBE735:
 263:../USER/vramdisp.c ****   if ( col == paintCol ) return;
 7514              		.loc 1 263 6 view .LVU2333
 7515 0014 8442     		cmp	r4, r0
 7516              	.LBB738:
 7517              	.LBB737:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7518              		.loc 1 250 35 view .LVU2334
 7519 0016 0190     		str	r0, [sp, #4]
 7520              	.LVL680:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7521              		.loc 1 250 35 view .LVU2335
 7522              	.LBE737:
 7523              	.LBE738:
 7524              		.loc 1 263 3 is_stmt 1 view .LVU2336
 7525              		.loc 1 263 6 is_stmt 0 view .LVU2337
 7526 0018 00F01182 		beq	.L399
 264:../USER/vramdisp.c ****   sIdx = buff;  eIdx = buff + 1;
 7527              		.loc 1 264 3 is_stmt 1 view .LVU2338
 7528              		.loc 1 264 17 view .LVU2339
 7529              		.loc 1 264 8 is_stmt 0 view .LVU2340
 7530 001c 4D4A     		ldr	r2, .L460
 7531 001e 4E4B     		ldr	r3, .L460+4
 7532 0020 1268     		ldr	r2, [r2]
 7533              		.loc 1 264 22 view .LVU2341
 7534 0022 4E48     		ldr	r0, .L460+8
 7535              	.LVL681:
 265:../USER/vramdisp.c ****   sIdx->sx = x; sIdx->sy = y;
 7536              		.loc 1 265 26 view .LVU2342
 7537 0024 1146     		mov	r1, r2
 7538 0026 0393     		str	r3, [sp, #12]
 7539 0028 9946     		mov	r9, r3
 7540 002a 4D4D     		ldr	r5, .L460+12
 264:../USER/vramdisp.c ****   sIdx = buff;  eIdx = buff + 1;
 7541              		.loc 1 264 29 view .LVU2343
 7542 002c 131D     		adds	r3, r2, #4
 7543              	.LBB739:
 7544              	.LBB740:
 7545              	.LBB741:
 7546              	.LBB742:
 7547              	.LBB743:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7548              		.loc 1 20 2 view .LVU2344
 7549 002e 4D4C     		ldr	r4, .L460+16
 7550              	.LBE743:
 7551              	.LBE742:
 7552              	.LBE741:
 7553              	.LBE740:
 7554              	.LBE739:
 264:../USER/vramdisp.c ****   sIdx = buff;  eIdx = buff + 1;
 7555              		.loc 1 264 22 view .LVU2345
 7556 0030 0360     		str	r3, [r0]
 7557              		.loc 1 265 3 is_stmt 1 view .LVU2346
 7558              		.loc 1 265 12 is_stmt 0 view .LVU2347
 7559 0032 A2F800B0 		strh	fp, [r2]	@ movhi
 7560              		.loc 1 265 17 is_stmt 1 view .LVU2348
 7561              		.loc 1 265 26 is_stmt 0 view .LVU2349
 7562 0036 5680     		strh	r6, [r2, #2]	@ movhi
 7563              	.L432:
 266:../USER/vramdisp.c ****   do {
 7564              		.loc 1 266 3 is_stmt 1 view .LVU2350
 267:../USER/vramdisp.c ****     lx = rx = sIdx->sx; ly = sIdx->sy;
 7565              		.loc 1 267 5 view .LVU2351
 7566              	.LVL682:
 7567              		.loc 1 267 25 view .LVU2352
 268:../USER/vramdisp.c ****     if ( ++sIdx == &buff[MAXSIZE] ) sIdx = buff;
 7568              		.loc 1 268 5 view .LVU2353
 7569              		.loc 1 268 20 is_stmt 0 view .LVU2354
 7570 0038 01F58062 		add	r2, r1, #1024
 7571              		.loc 1 268 8 view .LVU2355
 7572 003c 9342     		cmp	r3, r2
 7573 003e 08BF     		it	eq
 7574 0040 0B46     		moveq	r3, r1
 7575              	.LBB766:
 7576              	.LBB763:
 7577              	.LBB760:
 7578              	.LBB749:
 7579              	.LBB744:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7580              		.loc 1 19 15 view .LVU2356
 7581 0042 049A     		ldr	r2, [sp, #16]
 7582              	.LBE744:
 7583              	.LBE749:
 7584              	.LBE760:
 7585              	.LBE763:
 7586              	.LBE766:
 7587              		.loc 1 268 8 view .LVU2357
 7588 0044 484F     		ldr	r7, .L460+20
 7589              	.LVL683:
 7590              	.LBB767:
 7591              	.LBB764:
 7592              	.LBB761:
 7593              	.LBB750:
 7594              	.LBB745:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7595              		.loc 1 19 15 view .LVU2358
 7596 0046 02EB8202 		add	r2, r2, r2, lsl #2
 7597 004a D200     		lsls	r2, r2, #3
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7598              		.loc 1 19 18 view .LVU2359
 7599 004c 02EB1B16 		add	r6, r2, fp, lsr #4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7600              		.loc 1 19 15 view .LVU2360
 7601 0050 0292     		str	r2, [sp, #8]
 7602              	.LBE745:
 7603              	.LBE750:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7604              		.loc 1 182 17 view .LVU2361
 7605 0052 0BF00F02 		and	r2, fp, #15
 7606              	.LBE761:
 7607              	.LBE764:
 7608              	.LBE767:
 7609              		.loc 1 268 8 view .LVU2362
 7610 0056 3B60     		str	r3, [r7]
 7611              	.LVL684:
 269:../USER/vramdisp.c ****     if ( point( lx, ly ) != col ) continue;
 7612              		.loc 1 269 5 is_stmt 1 view .LVU2363
 7613              	.LBB768:
 7614              	.LBI739:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7615              		.loc 1 250 5 view .LVU2364
 7616              	.LBE768:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7617              		.loc 1 250 28 view .LVU2365
 7618              	.LBB769:
 7619              	.LBB765:
 7620              	.LBI740:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 7621              		.loc 1 180 5 view .LVU2366
 7622              	.LBB762:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 7623              		.loc 1 181 2 view .LVU2367
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7624              		.loc 1 182 2 view .LVU2368
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7625              		.loc 1 182 12 is_stmt 0 view .LVU2369
 7626 0058 1346     		mov	r3, r2
 7627 005a 039A     		ldr	r2, [sp, #12]
 7628              	.LBB751:
 7629              	.LBB746:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7630              		.loc 1 20 2 view .LVU2370
 7631 005c 0021     		movs	r1, #0
 7632 005e 2046     		mov	r0, r4
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7633              		.loc 1 19 6 view .LVU2371
 7634 0060 7601     		lsls	r6, r6, #5
 7635              	.LBE746:
 7636              	.LBE751:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7637              		.loc 1 182 12 view .LVU2372
 7638 0062 1371     		strb	r3, [r2, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 7639              		.loc 1 183 2 is_stmt 1 view .LVU2373
 7640              	.LVL685:
 7641              	.LBB752:
 7642              	.LBI742:
  17:../USER/vramdisp.c **** 	int adr;
 7643              		.loc 1 17 6 view .LVU2374
 7644              	.LBB747:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 7645              		.loc 1 18 2 view .LVU2375
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7646              		.loc 1 19 2 view .LVU2376
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7647              		.loc 1 20 2 view .LVU2377
 7648 0064 FFF7FEFF 		bl	GPIO_WriteBits
 7649              	.LVL686:
 7650              	.L403:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7651              		.loc 1 21 2 view .LVU2378
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7652              		.loc 1 21 5 view .LVU2379
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7653              		.loc 1 21 10 is_stmt 0 view .LVU2380
 7654 0068 2046     		mov	r0, r4
 7655 006a FFF7FEFF 		bl	GPIO_ReadBits
 7656              	.LVL687:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7657              		.loc 1 21 8 view .LVU2381
 7658 006e C0B2     		uxtb	r0, r0
 7659 0070 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7660              		.loc 1 21 44 view .LVU2382
 7661 0072 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7662              		.loc 1 21 2 view .LVU2383
 7663 0074 11F00101 		ands	r1, r1, #1
 7664 0078 F6D1     		bne	.L403
  22:../USER/vramdisp.c **** }
 7665              		.loc 1 22 2 is_stmt 1 view .LVU2384
  22:../USER/vramdisp.c **** }
 7666              		.loc 1 22 12 is_stmt 0 view .LVU2385
 7667 007a 039B     		ldr	r3, [sp, #12]
 7668              	.LBE747:
 7669              	.LBE752:
 7670              	.LBB753:
 7671              	.LBB754:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7672              		.loc 1 51 2 view .LVU2386
 7673 007c 2046     		mov	r0, r4
 7674              	.LBE754:
 7675              	.LBE753:
 7676              	.LBB756:
 7677              	.LBB748:
  22:../USER/vramdisp.c **** }
 7678              		.loc 1 22 12 view .LVU2387
 7679 007e 1E60     		str	r6, [r3]
 7680              	.LVL688:
  22:../USER/vramdisp.c **** }
 7681              		.loc 1 22 12 view .LVU2388
 7682              	.LBE748:
 7683              	.LBE756:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 7684              		.loc 1 184 2 is_stmt 1 view .LVU2389
 7685              	.LBB757:
 7686              	.LBI753:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 7687              		.loc 1 49 6 view .LVU2390
 7688              	.LBB755:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7689              		.loc 1 50 2 view .LVU2391
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7690              		.loc 1 51 2 view .LVU2392
 7691 0080 FFF7FEFF 		bl	GPIO_WriteBits
 7692              	.LVL689:
 7693              	.L404:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7694              		.loc 1 52 2 view .LVU2393
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7695              		.loc 1 52 5 view .LVU2394
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7696              		.loc 1 52 10 is_stmt 0 view .LVU2395
 7697 0084 2046     		mov	r0, r4
 7698 0086 FFF7FEFF 		bl	GPIO_ReadBits
 7699              	.LVL690:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7700              		.loc 1 52 8 view .LVU2396
 7701 008a C0B2     		uxtb	r0, r0
 7702 008c 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7703              		.loc 1 52 44 view .LVU2397
 7704 008e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7705              		.loc 1 52 2 view .LVU2398
 7706 0090 D807     		lsls	r0, r3, #31
 7707 0092 F7D4     		bmi	.L404
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 7708              		.loc 1 53 2 is_stmt 1 view .LVU2399
 7709 0094 304B     		ldr	r3, .L460+4
 7710 0096 4FF40071 		mov	r1, #512
 7711 009a 2046     		mov	r0, r4
 7712 009c 0393     		str	r3, [sp, #12]
 7713 009e 1E46     		mov	r6, r3
 7714 00a0 FFF7FEFF 		bl	GPIO_WriteBits
 7715              	.LVL691:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7716              		.loc 1 54 2 view .LVU2400
 7717              	.L405:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7718              		.loc 1 55 3 view .LVU2401
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7719              		.loc 1 55 6 is_stmt 0 view .LVU2402
 7720 00a4 16F8017B 		ldrb	r7, [r6], #1	@ zero_extendqisi2
 7721              	.LVL692:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 7722              		.loc 1 56 3 is_stmt 1 view .LVU2403
 7723 00a8 2046     		mov	r0, r4
 7724 00aa 07F54071 		add	r1, r7, #768
 7725 00ae FFF7FEFF 		bl	GPIO_WriteBits
 7726              	.LVL693:
  57:../USER/vramdisp.c **** 	}
 7727              		.loc 1 57 3 view .LVU2404
 7728 00b2 07F50071 		add	r1, r7, #512
 7729 00b6 2046     		mov	r0, r4
 7730 00b8 FFF7FEFF 		bl	GPIO_WriteBits
 7731              	.LVL694:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7732              		.loc 1 54 2 is_stmt 0 view .LVU2405
 7733 00bc 2B4B     		ldr	r3, .L460+24
 7734 00be B342     		cmp	r3, r6
 7735 00c0 F0D1     		bne	.L405
  59:../USER/vramdisp.c **** }
 7736              		.loc 1 59 2 is_stmt 1 view .LVU2406
 7737 00c2 0021     		movs	r1, #0
 7738 00c4 2046     		mov	r0, r4
 7739 00c6 FFF7FEFF 		bl	GPIO_WriteBits
 7740              	.LVL695:
  59:../USER/vramdisp.c **** }
 7741              		.loc 1 59 2 is_stmt 0 view .LVU2407
 7742              	.LBE755:
 7743              	.LBE757:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 7744              		.loc 1 185 2 is_stmt 1 view .LVU2408
 7745              	.LBB758:
 7746              	.LBI758:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 7747              		.loc 1 24 6 view .LVU2409
 7748              	.LBB759:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7749              		.loc 1 25 2 view .LVU2410
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7750              		.loc 1 26 2 view .LVU2411
 7751 00ca 0021     		movs	r1, #0
 7752 00cc 2046     		mov	r0, r4
 7753 00ce FFF7FEFF 		bl	GPIO_WriteBits
 7754              	.LVL696:
 7755              	.L406:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7756              		.loc 1 27 2 view .LVU2412
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7757              		.loc 1 27 5 view .LVU2413
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7758              		.loc 1 27 10 is_stmt 0 view .LVU2414
 7759 00d2 2046     		mov	r0, r4
 7760 00d4 FFF7FEFF 		bl	GPIO_ReadBits
 7761              	.LVL697:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7762              		.loc 1 27 8 view .LVU2415
 7763 00d8 C0B2     		uxtb	r0, r0
 7764 00da 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7765              		.loc 1 27 44 view .LVU2416
 7766 00dc 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 7767              		.loc 1 27 2 view .LVU2417
 7768 00de 16F00106 		ands	r6, r6, #1
 7769 00e2 F6D1     		bne	.L406
 7770              	.LVL698:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 7771              		.loc 1 29 3 is_stmt 1 view .LVU2418
 7772 00e4 4FF48071 		mov	r1, #256
 7773 00e8 2046     		mov	r0, r4
 7774 00ea FFF7FEFF 		bl	GPIO_WriteBits
 7775              	.LVL699:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7776              		.loc 1 30 3 view .LVU2419
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7777              		.loc 1 30 17 is_stmt 0 view .LVU2420
 7778 00ee 2046     		mov	r0, r4
 7779 00f0 FFF7FEFF 		bl	GPIO_ReadBits
 7780              	.LVL700:
  31:../USER/vramdisp.c **** 	}
 7781              		.loc 1 31 3 view .LVU2421
 7782 00f4 3146     		mov	r1, r6
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7783              		.loc 1 30 15 view .LVU2422
 7784 00f6 89F80400 		strb	r0, [r9, #4]
  31:../USER/vramdisp.c **** 	}
 7785              		.loc 1 31 3 is_stmt 1 view .LVU2423
 7786 00fa 2046     		mov	r0, r4
 7787 00fc FFF7FEFF 		bl	GPIO_WriteBits
 7788              	.LVL701:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 7789              		.loc 1 29 3 view .LVU2424
 7790 0100 4FF48071 		mov	r1, #256
 7791 0104 2046     		mov	r0, r4
 7792 0106 FFF7FEFF 		bl	GPIO_WriteBits
 7793              	.LVL702:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7794              		.loc 1 30 3 view .LVU2425
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7795              		.loc 1 30 17 is_stmt 0 view .LVU2426
 7796 010a 2046     		mov	r0, r4
 7797 010c FFF7FEFF 		bl	GPIO_ReadBits
 7798              	.LVL703:
  31:../USER/vramdisp.c **** 	}
 7799              		.loc 1 31 3 view .LVU2427
 7800 0110 3146     		mov	r1, r6
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 7801              		.loc 1 30 15 view .LVU2428
 7802 0112 89F80500 		strb	r0, [r9, #5]
  31:../USER/vramdisp.c **** 	}
 7803              		.loc 1 31 3 is_stmt 1 view .LVU2429
 7804 0116 2046     		mov	r0, r4
 7805 0118 FFF7FEFF 		bl	GPIO_WriteBits
 7806              	.LVL704:
  33:../USER/vramdisp.c **** 
 7807              		.loc 1 33 2 view .LVU2430
 7808 011c 3146     		mov	r1, r6
 7809 011e 2046     		mov	r0, r4
 7810 0120 FFF7FEFF 		bl	GPIO_WriteBits
 7811              	.LVL705:
  33:../USER/vramdisp.c **** 
 7812              		.loc 1 33 2 is_stmt 0 view .LVU2431
 7813              	.LBE759:
 7814              	.LBE758:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 7815              		.loc 1 186 2 is_stmt 1 view .LVU2432
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 7816              		.loc 1 186 23 view .LVU2433
 187:../USER/vramdisp.c **** }
 7817              		.loc 1 187 2 view .LVU2434
 187:../USER/vramdisp.c **** }
 7818              		.loc 1 187 9 is_stmt 0 view .LVU2435
 7819 0124 99F80520 		ldrb	r2, [r9, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 7820              		.loc 1 187 20 view .LVU2436
 7821 0128 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
 7822              	.LBE762:
 7823              	.LBE765:
 7824              	.LBE769:
 7825              		.loc 1 269 8 view .LVU2437
 7826 012c 43EA0223 		orr	r3, r3, r2, lsl #8
 7827 0130 019A     		ldr	r2, [sp, #4]
 7828 0132 9A42     		cmp	r2, r3
 7829 0134 1CD0     		beq	.L458
 7830              	.L408:
 270:../USER/vramdisp.c ****      while ( rx < MAXX ) { // Scan Right
 271:../USER/vramdisp.c ****       if ( point( rx + 1, ly ) != col ) break;
 272:../USER/vramdisp.c ****       rx++;
 273:../USER/vramdisp.c ****     }
 274:../USER/vramdisp.c ****     while ( lx > MINX ) { // Scan Left
 275:../USER/vramdisp.c ****       if ( point( lx - 1, ly ) != col ) break;
 276:../USER/vramdisp.c ****       lx--;
 277:../USER/vramdisp.c ****     }
 278:../USER/vramdisp.c ****     for ( i = lx ; i <= rx ; i++ ) pset( i, ly, paintCol );
 279:../USER/vramdisp.c ****     if ( ly - 1 >= MINY ) scanLine( lx, rx, ly - 1, col ); // Scan UP Line
 280:../USER/vramdisp.c ****     if ( ly + 1 <= MAXY ) scanLine( lx, rx, ly + 1, col ); // Scan Down Line
 281:../USER/vramdisp.c ****   } while ( sIdx != eIdx );
 7831              		.loc 1 281 18 view .LVU2438
 7832 0136 0C4B     		ldr	r3, .L460+20
 7833              		.loc 1 281 3 view .LVU2439
 7834 0138 084A     		ldr	r2, .L460+8
 7835              		.loc 1 281 18 view .LVU2440
 7836 013a 1B68     		ldr	r3, [r3]
 7837              		.loc 1 281 3 view .LVU2441
 7838 013c 1268     		ldr	r2, [r2]
 7839 013e 9342     		cmp	r3, r2
 7840 0140 00F07D81 		beq	.L399
 7841 0144 034A     		ldr	r2, .L460
 7842 0146 B3F800B0 		ldrh	fp, [r3]
 7843 014a 1168     		ldr	r1, [r2]
 7844 014c 5A88     		ldrh	r2, [r3, #2]
 7845 014e 0433     		adds	r3, r3, #4
 7846 0150 0492     		str	r2, [sp, #16]
 7847 0152 71E7     		b	.L432
 7848              	.L461:
 7849              		.align	2
 7850              	.L460:
 7851 0154 00000000 		.word	.LANCHOR5
 7852 0158 00000000 		.word	wddt
 7853 015c 00000000 		.word	eIdx
 7854 0160 00000000 		.word	pd
 7855 0164 00000140 		.word	1073807360
 7856 0168 00000000 		.word	sIdx
 7857 016c 05000000 		.word	wddt+5
 7858              	.L458:
 270:../USER/vramdisp.c ****      while ( rx < MAXX ) { // Scan Right
 7859              		.loc 1 270 12 view .LVU2442
 7860 0170 BBF5207F 		cmp	fp, #640
 7861 0174 D846     		mov	r8, fp
 7862 0176 7FD2     		bcs	.L455
 7863 0178 CDF814B0 		str	fp, [sp, #20]
 7864 017c DDF808B0 		ldr	fp, [sp, #8]
 7865              	.L415:
 7866              	.LVL706:
 271:../USER/vramdisp.c ****       rx++;
 7867              		.loc 1 271 7 is_stmt 1 view .LVU2443
 271:../USER/vramdisp.c ****       rx++;
 7868              		.loc 1 271 12 is_stmt 0 view .LVU2444
 7869 0180 08F10107 		add	r7, r8, #1
 7870 0184 BFB2     		uxth	r7, r7
 7871              	.LVL707:
 7872              	.LBB770:
 7873              	.LBI770:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7874              		.loc 1 250 5 is_stmt 1 view .LVU2445
 7875              	.LBE770:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 7876              		.loc 1 250 28 view .LVU2446
 7877              	.LBB785:
 7878              	.LBB771:
 7879              	.LBI771:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 7880              		.loc 1 180 5 view .LVU2447
 7881              	.LBB772:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 7882              		.loc 1 181 2 view .LVU2448
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7883              		.loc 1 182 2 view .LVU2449
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7884              		.loc 1 182 17 is_stmt 0 view .LVU2450
 7885 0186 07F00F03 		and	r3, r7, #15
 7886              	.LBB773:
 7887              	.LBB774:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7888              		.loc 1 19 18 view .LVU2451
 7889 018a 0BEB1716 		add	r6, fp, r7, lsr #4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7890              		.loc 1 20 2 view .LVU2452
 7891 018e 0021     		movs	r1, #0
 7892 0190 2046     		mov	r0, r4
 7893              	.LBE774:
 7894              	.LBE773:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 7895              		.loc 1 182 12 view .LVU2453
 7896 0192 89F80430 		strb	r3, [r9, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 7897              		.loc 1 183 2 is_stmt 1 view .LVU2454
 7898              	.LVL708:
 7899              	.LBB777:
 7900              	.LBI773:
  17:../USER/vramdisp.c **** 	int adr;
 7901              		.loc 1 17 6 view .LVU2455
 7902              	.LBB775:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 7903              		.loc 1 18 2 view .LVU2456
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7904              		.loc 1 19 2 view .LVU2457
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7905              		.loc 1 19 6 is_stmt 0 view .LVU2458
 7906 0196 7601     		lsls	r6, r6, #5
 7907              	.LVL709:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7908              		.loc 1 20 2 is_stmt 1 view .LVU2459
 7909 0198 FFF7FEFF 		bl	GPIO_WriteBits
 7910              	.LVL710:
 7911              	.L410:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7912              		.loc 1 21 2 view .LVU2460
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7913              		.loc 1 21 5 view .LVU2461
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7914              		.loc 1 21 10 is_stmt 0 view .LVU2462
 7915 019c 2046     		mov	r0, r4
 7916 019e FFF7FEFF 		bl	GPIO_ReadBits
 7917              	.LVL711:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7918              		.loc 1 21 8 view .LVU2463
 7919 01a2 C0B2     		uxtb	r0, r0
 7920 01a4 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7921              		.loc 1 21 44 view .LVU2464
 7922 01a6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 7923              		.loc 1 21 2 view .LVU2465
 7924 01a8 11F00101 		ands	r1, r1, #1
 7925 01ac F6D1     		bne	.L410
  22:../USER/vramdisp.c **** }
 7926              		.loc 1 22 2 is_stmt 1 view .LVU2466
 7927              	.LBE775:
 7928              	.LBE777:
 7929              	.LBB778:
 7930              	.LBB779:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7931              		.loc 1 51 2 is_stmt 0 view .LVU2467
 7932 01ae 2046     		mov	r0, r4
 7933              	.LBE779:
 7934              	.LBE778:
 7935              	.LBB781:
 7936              	.LBB776:
  22:../USER/vramdisp.c **** }
 7937              		.loc 1 22 12 view .LVU2468
 7938 01b0 C9F80060 		str	r6, [r9]
 7939              	.LVL712:
  22:../USER/vramdisp.c **** }
 7940              		.loc 1 22 12 view .LVU2469
 7941              	.LBE776:
 7942              	.LBE781:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 7943              		.loc 1 184 2 is_stmt 1 view .LVU2470
 7944              	.LBB782:
 7945              	.LBI778:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 7946              		.loc 1 49 6 view .LVU2471
 7947              	.LBB780:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 7948              		.loc 1 50 2 view .LVU2472
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 7949              		.loc 1 51 2 view .LVU2473
 7950 01b4 FFF7FEFF 		bl	GPIO_WriteBits
 7951              	.LVL713:
 7952              	.L411:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7953              		.loc 1 52 2 view .LVU2474
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7954              		.loc 1 52 5 view .LVU2475
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7955              		.loc 1 52 10 is_stmt 0 view .LVU2476
 7956 01b8 2046     		mov	r0, r4
 7957 01ba FFF7FEFF 		bl	GPIO_ReadBits
 7958              	.LVL714:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7959              		.loc 1 52 8 view .LVU2477
 7960 01be C0B2     		uxtb	r0, r0
 7961 01c0 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7962              		.loc 1 52 44 view .LVU2478
 7963 01c2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 7964              		.loc 1 52 2 view .LVU2479
 7965 01c4 D907     		lsls	r1, r3, #31
 7966 01c6 F7D4     		bmi	.L411
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 7967              		.loc 1 53 2 is_stmt 1 view .LVU2480
 7968 01c8 4FF40071 		mov	r1, #512
 7969 01cc 2046     		mov	r0, r4
 7970 01ce FFF7FEFF 		bl	GPIO_WriteBits
 7971              	.LVL715:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7972              		.loc 1 54 2 view .LVU2481
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 7973              		.loc 1 53 2 is_stmt 0 view .LVU2482
 7974 01d2 4E46     		mov	r6, r9
 7975              	.LVL716:
 7976              	.L412:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7977              		.loc 1 55 3 is_stmt 1 view .LVU2483
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 7978              		.loc 1 55 6 is_stmt 0 view .LVU2484
 7979 01d4 16F801AB 		ldrb	r10, [r6], #1	@ zero_extendqisi2
 7980              	.LVL717:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 7981              		.loc 1 56 3 is_stmt 1 view .LVU2485
 7982 01d8 2046     		mov	r0, r4
 7983 01da 0AF54071 		add	r1, r10, #768
 7984 01de FFF7FEFF 		bl	GPIO_WriteBits
 7985              	.LVL718:
  57:../USER/vramdisp.c **** 	}
 7986              		.loc 1 57 3 view .LVU2486
 7987 01e2 0AF50071 		add	r1, r10, #512
 7988 01e6 2046     		mov	r0, r4
 7989 01e8 FFF7FEFF 		bl	GPIO_WriteBits
 7990              	.LVL719:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 7991              		.loc 1 54 2 is_stmt 0 view .LVU2487
 7992 01ec 984B     		ldr	r3, .L462
 7993 01ee B342     		cmp	r3, r6
 7994 01f0 F0D1     		bne	.L412
  59:../USER/vramdisp.c **** }
 7995              		.loc 1 59 2 is_stmt 1 view .LVU2488
 7996 01f2 0021     		movs	r1, #0
 7997 01f4 2046     		mov	r0, r4
 7998 01f6 FFF7FEFF 		bl	GPIO_WriteBits
 7999              	.LVL720:
  59:../USER/vramdisp.c **** }
 8000              		.loc 1 59 2 is_stmt 0 view .LVU2489
 8001              	.LBE780:
 8002              	.LBE782:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 8003              		.loc 1 185 2 is_stmt 1 view .LVU2490
 8004              	.LBB783:
 8005              	.LBI783:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 8006              		.loc 1 24 6 view .LVU2491
 8007              	.LBB784:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8008              		.loc 1 25 2 view .LVU2492
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8009              		.loc 1 26 2 view .LVU2493
 8010 01fa 0021     		movs	r1, #0
 8011 01fc 2046     		mov	r0, r4
 8012 01fe FFF7FEFF 		bl	GPIO_WriteBits
 8013              	.LVL721:
 8014              	.L413:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8015              		.loc 1 27 2 view .LVU2494
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8016              		.loc 1 27 5 view .LVU2495
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8017              		.loc 1 27 10 is_stmt 0 view .LVU2496
 8018 0202 2046     		mov	r0, r4
 8019 0204 FFF7FEFF 		bl	GPIO_ReadBits
 8020              	.LVL722:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8021              		.loc 1 27 8 view .LVU2497
 8022 0208 C0B2     		uxtb	r0, r0
 8023 020a 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8024              		.loc 1 27 44 view .LVU2498
 8025 020c 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8026              		.loc 1 27 2 view .LVU2499
 8027 020e 16F00106 		ands	r6, r6, #1
 8028 0212 F6D1     		bne	.L413
 8029              	.LVL723:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 8030              		.loc 1 29 3 is_stmt 1 view .LVU2500
 8031 0214 4FF48071 		mov	r1, #256
 8032 0218 2046     		mov	r0, r4
 8033 021a FFF7FEFF 		bl	GPIO_WriteBits
 8034              	.LVL724:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8035              		.loc 1 30 3 view .LVU2501
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8036              		.loc 1 30 17 is_stmt 0 view .LVU2502
 8037 021e 2046     		mov	r0, r4
 8038 0220 FFF7FEFF 		bl	GPIO_ReadBits
 8039              	.LVL725:
  31:../USER/vramdisp.c **** 	}
 8040              		.loc 1 31 3 view .LVU2503
 8041 0224 3146     		mov	r1, r6
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8042              		.loc 1 30 15 view .LVU2504
 8043 0226 89F80400 		strb	r0, [r9, #4]
  31:../USER/vramdisp.c **** 	}
 8044              		.loc 1 31 3 is_stmt 1 view .LVU2505
 8045 022a 2046     		mov	r0, r4
 8046 022c FFF7FEFF 		bl	GPIO_WriteBits
 8047              	.LVL726:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 8048              		.loc 1 29 3 view .LVU2506
 8049 0230 4FF48071 		mov	r1, #256
 8050 0234 2046     		mov	r0, r4
 8051 0236 FFF7FEFF 		bl	GPIO_WriteBits
 8052              	.LVL727:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8053              		.loc 1 30 3 view .LVU2507
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8054              		.loc 1 30 17 is_stmt 0 view .LVU2508
 8055 023a 2046     		mov	r0, r4
 8056 023c FFF7FEFF 		bl	GPIO_ReadBits
 8057              	.LVL728:
  31:../USER/vramdisp.c **** 	}
 8058              		.loc 1 31 3 view .LVU2509
 8059 0240 3146     		mov	r1, r6
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8060              		.loc 1 30 15 view .LVU2510
 8061 0242 89F80500 		strb	r0, [r9, #5]
  31:../USER/vramdisp.c **** 	}
 8062              		.loc 1 31 3 is_stmt 1 view .LVU2511
 8063 0246 2046     		mov	r0, r4
 8064 0248 FFF7FEFF 		bl	GPIO_WriteBits
 8065              	.LVL729:
  33:../USER/vramdisp.c **** 
 8066              		.loc 1 33 2 view .LVU2512
 8067 024c 3146     		mov	r1, r6
 8068 024e 2046     		mov	r0, r4
 8069 0250 FFF7FEFF 		bl	GPIO_WriteBits
 8070              	.LVL730:
  33:../USER/vramdisp.c **** 
 8071              		.loc 1 33 2 is_stmt 0 view .LVU2513
 8072              	.LBE784:
 8073              	.LBE783:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 8074              		.loc 1 186 2 is_stmt 1 view .LVU2514
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 8075              		.loc 1 186 23 view .LVU2515
 187:../USER/vramdisp.c **** }
 8076              		.loc 1 187 2 view .LVU2516
 187:../USER/vramdisp.c **** }
 8077              		.loc 1 187 9 is_stmt 0 view .LVU2517
 8078 0254 99F80520 		ldrb	r2, [r9, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 8079              		.loc 1 187 20 view .LVU2518
 8080 0258 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
 8081              	.LBE772:
 8082              	.LBE771:
 8083              	.LBE785:
 271:../USER/vramdisp.c ****       rx++;
 8084              		.loc 1 271 10 view .LVU2519
 8085 025c 43EA0223 		orr	r3, r3, r2, lsl #8
 8086 0260 019A     		ldr	r2, [sp, #4]
 8087 0262 9A42     		cmp	r2, r3
 8088 0264 03D1     		bne	.L454
 8089              	.LVL731:
 270:../USER/vramdisp.c ****       if ( point( rx + 1, ly ) != col ) break;
 8090              		.loc 1 270 12 view .LVU2520
 8091 0266 B7F5207F 		cmp	r7, #640
 8092 026a B846     		mov	r8, r7
 8093 026c 88D1     		bne	.L415
 8094              	.LVL732:
 8095              	.L454:
 270:../USER/vramdisp.c ****       if ( point( rx + 1, ly ) != col ) break;
 8096              		.loc 1 270 12 view .LVU2521
 8097 026e DDF814B0 		ldr	fp, [sp, #20]
 274:../USER/vramdisp.c ****       if ( point( lx - 1, ly ) != col ) break;
 8098              		.loc 1 274 11 view .LVU2522
 8099 0272 BBF1000F 		cmp	fp, #0
 8100 0276 7BD0     		beq	.L422
 8101              	.L455:
 8102 0278 DDF808A0 		ldr	r10, [sp, #8]
 8103 027c CDF81480 		str	r8, [sp, #20]
 8104              	.L423:
 8105              	.LVL733:
 275:../USER/vramdisp.c ****       lx--;
 8106              		.loc 1 275 7 is_stmt 1 view .LVU2523
 275:../USER/vramdisp.c ****       lx--;
 8107              		.loc 1 275 12 is_stmt 0 view .LVU2524
 8108 0280 0BF1FF37 		add	r7, fp, #-1
 8109 0284 BFB2     		uxth	r7, r7
 8110              	.LVL734:
 8111              	.LBB786:
 8112              	.LBI786:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 8113              		.loc 1 250 5 is_stmt 1 view .LVU2525
 8114              	.LBE786:
 250:../USER/vramdisp.c **** void scanLine( u16 lx, u16 rx, u16 y, u16 col ){
 8115              		.loc 1 250 28 view .LVU2526
 8116              	.LBB801:
 8117              	.LBB787:
 8118              	.LBI787:
 180:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 8119              		.loc 1 180 5 view .LVU2527
 8120              	.LBB788:
 181:../USER/vramdisp.c **** 	wddt.b[4] = xp & 15;
 8121              		.loc 1 181 2 view .LVU2528
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 8122              		.loc 1 182 2 view .LVU2529
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 8123              		.loc 1 182 17 is_stmt 0 view .LVU2530
 8124 0286 07F00F03 		and	r3, r7, #15
 8125              	.LBB789:
 8126              	.LBB790:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8127              		.loc 1 19 18 view .LVU2531
 8128 028a 0AEB1716 		add	r6, r10, r7, lsr #4
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8129              		.loc 1 20 2 view .LVU2532
 8130 028e 0021     		movs	r1, #0
 8131 0290 2046     		mov	r0, r4
 8132              	.LBE790:
 8133              	.LBE789:
 182:../USER/vramdisp.c **** 	set_vramadr(yp, xp/16);
 8134              		.loc 1 182 12 view .LVU2533
 8135 0292 89F80430 		strb	r3, [r9, #4]
 183:../USER/vramdisp.c **** 	set_vramdata(5);	// adr(4)+bitpos(1)
 8136              		.loc 1 183 2 is_stmt 1 view .LVU2534
 8137              	.LVL735:
 8138              	.LBB793:
 8139              	.LBI789:
  17:../USER/vramdisp.c **** 	int adr;
 8140              		.loc 1 17 6 view .LVU2535
 8141              	.LBB791:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 8142              		.loc 1 18 2 view .LVU2536
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8143              		.loc 1 19 2 view .LVU2537
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8144              		.loc 1 19 6 is_stmt 0 view .LVU2538
 8145 0296 7601     		lsls	r6, r6, #5
 8146              	.LVL736:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8147              		.loc 1 20 2 is_stmt 1 view .LVU2539
 8148 0298 FFF7FEFF 		bl	GPIO_WriteBits
 8149              	.LVL737:
 8150              	.L416:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8151              		.loc 1 21 2 view .LVU2540
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8152              		.loc 1 21 5 view .LVU2541
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8153              		.loc 1 21 10 is_stmt 0 view .LVU2542
 8154 029c 2046     		mov	r0, r4
 8155 029e FFF7FEFF 		bl	GPIO_ReadBits
 8156              	.LVL738:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8157              		.loc 1 21 8 view .LVU2543
 8158 02a2 C0B2     		uxtb	r0, r0
 8159 02a4 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8160              		.loc 1 21 44 view .LVU2544
 8161 02a6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8162              		.loc 1 21 2 view .LVU2545
 8163 02a8 11F00101 		ands	r1, r1, #1
 8164 02ac F6D1     		bne	.L416
  22:../USER/vramdisp.c **** }
 8165              		.loc 1 22 2 is_stmt 1 view .LVU2546
 8166              	.LBE791:
 8167              	.LBE793:
 8168              	.LBB794:
 8169              	.LBB795:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8170              		.loc 1 51 2 is_stmt 0 view .LVU2547
 8171 02ae 2046     		mov	r0, r4
 8172              	.LBE795:
 8173              	.LBE794:
 8174              	.LBB797:
 8175              	.LBB792:
  22:../USER/vramdisp.c **** }
 8176              		.loc 1 22 12 view .LVU2548
 8177 02b0 C9F80060 		str	r6, [r9]
 8178              	.LVL739:
  22:../USER/vramdisp.c **** }
 8179              		.loc 1 22 12 view .LVU2549
 8180              	.LBE792:
 8181              	.LBE797:
 184:../USER/vramdisp.c **** 	get_vramdata(2);
 8182              		.loc 1 184 2 is_stmt 1 view .LVU2550
 8183              	.LBB798:
 8184              	.LBI794:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 8185              		.loc 1 49 6 view .LVU2551
 8186              	.LBB796:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8187              		.loc 1 50 2 view .LVU2552
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8188              		.loc 1 51 2 view .LVU2553
 8189 02b4 FFF7FEFF 		bl	GPIO_WriteBits
 8190              	.LVL740:
 8191              	.L417:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8192              		.loc 1 52 2 view .LVU2554
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8193              		.loc 1 52 5 view .LVU2555
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8194              		.loc 1 52 10 is_stmt 0 view .LVU2556
 8195 02b8 2046     		mov	r0, r4
 8196 02ba FFF7FEFF 		bl	GPIO_ReadBits
 8197              	.LVL741:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8198              		.loc 1 52 8 view .LVU2557
 8199 02be C0B2     		uxtb	r0, r0
 8200 02c0 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8201              		.loc 1 52 44 view .LVU2558
 8202 02c2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8203              		.loc 1 52 2 view .LVU2559
 8204 02c4 DA07     		lsls	r2, r3, #31
 8205 02c6 F7D4     		bmi	.L417
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 8206              		.loc 1 53 2 is_stmt 1 view .LVU2560
 8207 02c8 4FF40071 		mov	r1, #512
 8208 02cc 2046     		mov	r0, r4
 8209 02ce FFF7FEFF 		bl	GPIO_WriteBits
 8210              	.LVL742:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 8211              		.loc 1 54 2 view .LVU2561
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 8212              		.loc 1 53 2 is_stmt 0 view .LVU2562
 8213 02d2 4E46     		mov	r6, r9
 8214              	.LVL743:
 8215              	.L418:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 8216              		.loc 1 55 3 is_stmt 1 view .LVU2563
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 8217              		.loc 1 55 6 is_stmt 0 view .LVU2564
 8218 02d4 16F8018B 		ldrb	r8, [r6], #1	@ zero_extendqisi2
 8219              	.LVL744:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 8220              		.loc 1 56 3 is_stmt 1 view .LVU2565
 8221 02d8 2046     		mov	r0, r4
 8222 02da 08F54071 		add	r1, r8, #768
 8223 02de FFF7FEFF 		bl	GPIO_WriteBits
 8224              	.LVL745:
  57:../USER/vramdisp.c **** 	}
 8225              		.loc 1 57 3 view .LVU2566
 8226 02e2 08F50071 		add	r1, r8, #512
 8227 02e6 2046     		mov	r0, r4
 8228 02e8 FFF7FEFF 		bl	GPIO_WriteBits
 8229              	.LVL746:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 8230              		.loc 1 54 2 is_stmt 0 view .LVU2567
 8231 02ec 584B     		ldr	r3, .L462
 8232 02ee B342     		cmp	r3, r6
 8233 02f0 F0D1     		bne	.L418
  59:../USER/vramdisp.c **** }
 8234              		.loc 1 59 2 is_stmt 1 view .LVU2568
 8235 02f2 0021     		movs	r1, #0
 8236 02f4 2046     		mov	r0, r4
 8237 02f6 FFF7FEFF 		bl	GPIO_WriteBits
 8238              	.LVL747:
  59:../USER/vramdisp.c **** }
 8239              		.loc 1 59 2 is_stmt 0 view .LVU2569
 8240              	.LBE796:
 8241              	.LBE798:
 185:../USER/vramdisp.c **** 	pl = wddt.b[4+px+0]; ph = wddt.b[4+px+1];
 8242              		.loc 1 185 2 is_stmt 1 view .LVU2570
 8243              	.LBB799:
 8244              	.LBI799:
  24:../USER/vramdisp.c **** 	unsigned char i,dt;
 8245              		.loc 1 24 6 view .LVU2571
 8246              	.LBB800:
  25:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8247              		.loc 1 25 2 view .LVU2572
  26:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8248              		.loc 1 26 2 view .LVU2573
 8249 02fa 0021     		movs	r1, #0
 8250 02fc 2046     		mov	r0, r4
 8251 02fe FFF7FEFF 		bl	GPIO_WriteBits
 8252              	.LVL748:
 8253              	.L419:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8254              		.loc 1 27 2 view .LVU2574
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8255              		.loc 1 27 5 view .LVU2575
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8256              		.loc 1 27 10 is_stmt 0 view .LVU2576
 8257 0302 2046     		mov	r0, r4
 8258 0304 FFF7FEFF 		bl	GPIO_ReadBits
 8259              	.LVL749:
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8260              		.loc 1 27 8 view .LVU2577
 8261 0308 C0B2     		uxtb	r0, r0
 8262 030a 2870     		strb	r0, [r5]
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8263              		.loc 1 27 44 view .LVU2578
 8264 030c 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
  27:../USER/vramdisp.c **** 	for(i=0;i<dl; i++){
 8265              		.loc 1 27 2 view .LVU2579
 8266 030e 16F00106 		ands	r6, r6, #1
 8267 0312 F6D1     		bne	.L419
 8268              	.LVL750:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 8269              		.loc 1 29 3 is_stmt 1 view .LVU2580
 8270 0314 4FF48071 		mov	r1, #256
 8271 0318 2046     		mov	r0, r4
 8272 031a FFF7FEFF 		bl	GPIO_WriteBits
 8273              	.LVL751:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8274              		.loc 1 30 3 view .LVU2581
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8275              		.loc 1 30 17 is_stmt 0 view .LVU2582
 8276 031e 2046     		mov	r0, r4
 8277 0320 FFF7FEFF 		bl	GPIO_ReadBits
 8278              	.LVL752:
  31:../USER/vramdisp.c **** 	}
 8279              		.loc 1 31 3 view .LVU2583
 8280 0324 3146     		mov	r1, r6
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8281              		.loc 1 30 15 view .LVU2584
 8282 0326 89F80400 		strb	r0, [r9, #4]
  31:../USER/vramdisp.c **** 	}
 8283              		.loc 1 31 3 is_stmt 1 view .LVU2585
 8284 032a 2046     		mov	r0, r4
 8285 032c FFF7FEFF 		bl	GPIO_WriteBits
 8286              	.LVL753:
  29:../USER/vramdisp.c **** 		wddt.b[i+4] = GPIO_ReadBits(GPIO0);
 8287              		.loc 1 29 3 view .LVU2586
 8288 0330 4FF48071 		mov	r1, #256
 8289 0334 2046     		mov	r0, r4
 8290 0336 FFF7FEFF 		bl	GPIO_WriteBits
 8291              	.LVL754:
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8292              		.loc 1 30 3 view .LVU2587
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8293              		.loc 1 30 17 is_stmt 0 view .LVU2588
 8294 033a 2046     		mov	r0, r4
 8295 033c FFF7FEFF 		bl	GPIO_ReadBits
 8296              	.LVL755:
  31:../USER/vramdisp.c **** 	}
 8297              		.loc 1 31 3 view .LVU2589
 8298 0340 3146     		mov	r1, r6
  30:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x000);
 8299              		.loc 1 30 15 view .LVU2590
 8300 0342 89F80500 		strb	r0, [r9, #5]
  31:../USER/vramdisp.c **** 	}
 8301              		.loc 1 31 3 is_stmt 1 view .LVU2591
 8302 0346 2046     		mov	r0, r4
 8303 0348 FFF7FEFF 		bl	GPIO_WriteBits
 8304              	.LVL756:
  33:../USER/vramdisp.c **** 
 8305              		.loc 1 33 2 view .LVU2592
 8306 034c 3146     		mov	r1, r6
 8307 034e 2046     		mov	r0, r4
 8308 0350 FFF7FEFF 		bl	GPIO_WriteBits
 8309              	.LVL757:
  33:../USER/vramdisp.c **** 
 8310              		.loc 1 33 2 is_stmt 0 view .LVU2593
 8311              	.LBE800:
 8312              	.LBE799:
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 8313              		.loc 1 186 2 is_stmt 1 view .LVU2594
 186:../USER/vramdisp.c **** 	return (u16)ph<<8 | (u16)pl;
 8314              		.loc 1 186 23 view .LVU2595
 187:../USER/vramdisp.c **** }
 8315              		.loc 1 187 2 view .LVU2596
 187:../USER/vramdisp.c **** }
 8316              		.loc 1 187 9 is_stmt 0 view .LVU2597
 8317 0354 99F80520 		ldrb	r2, [r9, #5]	@ zero_extendqisi2
 187:../USER/vramdisp.c **** }
 8318              		.loc 1 187 20 view .LVU2598
 8319 0358 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
 8320              	.LBE788:
 8321              	.LBE787:
 8322              	.LBE801:
 275:../USER/vramdisp.c ****       lx--;
 8323              		.loc 1 275 10 view .LVU2599
 8324 035c 43EA0223 		orr	r3, r3, r2, lsl #8
 8325 0360 019A     		ldr	r2, [sp, #4]
 8326 0362 9A42     		cmp	r2, r3
 8327 0364 6ED1     		bne	.L459
 8328              	.LVL758:
 274:../USER/vramdisp.c ****       if ( point( lx - 1, ly ) != col ) break;
 8329              		.loc 1 274 11 view .LVU2600
 8330 0366 BB46     		mov	fp, r7
 8331 0368 002F     		cmp	r7, #0
 8332 036a 89D1     		bne	.L423
 8333 036c DDF81480 		ldr	r8, [sp, #20]
 8334              	.LVL759:
 8335              	.L422:
 271:../USER/vramdisp.c ****       rx++;
 8336              		.loc 1 271 12 view .LVU2601
 8337 0370 4FF0000B 		mov	fp, #0
 8338              	.LVL760:
 8339              	.L433:
 271:../USER/vramdisp.c ****       rx++;
 8340              		.loc 1 271 12 view .LVU2602
 8341 0374 BDF91C30 		ldrsh	r3, [sp, #28]
 8342 0378 5E46     		mov	r6, fp
 8343 037a 0593     		str	r3, [sp, #20]
 8344 037c 09F10603 		add	r3, r9, #6
 8345 0380 9A46     		mov	r10, r3
 8346 0382 CDF818B0 		str	fp, [sp, #24]
 8347              	.L428:
 8348              	.LVL761:
 278:../USER/vramdisp.c ****     if ( ly - 1 >= MINY ) scanLine( lx, rx, ly - 1, col ); // Scan UP Line
 8349              		.loc 1 278 36 is_stmt 1 view .LVU2603
 8350              	.LBB802:
 8351              	.LBI802:
 190:../USER/vramdisp.c **** 	unsigned char ph, pl, px;
 8352              		.loc 1 190 6 view .LVU2604
 8353              	.LBB803:
 191:../USER/vramdisp.c **** 	//if(xp==0xffff) { dispinitf = 0; disp_vramw(0);}
 8354              		.loc 1 191 2 view .LVU2605
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 8355              		.loc 1 194 3 view .LVU2606
 8356              	.LBB804:
 8357              	.LBB805:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8358              		.loc 1 19 18 is_stmt 0 view .LVU2607
 8359 0386 029B     		ldr	r3, [sp, #8]
 8360              	.LBE805:
 8361              	.LBE804:
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 8362              		.loc 1 195 3 view .LVU2608
 8363 0388 C6F30F17 		ubfx	r7, r6, #4, #16
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 8364              		.loc 1 194 13 view .LVU2609
 8365 038c 059A     		ldr	r2, [sp, #20]
 8366              	.LBB811:
 8367              	.LBB806:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8368              		.loc 1 19 18 view .LVU2610
 8369 038e 1F44     		add	r7, r7, r3
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8370              		.loc 1 20 2 view .LVU2611
 8371 0390 0021     		movs	r1, #0
 8372              	.LBE806:
 8373              	.LBE811:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 8374              		.loc 1 194 35 view .LVU2612
 8375 0392 06F00F03 		and	r3, r6, #15
 8376              	.LBB812:
 8377              	.LBB807:
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8378              		.loc 1 20 2 view .LVU2613
 8379 0396 2046     		mov	r0, r4
 8380              	.LBE807:
 8381              	.LBE812:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 8382              		.loc 1 194 13 view .LVU2614
 8383 0398 A9F80420 		strh	r2, [r9, #4]	@ movhi
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 8384              		.loc 1 194 20 is_stmt 1 view .LVU2615
 8385              	.LBB813:
 8386              	.LBB808:
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8387              		.loc 1 19 6 is_stmt 0 view .LVU2616
 8388 039c 7F01     		lsls	r7, r7, #5
 8389              	.LBE808:
 8390              	.LBE813:
 194:../USER/vramdisp.c **** 		set_vramadr(yp, xp/16);
 8391              		.loc 1 194 30 view .LVU2617
 8392 039e 89F80630 		strb	r3, [r9, #6]
 195:../USER/vramdisp.c **** 		set_vramdata(7);	// adr(4)+ptn(2)+bitpos(1)
 8393              		.loc 1 195 3 is_stmt 1 view .LVU2618
 8394              	.LVL762:
 8395              	.LBB814:
 8396              	.LBI804:
  17:../USER/vramdisp.c **** 	int adr;
 8397              		.loc 1 17 6 view .LVU2619
 8398              	.LBB809:
  18:../USER/vramdisp.c **** 	adr = ((adry)*40+adrx)*32;
 8399              		.loc 1 18 2 view .LVU2620
  19:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8400              		.loc 1 19 2 view .LVU2621
  20:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8401              		.loc 1 20 2 view .LVU2622
 8402 03a2 FFF7FEFF 		bl	GPIO_WriteBits
 8403              	.LVL763:
 8404              	.L425:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8405              		.loc 1 21 2 view .LVU2623
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8406              		.loc 1 21 5 view .LVU2624
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8407              		.loc 1 21 10 is_stmt 0 view .LVU2625
 8408 03a6 2046     		mov	r0, r4
 8409 03a8 FFF7FEFF 		bl	GPIO_ReadBits
 8410              	.LVL764:
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8411              		.loc 1 21 8 view .LVU2626
 8412 03ac C0B2     		uxtb	r0, r0
 8413 03ae 2870     		strb	r0, [r5]
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8414              		.loc 1 21 44 view .LVU2627
 8415 03b0 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  21:../USER/vramdisp.c **** 	wddt.i[0] = adr;
 8416              		.loc 1 21 2 view .LVU2628
 8417 03b2 11F00101 		ands	r1, r1, #1
 8418 03b6 F6D1     		bne	.L425
  22:../USER/vramdisp.c **** }
 8419              		.loc 1 22 2 is_stmt 1 view .LVU2629
 8420              	.LBE809:
 8421              	.LBE814:
 8422              	.LBB815:
 8423              	.LBB816:
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8424              		.loc 1 51 2 is_stmt 0 view .LVU2630
 8425 03b8 2046     		mov	r0, r4
 8426              	.LBE816:
 8427              	.LBE815:
 8428              	.LBB820:
 8429              	.LBB810:
  22:../USER/vramdisp.c **** }
 8430              		.loc 1 22 12 view .LVU2631
 8431 03ba C9F80070 		str	r7, [r9]
 8432              	.LVL765:
  22:../USER/vramdisp.c **** }
 8433              		.loc 1 22 12 view .LVU2632
 8434              	.LBE810:
 8435              	.LBE820:
 196:../USER/vramdisp.c **** 	//}
 8436              		.loc 1 196 3 is_stmt 1 view .LVU2633
 8437              	.LBB821:
 8438              	.LBI815:
  49:../USER/vramdisp.c **** 	unsigned char i, dt;
 8439              		.loc 1 49 6 view .LVU2634
 8440              	.LBB817:
  50:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x0000);	// dir=in clk = Lo
 8441              		.loc 1 50 2 view .LVU2635
  51:../USER/vramdisp.c **** 	do{pd = GPIO_ReadBits(GPIO0);}  while((pd & 1)!=0);		// Wait Busy
 8442              		.loc 1 51 2 view .LVU2636
 8443 03be FFF7FEFF 		bl	GPIO_WriteBits
 8444              	.LVL766:
 8445              	.L426:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8446              		.loc 1 52 2 view .LVU2637
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8447              		.loc 1 52 5 view .LVU2638
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8448              		.loc 1 52 10 is_stmt 0 view .LVU2639
 8449 03c2 2046     		mov	r0, r4
 8450 03c4 FFF7FEFF 		bl	GPIO_ReadBits
 8451              	.LVL767:
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8452              		.loc 1 52 8 view .LVU2640
 8453 03c8 C0B2     		uxtb	r0, r0
 8454 03ca 2870     		strb	r0, [r5]
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8455              		.loc 1 52 44 view .LVU2641
 8456 03cc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  52:../USER/vramdisp.c **** 	GPIO_WriteBits(GPIO0,0x200);	// dir=out clk=Lo
 8457              		.loc 1 52 2 view .LVU2642
 8458 03ce DB07     		lsls	r3, r3, #31
 8459 03d0 F7D4     		bmi	.L426
  53:../USER/vramdisp.c **** 	for(i=0;i<dl;i++){
 8460              		.loc 1 53 2 is_stmt 1 view .LVU2643
 8461 03d2 4FF40071 		mov	r1, #512
 8462 03d6 2046     		mov	r0, r4
 8463 03d8 FFF7FEFF 		bl	GPIO_WriteBits
 8464              	.LVL768:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 8465              		.loc 1 54 2 view .LVU2644
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 8466              		.loc 1 54 2 is_stmt 0 view .LVU2645
 8467 03dc 1D4F     		ldr	r7, .L462+4
 8468              	.LVL769:
 8469              	.L427:
  55:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x300+dt);
 8470              		.loc 1 55 3 is_stmt 1 view .LVU2646
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 8471              		.loc 1 56 3 view .LVU2647
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 8472              		.loc 1 56 29 is_stmt 0 view .LVU2648
 8473 03de 17F801BF 		ldrb	fp, [r7, #1]!	@ zero_extendqisi2
 8474              	.LVL770:
  56:../USER/vramdisp.c **** 		GPIO_WriteBits(GPIO0,0x200+dt);
 8475              		.loc 1 56 3 view .LVU2649
 8476 03e2 2046     		mov	r0, r4
 8477 03e4 0BF54071 		add	r1, fp, #768
 8478 03e8 FFF7FEFF 		bl	GPIO_WriteBits
 8479              	.LVL771:
  57:../USER/vramdisp.c **** 	}
 8480              		.loc 1 57 3 is_stmt 1 view .LVU2650
 8481 03ec 0BF50071 		add	r1, fp, #512
 8482 03f0 2046     		mov	r0, r4
 8483 03f2 FFF7FEFF 		bl	GPIO_WriteBits
 8484              	.LVL772:
  54:../USER/vramdisp.c **** 		dt = wddt.b[i];
 8485              		.loc 1 54 2 is_stmt 0 view .LVU2651
 8486 03f6 BA45     		cmp	r10, r7
 8487 03f8 F1D1     		bne	.L427
  59:../USER/vramdisp.c **** }
 8488              		.loc 1 59 2 is_stmt 1 view .LVU2652
 8489              	.LBE817:
 8490              	.LBE821:
 8491              	.LBE803:
 8492              	.LBE802:
 278:../USER/vramdisp.c ****     if ( ly - 1 >= MINY ) scanLine( lx, rx, ly - 1, col ); // Scan UP Line
 8493              		.loc 1 278 31 is_stmt 0 view .LVU2653
 8494 03fa 0136     		adds	r6, r6, #1
 8495              	.LVL773:
 8496              	.LBB826:
 8497              	.LBB824:
 8498              	.LBB822:
 8499              	.LBB818:
  59:../USER/vramdisp.c **** }
 8500              		.loc 1 59 2 view .LVU2654
 8501 03fc 0021     		movs	r1, #0
 8502 03fe 2046     		mov	r0, r4
 8503              	.LBE818:
 8504              	.LBE822:
 8505              	.LBE824:
 8506              	.LBE826:
 278:../USER/vramdisp.c ****     if ( ly - 1 >= MINY ) scanLine( lx, rx, ly - 1, col ); // Scan UP Line
 8507              		.loc 1 278 31 view .LVU2655
 8508 0400 B6B2     		uxth	r6, r6
 8509              	.LBB827:
 8510              	.LBB825:
 8511              	.LBB823:
 8512              	.LBB819:
  59:../USER/vramdisp.c **** }
 8513              		.loc 1 59 2 view .LVU2656
 8514 0402 FFF7FEFF 		bl	GPIO_WriteBits
 8515              	.LVL774:
  59:../USER/vramdisp.c **** }
 8516              		.loc 1 59 2 view .LVU2657
 8517              	.LBE819:
 8518              	.LBE823:
 8519              	.LBE825:
 8520              	.LBE827:
 278:../USER/vramdisp.c ****     if ( ly - 1 >= MINY ) scanLine( lx, rx, ly - 1, col ); // Scan UP Line
 8521              		.loc 1 278 5 view .LVU2658
 8522 0406 4645     		cmp	r6, r8
 8523 0408 BDD9     		bls	.L428
 8524 040a DDF818B0 		ldr	fp, [sp, #24]
 8525              	.LVL775:
 8526              	.L424:
 279:../USER/vramdisp.c ****     if ( ly + 1 <= MAXY ) scanLine( lx, rx, ly + 1, col ); // Scan Down Line
 8527              		.loc 1 279 5 is_stmt 1 view .LVU2659
 279:../USER/vramdisp.c ****     if ( ly + 1 <= MAXY ) scanLine( lx, rx, ly + 1, col ); // Scan Down Line
 8528              		.loc 1 279 8 is_stmt 0 view .LVU2660
 8529 040e 049B     		ldr	r3, [sp, #16]
 8530 0410 43B9     		cbnz	r3, .L429
 8531              	.L430:
 280:../USER/vramdisp.c ****   } while ( sIdx != eIdx );
 8532              		.loc 1 280 27 is_stmt 1 view .LVU2661
 8533 0412 049A     		ldr	r2, [sp, #16]
 8534 0414 4146     		mov	r1, r8
 8535 0416 0132     		adds	r2, r2, #1
 8536 0418 92B2     		uxth	r2, r2
 8537 041a 5846     		mov	r0, fp
 8538 041c 019B     		ldr	r3, [sp, #4]
 8539 041e FFF7FEFF 		bl	scanLine
 8540              	.LVL776:
 8541 0422 88E6     		b	.L408
 8542              	.L429:
 279:../USER/vramdisp.c ****     if ( ly + 1 <= MAXY ) scanLine( lx, rx, ly + 1, col ); // Scan Down Line
 8543              		.loc 1 279 27 discriminator 1 view .LVU2662
 8544 0424 1E46     		mov	r6, r3
 8545 0426 5A1E     		subs	r2, r3, #1
 8546 0428 92B2     		uxth	r2, r2
 8547 042a 019B     		ldr	r3, [sp, #4]
 8548 042c 4146     		mov	r1, r8
 8549 042e 5846     		mov	r0, fp
 8550 0430 FFF7FEFF 		bl	scanLine
 8551              	.LVL777:
 280:../USER/vramdisp.c ****   } while ( sIdx != eIdx );
 8552              		.loc 1 280 5 discriminator 1 view .LVU2663
 280:../USER/vramdisp.c ****   } while ( sIdx != eIdx );
 8553              		.loc 1 280 8 is_stmt 0 discriminator 1 view .LVU2664
 8554 0434 B6F5B47F 		cmp	r6, #360
 8555 0438 BFF47DAE 		bcs	.L408
 8556 043c E9E7     		b	.L430
 8557              	.L399:
 282:../USER/vramdisp.c **** }
 8558              		.loc 1 282 1 view .LVU2665
 8559 043e 09B0     		add	sp, sp, #36
 8560              		.cfi_remember_state
 8561              		.cfi_def_cfa_offset 36
 8562              		@ sp needed
 8563 0440 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8564              	.LVL778:
 8565              	.L459:
 8566              		.cfi_restore_state
 8567              		.loc 1 282 1 view .LVU2666
 8568 0444 DDF81480 		ldr	r8, [sp, #20]
 8569              	.LVL779:
 278:../USER/vramdisp.c ****     if ( ly - 1 >= MINY ) scanLine( lx, rx, ly - 1, col ); // Scan UP Line
 8570              		.loc 1 278 5 view .LVU2667
 8571 0448 C345     		cmp	fp, r8
 8572 044a 93D9     		bls	.L433
 8573 044c DFE7     		b	.L424
 8574              	.L463:
 8575 044e 00BF     		.align	2
 8576              	.L462:
 8577 0450 05000000 		.word	wddt+5
 8578 0454 FFFFFFFF 		.word	wddt-1
 8579              		.cfi_endproc
 8580              	.LFE50:
 8582              		.comm	eIdx,4,4
 8583              		.comm	sIdx,4,4
 8584              		.global	buff
 8585              		.comm	wddt,40,4
 8586              		.comm	aryex,1024,4
 8587              		.comm	pd,1,1
 8588              		.global	FONT_8x8
 8589              		.section	.bss.csrmd,"aw",%nobits
 8590              		.align	2
 8591              		.set	.LANCHOR4,. + 0
 8594              	csrmd:
 8595 0000 00000000 		.space	4
 8596              		.section	.bss.csrx,"aw",%nobits
 8597              		.align	2
 8598              		.set	.LANCHOR2,. + 0
 8601              	csrx:
 8602 0000 00000000 		.space	4
 8603              		.section	.bss.csry,"aw",%nobits
 8604              		.align	2
 8605              		.set	.LANCHOR3,. + 0
 8608              	csry:
 8609 0000 00000000 		.space	4
 8610              		.section	.bss.dispinitf,"aw",%nobits
 8611              		.align	2
 8612              		.set	.LANCHOR1,. + 0
 8615              	dispinitf:
 8616 0000 00000000 		.space	4
 8617              		.section	.data.buff,"aw"
 8618              		.align	2
 8619              		.set	.LANCHOR5,. + 0
 8622              	buff:
 8623 0000 00000000 		.word	aryex
 8624              		.section	.rodata.FONT_8x8,"a"
 8625              		.align	2
 8626              		.set	.LANCHOR0,. + 0
 8629              	FONT_8x8:
 8630 0000 00       		.byte	0
 8631 0001 00       		.byte	0
 8632 0002 00       		.byte	0
 8633 0003 00       		.byte	0
 8634 0004 00       		.byte	0
 8635 0005 00       		.byte	0
 8636 0006 00       		.byte	0
 8637 0007 00       		.byte	0
 8638 0008 7E       		.byte	126
 8639 0009 81       		.byte	-127
 8640 000a A5       		.byte	-91
 8641 000b 81       		.byte	-127
 8642 000c BD       		.byte	-67
 8643 000d 99       		.byte	-103
 8644 000e 81       		.byte	-127
 8645 000f 7E       		.byte	126
 8646 0010 7E       		.byte	126
 8647 0011 FF       		.byte	-1
 8648 0012 DB       		.byte	-37
 8649 0013 FF       		.byte	-1
 8650 0014 C3       		.byte	-61
 8651 0015 E7       		.byte	-25
 8652 0016 FF       		.byte	-1
 8653 0017 7E       		.byte	126
 8654 0018 6C       		.byte	108
 8655 0019 FE       		.byte	-2
 8656 001a FE       		.byte	-2
 8657 001b FE       		.byte	-2
 8658 001c 7C       		.byte	124
 8659 001d 38       		.byte	56
 8660 001e 10       		.byte	16
 8661 001f 00       		.byte	0
 8662 0020 10       		.byte	16
 8663 0021 38       		.byte	56
 8664 0022 7C       		.byte	124
 8665 0023 FE       		.byte	-2
 8666 0024 7C       		.byte	124
 8667 0025 38       		.byte	56
 8668 0026 10       		.byte	16
 8669 0027 00       		.byte	0
 8670 0028 3C       		.byte	60
 8671 0029 3C       		.byte	60
 8672 002a 18       		.byte	24
 8673 002b FF       		.byte	-1
 8674 002c E7       		.byte	-25
 8675 002d 18       		.byte	24
 8676 002e 3C       		.byte	60
 8677 002f 00       		.byte	0
 8678 0030 10       		.byte	16
 8679 0031 38       		.byte	56
 8680 0032 7C       		.byte	124
 8681 0033 FE       		.byte	-2
 8682 0034 EE       		.byte	-18
 8683 0035 10       		.byte	16
 8684 0036 38       		.byte	56
 8685 0037 00       		.byte	0
 8686 0038 00       		.byte	0
 8687 0039 00       		.byte	0
 8688 003a 18       		.byte	24
 8689 003b 3C       		.byte	60
 8690 003c 3C       		.byte	60
 8691 003d 18       		.byte	24
 8692 003e 00       		.byte	0
 8693 003f 00       		.byte	0
 8694 0040 FF       		.byte	-1
 8695 0041 FF       		.byte	-1
 8696 0042 E7       		.byte	-25
 8697 0043 C3       		.byte	-61
 8698 0044 C3       		.byte	-61
 8699 0045 E7       		.byte	-25
 8700 0046 FF       		.byte	-1
 8701 0047 FF       		.byte	-1
 8702 0048 00       		.byte	0
 8703 0049 3C       		.byte	60
 8704 004a 66       		.byte	102
 8705 004b 42       		.byte	66
 8706 004c 42       		.byte	66
 8707 004d 66       		.byte	102
 8708 004e 3C       		.byte	60
 8709 004f 00       		.byte	0
 8710 0050 FF       		.byte	-1
 8711 0051 C3       		.byte	-61
 8712 0052 99       		.byte	-103
 8713 0053 BD       		.byte	-67
 8714 0054 BD       		.byte	-67
 8715 0055 99       		.byte	-103
 8716 0056 C3       		.byte	-61
 8717 0057 FF       		.byte	-1
 8718 0058 1E       		.byte	30
 8719 0059 06       		.byte	6
 8720 005a 0A       		.byte	10
 8721 005b 78       		.byte	120
 8722 005c CC       		.byte	-52
 8723 005d CC       		.byte	-52
 8724 005e 78       		.byte	120
 8725 005f 00       		.byte	0
 8726 0060 3C       		.byte	60
 8727 0061 42       		.byte	66
 8728 0062 42       		.byte	66
 8729 0063 42       		.byte	66
 8730 0064 3C       		.byte	60
 8731 0065 18       		.byte	24
 8732 0066 7E       		.byte	126
 8733 0067 18       		.byte	24
 8734 0068 08       		.byte	8
 8735 0069 0C       		.byte	12
 8736 006a 0A       		.byte	10
 8737 006b 0A       		.byte	10
 8738 006c 08       		.byte	8
 8739 006d 78       		.byte	120
 8740 006e F0       		.byte	-16
 8741 006f 00       		.byte	0
 8742 0070 18       		.byte	24
 8743 0071 14       		.byte	20
 8744 0072 1A       		.byte	26
 8745 0073 16       		.byte	22
 8746 0074 72       		.byte	114
 8747 0075 E2       		.byte	-30
 8748 0076 0E       		.byte	14
 8749 0077 1C       		.byte	28
 8750 0078 10       		.byte	16
 8751 0079 54       		.byte	84
 8752 007a 38       		.byte	56
 8753 007b EE       		.byte	-18
 8754 007c 38       		.byte	56
 8755 007d 54       		.byte	84
 8756 007e 10       		.byte	16
 8757 007f 00       		.byte	0
 8758 0080 80       		.byte	-128
 8759 0081 E0       		.byte	-32
 8760 0082 F8       		.byte	-8
 8761 0083 FE       		.byte	-2
 8762 0084 F8       		.byte	-8
 8763 0085 E0       		.byte	-32
 8764 0086 80       		.byte	-128
 8765 0087 00       		.byte	0
 8766 0088 02       		.byte	2
 8767 0089 0E       		.byte	14
 8768 008a 3E       		.byte	62
 8769 008b FE       		.byte	-2
 8770 008c 3E       		.byte	62
 8771 008d 0E       		.byte	14
 8772 008e 02       		.byte	2
 8773 008f 00       		.byte	0
 8774 0090 18       		.byte	24
 8775 0091 3C       		.byte	60
 8776 0092 5A       		.byte	90
 8777 0093 18       		.byte	24
 8778 0094 5A       		.byte	90
 8779 0095 3C       		.byte	60
 8780 0096 18       		.byte	24
 8781 0097 00       		.byte	0
 8782 0098 66       		.byte	102
 8783 0099 66       		.byte	102
 8784 009a 66       		.byte	102
 8785 009b 66       		.byte	102
 8786 009c 66       		.byte	102
 8787 009d 00       		.byte	0
 8788 009e 66       		.byte	102
 8789 009f 00       		.byte	0
 8790 00a0 7F       		.byte	127
 8791 00a1 DB       		.byte	-37
 8792 00a2 DB       		.byte	-37
 8793 00a3 DB       		.byte	-37
 8794 00a4 7B       		.byte	123
 8795 00a5 1B       		.byte	27
 8796 00a6 1B       		.byte	27
 8797 00a7 00       		.byte	0
 8798 00a8 1C       		.byte	28
 8799 00a9 22       		.byte	34
 8800 00aa 38       		.byte	56
 8801 00ab 44       		.byte	68
 8802 00ac 44       		.byte	68
 8803 00ad 38       		.byte	56
 8804 00ae 88       		.byte	-120
 8805 00af 70       		.byte	112
 8806 00b0 00       		.byte	0
 8807 00b1 00       		.byte	0
 8808 00b2 00       		.byte	0
 8809 00b3 00       		.byte	0
 8810 00b4 7E       		.byte	126
 8811 00b5 7E       		.byte	126
 8812 00b6 7E       		.byte	126
 8813 00b7 00       		.byte	0
 8814 00b8 18       		.byte	24
 8815 00b9 3C       		.byte	60
 8816 00ba 5A       		.byte	90
 8817 00bb 18       		.byte	24
 8818 00bc 5A       		.byte	90
 8819 00bd 3C       		.byte	60
 8820 00be 18       		.byte	24
 8821 00bf 7E       		.byte	126
 8822 00c0 18       		.byte	24
 8823 00c1 3C       		.byte	60
 8824 00c2 5A       		.byte	90
 8825 00c3 18       		.byte	24
 8826 00c4 18       		.byte	24
 8827 00c5 18       		.byte	24
 8828 00c6 18       		.byte	24
 8829 00c7 00       		.byte	0
 8830 00c8 18       		.byte	24
 8831 00c9 18       		.byte	24
 8832 00ca 18       		.byte	24
 8833 00cb 18       		.byte	24
 8834 00cc 5A       		.byte	90
 8835 00cd 3C       		.byte	60
 8836 00ce 18       		.byte	24
 8837 00cf 00       		.byte	0
 8838 00d0 00       		.byte	0
 8839 00d1 18       		.byte	24
 8840 00d2 0C       		.byte	12
 8841 00d3 FE       		.byte	-2
 8842 00d4 0C       		.byte	12
 8843 00d5 18       		.byte	24
 8844 00d6 00       		.byte	0
 8845 00d7 00       		.byte	0
 8846 00d8 00       		.byte	0
 8847 00d9 30       		.byte	48
 8848 00da 60       		.byte	96
 8849 00db FE       		.byte	-2
 8850 00dc 60       		.byte	96
 8851 00dd 30       		.byte	48
 8852 00de 00       		.byte	0
 8853 00df 00       		.byte	0
 8854 00e0 00       		.byte	0
 8855 00e1 00       		.byte	0
 8856 00e2 00       		.byte	0
 8857 00e3 C0       		.byte	-64
 8858 00e4 C0       		.byte	-64
 8859 00e5 C0       		.byte	-64
 8860 00e6 FF       		.byte	-1
 8861 00e7 00       		.byte	0
 8862 00e8 00       		.byte	0
 8863 00e9 24       		.byte	36
 8864 00ea 42       		.byte	66
 8865 00eb FF       		.byte	-1
 8866 00ec 42       		.byte	66
 8867 00ed 24       		.byte	36
 8868 00ee 00       		.byte	0
 8869 00ef 00       		.byte	0
 8870 00f0 00       		.byte	0
 8871 00f1 10       		.byte	16
 8872 00f2 38       		.byte	56
 8873 00f3 7C       		.byte	124
 8874 00f4 FE       		.byte	-2
 8875 00f5 FE       		.byte	-2
 8876 00f6 00       		.byte	0
 8877 00f7 00       		.byte	0
 8878 00f8 00       		.byte	0
 8879 00f9 FE       		.byte	-2
 8880 00fa FE       		.byte	-2
 8881 00fb 7C       		.byte	124
 8882 00fc 38       		.byte	56
 8883 00fd 10       		.byte	16
 8884 00fe 00       		.byte	0
 8885 00ff 00       		.byte	0
 8886 0100 00       		.byte	0
 8887 0101 00       		.byte	0
 8888 0102 00       		.byte	0
 8889 0103 00       		.byte	0
 8890 0104 00       		.byte	0
 8891 0105 00       		.byte	0
 8892 0106 00       		.byte	0
 8893 0107 00       		.byte	0
 8894 0108 30       		.byte	48
 8895 0109 78       		.byte	120
 8896 010a 78       		.byte	120
 8897 010b 30       		.byte	48
 8898 010c 30       		.byte	48
 8899 010d 00       		.byte	0
 8900 010e 30       		.byte	48
 8901 010f 00       		.byte	0
 8902 0110 6C       		.byte	108
 8903 0111 24       		.byte	36
 8904 0112 24       		.byte	36
 8905 0113 00       		.byte	0
 8906 0114 00       		.byte	0
 8907 0115 00       		.byte	0
 8908 0116 00       		.byte	0
 8909 0117 00       		.byte	0
 8910 0118 6C       		.byte	108
 8911 0119 6C       		.byte	108
 8912 011a FE       		.byte	-2
 8913 011b 6C       		.byte	108
 8914 011c FE       		.byte	-2
 8915 011d 6C       		.byte	108
 8916 011e 6C       		.byte	108
 8917 011f 00       		.byte	0
 8918 0120 10       		.byte	16
 8919 0121 7C       		.byte	124
 8920 0122 D0       		.byte	-48
 8921 0123 7C       		.byte	124
 8922 0124 16       		.byte	22
 8923 0125 FC       		.byte	-4
 8924 0126 10       		.byte	16
 8925 0127 00       		.byte	0
 8926 0128 00       		.byte	0
 8927 0129 66       		.byte	102
 8928 012a AC       		.byte	-84
 8929 012b D8       		.byte	-40
 8930 012c 36       		.byte	54
 8931 012d 6A       		.byte	106
 8932 012e CC       		.byte	-52
 8933 012f 00       		.byte	0
 8934 0130 38       		.byte	56
 8935 0131 4C       		.byte	76
 8936 0132 38       		.byte	56
 8937 0133 78       		.byte	120
 8938 0134 CE       		.byte	-50
 8939 0135 CC       		.byte	-52
 8940 0136 7A       		.byte	122
 8941 0137 00       		.byte	0
 8942 0138 30       		.byte	48
 8943 0139 10       		.byte	16
 8944 013a 20       		.byte	32
 8945 013b 00       		.byte	0
 8946 013c 00       		.byte	0
 8947 013d 00       		.byte	0
 8948 013e 00       		.byte	0
 8949 013f 00       		.byte	0
 8950 0140 18       		.byte	24
 8951 0141 30       		.byte	48
 8952 0142 60       		.byte	96
 8953 0143 60       		.byte	96
 8954 0144 60       		.byte	96
 8955 0145 30       		.byte	48
 8956 0146 18       		.byte	24
 8957 0147 00       		.byte	0
 8958 0148 60       		.byte	96
 8959 0149 30       		.byte	48
 8960 014a 18       		.byte	24
 8961 014b 18       		.byte	24
 8962 014c 18       		.byte	24
 8963 014d 30       		.byte	48
 8964 014e 60       		.byte	96
 8965 014f 00       		.byte	0
 8966 0150 00       		.byte	0
 8967 0151 66       		.byte	102
 8968 0152 3C       		.byte	60
 8969 0153 FF       		.byte	-1
 8970 0154 3C       		.byte	60
 8971 0155 66       		.byte	102
 8972 0156 00       		.byte	0
 8973 0157 00       		.byte	0
 8974 0158 00       		.byte	0
 8975 0159 30       		.byte	48
 8976 015a 30       		.byte	48
 8977 015b FC       		.byte	-4
 8978 015c 30       		.byte	48
 8979 015d 30       		.byte	48
 8980 015e 00       		.byte	0
 8981 015f 00       		.byte	0
 8982 0160 00       		.byte	0
 8983 0161 00       		.byte	0
 8984 0162 00       		.byte	0
 8985 0163 00       		.byte	0
 8986 0164 00       		.byte	0
 8987 0165 30       		.byte	48
 8988 0166 10       		.byte	16
 8989 0167 20       		.byte	32
 8990 0168 00       		.byte	0
 8991 0169 00       		.byte	0
 8992 016a 00       		.byte	0
 8993 016b FC       		.byte	-4
 8994 016c 00       		.byte	0
 8995 016d 00       		.byte	0
 8996 016e 00       		.byte	0
 8997 016f 00       		.byte	0
 8998 0170 00       		.byte	0
 8999 0171 00       		.byte	0
 9000 0172 00       		.byte	0
 9001 0173 00       		.byte	0
 9002 0174 00       		.byte	0
 9003 0175 00       		.byte	0
 9004 0176 30       		.byte	48
 9005 0177 00       		.byte	0
 9006 0178 02       		.byte	2
 9007 0179 06       		.byte	6
 9008 017a 0C       		.byte	12
 9009 017b 18       		.byte	24
 9010 017c 30       		.byte	48
 9011 017d 60       		.byte	96
 9012 017e C0       		.byte	-64
 9013 017f 00       		.byte	0
 9014 0180 7C       		.byte	124
 9015 0181 CE       		.byte	-50
 9016 0182 DE       		.byte	-34
 9017 0183 F6       		.byte	-10
 9018 0184 E6       		.byte	-26
 9019 0185 E6       		.byte	-26
 9020 0186 7C       		.byte	124
 9021 0187 00       		.byte	0
 9022 0188 18       		.byte	24
 9023 0189 38       		.byte	56
 9024 018a 78       		.byte	120
 9025 018b 18       		.byte	24
 9026 018c 18       		.byte	24
 9027 018d 18       		.byte	24
 9028 018e 7E       		.byte	126
 9029 018f 00       		.byte	0
 9030 0190 7C       		.byte	124
 9031 0191 C6       		.byte	-58
 9032 0192 06       		.byte	6
 9033 0193 1C       		.byte	28
 9034 0194 70       		.byte	112
 9035 0195 C0       		.byte	-64
 9036 0196 FE       		.byte	-2
 9037 0197 00       		.byte	0
 9038 0198 7C       		.byte	124
 9039 0199 C6       		.byte	-58
 9040 019a 06       		.byte	6
 9041 019b 3C       		.byte	60
 9042 019c 06       		.byte	6
 9043 019d C6       		.byte	-58
 9044 019e 7C       		.byte	124
 9045 019f 00       		.byte	0
 9046 01a0 1C       		.byte	28
 9047 01a1 3C       		.byte	60
 9048 01a2 6C       		.byte	108
 9049 01a3 CC       		.byte	-52
 9050 01a4 FE       		.byte	-2
 9051 01a5 0C       		.byte	12
 9052 01a6 1E       		.byte	30
 9053 01a7 00       		.byte	0
 9054 01a8 FE       		.byte	-2
 9055 01a9 C0       		.byte	-64
 9056 01aa FC       		.byte	-4
 9057 01ab 06       		.byte	6
 9058 01ac 06       		.byte	6
 9059 01ad C6       		.byte	-58
 9060 01ae 7C       		.byte	124
 9061 01af 00       		.byte	0
 9062 01b0 7C       		.byte	124
 9063 01b1 C6       		.byte	-58
 9064 01b2 C0       		.byte	-64
 9065 01b3 FC       		.byte	-4
 9066 01b4 C6       		.byte	-58
 9067 01b5 C6       		.byte	-58
 9068 01b6 7C       		.byte	124
 9069 01b7 00       		.byte	0
 9070 01b8 FE       		.byte	-2
 9071 01b9 C6       		.byte	-58
 9072 01ba 86       		.byte	-122
 9073 01bb 0C       		.byte	12
 9074 01bc 18       		.byte	24
 9075 01bd 30       		.byte	48
 9076 01be 30       		.byte	48
 9077 01bf 00       		.byte	0
 9078 01c0 7C       		.byte	124
 9079 01c1 C6       		.byte	-58
 9080 01c2 C6       		.byte	-58
 9081 01c3 7C       		.byte	124
 9082 01c4 C6       		.byte	-58
 9083 01c5 C6       		.byte	-58
 9084 01c6 7C       		.byte	124
 9085 01c7 00       		.byte	0
 9086 01c8 7C       		.byte	124
 9087 01c9 C6       		.byte	-58
 9088 01ca C6       		.byte	-58
 9089 01cb 7E       		.byte	126
 9090 01cc 06       		.byte	6
 9091 01cd C6       		.byte	-58
 9092 01ce 7C       		.byte	124
 9093 01cf 00       		.byte	0
 9094 01d0 00       		.byte	0
 9095 01d1 30       		.byte	48
 9096 01d2 00       		.byte	0
 9097 01d3 00       		.byte	0
 9098 01d4 00       		.byte	0
 9099 01d5 30       		.byte	48
 9100 01d6 00       		.byte	0
 9101 01d7 00       		.byte	0
 9102 01d8 00       		.byte	0
 9103 01d9 30       		.byte	48
 9104 01da 00       		.byte	0
 9105 01db 00       		.byte	0
 9106 01dc 00       		.byte	0
 9107 01dd 30       		.byte	48
 9108 01de 10       		.byte	16
 9109 01df 20       		.byte	32
 9110 01e0 0C       		.byte	12
 9111 01e1 18       		.byte	24
 9112 01e2 30       		.byte	48
 9113 01e3 60       		.byte	96
 9114 01e4 30       		.byte	48
 9115 01e5 18       		.byte	24
 9116 01e6 0C       		.byte	12
 9117 01e7 00       		.byte	0
 9118 01e8 00       		.byte	0
 9119 01e9 00       		.byte	0
 9120 01ea 7E       		.byte	126
 9121 01eb 00       		.byte	0
 9122 01ec 00       		.byte	0
 9123 01ed 7E       		.byte	126
 9124 01ee 00       		.byte	0
 9125 01ef 00       		.byte	0
 9126 01f0 60       		.byte	96
 9127 01f1 30       		.byte	48
 9128 01f2 18       		.byte	24
 9129 01f3 0C       		.byte	12
 9130 01f4 18       		.byte	24
 9131 01f5 30       		.byte	48
 9132 01f6 60       		.byte	96
 9133 01f7 00       		.byte	0
 9134 01f8 78       		.byte	120
 9135 01f9 CC       		.byte	-52
 9136 01fa 0C       		.byte	12
 9137 01fb 18       		.byte	24
 9138 01fc 30       		.byte	48
 9139 01fd 00       		.byte	0
 9140 01fe 30       		.byte	48
 9141 01ff 00       		.byte	0
 9142 0200 7C       		.byte	124
 9143 0201 82       		.byte	-126
 9144 0202 9E       		.byte	-98
 9145 0203 A6       		.byte	-90
 9146 0204 9E       		.byte	-98
 9147 0205 80       		.byte	-128
 9148 0206 7C       		.byte	124
 9149 0207 00       		.byte	0
 9150 0208 7C       		.byte	124
 9151 0209 C6       		.byte	-58
 9152 020a C6       		.byte	-58
 9153 020b FE       		.byte	-2
 9154 020c C6       		.byte	-58
 9155 020d C6       		.byte	-58
 9156 020e C6       		.byte	-58
 9157 020f 00       		.byte	0
 9158 0210 FC       		.byte	-4
 9159 0211 66       		.byte	102
 9160 0212 66       		.byte	102
 9161 0213 7C       		.byte	124
 9162 0214 66       		.byte	102
 9163 0215 66       		.byte	102
 9164 0216 FC       		.byte	-4
 9165 0217 00       		.byte	0
 9166 0218 7C       		.byte	124
 9167 0219 C6       		.byte	-58
 9168 021a C0       		.byte	-64
 9169 021b C0       		.byte	-64
 9170 021c C0       		.byte	-64
 9171 021d C6       		.byte	-58
 9172 021e 7C       		.byte	124
 9173 021f 00       		.byte	0
 9174 0220 FC       		.byte	-4
 9175 0221 66       		.byte	102
 9176 0222 66       		.byte	102
 9177 0223 66       		.byte	102
 9178 0224 66       		.byte	102
 9179 0225 66       		.byte	102
 9180 0226 FC       		.byte	-4
 9181 0227 00       		.byte	0
 9182 0228 FE       		.byte	-2
 9183 0229 62       		.byte	98
 9184 022a 68       		.byte	104
 9185 022b 78       		.byte	120
 9186 022c 68       		.byte	104
 9187 022d 62       		.byte	98
 9188 022e FE       		.byte	-2
 9189 022f 00       		.byte	0
 9190 0230 FE       		.byte	-2
 9191 0231 62       		.byte	98
 9192 0232 68       		.byte	104
 9193 0233 78       		.byte	120
 9194 0234 68       		.byte	104
 9195 0235 60       		.byte	96
 9196 0236 F0       		.byte	-16
 9197 0237 00       		.byte	0
 9198 0238 7C       		.byte	124
 9199 0239 C6       		.byte	-58
 9200 023a C6       		.byte	-58
 9201 023b C0       		.byte	-64
 9202 023c CE       		.byte	-50
 9203 023d C6       		.byte	-58
 9204 023e 7E       		.byte	126
 9205 023f 00       		.byte	0
 9206 0240 C6       		.byte	-58
 9207 0241 C6       		.byte	-58
 9208 0242 C6       		.byte	-58
 9209 0243 FE       		.byte	-2
 9210 0244 C6       		.byte	-58
 9211 0245 C6       		.byte	-58
 9212 0246 C6       		.byte	-58
 9213 0247 00       		.byte	0
 9214 0248 3C       		.byte	60
 9215 0249 18       		.byte	24
 9216 024a 18       		.byte	24
 9217 024b 18       		.byte	24
 9218 024c 18       		.byte	24
 9219 024d 18       		.byte	24
 9220 024e 3C       		.byte	60
 9221 024f 00       		.byte	0
 9222 0250 1E       		.byte	30
 9223 0251 0C       		.byte	12
 9224 0252 0C       		.byte	12
 9225 0253 0C       		.byte	12
 9226 0254 CC       		.byte	-52
 9227 0255 CC       		.byte	-52
 9228 0256 78       		.byte	120
 9229 0257 00       		.byte	0
 9230 0258 E6       		.byte	-26
 9231 0259 66       		.byte	102
 9232 025a 64       		.byte	100
 9233 025b 78       		.byte	120
 9234 025c 6C       		.byte	108
 9235 025d 66       		.byte	102
 9236 025e E6       		.byte	-26
 9237 025f 00       		.byte	0
 9238 0260 F0       		.byte	-16
 9239 0261 60       		.byte	96
 9240 0262 60       		.byte	96
 9241 0263 60       		.byte	96
 9242 0264 62       		.byte	98
 9243 0265 66       		.byte	102
 9244 0266 FE       		.byte	-2
 9245 0267 00       		.byte	0
 9246 0268 82       		.byte	-126
 9247 0269 C6       		.byte	-58
 9248 026a EE       		.byte	-18
 9249 026b FE       		.byte	-2
 9250 026c D6       		.byte	-42
 9251 026d C6       		.byte	-58
 9252 026e C6       		.byte	-58
 9253 026f 00       		.byte	0
 9254 0270 C6       		.byte	-58
 9255 0271 E6       		.byte	-26
 9256 0272 F6       		.byte	-10
 9257 0273 DE       		.byte	-34
 9258 0274 CE       		.byte	-50
 9259 0275 C6       		.byte	-58
 9260 0276 C6       		.byte	-58
 9261 0277 00       		.byte	0
 9262 0278 7C       		.byte	124
 9263 0279 C6       		.byte	-58
 9264 027a C6       		.byte	-58
 9265 027b C6       		.byte	-58
 9266 027c C6       		.byte	-58
 9267 027d C6       		.byte	-58
 9268 027e 7C       		.byte	124
 9269 027f 00       		.byte	0
 9270 0280 FC       		.byte	-4
 9271 0281 66       		.byte	102
 9272 0282 66       		.byte	102
 9273 0283 7C       		.byte	124
 9274 0284 60       		.byte	96
 9275 0285 60       		.byte	96
 9276 0286 F0       		.byte	-16
 9277 0287 00       		.byte	0
 9278 0288 7C       		.byte	124
 9279 0289 C6       		.byte	-58
 9280 028a C6       		.byte	-58
 9281 028b C6       		.byte	-58
 9282 028c D6       		.byte	-42
 9283 028d DE       		.byte	-34
 9284 028e 7C       		.byte	124
 9285 028f 06       		.byte	6
 9286 0290 FC       		.byte	-4
 9287 0291 66       		.byte	102
 9288 0292 66       		.byte	102
 9289 0293 7C       		.byte	124
 9290 0294 66       		.byte	102
 9291 0295 66       		.byte	102
 9292 0296 E6       		.byte	-26
 9293 0297 00       		.byte	0
 9294 0298 7C       		.byte	124
 9295 0299 C6       		.byte	-58
 9296 029a C0       		.byte	-64
 9297 029b 7C       		.byte	124
 9298 029c 06       		.byte	6
 9299 029d C6       		.byte	-58
 9300 029e 7C       		.byte	124
 9301 029f 00       		.byte	0
 9302 02a0 7E       		.byte	126
 9303 02a1 5A       		.byte	90
 9304 02a2 5A       		.byte	90
 9305 02a3 18       		.byte	24
 9306 02a4 18       		.byte	24
 9307 02a5 18       		.byte	24
 9308 02a6 3C       		.byte	60
 9309 02a7 00       		.byte	0
 9310 02a8 C6       		.byte	-58
 9311 02a9 C6       		.byte	-58
 9312 02aa C6       		.byte	-58
 9313 02ab C6       		.byte	-58
 9314 02ac C6       		.byte	-58
 9315 02ad C6       		.byte	-58
 9316 02ae 7C       		.byte	124
 9317 02af 00       		.byte	0
 9318 02b0 C6       		.byte	-58
 9319 02b1 C6       		.byte	-58
 9320 02b2 C6       		.byte	-58
 9321 02b3 C6       		.byte	-58
 9322 02b4 C6       		.byte	-58
 9323 02b5 6C       		.byte	108
 9324 02b6 38       		.byte	56
 9325 02b7 00       		.byte	0
 9326 02b8 C6       		.byte	-58
 9327 02b9 C6       		.byte	-58
 9328 02ba D6       		.byte	-42
 9329 02bb FE       		.byte	-2
 9330 02bc EE       		.byte	-18
 9331 02bd C6       		.byte	-58
 9332 02be 82       		.byte	-126
 9333 02bf 00       		.byte	0
 9334 02c0 C6       		.byte	-58
 9335 02c1 6C       		.byte	108
 9336 02c2 38       		.byte	56
 9337 02c3 38       		.byte	56
 9338 02c4 38       		.byte	56
 9339 02c5 6C       		.byte	108
 9340 02c6 C6       		.byte	-58
 9341 02c7 00       		.byte	0
 9342 02c8 66       		.byte	102
 9343 02c9 66       		.byte	102
 9344 02ca 66       		.byte	102
 9345 02cb 3C       		.byte	60
 9346 02cc 18       		.byte	24
 9347 02cd 18       		.byte	24
 9348 02ce 3C       		.byte	60
 9349 02cf 00       		.byte	0
 9350 02d0 FE       		.byte	-2
 9351 02d1 C6       		.byte	-58
 9352 02d2 8C       		.byte	-116
 9353 02d3 18       		.byte	24
 9354 02d4 32       		.byte	50
 9355 02d5 66       		.byte	102
 9356 02d6 FE       		.byte	-2
 9357 02d7 00       		.byte	0
 9358 02d8 78       		.byte	120
 9359 02d9 60       		.byte	96
 9360 02da 60       		.byte	96
 9361 02db 60       		.byte	96
 9362 02dc 60       		.byte	96
 9363 02dd 60       		.byte	96
 9364 02de 78       		.byte	120
 9365 02df 00       		.byte	0
 9366 02e0 C0       		.byte	-64
 9367 02e1 60       		.byte	96
 9368 02e2 30       		.byte	48
 9369 02e3 18       		.byte	24
 9370 02e4 0C       		.byte	12
 9371 02e5 06       		.byte	6
 9372 02e6 02       		.byte	2
 9373 02e7 00       		.byte	0
 9374 02e8 78       		.byte	120
 9375 02e9 18       		.byte	24
 9376 02ea 18       		.byte	24
 9377 02eb 18       		.byte	24
 9378 02ec 18       		.byte	24
 9379 02ed 18       		.byte	24
 9380 02ee 78       		.byte	120
 9381 02ef 00       		.byte	0
 9382 02f0 10       		.byte	16
 9383 02f1 38       		.byte	56
 9384 02f2 6C       		.byte	108
 9385 02f3 C6       		.byte	-58
 9386 02f4 00       		.byte	0
 9387 02f5 00       		.byte	0
 9388 02f6 00       		.byte	0
 9389 02f7 00       		.byte	0
 9390 02f8 00       		.byte	0
 9391 02f9 00       		.byte	0
 9392 02fa 00       		.byte	0
 9393 02fb 00       		.byte	0
 9394 02fc 00       		.byte	0
 9395 02fd 00       		.byte	0
 9396 02fe 00       		.byte	0
 9397 02ff FF       		.byte	-1
 9398 0300 30       		.byte	48
 9399 0301 20       		.byte	32
 9400 0302 10       		.byte	16
 9401 0303 00       		.byte	0
 9402 0304 00       		.byte	0
 9403 0305 00       		.byte	0
 9404 0306 00       		.byte	0
 9405 0307 00       		.byte	0
 9406 0308 00       		.byte	0
 9407 0309 00       		.byte	0
 9408 030a 78       		.byte	120
 9409 030b 0C       		.byte	12
 9410 030c 7C       		.byte	124
 9411 030d CC       		.byte	-52
 9412 030e 76       		.byte	118
 9413 030f 00       		.byte	0
 9414 0310 E0       		.byte	-32
 9415 0311 60       		.byte	96
 9416 0312 60       		.byte	96
 9417 0313 7C       		.byte	124
 9418 0314 66       		.byte	102
 9419 0315 66       		.byte	102
 9420 0316 7C       		.byte	124
 9421 0317 00       		.byte	0
 9422 0318 00       		.byte	0
 9423 0319 00       		.byte	0
 9424 031a 7C       		.byte	124
 9425 031b C6       		.byte	-58
 9426 031c C0       		.byte	-64
 9427 031d C6       		.byte	-58
 9428 031e 7C       		.byte	124
 9429 031f 00       		.byte	0
 9430 0320 1C       		.byte	28
 9431 0321 0C       		.byte	12
 9432 0322 0C       		.byte	12
 9433 0323 7C       		.byte	124
 9434 0324 CC       		.byte	-52
 9435 0325 CC       		.byte	-52
 9436 0326 76       		.byte	118
 9437 0327 00       		.byte	0
 9438 0328 00       		.byte	0
 9439 0329 00       		.byte	0
 9440 032a 7C       		.byte	124
 9441 032b C6       		.byte	-58
 9442 032c FE       		.byte	-2
 9443 032d C0       		.byte	-64
 9444 032e 7C       		.byte	124
 9445 032f 00       		.byte	0
 9446 0330 1C       		.byte	28
 9447 0331 36       		.byte	54
 9448 0332 30       		.byte	48
 9449 0333 78       		.byte	120
 9450 0334 30       		.byte	48
 9451 0335 30       		.byte	48
 9452 0336 78       		.byte	120
 9453 0337 00       		.byte	0
 9454 0338 00       		.byte	0
 9455 0339 00       		.byte	0
 9456 033a 76       		.byte	118
 9457 033b CC       		.byte	-52
 9458 033c CC       		.byte	-52
 9459 033d 7C       		.byte	124
 9460 033e 0C       		.byte	12
 9461 033f 78       		.byte	120
 9462 0340 E0       		.byte	-32
 9463 0341 60       		.byte	96
 9464 0342 6C       		.byte	108
 9465 0343 76       		.byte	118
 9466 0344 66       		.byte	102
 9467 0345 66       		.byte	102
 9468 0346 E6       		.byte	-26
 9469 0347 00       		.byte	0
 9470 0348 18       		.byte	24
 9471 0349 00       		.byte	0
 9472 034a 38       		.byte	56
 9473 034b 18       		.byte	24
 9474 034c 18       		.byte	24
 9475 034d 18       		.byte	24
 9476 034e 3C       		.byte	60
 9477 034f 00       		.byte	0
 9478 0350 00       		.byte	0
 9479 0351 0C       		.byte	12
 9480 0352 00       		.byte	0
 9481 0353 1C       		.byte	28
 9482 0354 0C       		.byte	12
 9483 0355 0C       		.byte	12
 9484 0356 CC       		.byte	-52
 9485 0357 78       		.byte	120
 9486 0358 E0       		.byte	-32
 9487 0359 60       		.byte	96
 9488 035a 66       		.byte	102
 9489 035b 6C       		.byte	108
 9490 035c 78       		.byte	120
 9491 035d 6C       		.byte	108
 9492 035e E6       		.byte	-26
 9493 035f 00       		.byte	0
 9494 0360 38       		.byte	56
 9495 0361 18       		.byte	24
 9496 0362 18       		.byte	24
 9497 0363 18       		.byte	24
 9498 0364 18       		.byte	24
 9499 0365 18       		.byte	24
 9500 0366 3C       		.byte	60
 9501 0367 00       		.byte	0
 9502 0368 00       		.byte	0
 9503 0369 00       		.byte	0
 9504 036a CC       		.byte	-52
 9505 036b FE       		.byte	-2
 9506 036c D6       		.byte	-42
 9507 036d D6       		.byte	-42
 9508 036e D6       		.byte	-42
 9509 036f 00       		.byte	0
 9510 0370 00       		.byte	0
 9511 0371 00       		.byte	0
 9512 0372 DC       		.byte	-36
 9513 0373 66       		.byte	102
 9514 0374 66       		.byte	102
 9515 0375 66       		.byte	102
 9516 0376 66       		.byte	102
 9517 0377 00       		.byte	0
 9518 0378 00       		.byte	0
 9519 0379 00       		.byte	0
 9520 037a 7C       		.byte	124
 9521 037b C6       		.byte	-58
 9522 037c C6       		.byte	-58
 9523 037d C6       		.byte	-58
 9524 037e 7C       		.byte	124
 9525 037f 00       		.byte	0
 9526 0380 00       		.byte	0
 9527 0381 00       		.byte	0
 9528 0382 DC       		.byte	-36
 9529 0383 66       		.byte	102
 9530 0384 66       		.byte	102
 9531 0385 7C       		.byte	124
 9532 0386 60       		.byte	96
 9533 0387 F0       		.byte	-16
 9534 0388 00       		.byte	0
 9535 0389 00       		.byte	0
 9536 038a 7C       		.byte	124
 9537 038b CC       		.byte	-52
 9538 038c CC       		.byte	-52
 9539 038d 7C       		.byte	124
 9540 038e 0C       		.byte	12
 9541 038f 1E       		.byte	30
 9542 0390 00       		.byte	0
 9543 0391 00       		.byte	0
 9544 0392 DE       		.byte	-34
 9545 0393 76       		.byte	118
 9546 0394 60       		.byte	96
 9547 0395 60       		.byte	96
 9548 0396 F0       		.byte	-16
 9549 0397 00       		.byte	0
 9550 0398 00       		.byte	0
 9551 0399 00       		.byte	0
 9552 039a 7C       		.byte	124
 9553 039b C0       		.byte	-64
 9554 039c 7C       		.byte	124
 9555 039d 06       		.byte	6
 9556 039e 7C       		.byte	124
 9557 039f 00       		.byte	0
 9558 03a0 10       		.byte	16
 9559 03a1 30       		.byte	48
 9560 03a2 FC       		.byte	-4
 9561 03a3 30       		.byte	48
 9562 03a4 30       		.byte	48
 9563 03a5 34       		.byte	52
 9564 03a6 18       		.byte	24
 9565 03a7 00       		.byte	0
 9566 03a8 00       		.byte	0
 9567 03a9 00       		.byte	0
 9568 03aa CC       		.byte	-52
 9569 03ab CC       		.byte	-52
 9570 03ac CC       		.byte	-52
 9571 03ad CC       		.byte	-52
 9572 03ae 76       		.byte	118
 9573 03af 00       		.byte	0
 9574 03b0 00       		.byte	0
 9575 03b1 00       		.byte	0
 9576 03b2 C6       		.byte	-58
 9577 03b3 C6       		.byte	-58
 9578 03b4 C6       		.byte	-58
 9579 03b5 6C       		.byte	108
 9580 03b6 38       		.byte	56
 9581 03b7 00       		.byte	0
 9582 03b8 00       		.byte	0
 9583 03b9 00       		.byte	0
 9584 03ba C6       		.byte	-58
 9585 03bb D6       		.byte	-42
 9586 03bc D6       		.byte	-42
 9587 03bd FE       		.byte	-2
 9588 03be 6C       		.byte	108
 9589 03bf 00       		.byte	0
 9590 03c0 00       		.byte	0
 9591 03c1 00       		.byte	0
 9592 03c2 C6       		.byte	-58
 9593 03c3 6C       		.byte	108
 9594 03c4 38       		.byte	56
 9595 03c5 6C       		.byte	108
 9596 03c6 C6       		.byte	-58
 9597 03c7 00       		.byte	0
 9598 03c8 00       		.byte	0
 9599 03c9 00       		.byte	0
 9600 03ca C6       		.byte	-58
 9601 03cb C6       		.byte	-58
 9602 03cc C6       		.byte	-58
 9603 03cd 7E       		.byte	126
 9604 03ce 06       		.byte	6
 9605 03cf 7C       		.byte	124
 9606 03d0 00       		.byte	0
 9607 03d1 00       		.byte	0
 9608 03d2 FC       		.byte	-4
 9609 03d3 98       		.byte	-104
 9610 03d4 30       		.byte	48
 9611 03d5 64       		.byte	100
 9612 03d6 FC       		.byte	-4
 9613 03d7 00       		.byte	0
 9614 03d8 0E       		.byte	14
 9615 03d9 18       		.byte	24
 9616 03da 18       		.byte	24
 9617 03db 30       		.byte	48
 9618 03dc 18       		.byte	24
 9619 03dd 18       		.byte	24
 9620 03de 0E       		.byte	14
 9621 03df 00       		.byte	0
 9622 03e0 18       		.byte	24
 9623 03e1 18       		.byte	24
 9624 03e2 18       		.byte	24
 9625 03e3 00       		.byte	0
 9626 03e4 18       		.byte	24
 9627 03e5 18       		.byte	24
 9628 03e6 18       		.byte	24
 9629 03e7 00       		.byte	0
 9630 03e8 E0       		.byte	-32
 9631 03e9 30       		.byte	48
 9632 03ea 30       		.byte	48
 9633 03eb 18       		.byte	24
 9634 03ec 30       		.byte	48
 9635 03ed 30       		.byte	48
 9636 03ee E0       		.byte	-32
 9637 03ef 00       		.byte	0
 9638 03f0 76       		.byte	118
 9639 03f1 DC       		.byte	-36
 9640 03f2 00       		.byte	0
 9641 03f3 00       		.byte	0
 9642 03f4 00       		.byte	0
 9643 03f5 00       		.byte	0
 9644 03f6 00       		.byte	0
 9645 03f7 00       		.byte	0
 9646 03f8 00       		.byte	0
 9647 03f9 10       		.byte	16
 9648 03fa 38       		.byte	56
 9649 03fb 6C       		.byte	108
 9650 03fc C6       		.byte	-58
 9651 03fd C6       		.byte	-58
 9652 03fe FE       		.byte	-2
 9653 03ff 00       		.byte	0
 9654 0400 7C       		.byte	124
 9655 0401 C6       		.byte	-58
 9656 0402 C0       		.byte	-64
 9657 0403 C0       		.byte	-64
 9658 0404 C6       		.byte	-58
 9659 0405 7C       		.byte	124
 9660 0406 18       		.byte	24
 9661 0407 70       		.byte	112
 9662 0408 CC       		.byte	-52
 9663 0409 00       		.byte	0
 9664 040a CC       		.byte	-52
 9665 040b CC       		.byte	-52
 9666 040c CC       		.byte	-52
 9667 040d CC       		.byte	-52
 9668 040e 76       		.byte	118
 9669 040f 00       		.byte	0
 9670 0410 0E       		.byte	14
 9671 0411 10       		.byte	16
 9672 0412 7C       		.byte	124
 9673 0413 C6       		.byte	-58
 9674 0414 FE       		.byte	-2
 9675 0415 C0       		.byte	-64
 9676 0416 7C       		.byte	124
 9677 0417 00       		.byte	0
 9678 0418 7C       		.byte	124
 9679 0419 82       		.byte	-126
 9680 041a 38       		.byte	56
 9681 041b 0C       		.byte	12
 9682 041c 7C       		.byte	124
 9683 041d CC       		.byte	-52
 9684 041e 76       		.byte	118
 9685 041f 00       		.byte	0
 9686 0420 CC       		.byte	-52
 9687 0421 00       		.byte	0
 9688 0422 78       		.byte	120
 9689 0423 0C       		.byte	12
 9690 0424 7C       		.byte	124
 9691 0425 CC       		.byte	-52
 9692 0426 76       		.byte	118
 9693 0427 00       		.byte	0
 9694 0428 E0       		.byte	-32
 9695 0429 10       		.byte	16
 9696 042a 78       		.byte	120
 9697 042b 0C       		.byte	12
 9698 042c 7C       		.byte	124
 9699 042d CC       		.byte	-52
 9700 042e 76       		.byte	118
 9701 042f 00       		.byte	0
 9702 0430 30       		.byte	48
 9703 0431 30       		.byte	48
 9704 0432 78       		.byte	120
 9705 0433 0C       		.byte	12
 9706 0434 7C       		.byte	124
 9707 0435 CC       		.byte	-52
 9708 0436 76       		.byte	118
 9709 0437 00       		.byte	0
 9710 0438 00       		.byte	0
 9711 0439 00       		.byte	0
 9712 043a 7C       		.byte	124
 9713 043b C0       		.byte	-64
 9714 043c C0       		.byte	-64
 9715 043d 7C       		.byte	124
 9716 043e 18       		.byte	24
 9717 043f 70       		.byte	112
 9718 0440 7C       		.byte	124
 9719 0441 82       		.byte	-126
 9720 0442 7C       		.byte	124
 9721 0443 C6       		.byte	-58
 9722 0444 FE       		.byte	-2
 9723 0445 C0       		.byte	-64
 9724 0446 7C       		.byte	124
 9725 0447 00       		.byte	0
 9726 0448 C6       		.byte	-58
 9727 0449 00       		.byte	0
 9728 044a 7C       		.byte	124
 9729 044b C6       		.byte	-58
 9730 044c FE       		.byte	-2
 9731 044d C0       		.byte	-64
 9732 044e 7C       		.byte	124
 9733 044f 00       		.byte	0
 9734 0450 E0       		.byte	-32
 9735 0451 10       		.byte	16
 9736 0452 7C       		.byte	124
 9737 0453 C6       		.byte	-58
 9738 0454 FE       		.byte	-2
 9739 0455 C0       		.byte	-64
 9740 0456 7C       		.byte	124
 9741 0457 00       		.byte	0
 9742 0458 66       		.byte	102
 9743 0459 00       		.byte	0
 9744 045a 38       		.byte	56
 9745 045b 18       		.byte	24
 9746 045c 18       		.byte	24
 9747 045d 18       		.byte	24
 9748 045e 3C       		.byte	60
 9749 045f 00       		.byte	0
 9750 0460 7C       		.byte	124
 9751 0461 82       		.byte	-126
 9752 0462 38       		.byte	56
 9753 0463 18       		.byte	24
 9754 0464 18       		.byte	24
 9755 0465 18       		.byte	24
 9756 0466 3C       		.byte	60
 9757 0467 00       		.byte	0
 9758 0468 E0       		.byte	-32
 9759 0469 10       		.byte	16
 9760 046a 38       		.byte	56
 9761 046b 18       		.byte	24
 9762 046c 18       		.byte	24
 9763 046d 18       		.byte	24
 9764 046e 3C       		.byte	60
 9765 046f 00       		.byte	0
 9766 0470 C6       		.byte	-58
 9767 0471 00       		.byte	0
 9768 0472 7C       		.byte	124
 9769 0473 C6       		.byte	-58
 9770 0474 FE       		.byte	-2
 9771 0475 C6       		.byte	-58
 9772 0476 C6       		.byte	-58
 9773 0477 00       		.byte	0
 9774 0478 38       		.byte	56
 9775 0479 38       		.byte	56
 9776 047a 7C       		.byte	124
 9777 047b C6       		.byte	-58
 9778 047c FE       		.byte	-2
 9779 047d C6       		.byte	-58
 9780 047e C6       		.byte	-58
 9781 047f 00       		.byte	0
 9782 0480 0E       		.byte	14
 9783 0481 10       		.byte	16
 9784 0482 FE       		.byte	-2
 9785 0483 60       		.byte	96
 9786 0484 78       		.byte	120
 9787 0485 60       		.byte	96
 9788 0486 FE       		.byte	-2
 9789 0487 00       		.byte	0
 9790 0488 00       		.byte	0
 9791 0489 00       		.byte	0
 9792 048a 7C       		.byte	124
 9793 048b 12       		.byte	18
 9794 048c 7E       		.byte	126
 9795 048d D0       		.byte	-48
 9796 048e 7E       		.byte	126
 9797 048f 00       		.byte	0
 9798 0490 7E       		.byte	126
 9799 0491 C8       		.byte	-56
 9800 0492 C8       		.byte	-56
 9801 0493 FE       		.byte	-2
 9802 0494 C8       		.byte	-56
 9803 0495 C8       		.byte	-56
 9804 0496 CE       		.byte	-50
 9805 0497 00       		.byte	0
 9806 0498 7C       		.byte	124
 9807 0499 82       		.byte	-126
 9808 049a 7C       		.byte	124
 9809 049b C6       		.byte	-58
 9810 049c C6       		.byte	-58
 9811 049d C6       		.byte	-58
 9812 049e 7C       		.byte	124
 9813 049f 00       		.byte	0
 9814 04a0 C6       		.byte	-58
 9815 04a1 00       		.byte	0
 9816 04a2 7C       		.byte	124
 9817 04a3 C6       		.byte	-58
 9818 04a4 C6       		.byte	-58
 9819 04a5 C6       		.byte	-58
 9820 04a6 7C       		.byte	124
 9821 04a7 00       		.byte	0
 9822 04a8 E0       		.byte	-32
 9823 04a9 10       		.byte	16
 9824 04aa 7C       		.byte	124
 9825 04ab C6       		.byte	-58
 9826 04ac C6       		.byte	-58
 9827 04ad C6       		.byte	-58
 9828 04ae 7C       		.byte	124
 9829 04af 00       		.byte	0
 9830 04b0 7C       		.byte	124
 9831 04b1 82       		.byte	-126
 9832 04b2 CC       		.byte	-52
 9833 04b3 CC       		.byte	-52
 9834 04b4 CC       		.byte	-52
 9835 04b5 CC       		.byte	-52
 9836 04b6 76       		.byte	118
 9837 04b7 00       		.byte	0
 9838 04b8 E0       		.byte	-32
 9839 04b9 10       		.byte	16
 9840 04ba CC       		.byte	-52
 9841 04bb CC       		.byte	-52
 9842 04bc CC       		.byte	-52
 9843 04bd CC       		.byte	-52
 9844 04be 76       		.byte	118
 9845 04bf 00       		.byte	0
 9846 04c0 C6       		.byte	-58
 9847 04c1 00       		.byte	0
 9848 04c2 C6       		.byte	-58
 9849 04c3 C6       		.byte	-58
 9850 04c4 C6       		.byte	-58
 9851 04c5 7E       		.byte	126
 9852 04c6 06       		.byte	6
 9853 04c7 7C       		.byte	124
 9854 04c8 C6       		.byte	-58
 9855 04c9 7C       		.byte	124
 9856 04ca C6       		.byte	-58
 9857 04cb C6       		.byte	-58
 9858 04cc C6       		.byte	-58
 9859 04cd C6       		.byte	-58
 9860 04ce 7C       		.byte	124
 9861 04cf 00       		.byte	0
 9862 04d0 C6       		.byte	-58
 9863 04d1 00       		.byte	0
 9864 04d2 C6       		.byte	-58
 9865 04d3 C6       		.byte	-58
 9866 04d4 C6       		.byte	-58
 9867 04d5 C6       		.byte	-58
 9868 04d6 7C       		.byte	124
 9869 04d7 00       		.byte	0
 9870 04d8 18       		.byte	24
 9871 04d9 7C       		.byte	124
 9872 04da D6       		.byte	-42
 9873 04db D0       		.byte	-48
 9874 04dc D6       		.byte	-42
 9875 04dd 7C       		.byte	124
 9876 04de 18       		.byte	24
 9877 04df 00       		.byte	0
 9878 04e0 38       		.byte	56
 9879 04e1 6C       		.byte	108
 9880 04e2 60       		.byte	96
 9881 04e3 F0       		.byte	-16
 9882 04e4 60       		.byte	96
 9883 04e5 F2       		.byte	-14
 9884 04e6 DC       		.byte	-36
 9885 04e7 00       		.byte	0
 9886 04e8 66       		.byte	102
 9887 04e9 3C       		.byte	60
 9888 04ea 18       		.byte	24
 9889 04eb 7E       		.byte	126
 9890 04ec 18       		.byte	24
 9891 04ed 7E       		.byte	126
 9892 04ee 18       		.byte	24
 9893 04ef 00       		.byte	0
 9894 04f0 F8       		.byte	-8
 9895 04f1 CC       		.byte	-52
 9896 04f2 F8       		.byte	-8
 9897 04f3 C4       		.byte	-60
 9898 04f4 CC       		.byte	-52
 9899 04f5 DE       		.byte	-34
 9900 04f6 CC       		.byte	-52
 9901 04f7 06       		.byte	6
 9902 04f8 0E       		.byte	14
 9903 04f9 1B       		.byte	27
 9904 04fa 18       		.byte	24
 9905 04fb 3C       		.byte	60
 9906 04fc 18       		.byte	24
 9907 04fd 18       		.byte	24
 9908 04fe D8       		.byte	-40
 9909 04ff 70       		.byte	112
 9910 0500 0E       		.byte	14
 9911 0501 10       		.byte	16
 9912 0502 78       		.byte	120
 9913 0503 0C       		.byte	12
 9914 0504 7C       		.byte	124
 9915 0505 CC       		.byte	-52
 9916 0506 76       		.byte	118
 9917 0507 00       		.byte	0
 9918 0508 0E       		.byte	14
 9919 0509 10       		.byte	16
 9920 050a 38       		.byte	56
 9921 050b 18       		.byte	24
 9922 050c 18       		.byte	24
 9923 050d 18       		.byte	24
 9924 050e 3C       		.byte	60
 9925 050f 00       		.byte	0
 9926 0510 0E       		.byte	14
 9927 0511 10       		.byte	16
 9928 0512 7C       		.byte	124
 9929 0513 C6       		.byte	-58
 9930 0514 C6       		.byte	-58
 9931 0515 C6       		.byte	-58
 9932 0516 7C       		.byte	124
 9933 0517 00       		.byte	0
 9934 0518 0E       		.byte	14
 9935 0519 10       		.byte	16
 9936 051a CC       		.byte	-52
 9937 051b CC       		.byte	-52
 9938 051c CC       		.byte	-52
 9939 051d CC       		.byte	-52
 9940 051e 76       		.byte	118
 9941 051f 00       		.byte	0
 9942 0520 66       		.byte	102
 9943 0521 98       		.byte	-104
 9944 0522 DC       		.byte	-36
 9945 0523 66       		.byte	102
 9946 0524 66       		.byte	102
 9947 0525 66       		.byte	102
 9948 0526 66       		.byte	102
 9949 0527 00       		.byte	0
 9950 0528 66       		.byte	102
 9951 0529 98       		.byte	-104
 9952 052a E6       		.byte	-26
 9953 052b F6       		.byte	-10
 9954 052c DE       		.byte	-34
 9955 052d CE       		.byte	-50
 9956 052e C6       		.byte	-58
 9957 052f 00       		.byte	0
 9958 0530 38       		.byte	56
 9959 0531 0C       		.byte	12
 9960 0532 3C       		.byte	60
 9961 0533 34       		.byte	52
 9962 0534 00       		.byte	0
 9963 0535 7E       		.byte	126
 9964 0536 00       		.byte	0
 9965 0537 00       		.byte	0
 9966 0538 38       		.byte	56
 9967 0539 6C       		.byte	108
 9968 053a 6C       		.byte	108
 9969 053b 38       		.byte	56
 9970 053c 00       		.byte	0
 9971 053d 7C       		.byte	124
 9972 053e 00       		.byte	0
 9973 053f 00       		.byte	0
 9974 0540 30       		.byte	48
 9975 0541 00       		.byte	0
 9976 0542 30       		.byte	48
 9977 0543 60       		.byte	96
 9978 0544 C6       		.byte	-58
 9979 0545 C6       		.byte	-58
 9980 0546 7C       		.byte	124
 9981 0547 00       		.byte	0
 9982 0548 00       		.byte	0
 9983 0549 00       		.byte	0
 9984 054a FE       		.byte	-2
 9985 054b C0       		.byte	-64
 9986 054c C0       		.byte	-64
 9987 054d C0       		.byte	-64
 9988 054e 00       		.byte	0
 9989 054f 00       		.byte	0
 9990 0550 00       		.byte	0
 9991 0551 00       		.byte	0
 9992 0552 FE       		.byte	-2
 9993 0553 06       		.byte	6
 9994 0554 06       		.byte	6
 9995 0555 06       		.byte	6
 9996 0556 00       		.byte	0
 9997 0557 00       		.byte	0
 9998 0558 C0       		.byte	-64
 9999 0559 C8       		.byte	-56
 10000 055a D0       		.byte	-48
 10001 055b FE       		.byte	-2
 10002 055c 46       		.byte	70
 10003 055d 8C       		.byte	-116
 10004 055e 1E       		.byte	30
 10005 055f 00       		.byte	0
 10006 0560 C0       		.byte	-64
 10007 0561 C8       		.byte	-56
 10008 0562 D0       		.byte	-48
 10009 0563 EC       		.byte	-20
 10010 0564 5C       		.byte	92
 10011 0565 BE       		.byte	-66
 10012 0566 0C       		.byte	12
 10013 0567 00       		.byte	0
 10014 0568 18       		.byte	24
 10015 0569 00       		.byte	0
 10016 056a 18       		.byte	24
 10017 056b 18       		.byte	24
 10018 056c 18       		.byte	24
 10019 056d 18       		.byte	24
 10020 056e 18       		.byte	24
 10021 056f 00       		.byte	0
 10022 0570 00       		.byte	0
 10023 0571 36       		.byte	54
 10024 0572 6C       		.byte	108
 10025 0573 D8       		.byte	-40
 10026 0574 6C       		.byte	108
 10027 0575 36       		.byte	54
 10028 0576 00       		.byte	0
 10029 0577 00       		.byte	0
 10030 0578 00       		.byte	0
 10031 0579 D8       		.byte	-40
 10032 057a 6C       		.byte	108
 10033 057b 36       		.byte	54
 10034 057c 6C       		.byte	108
 10035 057d D8       		.byte	-40
 10036 057e 00       		.byte	0
 10037 057f 00       		.byte	0
 10038 0580 00       		.byte	0
 10039 0581 55       		.byte	85
 10040 0582 00       		.byte	0
 10041 0583 55       		.byte	85
 10042 0584 00       		.byte	0
 10043 0585 55       		.byte	85
 10044 0586 00       		.byte	0
 10045 0587 55       		.byte	85
 10046 0588 AA       		.byte	-86
 10047 0589 55       		.byte	85
 10048 058a AA       		.byte	-86
 10049 058b 55       		.byte	85
 10050 058c AA       		.byte	-86
 10051 058d 55       		.byte	85
 10052 058e AA       		.byte	-86
 10053 058f 55       		.byte	85
 10054 0590 FF       		.byte	-1
 10055 0591 55       		.byte	85
 10056 0592 FF       		.byte	-1
 10057 0593 55       		.byte	85
 10058 0594 FF       		.byte	-1
 10059 0595 55       		.byte	85
 10060 0596 FF       		.byte	-1
 10061 0597 55       		.byte	85
 10062 0598 18       		.byte	24
 10063 0599 18       		.byte	24
 10064 059a 18       		.byte	24
 10065 059b 18       		.byte	24
 10066 059c 18       		.byte	24
 10067 059d 18       		.byte	24
 10068 059e 18       		.byte	24
 10069 059f 18       		.byte	24
 10070 05a0 18       		.byte	24
 10071 05a1 18       		.byte	24
 10072 05a2 18       		.byte	24
 10073 05a3 18       		.byte	24
 10074 05a4 F8       		.byte	-8
 10075 05a5 18       		.byte	24
 10076 05a6 18       		.byte	24
 10077 05a7 18       		.byte	24
 10078 05a8 18       		.byte	24
 10079 05a9 18       		.byte	24
 10080 05aa F8       		.byte	-8
 10081 05ab 18       		.byte	24
 10082 05ac F8       		.byte	-8
 10083 05ad 18       		.byte	24
 10084 05ae 18       		.byte	24
 10085 05af 18       		.byte	24
 10086 05b0 36       		.byte	54
 10087 05b1 36       		.byte	54
 10088 05b2 36       		.byte	54
 10089 05b3 36       		.byte	54
 10090 05b4 F6       		.byte	-10
 10091 05b5 36       		.byte	54
 10092 05b6 36       		.byte	54
 10093 05b7 36       		.byte	54
 10094 05b8 00       		.byte	0
 10095 05b9 00       		.byte	0
 10096 05ba 00       		.byte	0
 10097 05bb 00       		.byte	0
 10098 05bc FE       		.byte	-2
 10099 05bd 36       		.byte	54
 10100 05be 36       		.byte	54
 10101 05bf 36       		.byte	54
 10102 05c0 00       		.byte	0
 10103 05c1 00       		.byte	0
 10104 05c2 F8       		.byte	-8
 10105 05c3 18       		.byte	24
 10106 05c4 F8       		.byte	-8
 10107 05c5 18       		.byte	24
 10108 05c6 18       		.byte	24
 10109 05c7 18       		.byte	24
 10110 05c8 36       		.byte	54
 10111 05c9 36       		.byte	54
 10112 05ca F6       		.byte	-10
 10113 05cb 06       		.byte	6
 10114 05cc F6       		.byte	-10
 10115 05cd 36       		.byte	54
 10116 05ce 36       		.byte	54
 10117 05cf 36       		.byte	54
 10118 05d0 36       		.byte	54
 10119 05d1 36       		.byte	54
 10120 05d2 36       		.byte	54
 10121 05d3 36       		.byte	54
 10122 05d4 36       		.byte	54
 10123 05d5 36       		.byte	54
 10124 05d6 36       		.byte	54
 10125 05d7 36       		.byte	54
 10126 05d8 00       		.byte	0
 10127 05d9 00       		.byte	0
 10128 05da FE       		.byte	-2
 10129 05db 06       		.byte	6
 10130 05dc F6       		.byte	-10
 10131 05dd 36       		.byte	54
 10132 05de 36       		.byte	54
 10133 05df 36       		.byte	54
 10134 05e0 36       		.byte	54
 10135 05e1 36       		.byte	54
 10136 05e2 F6       		.byte	-10
 10137 05e3 06       		.byte	6
 10138 05e4 FE       		.byte	-2
 10139 05e5 00       		.byte	0
 10140 05e6 00       		.byte	0
 10141 05e7 00       		.byte	0
 10142 05e8 36       		.byte	54
 10143 05e9 36       		.byte	54
 10144 05ea 36       		.byte	54
 10145 05eb 36       		.byte	54
 10146 05ec FE       		.byte	-2
 10147 05ed 00       		.byte	0
 10148 05ee 00       		.byte	0
 10149 05ef 00       		.byte	0
 10150 05f0 18       		.byte	24
 10151 05f1 18       		.byte	24
 10152 05f2 F8       		.byte	-8
 10153 05f3 18       		.byte	24
 10154 05f4 F8       		.byte	-8
 10155 05f5 00       		.byte	0
 10156 05f6 00       		.byte	0
 10157 05f7 00       		.byte	0
 10158 05f8 00       		.byte	0
 10159 05f9 00       		.byte	0
 10160 05fa 00       		.byte	0
 10161 05fb 00       		.byte	0
 10162 05fc F8       		.byte	-8
 10163 05fd 18       		.byte	24
 10164 05fe 18       		.byte	24
 10165 05ff 18       		.byte	24
 10166 0600 18       		.byte	24
 10167 0601 18       		.byte	24
 10168 0602 18       		.byte	24
 10169 0603 18       		.byte	24
 10170 0604 1F       		.byte	31
 10171 0605 00       		.byte	0
 10172 0606 00       		.byte	0
 10173 0607 00       		.byte	0
 10174 0608 18       		.byte	24
 10175 0609 18       		.byte	24
 10176 060a 18       		.byte	24
 10177 060b 18       		.byte	24
 10178 060c FF       		.byte	-1
 10179 060d 00       		.byte	0
 10180 060e 00       		.byte	0
 10181 060f 00       		.byte	0
 10182 0610 00       		.byte	0
 10183 0611 00       		.byte	0
 10184 0612 00       		.byte	0
 10185 0613 00       		.byte	0
 10186 0614 FF       		.byte	-1
 10187 0615 18       		.byte	24
 10188 0616 18       		.byte	24
 10189 0617 18       		.byte	24
 10190 0618 18       		.byte	24
 10191 0619 18       		.byte	24
 10192 061a 18       		.byte	24
 10193 061b 18       		.byte	24
 10194 061c 1F       		.byte	31
 10195 061d 18       		.byte	24
 10196 061e 18       		.byte	24
 10197 061f 18       		.byte	24
 10198 0620 00       		.byte	0
 10199 0621 00       		.byte	0
 10200 0622 00       		.byte	0
 10201 0623 00       		.byte	0
 10202 0624 FF       		.byte	-1
 10203 0625 00       		.byte	0
 10204 0626 00       		.byte	0
 10205 0627 00       		.byte	0
 10206 0628 18       		.byte	24
 10207 0629 18       		.byte	24
 10208 062a 18       		.byte	24
 10209 062b 18       		.byte	24
 10210 062c FF       		.byte	-1
 10211 062d 18       		.byte	24
 10212 062e 18       		.byte	24
 10213 062f 18       		.byte	24
 10214 0630 18       		.byte	24
 10215 0631 18       		.byte	24
 10216 0632 1F       		.byte	31
 10217 0633 18       		.byte	24
 10218 0634 1F       		.byte	31
 10219 0635 18       		.byte	24
 10220 0636 18       		.byte	24
 10221 0637 18       		.byte	24
 10222 0638 36       		.byte	54
 10223 0639 36       		.byte	54
 10224 063a 36       		.byte	54
 10225 063b 36       		.byte	54
 10226 063c 37       		.byte	55
 10227 063d 36       		.byte	54
 10228 063e 36       		.byte	54
 10229 063f 36       		.byte	54
 10230 0640 36       		.byte	54
 10231 0641 36       		.byte	54
 10232 0642 37       		.byte	55
 10233 0643 30       		.byte	48
 10234 0644 3F       		.byte	63
 10235 0645 00       		.byte	0
 10236 0646 00       		.byte	0
 10237 0647 00       		.byte	0
 10238 0648 00       		.byte	0
 10239 0649 00       		.byte	0
 10240 064a 3F       		.byte	63
 10241 064b 30       		.byte	48
 10242 064c 37       		.byte	55
 10243 064d 36       		.byte	54
 10244 064e 36       		.byte	54
 10245 064f 36       		.byte	54
 10246 0650 36       		.byte	54
 10247 0651 36       		.byte	54
 10248 0652 F7       		.byte	-9
 10249 0653 00       		.byte	0
 10250 0654 FF       		.byte	-1
 10251 0655 00       		.byte	0
 10252 0656 00       		.byte	0
 10253 0657 00       		.byte	0
 10254 0658 00       		.byte	0
 10255 0659 00       		.byte	0
 10256 065a FF       		.byte	-1
 10257 065b 00       		.byte	0
 10258 065c F7       		.byte	-9
 10259 065d 36       		.byte	54
 10260 065e 36       		.byte	54
 10261 065f 36       		.byte	54
 10262 0660 36       		.byte	54
 10263 0661 36       		.byte	54
 10264 0662 37       		.byte	55
 10265 0663 30       		.byte	48
 10266 0664 37       		.byte	55
 10267 0665 36       		.byte	54
 10268 0666 36       		.byte	54
 10269 0667 36       		.byte	54
 10270 0668 00       		.byte	0
 10271 0669 00       		.byte	0
 10272 066a FF       		.byte	-1
 10273 066b 00       		.byte	0
 10274 066c FF       		.byte	-1
 10275 066d 00       		.byte	0
 10276 066e 00       		.byte	0
 10277 066f 00       		.byte	0
 10278 0670 36       		.byte	54
 10279 0671 36       		.byte	54
 10280 0672 F7       		.byte	-9
 10281 0673 00       		.byte	0
 10282 0674 F7       		.byte	-9
 10283 0675 36       		.byte	54
 10284 0676 36       		.byte	54
 10285 0677 36       		.byte	54
 10286 0678 18       		.byte	24
 10287 0679 18       		.byte	24
 10288 067a FF       		.byte	-1
 10289 067b 00       		.byte	0
 10290 067c FF       		.byte	-1
 10291 067d 00       		.byte	0
 10292 067e 00       		.byte	0
 10293 067f 00       		.byte	0
 10294 0680 36       		.byte	54
 10295 0681 36       		.byte	54
 10296 0682 36       		.byte	54
 10297 0683 36       		.byte	54
 10298 0684 FF       		.byte	-1
 10299 0685 00       		.byte	0
 10300 0686 00       		.byte	0
 10301 0687 00       		.byte	0
 10302 0688 00       		.byte	0
 10303 0689 00       		.byte	0
 10304 068a FF       		.byte	-1
 10305 068b 00       		.byte	0
 10306 068c FF       		.byte	-1
 10307 068d 18       		.byte	24
 10308 068e 18       		.byte	24
 10309 068f 18       		.byte	24
 10310 0690 00       		.byte	0
 10311 0691 00       		.byte	0
 10312 0692 00       		.byte	0
 10313 0693 00       		.byte	0
 10314 0694 FF       		.byte	-1
 10315 0695 36       		.byte	54
 10316 0696 36       		.byte	54
 10317 0697 36       		.byte	54
 10318 0698 36       		.byte	54
 10319 0699 36       		.byte	54
 10320 069a 36       		.byte	54
 10321 069b 36       		.byte	54
 10322 069c 3F       		.byte	63
 10323 069d 00       		.byte	0
 10324 069e 00       		.byte	0
 10325 069f 00       		.byte	0
 10326 06a0 18       		.byte	24
 10327 06a1 18       		.byte	24
 10328 06a2 1F       		.byte	31
 10329 06a3 18       		.byte	24
 10330 06a4 1F       		.byte	31
 10331 06a5 00       		.byte	0
 10332 06a6 00       		.byte	0
 10333 06a7 00       		.byte	0
 10334 06a8 00       		.byte	0
 10335 06a9 00       		.byte	0
 10336 06aa 1F       		.byte	31
 10337 06ab 18       		.byte	24
 10338 06ac 1F       		.byte	31
 10339 06ad 18       		.byte	24
 10340 06ae 18       		.byte	24
 10341 06af 18       		.byte	24
 10342 06b0 00       		.byte	0
 10343 06b1 00       		.byte	0
 10344 06b2 00       		.byte	0
 10345 06b3 00       		.byte	0
 10346 06b4 3F       		.byte	63
 10347 06b5 36       		.byte	54
 10348 06b6 36       		.byte	54
 10349 06b7 36       		.byte	54
 10350 06b8 36       		.byte	54
 10351 06b9 36       		.byte	54
 10352 06ba 36       		.byte	54
 10353 06bb 36       		.byte	54
 10354 06bc FF       		.byte	-1
 10355 06bd 36       		.byte	54
 10356 06be 36       		.byte	54
 10357 06bf 36       		.byte	54
 10358 06c0 18       		.byte	24
 10359 06c1 18       		.byte	24
 10360 06c2 FF       		.byte	-1
 10361 06c3 18       		.byte	24
 10362 06c4 FF       		.byte	-1
 10363 06c5 18       		.byte	24
 10364 06c6 18       		.byte	24
 10365 06c7 18       		.byte	24
 10366 06c8 18       		.byte	24
 10367 06c9 18       		.byte	24
 10368 06ca 18       		.byte	24
 10369 06cb 18       		.byte	24
 10370 06cc F8       		.byte	-8
 10371 06cd 00       		.byte	0
 10372 06ce 00       		.byte	0
 10373 06cf 00       		.byte	0
 10374 06d0 00       		.byte	0
 10375 06d1 00       		.byte	0
 10376 06d2 00       		.byte	0
 10377 06d3 00       		.byte	0
 10378 06d4 1F       		.byte	31
 10379 06d5 18       		.byte	24
 10380 06d6 18       		.byte	24
 10381 06d7 18       		.byte	24
 10382 06d8 FF       		.byte	-1
 10383 06d9 FF       		.byte	-1
 10384 06da FF       		.byte	-1
 10385 06db FF       		.byte	-1
 10386 06dc FF       		.byte	-1
 10387 06dd FF       		.byte	-1
 10388 06de FF       		.byte	-1
 10389 06df FF       		.byte	-1
 10390 06e0 00       		.byte	0
 10391 06e1 00       		.byte	0
 10392 06e2 00       		.byte	0
 10393 06e3 00       		.byte	0
 10394 06e4 FF       		.byte	-1
 10395 06e5 FF       		.byte	-1
 10396 06e6 FF       		.byte	-1
 10397 06e7 FF       		.byte	-1
 10398 06e8 F0       		.byte	-16
 10399 06e9 F0       		.byte	-16
 10400 06ea F0       		.byte	-16
 10401 06eb F0       		.byte	-16
 10402 06ec F0       		.byte	-16
 10403 06ed F0       		.byte	-16
 10404 06ee F0       		.byte	-16
 10405 06ef F0       		.byte	-16
 10406 06f0 0F       		.byte	15
 10407 06f1 0F       		.byte	15
 10408 06f2 0F       		.byte	15
 10409 06f3 0F       		.byte	15
 10410 06f4 0F       		.byte	15
 10411 06f5 0F       		.byte	15
 10412 06f6 0F       		.byte	15
 10413 06f7 0F       		.byte	15
 10414 06f8 FF       		.byte	-1
 10415 06f9 FF       		.byte	-1
 10416 06fa FF       		.byte	-1
 10417 06fb FF       		.byte	-1
 10418 06fc 00       		.byte	0
 10419 06fd 00       		.byte	0
 10420 06fe 00       		.byte	0
 10421 06ff 00       		.byte	0
 10422 0700 00       		.byte	0
 10423 0701 00       		.byte	0
 10424 0702 74       		.byte	116
 10425 0703 CC       		.byte	-52
 10426 0704 C8       		.byte	-56
 10427 0705 DC       		.byte	-36
 10428 0706 76       		.byte	118
 10429 0707 00       		.byte	0
 10430 0708 78       		.byte	120
 10431 0709 CC       		.byte	-52
 10432 070a D8       		.byte	-40
 10433 070b CC       		.byte	-52
 10434 070c C6       		.byte	-58
 10435 070d C6       		.byte	-58
 10436 070e DC       		.byte	-36
 10437 070f 40       		.byte	64
 10438 0710 FE       		.byte	-2
 10439 0711 62       		.byte	98
 10440 0712 60       		.byte	96
 10441 0713 60       		.byte	96
 10442 0714 60       		.byte	96
 10443 0715 60       		.byte	96
 10444 0716 F0       		.byte	-16
 10445 0717 00       		.byte	0
 10446 0718 00       		.byte	0
 10447 0719 02       		.byte	2
 10448 071a 7E       		.byte	126
 10449 071b EC       		.byte	-20
 10450 071c 6C       		.byte	108
 10451 071d 6C       		.byte	108
 10452 071e 48       		.byte	72
 10453 071f 00       		.byte	0
 10454 0720 FE       		.byte	-2
 10455 0721 62       		.byte	98
 10456 0722 30       		.byte	48
 10457 0723 18       		.byte	24
 10458 0724 30       		.byte	48
 10459 0725 62       		.byte	98
 10460 0726 FE       		.byte	-2
 10461 0727 00       		.byte	0
 10462 0728 00       		.byte	0
 10463 0729 00       		.byte	0
 10464 072a 7E       		.byte	126
 10465 072b D0       		.byte	-48
 10466 072c C8       		.byte	-56
 10467 072d C8       		.byte	-56
 10468 072e 70       		.byte	112
 10469 072f 00       		.byte	0
 10470 0730 00       		.byte	0
 10471 0731 00       		.byte	0
 10472 0732 CC       		.byte	-52
 10473 0733 CC       		.byte	-52
 10474 0734 CC       		.byte	-52
 10475 0735 CC       		.byte	-52
 10476 0736 F8       		.byte	-8
 10477 0737 80       		.byte	-128
 10478 0738 00       		.byte	0
 10479 0739 00       		.byte	0
 10480 073a 7E       		.byte	126
 10481 073b D8       		.byte	-40
 10482 073c 18       		.byte	24
 10483 073d 18       		.byte	24
 10484 073e 10       		.byte	16
 10485 073f 00       		.byte	0
 10486 0740 38       		.byte	56
 10487 0741 10       		.byte	16
 10488 0742 7C       		.byte	124
 10489 0743 D6       		.byte	-42
 10490 0744 D6       		.byte	-42
 10491 0745 7C       		.byte	124
 10492 0746 10       		.byte	16
 10493 0747 38       		.byte	56
 10494 0748 7C       		.byte	124
 10495 0749 C6       		.byte	-58
 10496 074a C6       		.byte	-58
 10497 074b FE       		.byte	-2
 10498 074c C6       		.byte	-58
 10499 074d C6       		.byte	-58
 10500 074e 7C       		.byte	124
 10501 074f 00       		.byte	0
 10502 0750 7C       		.byte	124
 10503 0751 C6       		.byte	-58
 10504 0752 C6       		.byte	-58
 10505 0753 C6       		.byte	-58
 10506 0754 6C       		.byte	108
 10507 0755 28       		.byte	40
 10508 0756 EE       		.byte	-18
 10509 0757 00       		.byte	0
 10510 0758 3C       		.byte	60
 10511 0759 22       		.byte	34
 10512 075a 18       		.byte	24
 10513 075b 7C       		.byte	124
 10514 075c CC       		.byte	-52
 10515 075d CC       		.byte	-52
 10516 075e 78       		.byte	120
 10517 075f 00       		.byte	0
 10518 0760 00       		.byte	0
 10519 0761 00       		.byte	0
 10520 0762 66       		.byte	102
 10521 0763 99       		.byte	-103
 10522 0764 99       		.byte	-103
 10523 0765 66       		.byte	102
 10524 0766 00       		.byte	0
 10525 0767 00       		.byte	0
 10526 0768 00       		.byte	0
 10527 0769 06       		.byte	6
 10528 076a 7C       		.byte	124
 10529 076b 9E       		.byte	-98
 10530 076c F2       		.byte	-14
 10531 076d 7C       		.byte	124
 10532 076e C0       		.byte	-64
 10533 076f 00       		.byte	0
 10534 0770 00       		.byte	0
 10535 0771 00       		.byte	0
 10536 0772 7C       		.byte	124
 10537 0773 C0       		.byte	-64
 10538 0774 F8       		.byte	-8
 10539 0775 C0       		.byte	-64
 10540 0776 7C       		.byte	124
 10541 0777 00       		.byte	0
 10542 0778 00       		.byte	0
 10543 0779 7C       		.byte	124
 10544 077a C6       		.byte	-58
 10545 077b C6       		.byte	-58
 10546 077c C6       		.byte	-58
 10547 077d C6       		.byte	-58
 10548 077e C6       		.byte	-58
 10549 077f 00       		.byte	0
 10550 0780 00       		.byte	0
 10551 0781 FE       		.byte	-2
 10552 0782 00       		.byte	0
 10553 0783 FE       		.byte	-2
 10554 0784 00       		.byte	0
 10555 0785 FE       		.byte	-2
 10556 0786 00       		.byte	0
 10557 0787 00       		.byte	0
 10558 0788 18       		.byte	24
 10559 0789 18       		.byte	24
 10560 078a 7E       		.byte	126
 10561 078b 18       		.byte	24
 10562 078c 18       		.byte	24
 10563 078d 00       		.byte	0
 10564 078e 7E       		.byte	126
 10565 078f 00       		.byte	0
 10566 0790 30       		.byte	48
 10567 0791 18       		.byte	24
 10568 0792 0C       		.byte	12
 10569 0793 18       		.byte	24
 10570 0794 30       		.byte	48
 10571 0795 00       		.byte	0
 10572 0796 7C       		.byte	124
 10573 0797 00       		.byte	0
 10574 0798 18       		.byte	24
 10575 0799 30       		.byte	48
 10576 079a 60       		.byte	96
 10577 079b 30       		.byte	48
 10578 079c 18       		.byte	24
 10579 079d 00       		.byte	0
 10580 079e 7C       		.byte	124
 10581 079f 00       		.byte	0
 10582 07a0 0E       		.byte	14
 10583 07a1 1B       		.byte	27
 10584 07a2 1B       		.byte	27
 10585 07a3 18       		.byte	24
 10586 07a4 18       		.byte	24
 10587 07a5 18       		.byte	24
 10588 07a6 18       		.byte	24
 10589 07a7 18       		.byte	24
 10590 07a8 18       		.byte	24
 10591 07a9 18       		.byte	24
 10592 07aa 18       		.byte	24
 10593 07ab 18       		.byte	24
 10594 07ac 18       		.byte	24
 10595 07ad D8       		.byte	-40
 10596 07ae D8       		.byte	-40
 10597 07af 70       		.byte	112
 10598 07b0 00       		.byte	0
 10599 07b1 18       		.byte	24
 10600 07b2 00       		.byte	0
 10601 07b3 7E       		.byte	126
 10602 07b4 00       		.byte	0
 10603 07b5 18       		.byte	24
 10604 07b6 00       		.byte	0
 10605 07b7 00       		.byte	0
 10606 07b8 00       		.byte	0
 10607 07b9 76       		.byte	118
 10608 07ba DC       		.byte	-36
 10609 07bb 00       		.byte	0
 10610 07bc 76       		.byte	118
 10611 07bd DC       		.byte	-36
 10612 07be 00       		.byte	0
 10613 07bf 00       		.byte	0
 10614 07c0 38       		.byte	56
 10615 07c1 6C       		.byte	108
 10616 07c2 38       		.byte	56
 10617 07c3 00       		.byte	0
 10618 07c4 00       		.byte	0
 10619 07c5 00       		.byte	0
 10620 07c6 00       		.byte	0
 10621 07c7 00       		.byte	0
 10622 07c8 00       		.byte	0
 10623 07c9 00       		.byte	0
 10624 07ca 00       		.byte	0
 10625 07cb 18       		.byte	24
 10626 07cc 18       		.byte	24
 10627 07cd 00       		.byte	0
 10628 07ce 00       		.byte	0
 10629 07cf 00       		.byte	0
 10630 07d0 00       		.byte	0
 10631 07d1 00       		.byte	0
 10632 07d2 00       		.byte	0
 10633 07d3 00       		.byte	0
 10634 07d4 18       		.byte	24
 10635 07d5 00       		.byte	0
 10636 07d6 00       		.byte	0
 10637 07d7 00       		.byte	0
 10638 07d8 0F       		.byte	15
 10639 07d9 0C       		.byte	12
 10640 07da 0C       		.byte	12
 10641 07db 0C       		.byte	12
 10642 07dc EC       		.byte	-20
 10643 07dd 6C       		.byte	108
 10644 07de 3C       		.byte	60
 10645 07df 00       		.byte	0
 10646 07e0 D8       		.byte	-40
 10647 07e1 6C       		.byte	108
 10648 07e2 6C       		.byte	108
 10649 07e3 6C       		.byte	108
 10650 07e4 00       		.byte	0
 10651 07e5 00       		.byte	0
 10652 07e6 00       		.byte	0
 10653 07e7 00       		.byte	0
 10654 07e8 F0       		.byte	-16
 10655 07e9 30       		.byte	48
 10656 07ea C0       		.byte	-64
 10657 07eb F0       		.byte	-16
 10658 07ec 00       		.byte	0
 10659 07ed 00       		.byte	0
 10660 07ee 00       		.byte	0
 10661 07ef 00       		.byte	0
 10662 07f0 00       		.byte	0
 10663 07f1 00       		.byte	0
 10664 07f2 3C       		.byte	60
 10665 07f3 3C       		.byte	60
 10666 07f4 3C       		.byte	60
 10667 07f5 3C       		.byte	60
 10668 07f6 00       		.byte	0
 10669 07f7 00       		.byte	0
 10670 07f8 00       		.byte	0
 10671 07f9 00       		.byte	0
 10672 07fa 00       		.byte	0
 10673 07fb 00       		.byte	0
 10674 07fc 00       		.byte	0
 10675 07fd 00       		.byte	0
 10676 07fe 00       		.byte	0
 10677 07ff 00       		.byte	0
 10678              		.text
 10679              	.Letext0:
 10680              		.file 2 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\machine\\_default_
 10681              		.file 3 "c:\\app\\gowin\\gmd\\toolchain\\arm_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 10682              		.file 4 "C:\\kitaprg\\GMD_RefDesign\\cm3_mon\\CORE/core_cm3.h"
 10683              		.file 5 "C:\\kitaprg\\GMD_RefDesign\\cm3_mon\\SYSTEM/system_gw1ns4c.h"
 10684              		.file 6 "C:\\kitaprg\\GMD_RefDesign\\cm3_mon\\SYSTEM/gw1ns4c.h"
 10685              		.file 7 "C:\\kitaprg\\GMD_RefDesign\\cm3_mon\\PERIPHERAL\\Includes/gw1ns4c_gpio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 vramdisp.c
d:\wintmp\ccfvGsuT.s:16     .text.set_vramdata_f6.constprop.1:00000000 $t
d:\wintmp\ccfvGsuT.s:24     .text.set_vramdata_f6.constprop.1:00000000 set_vramdata_f6.constprop.1
d:\wintmp\ccfvGsuT.s:151    .text.set_vramdata_f6.constprop.1:000000a0 $d
                            *COM*:00000028 wddt
d:\wintmp\ccfvGsuT.s:157    .text.set_vramadr:00000000 $t
d:\wintmp\ccfvGsuT.s:165    .text.set_vramadr:00000000 set_vramadr
d:\wintmp\ccfvGsuT.s:226    .text.set_vramadr:00000030 $d
                            *COM*:00000001 pd
d:\wintmp\ccfvGsuT.s:233    .text.get_vramdata:00000000 $t
d:\wintmp\ccfvGsuT.s:241    .text.get_vramdata:00000000 get_vramdata
d:\wintmp\ccfvGsuT.s:345    .text.get_vramdata:0000005c $d
d:\wintmp\ccfvGsuT.s:352    .text.get_vram:00000000 $t
d:\wintmp\ccfvGsuT.s:360    .text.get_vram:00000000 get_vram
d:\wintmp\ccfvGsuT.s:554    .text.get_vram:000000b4 $d
d:\wintmp\ccfvGsuT.s:564    .text.set_vramdata:00000000 $t
d:\wintmp\ccfvGsuT.s:572    .text.set_vramdata:00000000 set_vramdata
d:\wintmp\ccfvGsuT.s:677    .text.set_vramdata:00000064 $d
d:\wintmp\ccfvGsuT.s:684    .text.set_vramdata_f6:00000000 $t
d:\wintmp\ccfvGsuT.s:692    .text.set_vramdata_f6:00000000 set_vramdata_f6
d:\wintmp\ccfvGsuT.s:820    .text.set_vramdata_f6:000000a0 $d
d:\wintmp\ccfvGsuT.s:826    .text.set_vram:00000000 $t
d:\wintmp\ccfvGsuT.s:834    .text.set_vram:00000000 set_vram
d:\wintmp\ccfvGsuT.s:995    .text.set_vram:00000080 $d
d:\wintmp\ccfvGsuT.s:1005   .text.move_vram:00000000 $t
d:\wintmp\ccfvGsuT.s:1013   .text.move_vram:00000000 move_vram
d:\wintmp\ccfvGsuT.s:1184   .text.move_vram:00000094 $d
d:\wintmp\ccfvGsuT.s:1192   .text.set_vramm:00000000 $t
d:\wintmp\ccfvGsuT.s:1200   .text.set_vramm:00000000 set_vramm
d:\wintmp\ccfvGsuT.s:1471   .text.set_vramm:000000f8 $d
d:\wintmp\ccfvGsuT.s:1479   .text.dispscroll:00000000 $t
d:\wintmp\ccfvGsuT.s:1487   .text.dispscroll:00000000 dispscroll
d:\wintmp\ccfvGsuT.s:1854   .text.dispscroll:00000158 $d
d:\wintmp\ccfvGsuT.s:1866   .text.set_char:00000000 $t
d:\wintmp\ccfvGsuT.s:1874   .text.set_char:00000000 set_char
d:\wintmp\ccfvGsuT.s:1996   .text.set_char:00000074 $d
d:\wintmp\ccfvGsuT.s:2004   .text.disp_vram:00000000 $t
d:\wintmp\ccfvGsuT.s:2012   .text.disp_vram:00000000 disp_vram
d:\wintmp\ccfvGsuT.s:2621   .text.disp_vram:00000260 $d
d:\wintmp\ccfvGsuT.s:2636   .text.disp_vramw:00000000 $t
d:\wintmp\ccfvGsuT.s:2644   .text.disp_vramw:00000000 disp_vramw
d:\wintmp\ccfvGsuT.s:2675   .text.gotoxy:00000000 $t
d:\wintmp\ccfvGsuT.s:2683   .text.gotoxy:00000000 gotoxy
d:\wintmp\ccfvGsuT.s:3288   .text.gotoxy:0000022c $d
d:\wintmp\ccfvGsuT.s:3307   .text.dispfull:00000000 $t
d:\wintmp\ccfvGsuT.s:3315   .text.dispfull:00000000 dispfull
d:\wintmp\ccfvGsuT.s:3550   .text.dispfull:000000f0 $d
d:\wintmp\ccfvGsuT.s:3558   .text.pget:00000000 $t
d:\wintmp\ccfvGsuT.s:3566   .text.pget:00000000 pget
d:\wintmp\ccfvGsuT.s:3817   .text.pget:000000ec $d
d:\wintmp\ccfvGsuT.s:3824   .text.pset:00000000 $t
d:\wintmp\ccfvGsuT.s:3832   .text.pset:00000000 pset
d:\wintmp\ccfvGsuT.s:4015   .text.pset:00000088 $d
d:\wintmp\ccfvGsuT.s:4025   .text.DCircle:00000000 $t
d:\wintmp\ccfvGsuT.s:4033   .text.DCircle:00000000 DCircle
d:\wintmp\ccfvGsuT.s:5014   .text.DCircle:00000348 $d
d:\wintmp\ccfvGsuT.s:5024   .text.DCircle:0000035c $t
d:\wintmp\ccfvGsuT.s:5745   .text.DCircle:000005f0 $d
d:\wintmp\ccfvGsuT.s:5751   .text.DLine:00000000 $t
d:\wintmp\ccfvGsuT.s:5759   .text.DLine:00000000 DLine
d:\wintmp\ccfvGsuT.s:6198   .text.DLine:00000160 $d
d:\wintmp\ccfvGsuT.s:6207   .text.DrawRectangle:00000000 $t
d:\wintmp\ccfvGsuT.s:6215   .text.DrawRectangle:00000000 DrawRectangle
d:\wintmp\ccfvGsuT.s:6289   .text.point:00000000 $t
d:\wintmp\ccfvGsuT.s:6297   .text.point:00000000 point
d:\wintmp\ccfvGsuT.s:6559   .text.point:000000ec $d
d:\wintmp\ccfvGsuT.s:6566   .text.scanLine:00000000 $t
d:\wintmp\ccfvGsuT.s:6574   .text.scanLine:00000000 scanLine
d:\wintmp\ccfvGsuT.s:7437   .text.scanLine:0000035c $d
                            *COM*:00000004 eIdx
d:\wintmp\ccfvGsuT.s:7446   .text.scanLine:00000374 $t
d:\wintmp\ccfvGsuT.s:7462   .text.DPaint:00000000 $t
d:\wintmp\ccfvGsuT.s:7470   .text.DPaint:00000000 DPaint
d:\wintmp\ccfvGsuT.s:7851   .text.DPaint:00000154 $d
                            *COM*:00000004 sIdx
d:\wintmp\ccfvGsuT.s:7860   .text.DPaint:00000170 $t
d:\wintmp\ccfvGsuT.s:8577   .text.DPaint:00000450 $d
d:\wintmp\ccfvGsuT.s:8622   .data.buff:00000000 buff
                            *COM*:00000400 aryex
d:\wintmp\ccfvGsuT.s:8629   .rodata.FONT_8x8:00000000 FONT_8x8
d:\wintmp\ccfvGsuT.s:8590   .bss.csrmd:00000000 $d
d:\wintmp\ccfvGsuT.s:8594   .bss.csrmd:00000000 csrmd
d:\wintmp\ccfvGsuT.s:8597   .bss.csrx:00000000 $d
d:\wintmp\ccfvGsuT.s:8601   .bss.csrx:00000000 csrx
d:\wintmp\ccfvGsuT.s:8604   .bss.csry:00000000 $d
d:\wintmp\ccfvGsuT.s:8608   .bss.csry:00000000 csry
d:\wintmp\ccfvGsuT.s:8611   .bss.dispinitf:00000000 $d
d:\wintmp\ccfvGsuT.s:8615   .bss.dispinitf:00000000 dispinitf
d:\wintmp\ccfvGsuT.s:8618   .data.buff:00000000 $d
d:\wintmp\ccfvGsuT.s:8625   .rodata.FONT_8x8:00000000 $d
                           .group:00000000 wm4.0.881e6aea30f26d002fa34da4862e4bcf
                           .group:00000000 wm4.gw1ns4c.h.42.b574272a1988cda7506b1103a6ee000e
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cm3.h.113.418486a6827cd861c086288012ae5e2b
                           .group:00000000 wm4.gw1ns4c.h.318.1c2396dae4397f7395410f9554aa71af
                           .group:00000000 wm4.gw1ns4c_gpio.h.80.0c581660eee051be7914b6ea1f39cc1a
                           .group:00000000 wm4.gw1ns4c_wdog.h.16.8a3a0f1d8c60adc0580b7852c78f55c8
                           .group:00000000 wm4.gw1ns4c_uart.h.16.3be05e6b03c62d460c8c05b141d1c023
                           .group:00000000 wm4.gw1ns4c_timer.h.16.f5209a1e64a528f95e8d85c71081528f
                           .group:00000000 wm4.gw1ns4c_spi.h.16.810014cb7f012daf88d29d7d2b7aba9e
                           .group:00000000 wm4.gw1ns4c_i2c.h.16.05421c18011a5a09c18d5f4cc6da69a8
                           .group:00000000 wm4.gw1ns4c_misc.h.16.65dc2339a60ecdd9b90897e72d3b061a
                           .group:00000000 wm4.gw1ns4c_syscon.h.16.40f8fc44d5bd6529877ce8d20de4e3a1

UNDEFINED SYMBOLS
GPIO_WriteBits
GPIO_ReadBits
